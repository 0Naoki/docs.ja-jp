<Type Name="XmlDecryptionTransform" FullName="System.Security.Cryptography.Xml.XmlDecryptionTransform">
  <TypeSignature Language="C#" Value="public class XmlDecryptionTransform : System.Security.Cryptography.Xml.Transform" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlDecryptionTransform extends System.Security.Cryptography.Xml.Transform" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.Xml.XmlDecryptionTransform" />
  <AssemblyInfo>
    <AssemblyName>System.Security</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.Xml.Transform</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>同じドキュメントの両方が実行される場合は、XML デジタル署名や XML 暗号化の操作の順序を指定します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.Cryptography.Xml.XmlDecryptionTransform>クラスには、同じドキュメントの両方が実行される場合は、XML デジタル署名や XML 暗号化の操作の順序を決定する変換が用意されています。  
  
 使用して、<xref:System.Security.Cryptography.Xml.XmlDecryptionTransform>クラスの XML の暗号化を実行し、同じ XML ドキュメントに XML デジタル署名を適用する必要がある場合。  
  
 渡す必要があります、<xref:System.Security.Cryptography.Xml.EncryptedXml>オブジェクトを<xref:System.Security.Cryptography.Xml.XmlDecryptionTransform.EncryptedXml%2A>ドキュメントの暗号化を解除するために必要なキー情報を格納するプロパティです。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlDecryptionTransform ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.XmlDecryptionTransform.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Security.Cryptography.Xml.XmlDecryptionTransform" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddExceptUri">
      <MemberSignature Language="C#" Value="public void AddExceptUri (string uri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddExceptUri(string uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.XmlDecryptionTransform.AddExceptUri(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uri">識別子 URI (Uniform Resource) 処理から除外するには</param>
        <summary>処理から除外する統一リソース識別子 (URI) を追加します。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="uri" /> パラメーターが <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="EncryptedXml">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.Xml.EncryptedXml EncryptedXml { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.Xml.EncryptedXml EncryptedXml" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.XmlDecryptionTransform.EncryptedXml" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Xml.EncryptedXml</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定、 <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> XML ドキュメントの暗号化を解除するために必要なキーに関する情報を含むオブジェクト。</summary>
        <value><see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> XML ドキュメントの暗号化を解除するために必要なキーに関する情報を含むオブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 渡す必要があります、<xref:System.Security.Cryptography.Xml.EncryptedXml>オブジェクトを<xref:System.Security.Cryptography.Xml.XmlDecryptionTransform.EncryptedXml%2A>ドキュメントの暗号化を解除するために必要なキー情報を格納するプロパティです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInnerXml">
      <MemberSignature Language="C#" Value="protected override System.Xml.XmlNodeList GetInnerXml ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Xml.XmlNodeList GetInnerXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.XmlDecryptionTransform.GetInnerXml" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeList</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>パラメーターの XML 表現を返します、<see cref="T:System.Security.Cryptography.Xml.XmlDecryptionTransform" />オブジェクトは、XMLDSIG のサブ要素として含まれるに適した<see langword="&lt;Transform&gt;" />要素。</summary>
        <returns>現在の記述に必要な変換に固有のコンテンツを表す XML ノードの一覧<see cref="T:System.Security.Cryptography.Xml.XmlDecryptionTransform" />、XMLDSIG 内のオブジェクト<see langword="&lt;Transform&gt;" />要素。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOutput">
      <MemberSignature Language="C#" Value="public override object GetOutput ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetOutput() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.XmlDecryptionTransform.GetOutput" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>現在の出力を返します。<see cref="T:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform" />オブジェクト。</summary>
        <returns>現在の出力<see cref="T:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform" />オブジェクト。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">復号化キーが見つかりませんでした。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetOutput">
      <MemberSignature Language="C#" Value="public override object GetOutput (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetOutput(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.XmlDecryptionTransform.GetOutput(System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">返される出力の型。 <see cref="T:System.Xml.XmlNodeList" />このパラメーターの唯一の有効な型です。</param>
        <summary>現在の出力を返します。<see cref="T:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform" />オブジェクト。</summary>
        <returns>現在の出力<see cref="T:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform" />オブジェクト。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><paramref name="type" />パラメーターではありません、<see cref="T:System.Xml.XmlNodeList" />オブジェクト。</exception>
      </Docs>
    </Member>
    <Member MemberName="InputTypes">
      <MemberSignature Language="C#" Value="public override Type[] InputTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type[] InputTypes" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.XmlDecryptionTransform.InputTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>有効な入力値をされている型の配列を取得、 <see cref="M:System.Security.Cryptography.Xml.XmlDecryptionTransform.LoadInput(System.Object)" /> 、現在のメソッド<see cref="T:System.Security.Cryptography.Xml.XmlDecryptionTransform" />オブジェクト。</summary>
        <value>現在の有効な入力の型の配列<see cref="T:System.Security.Cryptography.Xml.XmlDecryptionTransform" />オブジェクトです。 これらの種類のいずれかのオブジェクトのみを渡すことができます、 <see cref="M:System.Security.Cryptography.Xml.XmlDecryptionTransform.LoadInput(System.Object)" /> 、現在のメソッド<see cref="T:System.Security.Cryptography.Xml.XmlDecryptionTransform" />オブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 によって返される配列、<xref:System.Security.Cryptography.Xml.XmlDecryptionTransform.InputTypes%2A>ために、プロパティは、少なくとも 1 つの要素を含める必要がありますすべて<xref:System.Security.Cryptography.Xml.XmlDecryptionTransform>オブジェクトに有効な入力として少なくとも 1 つの型を使用する必要があります。  
  
 <xref:System.Security.Cryptography.Xml.XmlDecryptionTransform>オブジェクト通常、次の種類の 1 つ以上入力として受け取ります。 <xref:System.IO.Stream>、 <xref:System.Xml.XmlDocument>、または<xref:System.Xml.XmlNodeList>です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTargetElement">
      <MemberSignature Language="C#" Value="protected virtual bool IsTargetElement (System.Xml.XmlElement inputElement, string idValue);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool IsTargetElement(class System.Xml.XmlElement inputElement, string idValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.XmlDecryptionTransform.IsTargetElement(System.Xml.XmlElement,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputElement" Type="System.Xml.XmlElement" />
        <Parameter Name="idValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="inputElement"><see cref="T:System.Xml.XmlElement" />オブジェクトと比較する ID 属性を持つ<c>idValue</c>です。</param>
        <param name="idValue">ID 属性と比較する値<c>inputElement</c>です。</param>
        <summary>決定するかどうかの ID 属性、<see cref="T:System.Xml.XmlElement" />オブジェクトが、指定した値に一致します。</summary>
        <returns>
          <see langword="true" />場合の ID 属性、<paramref name="inputElement" />パラメーターと一致する、<paramref name="idValue" />パラメーターです。 それ以外の場合、<see langword="false" />です。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadInnerXml">
      <MemberSignature Language="C#" Value="public override void LoadInnerXml (System.Xml.XmlNodeList nodeList);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void LoadInnerXml(class System.Xml.XmlNodeList nodeList) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.XmlDecryptionTransform.LoadInnerXml(System.Xml.XmlNodeList)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodeList" Type="System.Xml.XmlNodeList" />
      </Parameters>
      <Docs>
        <param name="nodeList"><see cref="T:System.Xml.XmlNodeList" />現在の変換に固有のコンテンツを指定するオブジェクト<see cref="T:System.Security.Cryptography.Xml.XmlDecryptionTransform" />オブジェクト。</param>
        <summary>解析して、指定した<see cref="T:System.Xml.XmlNodeList" />オブジェクトの変換に固有のコンテンツとして、<see langword="&lt;Transform&gt;" />要素が現在の内部状態を構成および<see cref="T:System.Security.Cryptography.Xml.XmlDecryptionTransform" />と一致するオブジェクト、<see langword="&lt;Transform&gt;" />要素。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドはのサブ要素を処理するために使用する`<Transform>`要素。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><paramref name="nodeList" /> パラメーターが <see langword="null" /> です。  
  
 または  
  
 識別子 URI (Uniform Resource) 値、<see cref="T:System.Xml.XmlNode" />オブジェクトに<paramref name="nodeList" />が見つかりませんでした。  
  
 または  
  
 URI 値の長さ、<see cref="T:System.Xml.XmlNode" />オブジェクトに<paramref name="nodeList" />は 0 です。  
  
 または  
  
 URI 値の最初の文字、<see cref="T:System.Xml.XmlNode" />オブジェクトに<paramref name="nodeList" />'#' ではありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="LoadInput">
      <MemberSignature Language="C#" Value="public override void LoadInput (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void LoadInput(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.XmlDecryptionTransform.LoadInput(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">現在読み込む入力<see cref="T:System.Security.Cryptography.Xml.XmlDecryptionTransform" />オブジェクト。</param>
        <summary>派生クラスでオーバーライドされると、現在、指定された入力を読み込みます<see cref="T:System.Security.Cryptography.Xml.XmlDecryptionTransform" />オブジェクト。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 入力オブジェクトの種類は内の型のいずれかを指定する必要があります、<xref:System.Security.Cryptography.Xml.XmlDecryptionTransform.InputTypes%2A>プロパティです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="obj" /> パラメーターが <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="OutputTypes">
      <MemberSignature Language="C#" Value="public override Type[] OutputTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type[] OutputTypes" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.XmlDecryptionTransform.OutputTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>可能な出力をされている型の配列を取得、 <see cref="M:System.Security.Cryptography.Xml.XmlDecryptionTransform.GetOutput" /> 、現在のメソッド<see cref="T:System.Security.Cryptography.Xml.XmlDecryptionTransform" />オブジェクト。</summary>
        <value>現在の有効な出力型の配列<see cref="T:System.Security.Cryptography.Xml.XmlDecryptionTransform" />オブジェクト以外のオブジェクトのみを次のいずれかの型はから返されます、 <see cref="M:System.Security.Cryptography.Xml.XmlDecryptionTransform.GetOutput" /> 、現在のメソッド<see cref="T:System.Security.Cryptography.Xml.XmlDecryptionTransform" />オブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 によって返される配列、<xref:System.Security.Cryptography.Xml.XmlDecryptionTransform.OutputTypes%2A>すべて変換が出力として少なくとも 1 つの型を生成する必要がありますので、プロパティは、少なくとも 1 つの要素を含める必要があります。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
