<Type Name="IntranetZoneCredentialPolicy" FullName="Microsoft.Win32.IntranetZoneCredentialPolicy">
  <TypeSignature Language="C#" Value="public class IntranetZoneCredentialPolicy : System.Net.ICredentialPolicy" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit IntranetZoneCredentialPolicy extends System.Object implements class System.Net.ICredentialPolicy" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Win32.IntranetZoneCredentialPolicy" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Net.ICredentialPolicy</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>使用して作成されるリソースの要求に使用する資格情報のポリシー定義<see cref="T:System.Net.WebRequest" />とその派生クラス。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このポリシーは、要求されたリソースが要求を行っているクライアントと同じドメイン内にのみ送信される資格情報を使用します。 多くのアプリケーションにこれは最適なポリシーは、イントラネット上のリソースの要求と共に送信されるネットワーク資格情報を防ぐためです。  
  
> [!NOTE]
>  <xref:System.Net.ICredentialPolicy>ポリシーが呼び出される場合にのみ、<xref:System.Net.WebRequest>または<xref:System.Net.WebProxy>関連付けられている要求ではない資格情報を持つ`null`します。 このポリシーを設定しても、資格情報が指定されていない要求には影響はありません。  
  
 使用して、<xref:System.Net.AuthenticationManager.CredentialPolicy%2A?displayProperty=nameWithType>プロパティを設定、<xref:Microsoft.Win32.IntranetZoneCredentialPolicy>ポリシー。 <xref:System.Net.IAuthenticationModule>要求の認証をその処理を呼び出す、<xref:Microsoft.Win32.IntranetZoneCredentialPolicy.ShouldSendCredential%2A>認証を実行する前にメソッドです。 要求されたリソースが、クライアントとは異なるドメインの場合、<xref:Microsoft.Win32.IntranetZoneCredentialPolicy.ShouldSendCredential%2A>メソッドを返します。 `false`、認証が実行されていません。  
  
 このポリシーのすべてのインスタンスに影響<xref:System.Net.WebRequest>現在のアプリケーション ドメイン内の null 以外の資格情報を使用します。 ポリシーは、個別の要求でオーバーライドできません。  
  
   
  
## Examples  
 インスタンスを作成するコード例を次に示します<xref:Microsoft.Win32.IntranetZoneCredentialPolicy>とのアプリケーション ドメインの資格情報のポリシー設定を使用します。  
  
 [!code-cpp[NclCredPolicy#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCredPolicy/CPP/NCLCredPolicy.cpp#2)]
 [!code-csharp[NclCredPolicy#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCredPolicy/CS/websample.cs#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IntranetZoneCredentialPolicy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.IntranetZoneCredentialPolicy.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:Microsoft.Win32.IntranetZoneCredentialPolicy" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 アプリケーションでは、このコンス トラクターを使用して、設定に使用できるオブジェクトを作成、<xref:System.Net.AuthenticationManager.CredentialPolicy%2A>プロパティです。  
  
   
  
## Examples  
 次のコード例では、このクラスのインスタンスを作成するを示します。  
  
 [!code-cpp[NclCredPolicy#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCredPolicy/CPP/NCLCredPolicy.cpp#2)]
 [!code-csharp[NclCredPolicy#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCredPolicy/CS/websample.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSendCredential">
      <MemberSignature Language="C#" Value="public virtual bool ShouldSendCredential (Uri challengeUri, System.Net.WebRequest request, System.Net.NetworkCredential credential, System.Net.IAuthenticationModule authModule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShouldSendCredential(class System.Uri challengeUri, class System.Net.WebRequest request, class System.Net.NetworkCredential credential, class System.Net.IAuthenticationModule authModule) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.IntranetZoneCredentialPolicy.ShouldSendCredential(System.Uri,System.Net.WebRequest,System.Net.NetworkCredential,System.Net.IAuthenticationModule)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="challengeUri" Type="System.Uri" />
        <Parameter Name="request" Type="System.Net.WebRequest" />
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="authModule" Type="System.Net.IAuthenticationModule" />
      </Parameters>
      <Docs>
        <param name="challengeUri"><see cref="T:System.Uri" />要求を受信します。</param>
        <param name="request"><see cref="T:System.Net.WebRequest" />要求されているリソースを表すです。</param>
        <param name="credential"><see cref="T:System.Net.NetworkCredential" />を発送する要求にこのメソッドが戻る場合<see langword="true" />です。</param>
        <param name="authModule"><see cref="T:System.Net.IAuthenticationModule" />認証が必要な場合、認証を実施するされます。</param>
        <summary>返します、<see cref="T:System.Boolean" />を使用して作成されたリソースのクライアントの資格情報が要求と共に送信されるかどうかを示す<see cref="T:System.Net.WebRequest" />です。</summary>
        <returns>
          <see langword="true" />要求されたリソースが要求を行っているクライアントと同じドメインの場合それ以外の場合、<see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 アプリケーションはこのメソッド直接呼び出しません。メソッドによって呼び出されます、<xref:System.Net.IAuthenticationModule>をサーバーで認証を実行します。 このメソッドが戻る場合`false`、<xref:System.Net.IAuthenticationModule>サーバーにクライアントが認証されません。  
  
 このメソッドは資格情報を指定するか、使用する要求に対してのみ、<xref:System.Net.WebProxy>資格情報を指定するオブジェクト。  
  
   
  
## Examples  
 次のコード例から派生することを示します<xref:Microsoft.Win32.IntranetZoneCredentialPolicy>資格情報の基本認証でのセキュア ハイパー テキスト転送プロトコル (HTTPS) を使用する要求の送信を許可します。 HTTPS および基本認証を使用して、ユーザーのパスワードは、ネットワーク経由で送信される前に暗号化されます。  
  
 [!code-cpp[NclCredPolicy#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCredPolicy/CPP/NCLCredPolicy.cpp#4)]
 [!code-csharp[NclCredPolicy#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCredPolicy/CS/websample.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
