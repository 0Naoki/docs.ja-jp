<Type Name="SerializerWriter" FullName="System.Windows.Documents.Serialization.SerializerWriter">
  <TypeSignature Language="C#" Value="public abstract class SerializerWriter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SerializerWriter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Documents.Serialization.SerializerWriter" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>プラグイン ドキュメント出力シリアライザーの実装に必要な抽象メソッドおよびイベントを定義します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 次の例は、の使用を示しています。<xref:System.Windows.Documents.Serialization.SerializerWriter>です。  
  
 [!code-csharp[DocumentSerialize#DocSerializePlugIn](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserializeplugin)]  
  
 [!code-csharp[DocumentSerialize#DocSerializeFileFilter](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserializefilefilter)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SerializerWriter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.Documents.Serialization.SerializerWriter" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 インスタンス<xref:System.Windows.Documents.Serialization.SerializerWriter>を使用して作成する必要があります、<xref:System.Windows.Documents.Serialization.SerializerProvider.CreateSerializerWriter%2A>のメソッド、<xref:System.Windows.Documents.Serialization.SerializerProvider>オブジェクトは、<xref:System.Windows.Documents.Serialization.ISerializerFactory.CreateSerializerWriter%2A>のメソッド、<xref:System.Windows.Documents.Serialization.ISerializerFactory>オブジェクト。  
  
   
  
## Examples  
 次の例を作成する方法を示しています、<xref:System.Windows.Documents.Serialization.SerializerWriter>を使用して、 <xref:System.Windows.Documents.Serialization.SerializerProvider>.<xref:System.Windows.Documents.Serialization.SerializerProvider.CreateSerializerWriter%2A>メソッドです。  
  
 [!code-csharp[DocumentSerialize#DocSerializePlugIn](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserializeplugin)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelAsync">
      <MemberSignature Language="C#" Value="public abstract void CancelAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CancelAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>派生クラスでオーバーライドされると、非同期書き込み操作をキャンセルします。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateVisualsCollator">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>派生クラスでオーバーライドされると、<see cref="T:System.Windows.Documents.Serialization.SerializerWriterCollator" />書き込みが照合される<see cref="T:System.Windows.Media.Visual" />要素をシリアル化<see cref="T:System.IO.Stream" />です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次の例では、使用、<xref:System.Windows.Documents.Serialization.SerializerWriter.CreateVisualsCollator%2A>メソッドです。  
  
 [!code-csharp[XpsSave#CreateAndWriteToVisualsCollator](~/samples/snippets/csharp/VS_Snippets_Wpf/XpsSave/CSharp/XpsSaveHelper.cs#createandwritetovisualscollator)]
 [!code-vb[XpsSave#CreateAndWriteToVisualsCollator](~/samples/snippets/visualbasic/VS_Snippets_Wpf/XpsSave/visualbasic/xpssavehelper.vb#createandwritetovisualscollator)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateVisualsCollator">
      <MemberSignature Language="C#" Value="public abstract System.Windows.Documents.Serialization.SerializerWriterCollator CreateVisualsCollator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Documents.Serialization.SerializerWriterCollator CreateVisualsCollator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.CreateVisualsCollator" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.Serialization.SerializerWriterCollator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>派生クラスでオーバーライドされると、<see cref="T:System.Windows.Documents.Serialization.SerializerWriterCollator" />書き込みが照合される<see cref="T:System.Windows.Media.Visual" />要素。</summary>
        <returns>A<see cref="T:System.Windows.Documents.Serialization.SerializerWriterCollator" />書き込みが照合される<see cref="T:System.Windows.Media.Visual" />要素をドキュメント出力のシリアル化<see cref="T:System.IO.Stream" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次の例では、使用、<xref:System.Windows.Documents.Serialization.SerializerWriter.CreateVisualsCollator%2A>メソッドです。  
  
 [!code-csharp[XpsSave#CreateAndWriteToVisualsCollator](~/samples/snippets/csharp/VS_Snippets_Wpf/XpsSave/CSharp/XpsSaveHelper.cs#createandwritetovisualscollator)]
 [!code-vb[XpsSave#CreateAndWriteToVisualsCollator](~/samples/snippets/visualbasic/VS_Snippets_Wpf/XpsSave/visualbasic/xpssavehelper.vb#createandwritetovisualscollator)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <see cref="M:System.Windows.Documents.Serialization.SerializerWriter.CreateVisualsCollator" />返す必要があります、<see cref="T:System.Windows.Documents.Serialization.SerializerWriterCollator" />を同じシリアル化を書き込む<see cref="T:System.IO.Stream" />として、<see cref="T:System.Windows.Documents.Serialization.SerializerWriter" />作成に使用されます。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="CreateVisualsCollator">
      <MemberSignature Language="C#" Value="public abstract System.Windows.Documents.Serialization.SerializerWriterCollator CreateVisualsCollator (System.Printing.PrintTicket documentSequencePT, System.Printing.PrintTicket documentPT);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Documents.Serialization.SerializerWriterCollator CreateVisualsCollator(class System.Printing.PrintTicket documentSequencePT, class System.Printing.PrintTicket documentPT) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.CreateVisualsCollator(System.Printing.PrintTicket,System.Printing.PrintTicket)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.Serialization.SerializerWriterCollator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentSequencePT" Type="System.Printing.PrintTicket" />
        <Parameter Name="documentPT" Type="System.Printing.PrintTicket" />
      </Parameters>
      <Docs>
        <param name="documentSequencePT"><see cref="T:System.Windows.Documents.FixedDocumentSequence" /> コンテンツの既定の印刷設定。</param>
        <param name="documentPT"><see cref="T:System.Windows.Documents.FixedDocument" /> コンテンツの既定の印刷設定。</param>
        <summary>派生クラスでオーバーライドされると、部単位で印刷する <see cref="T:System.Windows.Media.Visual" /> 要素および指定の印刷チケットを書き込む <see cref="T:System.Windows.Documents.Serialization.SerializerWriterCollator" /> を返します。</summary>
        <returns>A<see cref="T:System.Windows.Documents.Serialization.SerializerWriterCollator" />書き込みが照合される<see cref="T:System.Windows.Media.Visual" />要素をドキュメント出力のシリアル化<see cref="T:System.IO.Stream" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `documentSequencePT`または`documentPT`できます`null`印刷設定が存在しない場合。  
  
 このメソッドが検証または特定の指定の印刷チケットを変更していない<xref:System.Printing.PrintQueue>です。  必要に応じて、使用、<xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=nameWithType>メソッドを作成、 <xref:System.Printing.PrintQueue>-特定<xref:System.Printing.PrintTicket>特定のプリンターに対して有効であります。  
  
   
  
## Examples  
 次の例では、使用、<xref:System.Windows.Documents.Serialization.SerializerWriter.CreateVisualsCollator%2A>メソッドです。  
  
 [!code-csharp[XpsSave#CreateAndWriteToVisualsCollator](~/samples/snippets/csharp/VS_Snippets_Wpf/XpsSave/CSharp/XpsSaveHelper.cs#createandwritetovisualscollator)]
 [!code-vb[XpsSave#CreateAndWriteToVisualsCollator](~/samples/snippets/visualbasic/VS_Snippets_Wpf/XpsSave/visualbasic/xpssavehelper.vb#createandwritetovisualscollator)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <see cref="M:System.Windows.Documents.Serialization.SerializerWriter.CreateVisualsCollator(System.Printing.PrintTicket,System.Printing.PrintTicket)" />返す必要があります、<see cref="T:System.Windows.Documents.Serialization.SerializerWriterCollator" />を同じシリアル化を書き込む<see cref="T:System.IO.Stream" />として、<see cref="T:System.Windows.Documents.Serialization.SerializerWriter" />を作成します。</para>
        </block>
      </Docs>
    </Member>
    <MemberGroup MemberName="Write">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>派生クラスでオーバーライドされると、同期的にコンテンツを書き込みます、シリアル化<see cref="T:System.IO.Stream" />です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 出力<xref:System.IO.Stream>の書き込みの操作は通常を実装する派生クラスのコンス トラクターにパラメーターとして指定<xref:System.Windows.Documents.Serialization.SerializerWriter>です。  
  
   
  
## Examples  
 次の例では、使用、<xref:System.Windows.Documents.Serialization.SerializerWriter.Write%2A>出力ファイルに、フロー ドキュメントをシリアル化するメソッド。  
  
 [!code-csharp[DocumentSerialize#DocSerializePlugIn](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserializeplugin)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public abstract void Write (System.Windows.Documents.DocumentPaginator documentPaginator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(class System.Windows.Documents.DocumentPaginator documentPaginator) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.DocumentPaginator)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentPaginator" Type="System.Windows.Documents.DocumentPaginator" />
      </Parameters>
      <Docs>
        <param name="documentPaginator">シリアル化に書き込むコンテンツを定義するドキュメント ページネーター<see cref="T:System.IO.Stream" />です。</param>
        <summary>内容を同期的に書き込む派生クラスでオーバーライドされると、ときに、指定された<see cref="T:System.Windows.Documents.DocumentPaginator" />をシリアル化<see cref="T:System.IO.Stream" />です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 出力<xref:System.IO.Stream>の書き込みの操作は通常を実装する派生クラスのコンス トラクターにパラメーターとして指定<xref:System.Windows.Documents.Serialization.SerializerWriter>です。  
  
   
  
## Examples  
 次の例では、使用、<xref:System.Windows.Documents.Serialization.SerializerWriter.Write%28System.Windows.Documents.DocumentPaginator%2CSystem.Printing.PrintTicket%29>出力ファイルに、フロー ドキュメントをシリアル化するメソッド。  
  
 [!code-csharp[DocumentSerialize#DocSerializePlugIn](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserializeplugin)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public abstract void Write (System.Windows.Documents.FixedDocument fixedDocument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(class System.Windows.Documents.FixedDocument fixedDocument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedDocument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedDocument" Type="System.Windows.Documents.FixedDocument" />
      </Parameters>
      <Docs>
        <param name="fixedDocument">シリアル化に書き込むドキュメント<see cref="T:System.IO.Stream" />です。</param>
        <summary>派生クラスでオーバーライドされると、同期的に書き込みます、指定された<see cref="T:System.Windows.Documents.FixedDocument" />をシリアル化<see cref="T:System.IO.Stream" />です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 出力<xref:System.IO.Stream>の書き込みの操作は通常を実装する派生クラスのコンス トラクターにパラメーターとして指定<xref:System.Windows.Documents.Serialization.SerializerWriter>です。  
  
   
  
## Examples  
 次の例では、使用、<xref:System.Windows.Documents.Serialization.SerializerWriter.Write%28System.Windows.Documents.DocumentPaginator%2CSystem.Printing.PrintTicket%29>出力ファイルに、フロー ドキュメントをシリアル化するメソッド。  
  
 [!code-csharp[DocumentSerialize#DocSerializePlugIn](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserializeplugin)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public abstract void Write (System.Windows.Documents.FixedDocumentSequence fixedDocumentSequence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(class System.Windows.Documents.FixedDocumentSequence fixedDocumentSequence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedDocumentSequence)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedDocumentSequence" Type="System.Windows.Documents.FixedDocumentSequence" />
      </Parameters>
      <Docs>
        <param name="fixedDocumentSequence">シリアル化を記述するコンテンツを定義するドキュメント シーケンス<see cref="T:System.IO.Stream" />です。</param>
        <summary>派生クラスでオーバーライドされると、同期的に書き込みます、指定された<see cref="T:System.Windows.Documents.FixedDocumentSequence" />をシリアル化<see cref="T:System.IO.Stream" />です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 出力<xref:System.IO.Stream>の書き込みの操作は通常を実装する派生クラスのコンス トラクターにパラメーターとして指定<xref:System.Windows.Documents.Serialization.SerializerWriter>です。  
  
   
  
## Examples  
 次の例では、使用、<xref:System.Windows.Documents.Serialization.SerializerWriter.Write%28System.Windows.Documents.DocumentPaginator%2CSystem.Printing.PrintTicket%29>出力ファイルに、フロー ドキュメントをシリアル化するメソッド。  
  
 [!code-csharp[DocumentSerialize#DocSerializePlugIn](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserializeplugin)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public abstract void Write (System.Windows.Documents.FixedPage fixedPage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(class System.Windows.Documents.FixedPage fixedPage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedPage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedPage" Type="System.Windows.Documents.FixedPage" />
      </Parameters>
      <Docs>
        <param name="fixedPage">シリアル化に書き込むページ<see cref="T:System.IO.Stream" />です。</param>
        <summary>派生クラスでオーバーライドされると、同期的に書き込みます、指定された<see cref="T:System.Windows.Documents.FixedPage" />をシリアル化<see cref="T:System.IO.Stream" />です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 出力<xref:System.IO.Stream>の書き込みの操作は通常を実装する派生クラスのコンス トラクターにパラメーターとして指定<xref:System.Windows.Documents.Serialization.SerializerWriter>です。  
  
   
  
## Examples  
 次の例では、使用、<xref:System.Windows.Documents.Serialization.SerializerWriter.Write%28System.Windows.Documents.DocumentPaginator%2CSystem.Printing.PrintTicket%29>出力ファイルに、フロー ドキュメントをシリアル化するメソッド。  
  
 [!code-csharp[DocumentSerialize#DocSerializePlugIn](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserializeplugin)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public abstract void Write (System.Windows.Media.Visual visual);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(class System.Windows.Media.Visual visual) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Media.Visual)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="visual"><see cref="T:System.Windows.Media.Visual" />シリアル化に書き込む要素<see cref="T:System.IO.Stream" />です。</param>
        <summary>派生クラスでオーバーライドされると、同期的に書き込みます、指定された<see cref="T:System.Windows.Media.Visual" />要素をシリアル化<see cref="T:System.IO.Stream" />です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 出力<xref:System.IO.Stream>の書き込みの操作は通常を実装する派生クラスのコンス トラクターにパラメーターとして指定<xref:System.Windows.Documents.Serialization.SerializerWriter>です。  
  
   
  
## Examples  
 次の例では、使用、<xref:System.Windows.Documents.Serialization.SerializerWriter.Write%28System.Windows.Documents.DocumentPaginator%2CSystem.Printing.PrintTicket%29>出力ファイルに、フロー ドキュメントをシリアル化するメソッド。  
  
 [!code-csharp[DocumentSerialize#DocSerializePlugIn](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserializeplugin)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public abstract void Write (System.Windows.Documents.DocumentPaginator documentPaginator, System.Printing.PrintTicket printTicket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(class System.Windows.Documents.DocumentPaginator documentPaginator, class System.Printing.PrintTicket printTicket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.DocumentPaginator,System.Printing.PrintTicket)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentPaginator" Type="System.Windows.Documents.DocumentPaginator" />
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
      </Parameters>
      <Docs>
        <param name="documentPaginator">シリアル化に書き込むコンテンツを定義するドキュメント ページネーター<see cref="T:System.IO.Stream" />です。</param>
        <param name="printTicket">既定の印刷の設定、 <c>documentPaginator</c>コンテンツ。</param>
        <summary>派生クラスでオーバーライドされると、同期的に書き込み改ページ調整されたコンテンツおよび関連する<see cref="T:System.Printing.PrintTicket" />をシリアル化<see cref="T:System.IO.Stream" />です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `printTicket`指定できます`null`印刷設定が存在しない場合。  
  
 このメソッドは、検証または変更はできません、指定された`printTicket`、特定の<xref:System.Printing.PrintQueue>します。  必要に応じて、使用、<xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=nameWithType>メソッドを作成、 <xref:System.Printing.PrintQueue>-特定<xref:System.Printing.PrintTicket>特定のプリンターに対して有効であります。  
  
 出力<xref:System.IO.Stream>の書き込みの操作は通常を実装する派生クラスのコンス トラクターにパラメーターとして指定<xref:System.Windows.Documents.Serialization.SerializerWriter>です。  
  
   
  
## Examples  
 次の例では、使用、<xref:System.Windows.Documents.Serialization.SerializerWriter.Write%28System.Windows.Documents.DocumentPaginator%2CSystem.Printing.PrintTicket%29>出力ファイルに、フロー ドキュメントをシリアル化するメソッド。  
  
 [!code-csharp[DocumentSerialize#DocSerializePlugIn](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserializeplugin)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public abstract void Write (System.Windows.Documents.FixedDocument fixedDocument, System.Printing.PrintTicket printTicket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(class System.Windows.Documents.FixedDocument fixedDocument, class System.Printing.PrintTicket printTicket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedDocument,System.Printing.PrintTicket)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedDocument" Type="System.Windows.Documents.FixedDocument" />
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
      </Parameters>
      <Docs>
        <param name="fixedDocument">シリアル化に書き込むドキュメント<see cref="T:System.IO.Stream" />です。</param>
        <param name="printTicket">既定の印刷の設定、 <c>fixedDocument</c>コンテンツ。</param>
        <summary>派生クラスでオーバーライドされると、同期的に書き込みます、指定された<see cref="T:System.Windows.Documents.FixedDocument" />および関連する<see cref="T:System.Printing.PrintTicket" />をシリアル化<see cref="T:System.IO.Stream" />です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `printTicket`指定できます`null`印刷設定が存在しない場合。  
  
 このメソッドは、検証または変更はできません、指定された`printTicket`、特定の<xref:System.Printing.PrintQueue>します。  必要に応じて、使用、<xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=nameWithType>メソッドを作成、 <xref:System.Printing.PrintQueue>-特定<xref:System.Printing.PrintTicket>特定のプリンターに対して有効であります。  
  
 出力<xref:System.IO.Stream>の書き込みの操作は通常を実装する派生クラスのコンス トラクターにパラメーターとして指定<xref:System.Windows.Documents.Serialization.SerializerWriter>です。  
  
   
  
## Examples  
 次の例では、使用、<xref:System.Windows.Documents.Serialization.SerializerWriter.Write%28System.Windows.Documents.DocumentPaginator%2CSystem.Printing.PrintTicket%29>出力ファイルに、フロー ドキュメントをシリアル化するメソッド。  
  
 [!code-csharp[DocumentSerialize#DocSerializePlugIn](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserializeplugin)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public abstract void Write (System.Windows.Documents.FixedDocumentSequence fixedDocumentSequence, System.Printing.PrintTicket printTicket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(class System.Windows.Documents.FixedDocumentSequence fixedDocumentSequence, class System.Printing.PrintTicket printTicket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedDocumentSequence,System.Printing.PrintTicket)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedDocumentSequence" Type="System.Windows.Documents.FixedDocumentSequence" />
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
      </Parameters>
      <Docs>
        <param name="fixedDocumentSequence">シリアル化を記述するコンテンツを定義するドキュメント シーケンス<see cref="T:System.IO.Stream" />です。</param>
        <param name="printTicket">既定の印刷の設定、 <c>fixedDocumentSequence</c>コンテンツ。</param>
        <summary>派生クラスでオーバーライドされると、同期的に書き込みます、指定された<see cref="T:System.Windows.Documents.FixedDocumentSequence" />および関連する<see cref="T:System.Printing.PrintTicket" />をシリアル化<see cref="T:System.IO.Stream" />です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `printTicket`指定できます`null`印刷設定が存在しない場合。  
  
 このメソッドは、検証または変更はできません、指定された`printTicket`、特定の<xref:System.Printing.PrintQueue>します。  必要に応じて、使用、<xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=nameWithType>メソッドを作成、 <xref:System.Printing.PrintQueue>-特定<xref:System.Printing.PrintTicket>特定のプリンターに対して有効であります。  
  
 出力<xref:System.IO.Stream>の書き込みの操作は通常を実装する派生クラスのコンス トラクターにパラメーターとして指定<xref:System.Windows.Documents.Serialization.SerializerWriter>です。  
  
   
  
## Examples  
 次の例では、使用、<xref:System.Windows.Documents.Serialization.SerializerWriter.Write%28System.Windows.Documents.DocumentPaginator%2CSystem.Printing.PrintTicket%29>出力ファイルに、フロー ドキュメントをシリアル化するメソッド。  
  
 [!code-csharp[DocumentSerialize#DocSerializePlugIn](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserializeplugin)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public abstract void Write (System.Windows.Documents.FixedPage fixedPage, System.Printing.PrintTicket printTicket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(class System.Windows.Documents.FixedPage fixedPage, class System.Printing.PrintTicket printTicket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedPage,System.Printing.PrintTicket)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedPage" Type="System.Windows.Documents.FixedPage" />
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
      </Parameters>
      <Docs>
        <param name="fixedPage">シリアル化に書き込むページ<see cref="T:System.IO.Stream" />です。</param>
        <param name="printTicket">既定の印刷の設定、 <c>fixedPage</c>コンテンツ。</param>
        <summary>派生クラスでオーバーライドされると、同期的に書き込みます、指定された<see cref="T:System.Windows.Documents.FixedPage" />および関連する<see cref="T:System.Printing.PrintTicket" />をシリアル化<see cref="T:System.IO.Stream" />です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `printTicket`指定できます`null`印刷設定が存在しない場合。  
  
 このメソッドは、検証または変更はできません、指定された`printTicket`、特定の<xref:System.Printing.PrintQueue>します。  必要に応じて、使用、<xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=nameWithType>メソッドを作成、 <xref:System.Printing.PrintQueue>-特定<xref:System.Printing.PrintTicket>特定のプリンターに対して有効であります。  
  
 出力<xref:System.IO.Stream>の書き込みの操作は通常を実装する派生クラスのコンス トラクターにパラメーターとして指定<xref:System.Windows.Documents.Serialization.SerializerWriter>です。  
  
   
  
## Examples  
 次の例では、使用、<xref:System.Windows.Documents.Serialization.SerializerWriter.Write%28System.Windows.Documents.DocumentPaginator%2CSystem.Printing.PrintTicket%29>出力ファイルに、フロー ドキュメントをシリアル化するメソッド。  
  
 [!code-csharp[DocumentSerialize#DocSerializePlugIn](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserializeplugin)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public abstract void Write (System.Windows.Media.Visual visual, System.Printing.PrintTicket printTicket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(class System.Windows.Media.Visual visual, class System.Printing.PrintTicket printTicket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Media.Visual,System.Printing.PrintTicket)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
      </Parameters>
      <Docs>
        <param name="visual"><see cref="T:System.Windows.Media.Visual" />シリアル化に書き込む要素<see cref="T:System.IO.Stream" />です。</param>
        <param name="printTicket">既定の印刷の設定、 <c>visual</c>要素。</param>
        <summary>派生クラスでオーバーライドされると、同期的に書き込みます、指定された<see cref="T:System.Windows.Media.Visual" />および関連する要素<see cref="T:System.Printing.PrintTicket" />をシリアル化<see cref="T:System.IO.Stream" />です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `printTicket`指定できます`null`印刷設定が存在しない場合。  
  
 このメソッドは、検証または変更はできません、指定された`printTicket`、特定の<xref:System.Printing.PrintQueue>します。  必要に応じて、使用、<xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=nameWithType>メソッドを作成、 <xref:System.Printing.PrintQueue>-特定<xref:System.Printing.PrintTicket>特定のプリンターに対して有効であります。  
  
 出力<xref:System.IO.Stream>の書き込みの操作は通常を実装する派生クラスのコンス トラクターにパラメーターとして指定<xref:System.Windows.Documents.Serialization.SerializerWriter>です。  
  
   
  
## Examples  
 次の例では、使用、<xref:System.Windows.Documents.Serialization.SerializerWriter.Write%28System.Windows.Documents.DocumentPaginator%2CSystem.Printing.PrintTicket%29>出力ファイルに、フロー ドキュメントをシリアル化するメソッド。  
  
 [!code-csharp[DocumentSerialize#DocSerializePlugIn](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserializeplugin)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteAsync">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>シリアル化するコンテンツを非同期に書き込みます派生クラスでオーバーライドされると、<see cref="T:System.IO.Stream" />です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 出力<xref:System.IO.Stream>の書き込みの操作は通常を実装する派生クラスのコンス トラクターにパラメーターとして指定<xref:System.Windows.Documents.Serialization.SerializerWriter>です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Documents.DocumentPaginator documentPaginator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Documents.DocumentPaginator documentPaginator) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.DocumentPaginator)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentPaginator" Type="System.Windows.Documents.DocumentPaginator" />
      </Parameters>
      <Docs>
        <param name="documentPaginator">シリアル化に書き込むコンテンツを定義するドキュメント ページネーター<see cref="T:System.IO.Stream" />です。</param>
        <summary>コンテンツが非同期的に書き込みます派生クラスでオーバーライドされると、ときに、指定された<see cref="T:System.Windows.Documents.DocumentPaginator" />をシリアル化<see cref="T:System.IO.Stream" />です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 出力<xref:System.IO.Stream>の書き込みの操作は通常を実装する派生クラスのコンス トラクターにパラメーターとして指定<xref:System.Windows.Documents.Serialization.SerializerWriter>です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Documents.FixedDocument fixedDocument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Documents.FixedDocument fixedDocument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedDocument" Type="System.Windows.Documents.FixedDocument" />
      </Parameters>
      <Docs>
        <param name="fixedDocument">シリアル化に書き込むドキュメント<see cref="T:System.IO.Stream" />です。</param>
        <summary>派生クラスでオーバーライドされると、非同期的に書き込み、指定された<see cref="T:System.Windows.Documents.FixedDocument" />をシリアル化<see cref="T:System.IO.Stream" />です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 出力<xref:System.IO.Stream>の書き込みの操作は通常を実装する派生クラスのコンス トラクターにパラメーターとして指定<xref:System.Windows.Documents.Serialization.SerializerWriter>です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Documents.FixedDocumentSequence fixedDocumentSequence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Documents.FixedDocumentSequence fixedDocumentSequence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocumentSequence)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedDocumentSequence" Type="System.Windows.Documents.FixedDocumentSequence" />
      </Parameters>
      <Docs>
        <param name="fixedDocumentSequence">シリアル化を記述するコンテンツを定義するドキュメント シーケンス<see cref="T:System.IO.Stream" />です。</param>
        <summary>派生クラスでオーバーライドされると、非同期的に書き込み、指定された<see cref="T:System.Windows.Documents.FixedDocumentSequence" />をシリアル化<see cref="T:System.IO.Stream" />です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 出力<xref:System.IO.Stream>の書き込みの操作は通常を実装する派生クラスのコンス トラクターにパラメーターとして指定<xref:System.Windows.Documents.Serialization.SerializerWriter>です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Documents.FixedPage fixedPage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Documents.FixedPage fixedPage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedPage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedPage" Type="System.Windows.Documents.FixedPage" />
      </Parameters>
      <Docs>
        <param name="fixedPage">シリアル化に書き込むページ<see cref="T:System.IO.Stream" />です。</param>
        <summary>派生クラスでオーバーライドされると、非同期的に書き込み、指定された<see cref="T:System.Windows.Documents.FixedPage" />をシリアル化<see cref="T:System.IO.Stream" />です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 出力<xref:System.IO.Stream>の書き込みの操作は通常を実装する派生クラスのコンス トラクターにパラメーターとして指定<xref:System.Windows.Documents.Serialization.SerializerWriter>です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Media.Visual visual);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Media.Visual visual) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Media.Visual)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="visual"><see cref="T:System.Windows.Media.Visual" />シリアル化に書き込む要素<see cref="T:System.IO.Stream" />です。</param>
        <summary>派生クラスでオーバーライドされると、非同期的に書き込み、指定された<see cref="T:System.Windows.Media.Visual" />要素をシリアル化<see cref="T:System.IO.Stream" />です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 出力<xref:System.IO.Stream>の書き込みの操作は通常を実装する派生クラスのコンス トラクターにパラメーターとして指定<xref:System.Windows.Documents.Serialization.SerializerWriter>です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Documents.DocumentPaginator documentPaginator, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Documents.DocumentPaginator documentPaginator, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.DocumentPaginator,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentPaginator" Type="System.Windows.Documents.DocumentPaginator" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="documentPaginator">シリアル化に書き込むコンテンツを定義するドキュメント ページネーター<see cref="T:System.IO.Stream" />です。</param>
        <param name="userState">非同期書き込み操作を識別する、呼び出し元指定のオブジェクト。</param>
        <summary>コンテンツが非同期的に書き込みます派生クラスでオーバーライドされると、ときに、指定された<see cref="T:System.Windows.Documents.DocumentPaginator" />をシリアル化<see cref="T:System.IO.Stream" />です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `userState`渡される、<xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler>ときに、<xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted>イベントが発生します。  
  
 出力<xref:System.IO.Stream>の書き込みの操作は通常を実装する派生クラスのコンス トラクターにパラメーターとして指定<xref:System.Windows.Documents.Serialization.SerializerWriter>です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Documents.DocumentPaginator documentPaginator, System.Printing.PrintTicket printTicket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Documents.DocumentPaginator documentPaginator, class System.Printing.PrintTicket printTicket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.DocumentPaginator,System.Printing.PrintTicket)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentPaginator" Type="System.Windows.Documents.DocumentPaginator" />
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
      </Parameters>
      <Docs>
        <param name="documentPaginator">シリアル化に書き込むコンテンツを定義するドキュメント ページネーター<see cref="T:System.IO.Stream" />です。</param>
        <param name="printTicket">既定の印刷の設定、 <c>documentPaginator</c>コンテンツ。</param>
        <summary>コンテンツが非同期的に書き込みます派生クラスでオーバーライドされると、ときに、指定された<see cref="T:System.Windows.Documents.DocumentPaginator" />をシリアル化<see cref="T:System.IO.Stream" />です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `printTicket`指定できます`null`印刷設定が存在しない場合。  
  
 このメソッドは、検証または変更はできません、指定された`printTicket`、特定の<xref:System.Printing.PrintQueue>します。  必要に応じて、使用、<xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=nameWithType>メソッドを作成、 <xref:System.Printing.PrintQueue>-特定<xref:System.Printing.PrintTicket>特定のプリンターに対して有効であります。  
  
 出力<xref:System.IO.Stream>の書き込みの操作は通常を実装する派生クラスのコンス トラクターにパラメーターとして指定<xref:System.Windows.Documents.Serialization.SerializerWriter>です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Documents.FixedDocument fixedDocument, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Documents.FixedDocument fixedDocument, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocument,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedDocument" Type="System.Windows.Documents.FixedDocument" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="fixedDocument">シリアル化に書き込むドキュメント<see cref="T:System.IO.Stream" />です。</param>
        <param name="userState">非同期書き込み操作を識別する、呼び出し元指定のオブジェクト。</param>
        <summary>派生クラスでオーバーライドされると、非同期的に書き込み、指定された<see cref="T:System.Windows.Documents.FixedDocument" />をシリアル化<see cref="T:System.IO.Stream" />です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `userState`渡される、<xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler>ときに、<xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted>イベントが発生します。  
  
 出力<xref:System.IO.Stream>の書き込みの操作は通常を実装する派生クラスのコンス トラクターにパラメーターとして指定<xref:System.Windows.Documents.Serialization.SerializerWriter>です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Documents.FixedDocument fixedDocument, System.Printing.PrintTicket printTicket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Documents.FixedDocument fixedDocument, class System.Printing.PrintTicket printTicket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocument,System.Printing.PrintTicket)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedDocument" Type="System.Windows.Documents.FixedDocument" />
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
      </Parameters>
      <Docs>
        <param name="fixedDocument">シリアル化に書き込むドキュメント<see cref="T:System.IO.Stream" />です。</param>
        <param name="printTicket">既定の印刷の設定、 <c>fixedDocument</c>コンテンツ。</param>
        <summary>派生クラスでオーバーライドされると、非同期的に書き込み、指定された<see cref="T:System.Windows.Documents.FixedDocument" />および関連する<see cref="T:System.Printing.PrintTicket" />をシリアル化<see cref="T:System.IO.Stream" />です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `printTicket`指定できます`null`印刷設定が存在しない場合。  
  
 このメソッドは、検証または変更はできません、指定された`printTicket`、特定の<xref:System.Printing.PrintQueue>します。  必要に応じて、使用、<xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=nameWithType>メソッドを作成、 <xref:System.Printing.PrintQueue>-特定<xref:System.Printing.PrintTicket>特定のプリンターに対して有効であります。  
  
 出力<xref:System.IO.Stream>の書き込みの操作は通常を実装する派生クラスのコンス トラクターにパラメーターとして指定<xref:System.Windows.Documents.Serialization.SerializerWriter>です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Documents.FixedDocumentSequence fixedDocumentSequence, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Documents.FixedDocumentSequence fixedDocumentSequence, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocumentSequence,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedDocumentSequence" Type="System.Windows.Documents.FixedDocumentSequence" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="fixedDocumentSequence">シリアル化を記述するコンテンツを定義するドキュメント シーケンス<see cref="T:System.IO.Stream" />です。</param>
        <param name="userState">非同期書き込み操作を識別する、呼び出し元指定のオブジェクト。</param>
        <summary>派生クラスでオーバーライドされると、非同期的に書き込み、指定された<see cref="T:System.Windows.Documents.FixedDocumentSequence" />をシリアル化<see cref="T:System.IO.Stream" />です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `userState`渡される、<xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler>ときに、<xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted>イベントが発生します。  
  
 出力<xref:System.IO.Stream>の書き込みの操作は通常を実装する派生クラスのコンス トラクターにパラメーターとして指定<xref:System.Windows.Documents.Serialization.SerializerWriter>です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Documents.FixedDocumentSequence fixedDocumentSequence, System.Printing.PrintTicket printTicket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Documents.FixedDocumentSequence fixedDocumentSequence, class System.Printing.PrintTicket printTicket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocumentSequence,System.Printing.PrintTicket)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedDocumentSequence" Type="System.Windows.Documents.FixedDocumentSequence" />
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
      </Parameters>
      <Docs>
        <param name="fixedDocumentSequence">シリアル化を記述するコンテンツを定義するドキュメント シーケンス<see cref="T:System.IO.Stream" />です。</param>
        <param name="printTicket">既定の印刷の設定、 <c>fixedDocumentSequence</c>コンテンツ。</param>
        <summary>派生クラスでオーバーライドされると、非同期的に書き込み、指定された<see cref="T:System.Windows.Documents.FixedDocumentSequence" />および関連する<see cref="T:System.Printing.PrintTicket" />をシリアル化<see cref="T:System.IO.Stream" />です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `printTicket`指定できます`null`印刷設定が存在しない場合。  
  
 このメソッドは、検証または変更はできません、指定された`printTicket`、特定の<xref:System.Printing.PrintQueue>します。  必要に応じて、使用、<xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=nameWithType>メソッドを作成、 <xref:System.Printing.PrintQueue>-特定<xref:System.Printing.PrintTicket>特定のプリンターに対して有効であります。  
  
 出力<xref:System.IO.Stream>の書き込みの操作は通常を実装する派生クラスのコンス トラクターにパラメーターとして指定<xref:System.Windows.Documents.Serialization.SerializerWriter>です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Documents.FixedPage fixedPage, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Documents.FixedPage fixedPage, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedPage,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedPage" Type="System.Windows.Documents.FixedPage" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="fixedPage">シリアル化に書き込むページ<see cref="T:System.IO.Stream" />です。</param>
        <param name="userState">非同期書き込み操作を識別する、呼び出し元指定のオブジェクト。</param>
        <summary>派生クラスでオーバーライドされると、非同期的に書き込み、指定された<see cref="T:System.Windows.Documents.FixedPage" />をシリアル化<see cref="T:System.IO.Stream" />です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `userState`渡される、<xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler>ときに、<xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted>イベントが発生します。  
  
 出力<xref:System.IO.Stream>の書き込みの操作は通常を実装する派生クラスのコンス トラクターにパラメーターとして指定<xref:System.Windows.Documents.Serialization.SerializerWriter>です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Documents.FixedPage fixedPage, System.Printing.PrintTicket printTicket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Documents.FixedPage fixedPage, class System.Printing.PrintTicket printTicket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedPage,System.Printing.PrintTicket)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedPage" Type="System.Windows.Documents.FixedPage" />
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
      </Parameters>
      <Docs>
        <param name="fixedPage">シリアル化に書き込むページ<see cref="T:System.IO.Stream" />です。</param>
        <param name="printTicket">既定の印刷の設定、 <c>fixedPage</c>コンテンツ。</param>
        <summary>派生クラスでオーバーライドされると、非同期的に書き込み、指定された<see cref="T:System.Windows.Documents.FixedPage" />および関連する<see cref="T:System.Printing.PrintTicket" />をシリアル化<see cref="T:System.IO.Stream" />です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `printTicket`指定できます`null`印刷設定が存在しない場合。  
  
 このメソッドは、検証または変更はできません、指定された`printTicket`、特定の<xref:System.Printing.PrintQueue>します。  必要に応じて、使用、<xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=nameWithType>メソッドを作成、 <xref:System.Printing.PrintQueue>-特定<xref:System.Printing.PrintTicket>特定のプリンターに対して有効であります。  
  
 出力<xref:System.IO.Stream>の書き込みの操作は通常を実装する派生クラスのコンス トラクターにパラメーターとして指定<xref:System.Windows.Documents.Serialization.SerializerWriter>です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Media.Visual visual, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Media.Visual visual, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Media.Visual,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="visual"><see cref="T:System.Windows.Media.Visual" />シリアル化に書き込む要素<see cref="T:System.IO.Stream" />です。</param>
        <param name="userState">非同期書き込み操作を識別する、呼び出し元指定のオブジェクト。</param>
        <summary>派生クラスでオーバーライドされると、非同期的に書き込み、指定された<see cref="T:System.Windows.Media.Visual" />要素をシリアル化<see cref="T:System.IO.Stream" />です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `userState`渡される、<xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler>ときに、<xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted>イベントが発生します。  
  
 出力<xref:System.IO.Stream>の書き込みの操作は通常を実装する派生クラスのコンス トラクターにパラメーターとして指定<xref:System.Windows.Documents.Serialization.SerializerWriter>です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Media.Visual visual, System.Printing.PrintTicket printTicket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Media.Visual visual, class System.Printing.PrintTicket printTicket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Media.Visual,System.Printing.PrintTicket)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
      </Parameters>
      <Docs>
        <param name="visual"><see cref="T:System.Windows.Media.Visual" />シリアル化に書き込む要素<see cref="T:System.IO.Stream" />です。</param>
        <param name="printTicket">既定の印刷の設定、 <c>visual</c>要素。</param>
        <summary>派生クラスでオーバーライドされると、非同期的に書き込み、指定された<see cref="T:System.Windows.Media.Visual" />および関連する要素<see cref="T:System.Printing.PrintTicket" />をシリアル化<see cref="T:System.IO.Stream" />です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、検証または変更はできません、指定された`printTicket`、特定の<xref:System.Printing.PrintQueue>します。  必要に応じて、使用、<xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=nameWithType>メソッドを作成、 <xref:System.Printing.PrintQueue>-特定<xref:System.Printing.PrintTicket>特定のプリンターに対して有効であります。  
  
 出力<xref:System.IO.Stream>の書き込みの操作は通常を実装する派生クラスのコンス トラクターにパラメーターとして指定<xref:System.Windows.Documents.Serialization.SerializerWriter>です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Documents.DocumentPaginator documentPaginator, System.Printing.PrintTicket printTicket, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Documents.DocumentPaginator documentPaginator, class System.Printing.PrintTicket printTicket, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.DocumentPaginator,System.Printing.PrintTicket,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentPaginator" Type="System.Windows.Documents.DocumentPaginator" />
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="documentPaginator">シリアル化に書き込むコンテンツを定義するドキュメント ページネーター<see cref="T:System.IO.Stream" />です。</param>
        <param name="printTicket">既定の印刷の設定、 <c>documentPaginator</c>コンテンツ。</param>
        <param name="userState">非同期書き込み操作を識別する、呼び出し元指定のオブジェクト。</param>
        <summary>派生クラスでオーバーライドされると、非同期的に書き込み改ページ調整されたコンテンツおよび関連する<see cref="T:System.Printing.PrintTicket" />をシリアル化<see cref="T:System.IO.Stream" />です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `printTicket`指定できます`null`印刷設定が存在しない場合。  
  
 このメソッドは、検証または変更はできません、指定された`printTicket`、特定の<xref:System.Printing.PrintQueue>します。  必要に応じて、使用、<xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=nameWithType>メソッドを作成、 <xref:System.Printing.PrintQueue>-特定<xref:System.Printing.PrintTicket>特定のプリンターに対して有効であります。  
  
 `userState`渡される、<xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler>ときに、<xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted>イベントが発生します。  
  
 出力<xref:System.IO.Stream>の書き込みの操作は通常を実装する派生クラスのコンス トラクターにパラメーターとして指定<xref:System.Windows.Documents.Serialization.SerializerWriter>です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Documents.FixedDocument fixedDocument, System.Printing.PrintTicket printTicket, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Documents.FixedDocument fixedDocument, class System.Printing.PrintTicket printTicket, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocument,System.Printing.PrintTicket,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedDocument" Type="System.Windows.Documents.FixedDocument" />
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="fixedDocument">シリアル化に書き込むドキュメント<see cref="T:System.IO.Stream" />です。</param>
        <param name="printTicket">既定の印刷の設定、 <c>fixedDocument</c>コンテンツ。</param>
        <param name="userState">非同期書き込み操作を識別する、呼び出し元指定のオブジェクト。</param>
        <summary>派生クラスでオーバーライドされると、非同期的に書き込み、指定された<see cref="T:System.Windows.Documents.FixedDocument" />および関連する<see cref="T:System.Printing.PrintTicket" />をシリアル化<see cref="T:System.IO.Stream" />です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `printTicket`指定できます`null`印刷設定が存在しない場合。  
  
 このメソッドは、検証または変更はできません、指定された`printTicket`、特定の<xref:System.Printing.PrintQueue>します。  必要に応じて、使用、<xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=nameWithType>メソッドを作成、 <xref:System.Printing.PrintQueue>-特定<xref:System.Printing.PrintTicket>特定のプリンターに対して有効であります。  
  
 `userState`渡される、<xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler>ときに、<xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted>イベントが発生します。  
  
 出力<xref:System.IO.Stream>の書き込みの操作は通常を実装する派生クラスのコンス トラクターにパラメーターとして指定<xref:System.Windows.Documents.Serialization.SerializerWriter>です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Documents.FixedDocumentSequence fixedDocumentSequence, System.Printing.PrintTicket printTicket, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Documents.FixedDocumentSequence fixedDocumentSequence, class System.Printing.PrintTicket printTicket, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocumentSequence,System.Printing.PrintTicket,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedDocumentSequence" Type="System.Windows.Documents.FixedDocumentSequence" />
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="fixedDocumentSequence">シリアル化を記述するコンテンツを定義するドキュメント シーケンス<see cref="T:System.IO.Stream" />です。</param>
        <param name="printTicket">既定の印刷の設定、 <c>fixedDocumentSequence</c>コンテンツ。</param>
        <param name="userState">非同期書き込み操作を識別する、呼び出し元指定のオブジェクト。</param>
        <summary>派生クラスでオーバーライドされると、非同期的に書き込み、指定された<see cref="T:System.Windows.Documents.FixedDocumentSequence" />および関連する<see cref="T:System.Printing.PrintTicket" />をシリアル化<see cref="T:System.IO.Stream" />です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `printTicket`指定できます`null`印刷設定が存在しない場合。  
  
 このメソッドは、検証または変更はできません、指定された`printTicket`、特定の<xref:System.Printing.PrintQueue>します。  必要に応じて、使用、<xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=nameWithType>メソッドを作成、 <xref:System.Printing.PrintQueue>-特定<xref:System.Printing.PrintTicket>特定のプリンターに対して有効であります。  
  
 `userState`渡される、<xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler>ときに、<xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted>イベントが発生します。  
  
 出力<xref:System.IO.Stream>の書き込みの操作は通常を実装する派生クラスのコンス トラクターにパラメーターとして指定<xref:System.Windows.Documents.Serialization.SerializerWriter>です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Documents.FixedPage fixedPage, System.Printing.PrintTicket printTicket, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Documents.FixedPage fixedPage, class System.Printing.PrintTicket printTicket, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedPage,System.Printing.PrintTicket,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedPage" Type="System.Windows.Documents.FixedPage" />
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="fixedPage">シリアル化に書き込むページ<see cref="T:System.IO.Stream" />です。</param>
        <param name="printTicket">既定の印刷の設定、 <c>fixedPage</c>コンテンツ。</param>
        <param name="userState">非同期書き込み操作を識別する、呼び出し元指定のオブジェクト。</param>
        <summary>派生クラスでオーバーライドされると、非同期的に書き込み、指定された<see cref="T:System.Windows.Documents.FixedPage" />および関連する<see cref="T:System.Printing.PrintTicket" />をシリアル化<see cref="T:System.IO.Stream" />です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `printTicket`指定できます`null`印刷設定が存在しない場合。  
  
 このメソッドは、検証または変更はできません、指定された`printTicket`、特定の<xref:System.Printing.PrintQueue>します。  必要に応じて、使用、<xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=nameWithType>メソッドを作成、 <xref:System.Printing.PrintQueue>-特定<xref:System.Printing.PrintTicket>特定のプリンターに対して有効であります。  
  
 `userState`渡される、<xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler>ときに、<xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted>イベントが発生します。  
  
 出力<xref:System.IO.Stream>の書き込みの操作は通常を実装する派生クラスのコンス トラクターにパラメーターとして指定<xref:System.Windows.Documents.Serialization.SerializerWriter>です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Media.Visual visual, System.Printing.PrintTicket printTicket, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Media.Visual visual, class System.Printing.PrintTicket printTicket, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Media.Visual,System.Printing.PrintTicket,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="visual"><see cref="T:System.Windows.Media.Visual" />シリアル化に書き込む要素<see cref="T:System.IO.Stream" />です。</param>
        <param name="printTicket">既定の印刷の設定、 <c>visual</c>要素。</param>
        <param name="userState">非同期書き込み操作を識別する、呼び出し元指定のオブジェクト。</param>
        <summary>派生クラスでオーバーライドされると、非同期的に書き込み、指定された<see cref="T:System.Windows.Media.Visual" />および関連する要素<see cref="T:System.Printing.PrintTicket" />と識別子をシリアル化<see cref="T:System.IO.Stream" />です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `printTicket`指定できます`null`印刷設定が存在しない場合。  
  
 このメソッドは、検証または変更はできません、指定された`printTicket`、特定の<xref:System.Printing.PrintQueue>します。  必要に応じて、使用、<xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=nameWithType>メソッドを作成、 <xref:System.Printing.PrintQueue>-特定<xref:System.Printing.PrintTicket>特定のプリンターに対して有効であります。  
  
 `userState`渡される、<xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler>ときに、<xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted>イベントが発生します。  
  
 出力<xref:System.IO.Stream>の書き込みの操作は通常を実装する派生クラスのコンス トラクターにパラメーターとして指定<xref:System.Windows.Documents.Serialization.SerializerWriter>です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WritingCancelled">
      <MemberSignature Language="C#" Value="public abstract event System.Windows.Documents.Serialization.WritingCancelledEventHandler WritingCancelled;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Documents.Serialization.WritingCancelledEventHandler WritingCancelled" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.Serialization.WritingCancelledEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>派生クラスでオーバーライドされると、発生したときに、<see cref="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync" />操作を実行します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WritingCompleted">
      <MemberSignature Language="C#" Value="public abstract event System.Windows.Documents.Serialization.WritingCompletedEventHandler WritingCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Documents.Serialization.WritingCompletedEventHandler WritingCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.Serialization.WritingCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>派生クラスでオーバーライドされると、書き込み操作が終了するときに発生します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WritingPrintTicketRequired">
      <MemberSignature Language="C#" Value="public abstract event System.Windows.Documents.Serialization.WritingPrintTicketRequiredEventHandler WritingPrintTicketRequired;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Documents.Serialization.WritingPrintTicketRequiredEventHandler WritingPrintTicketRequired" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Documents.Serialization.SerializerWriter.WritingPrintTicketRequired" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.Serialization.WritingPrintTicketRequiredEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>派生クラスでオーバーライドされると、発生する直前に、<see cref="T:System.Printing.PrintTicket" />でストリームに追加された、<see cref="Overload:System.Windows.Documents.Serialization.SerializerWriter.Write" />または<see cref="Overload:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync" />メソッドです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Documents.Serialization.SerializerWriter.WritingPrintTicketRequired>イベントにより、新しいの代わりに、イベント ハンドラー<xref:System.Printing.PrintTicket>で指定されているのため、<xref:System.Windows.Documents.Serialization.SerializerWriter.Write%2A>または<xref:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync%2A>メソッドの呼び出しです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WritingProgressChanged">
      <MemberSignature Language="C#" Value="public abstract event System.Windows.Documents.Serialization.WritingProgressChangedEventHandler WritingProgressChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Documents.Serialization.WritingProgressChangedEventHandler WritingProgressChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.Serialization.WritingProgressChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>派生クラスでオーバーライドされると、発生したときに、<see cref="T:System.Windows.Documents.Serialization.SerializerWriter" />その進行状況を更新します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 たとえば、<xref:System.Windows.Documents.Serialization.SerializerWriter>すべてのページの後に、または複数のドキュメントのすべてのドキュメントの書き込み操作後に、進行状況を更新する可能性があります。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
