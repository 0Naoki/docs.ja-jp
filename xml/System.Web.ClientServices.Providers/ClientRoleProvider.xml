<Type Name="ClientRoleProvider" FullName="System.Web.ClientServices.Providers.ClientRoleProvider">
  <TypeSignature Language="C#" Value="public class ClientRoleProvider : System.Web.Security.RoleProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ClientRoleProvider extends System.Web.Security.RoleProvider" />
  <TypeSignature Language="DocId" Value="T:System.Web.ClientServices.Providers.ClientRoleProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Security.RoleProvider</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Microsoft Ajax ロール サービスから Windows ベースのアプリケーションのロール情報を取得します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用するアプリケーションを構成することによって既存のロール サービスからロール情報を取得するクライアント アプリケーション サービスを使用することができます、<xref:System.Web.ClientServices.Providers.ClientRoleProvider>クラスです。 構成すると、認証されたユーザーが呼び出すことによって、特定のロールがかどうかを決定できます、<xref:System.Security.Principal.IPrincipal.IsInRole%2A>のメソッド、<xref:System.Security.Principal.IPrincipal>によって返される、 `static` <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType>プロパティです。 クライアント アプリケーション サービスを使用するように構成されたアプリケーションで、このプロパティは <xref:System.Web.ClientServices.ClientRolePrincipal> を返します。 このクラスは <xref:System.Security.Principal.IPrincipal> インターフェイスを実装しているため、明示的に参照する必要はありません。 <xref:System.Web.ClientServices.ClientRolePrincipal.IsInRole%2A?displayProperty=nameWithType>メソッドは内部的には、<xref:System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole%2A?displayProperty=nameWithType>メソッドです。  
  
 <xref:System.Web.ClientServices.Providers.ClientRoleProvider>クラスによって示される役割サービスから認証済みユーザーのロール情報を取得する読み取り専用のロールのメンバーシップ プロバイダーは、<xref:System.Web.ClientServices.Providers.ClientRoleProvider.ServiceUri%2A>プロパティです。 値、<xref:System.Web.ClientServices.Providers.ClientRoleProvider.ServiceUri%2A>プロパティは通常、アプリケーション構成ファイルからその他の構成値と共に取得します。 詳細については、「 [How to: Configure Client Application Services](~/docs/framework/common-client-technologies/how-to-configure-client-application-services.md)」を参照してください。  
  
 現在を取得する<xref:System.Web.ClientServices.Providers.ClientRoleProvider>を通じてインスタンス、 `static` <xref:System.Web.Security.Roles.Provider%2A?displayProperty=nameWithType>プロパティです。  
  
 <xref:System.Web.ClientServices.Providers.ClientRoleProvider>クラスのみでサポート、<xref:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser%2A>と<xref:System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole%2A>のメソッド、<xref:System.Web.Security.RoleProvider>抽象クラスです。 呼び出すとこれらのメソッドのいずれかの特定のユーザーに対して、サービス プロバイダーはまずローカル データ キャッシュのロール情報を確認します。 場合は、キャッシュにロール情報が含まれていないか、キャッシュの有効期限が切れた、サービス プロバイダーはロール サービスからロール情報を取得し、キャッシュに追加します。  
  
 クライアント アプリケーション サービスを構成するときに、ロールのキャッシュのタイムアウト期間を指定できます。 強制的に、<xref:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser%2A>を呼び出し、ローカル キャッシュではなく、サービスからロールのデータを取得する方法、<xref:System.Web.ClientServices.Providers.ClientRoleProvider.ResetCache%2A>メソッド最初。  
  
 使用することはできません、<xref:System.Web.ClientServices.Providers.ClientRoleProvider>クラスを作成または削除、役割またはユーザーのロールのメンバーシップを変更します。 ロール情報を作成または変更、サーバーの役割サービスの構成を変更する必要があります。  
  
   
  
## Examples  
 次のコード例では、このプロパティを使用して、役割サービスの場所をプログラムで設定する方法を示します。  
  
 [!code-csharp[ClientApplicationServices#302](~/samples/snippets/csharp/VS_Snippets_Winforms/ClientApplicationServices/CS/Class1.cs#302)]
 [!code-vb[ClientApplicationServices#302](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClientApplicationServices/VB/Class1.vb#302)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClientRoleProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.Providers.ClientRoleProvider.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.ClientServices.Providers.ClientRoleProvider" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddUsersToRoles">
      <MemberSignature Language="C#" Value="public override void AddUsersToRoles (string[] usernames, string[] roleNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void AddUsersToRoles(string[] usernames, string[] roleNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.Providers.ClientRoleProvider.AddUsersToRoles(System.String[],System.String[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernames" Type="System.String[]" />
        <Parameter Name="roleNames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="usernames">使用しません。</param>
        <param name="roleNames">使用しません。</param>
        <summary>このメソッドは、このクラスでは使用されません。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">常にスローされます。</exception>
      </Docs>
    </Member>
    <Member MemberName="ApplicationName">
      <MemberSignature Language="C#" Value="public override string ApplicationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationName" />
      <MemberSignature Language="DocId" Value="P:System.Web.ClientServices.Providers.ClientRoleProvider.ApplicationName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このプロパティは、このクラスでは使用されません。</summary>
        <value>プロバイダーのアプリケーションの名前。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティを設定しても効果はありません。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRole">
      <MemberSignature Language="C#" Value="public override void CreateRole (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void CreateRole(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.Providers.ClientRoleProvider.CreateRole(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">使用しません。</param>
        <summary>このメソッドは、このクラスでは使用されません。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">常にスローされます。</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteRole">
      <MemberSignature Language="C#" Value="public override bool DeleteRole (string roleName, bool throwOnPopulatedRole);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool DeleteRole(string roleName, bool throwOnPopulatedRole) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.Providers.ClientRoleProvider.DeleteRole(System.String,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
        <Parameter Name="throwOnPopulatedRole" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="roleName">使用しません。</param>
        <param name="throwOnPopulatedRole">使用しません。</param>
        <summary>このメソッドは、このクラスでは使用されません。</summary>
        <returns>該当なし。 このメソッドは、常に例外をスローします。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">常にスローされます。</exception>
      </Docs>
    </Member>
    <Member MemberName="FindUsersInRole">
      <MemberSignature Language="C#" Value="public override string[] FindUsersInRole (string roleName, string usernameToMatch);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] FindUsersInRole(string roleName, string usernameToMatch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.Providers.ClientRoleProvider.FindUsersInRole(System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
        <Parameter Name="usernameToMatch" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">使用しません。</param>
        <param name="usernameToMatch">使用しません。</param>
        <summary>このメソッドは、このクラスでは使用されません。</summary>
        <returns>該当なし。 このメソッドは、常に例外をスローします。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">常にスローされます。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetAllRoles">
      <MemberSignature Language="C#" Value="public override string[] GetAllRoles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] GetAllRoles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.Providers.ClientRoleProvider.GetAllRoles" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>このメソッドは、このクラスでは使用されません。</summary>
        <returns>該当なし。 このメソッドは、常に例外をスローします。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">常にスローされます。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetRolesForUser">
      <MemberSignature Language="C#" Value="public override string[] GetRolesForUser (string username);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] GetRolesForUser(string username) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">ロールを取得するユーザーの名前。</param>
        <summary>指定したユーザーが所属するロールの名前を取得します。</summary>
        <returns>ロールの名前を<paramref name="username" />に属しているか、ユーザーが認証されていない場合は空の配列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser%2A>メソッドで指定する必要があります現在、認証されたユーザーのロール情報を取得、`username`パラメーター。 ユーザーの名前を取得するには、、 `static` <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType>次のようにプロパティ:`Thread.CurrentPrincipal.Identity.Name`です。  
  
 サービス プロバイダーは、不要なサービスの呼び出しを避けるためにローカル ファイル システムの役割情報をキャッシュします。 詳細については、次を参照してください。、<xref:System.Web.ClientServices.Providers.ClientRoleProvider>クラスの概要です。  
  
   
  
## Examples  
 次のコード例では、このメソッドを使用して、ロールのメンバーシップをテストする前に、ユーザーのログインが有効期限が切れているかどうかを判断する方法を示します。 このコードでは、有効なユーザーすべてが 1 つまたは複数のロールに関連付けられていることを前提としています。 ここで、<xref:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser%2A>メソッドには、ログインの有効期限が切れた以前で認証されたユーザーのすべてのロールは返しません。 ユーザーのログインの有効期限が切れた場合、このコードは、ログイン ダイアログ ボックスを表示します。 それ以外の場合、呼び出し、<xref:System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole%2A>ユーザーが"manager"ロールにするかどうかを判断するメソッド。 制限付きのコードは、`PerformManagerTask`メソッドで、指定されていません。  
  
 [!code-csharp[ClientApplicationServices#321](~/samples/snippets/csharp/VS_Snippets_Winforms/ClientApplicationServices/CS/Class1.cs#321)]
 [!code-vb[ClientApplicationServices#321](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClientApplicationServices/VB/Class1.vb#321)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="username" /> は <see cref="F:System.String.Empty" /> または <see langword="null" /> です。  
  
 または  
  
 <paramref name="username" />現在の認証されたユーザーのユーザー名ではありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetUsersInRole">
      <MemberSignature Language="C#" Value="public override string[] GetUsersInRole (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] GetUsersInRole(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.Providers.ClientRoleProvider.GetUsersInRole(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">使用しません。</param>
        <summary>このメソッドは、このクラスでは使用されません。</summary>
        <returns>該当なし。 このメソッドは、常に例外をスローします。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">常にスローされます。</exception>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize (string name, System.Collections.Specialized.NameValueCollection config);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize(string name, class System.Collections.Specialized.NameValueCollection config) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.Providers.ClientRoleProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="config" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="name">プロバイダーのフレンドリ名。</param>
        <param name="config">このプロバイダーの構成で指定されたプロバイダーに固有の属性を表す名前/値ペアのコレクション。</param>
        <summary>プロバイダーを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)]機能拡張モデルの呼び出し、<xref:System.Web.ClientServices.Providers.ClientRoleProvider.Initialize%2A>初期化するメソッドを<xref:System.Web.ClientServices.Providers.ClientRoleProvider>アプリケーション構成ファイルに情報を使用します。 このメソッドは、次の役割サービスの構成属性を認識します。  
  
-   `name`  
  
-   `description`  
  
-   `cacheTimeout`  
  
-   `connectionStringName`  
  
-   `serviceUri`  
  
-   `honorCookieExpiry`  
  
 これらの属性の詳細については、次を参照してください。[する方法: クライアント アプリケーション サービスを構成する](~/docs/framework/common-client-technologies/how-to-configure-client-application-services.md)です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> は <see langword="null" /> です。  
  
 -または-  
  
 <paramref name="config" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> が空です。  
  
 または  
  
 <paramref name="config" />認識されない値が含まれています。</exception>
        <exception cref="T:System.InvalidOperationException">これは、<see cref="T:System.Web.ClientServices.Providers.ClientRoleProvider" />は既に初期化されています。</exception>
        <exception cref="T:System.FormatException">
          <paramref name="config" />含まれています、 <c>cacheTimeout</c>に変換するための正しい形式ではない値が、<see cref="T:System.Int32" />値。</exception>
        <exception cref="T:System.OverflowException">
          <paramref name="config" />含まれています、 <c>cacheTimeout</c>数値を表す値より小さい<see cref="F:System.Int32.MinValue" />以上<see cref="F:System.Int32.MaxValue" />です。</exception>
      </Docs>
    </Member>
    <Member MemberName="IsUserInRole">
      <MemberSignature Language="C#" Value="public override bool IsUserInRole (string username, string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsUserInRole(string username, string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole(System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">ユーザーの名前。</param>
        <param name="roleName">ロールの名前。</param>
        <summary>指定したユーザーが指定したロールに存在するかどうかを示す値を取得します。</summary>
        <returns>
          <see langword="true" />指定したユーザーが指定されたロールの場合<see langword="false" />か、指定したユーザーが認証されていないが、指定されたロールはありません。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 認証されたユーザーが呼び出すことによって、特定のロールがかどうかを判断できます、<xref:System.Security.Principal.IPrincipal.IsInRole%2A>のメソッド、<xref:System.Security.Principal.IPrincipal>によって返される、 `static` <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType>プロパティです。 クライアント アプリケーション サービスを使用するように構成されたアプリケーションで、このプロパティは <xref:System.Web.ClientServices.ClientRolePrincipal> を返します。 このクラスは <xref:System.Security.Principal.IPrincipal> インターフェイスを実装しているため、明示的に参照する必要はありません。 <xref:System.Web.ClientServices.ClientRolePrincipal.IsInRole%2A?displayProperty=nameWithType>メソッドは内部的には、<xref:System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole%2A>メソッドです。 <xref:System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole%2A>メソッドを使用、<xref:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser%2A>メソッドによって、ユーザーが示されるかどうかを決定する`username`がによって示されるロール`roleName`です。  
  
 サービス プロバイダーは、不要なサービスの呼び出しを避けるためにローカル ファイル システムの役割情報をキャッシュします。 詳細については、次を参照してください。、<xref:System.Web.ClientServices.Providers.ClientRoleProvider>クラスの概要です。  
  
   
  
## Examples  
 次のコード例では、ユーザーが、特定のロールがかどうかを判断するには、直接このメソッドにアクセスする方法を示します。 このコードは、まず、ユーザーのログインの有効期限が切れたかどうかをテストします。 明示的な<xref:System.Web.ClientServices.Providers.ClientRoleProvider>参照は呼び出しに必要な<xref:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser%2A>メソッドを呼び出して、同じ参照が使用されるため、<xref:System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole%2A>メソッドです。 このコードを呼び出す場合は、ユーザーが"manager"ロールの場合、`PerformManagerTask`メソッドで、指定されていません。  
  
 [!code-csharp[ClientApplicationServices#321](~/samples/snippets/csharp/VS_Snippets_Winforms/ClientApplicationServices/CS/Class1.cs#321)]
 [!code-vb[ClientApplicationServices#321](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClientApplicationServices/VB/Class1.vb#321)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="username" /> は <see cref="F:System.String.Empty" /> または <see langword="null" /> です。  
  
 または  
  
 <paramref name="username" />現在の認証されたユーザーのユーザー名ではありません。</exception>
        <exception cref="T:System.Net.WebException">ユーザーは認証されなくなります。  
  
 または  
  
 役割サービスは使用できません。</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveUsersFromRoles">
      <MemberSignature Language="C#" Value="public override void RemoveUsersFromRoles (string[] usernames, string[] roleNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RemoveUsersFromRoles(string[] usernames, string[] roleNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.Providers.ClientRoleProvider.RemoveUsersFromRoles(System.String[],System.String[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernames" Type="System.String[]" />
        <Parameter Name="roleNames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="usernames">使用しません。</param>
        <param name="roleNames">使用しません。</param>
        <summary>このメソッドは、このクラスでは使用されません。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">常にスローされます。</exception>
      </Docs>
    </Member>
    <Member MemberName="ResetCache">
      <MemberSignature Language="C#" Value="public void ResetCache ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetCache() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.Providers.ClientRoleProvider.ResetCache" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>キャッシュされたロール情報をクリアし、キャッシュのタイムアウト期間をリセットします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.ClientServices.Providers.ClientRoleProvider.ResetCache%2A>メソッドは、ローカル キャッシュからすべてのロール情報を削除し、により、キャッシュは期限切れにします。 このメソッドを呼び出した後、次へ呼び出し、<xref:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser%2A>または<xref:System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole%2A>メソッドは、ローカル キャッシュではなく、構成済みのロール サービスからロール情報を取得します。  
  
 このメソッドを使用すると、ユーザーが各自のロールが変更されていて、キャッシュがまだ失効していないときに、ロール キャッシュを更新できるようにします。 ロール キャッシュ タイムアウト間隔を設定する方法については、次を参照してください。[する方法: クライアント アプリケーション サービスを構成する](~/docs/framework/common-client-technologies/how-to-configure-client-application-services.md)です。  
  
   
  
## Examples  
 次のコード例では、このメソッドを使用して、ロールのローカル キャッシュをリセットする方法を示します。  
  
 [!code-csharp[ClientApplicationServices#314](~/samples/snippets/csharp/VS_Snippets_Winforms/ClientApplicationServices/CS/Class1.cs#314)]
 [!code-vb[ClientApplicationServices#314](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClientApplicationServices/VB/Class1.vb#314)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RoleExists">
      <MemberSignature Language="C#" Value="public override bool RoleExists (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool RoleExists(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.Providers.ClientRoleProvider.RoleExists(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">使用しません。</param>
        <summary>このメソッドは、このクラスでは使用されません。</summary>
        <returns>該当なし。 このメソッドは、常に例外をスローします。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">常にスローされます。</exception>
      </Docs>
    </Member>
    <Member MemberName="ServiceUri">
      <MemberSignature Language="C#" Value="public string ServiceUri { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ServiceUri" />
      <MemberSignature Language="DocId" Value="P:System.Web.ClientServices.Providers.ClientRoleProvider.ServiceUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または役割サービスの URI を設定します。</summary>
        <value>役割サービス URI。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 設定することができます、<xref:System.Web.ClientServices.Providers.ClientRoleProvider.ServiceUri%2A>アプリケーション コードがプロパティでは、アプリケーション構成ファイルでの値を設定して通常されます。 これにより、コードを再コンパイルしなくても、サービスの場所を変更することができます。 詳細については、「 [How to: Configure Client Application Services](~/docs/framework/common-client-technologies/how-to-configure-client-application-services.md)」を参照してください。  
  
 サービスの場所をプログラムで設定すると、"Role_JSON_AppService.axd"で終わるは常に、URI の完全なサービスを指定する必要があります。  
  
   
  
## Examples  
 次のコード例では、このプロパティを使用して、役割サービスの場所をプログラムで設定する方法を示します。  
  
 [!code-csharp[ClientApplicationServices#302](~/samples/snippets/csharp/VS_Snippets_Winforms/ClientApplicationServices/CS/Class1.cs#302)]
 [!code-vb[ClientApplicationServices#302](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClientApplicationServices/VB/Class1.vb#302)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">このプロパティを取得するときに、サービス URI が見つからず、アプリケーション構成ファイルで、このプロパティが以前に設定されていません。</exception>
      </Docs>
    </Member>
  </Members>
</Type>
