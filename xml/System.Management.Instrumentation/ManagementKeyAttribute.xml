<Type Name="ManagementKeyAttribute" FullName="System.Management.Instrumentation.ManagementKeyAttribute">
  <TypeSignature Language="C#" Value="public sealed class ManagementKeyAttribute : System.Management.Instrumentation.ManagementMemberAttribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ManagementKeyAttribute extends System.Management.Instrumentation.ManagementMemberAttribute" />
  <TypeSignature Language="DocId" Value="T:System.Management.Instrumentation.ManagementKeyAttribute" />
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Management.Instrumentation.ManagementMemberAttribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Property | System.AttributeTargets.Field, AllowMultiple=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>ManagementKey 属性は WMI クラスのキー プロパティを識別します。  
  
 注: WMI .NET ライブラリは最終的な状態と見なされます。これらのライブラリに影響を与えるセキュリティ以外に関連する問題については、さらなる開発、機能拡張、または更新は利用できません。 [MI Api](https://msdn.microsoft.com/en-us/library/jj152383%28v=vs.80%29.aspx)すべての新しい開発で使用する必要があります。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 WMI クラスがシングルトンでない限り、複数の対応するインスタンスを持つ、ことができます。 クラスのクライアントは、関心のある特定のインスタンスを一意に識別できる必要があります。 したがって、プロバイダーの作成者は、プロパティまたは各 WMI クラスのインスタンスを一意に識別するプロパティのセットを選択する必要があります。 使用する、<xref:System.Management.Instrumentation.ManagementKeyAttribute>属性をこれらのキー プロパティを指定します。 プロパティにキーがある、実行時と同じ動作によって示される読み取り専用のプロパティを識別、<xref:System.Management.Instrumentation.ManagementProbeAttribute>属性。  
  
   
  
## Examples  
 次の例を使用する方法を示しています、 <xref:System.Management.Instrumentation.ManagementKeyAttribute> WMI クラスのキー プロパティとしてフィールドをマークします。  
  
```csharp  
[ManagementKey]  
public int id;  
```  
  
 次の例では、使用する方法、 <xref:System.Management.Instrumentation.ManagementKeyAttribute> WMI クラスのキー プロパティをマークする属性。  
  
```csharp  
// Use the ManagementKey attribute to specify that this property   
// is used as the key identifier of this class and for the WMI  
// instances of this class.  This property must be unique for each  
// class instance.  
[ManagementKey]  
public int Id  
{  
    get { return System.Diagnostics.Process.GetCurrentProcess().Id; }  
}  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementKeyAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Instrumentation.ManagementKeyAttribute.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Management.ManagementKeyAttribute" /> クラスの新しいインスタンスを初期化します。 これは、既定のコンス トラクターです。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
