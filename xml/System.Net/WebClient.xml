<Type Name="WebClient" FullName="System.Net.WebClient">
  <TypeSignature Language="C#" Value="public class WebClient : System.ComponentModel.Component" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebClient extends System.ComponentModel.Component" />
  <TypeSignature Language="DocId" Value="T:System.Net.WebClient" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net.WebClient</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>データを送信し、URI で識別されるリソースからデータを受信側の共通のメソッドを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebClient>クラスは、データを送信するか、ローカル、イントラネット、または URI で識別されるインターネット リソースからデータを受信用の共通のメソッドを提供します。  
  
 <xref:System.Net.WebClient>クラスの使用、<xref:System.Net.WebRequest>リソースへのアクセスを提供するクラス。 <xref:System.Net.WebClient>インスタンスがいずれかを使用してデータにアクセスできる<xref:System.Net.WebRequest>に登録されている子孫、<xref:System.Net.WebRequest.RegisterPrefix%2A?displayProperty=nameWithType>メソッドです。  
  
> [!NOTE]
>  既定では、.NET Framework でサポートで始まる Uri `http:`、 `https:`、ftp: および`file:`スキームの識別子。  
  
 次の表<xref:System.Net.WebClient>リソースにデータをアップロードするためのメソッドです。  
  
|メソッド|説明|  
|------------|-----------------|  
|<xref:System.Net.WebClient.OpenWrite%2A>|取得、<xref:System.IO.Stream>リソースにデータを送信するために使用します。|  
|<xref:System.Net.WebClient.OpenWriteAsync%2A>|取得、<xref:System.IO.Stream>呼び出し元のスレッドをブロックすることがなく、リソースにデータを送信するために使用します。|  
|<xref:System.Net.WebClient.UploadData%2A>|バイト配列をリソースに送信し、返します、<xref:System.Byte>すべての応答を含む配列。|  
|<xref:System.Net.WebClient.UploadDataAsync%2A>|送信、<xref:System.Byte>呼び出し元のスレッドをブロックすることがなく、リソースへの配列。|  
|<xref:System.Net.WebClient.UploadFile%2A>|ローカル ファイルをリソースに送信し、返します、<xref:System.Byte>すべての応答を含む配列。|  
|<xref:System.Net.WebClient.UploadFileAsync%2A>|呼び出し元のスレッドをブロックすることがなく、リソースをローカル ファイルを送信します。|  
|<xref:System.Net.WebClient.UploadValues%2A>|送信、<xref:System.Collections.Specialized.NameValueCollection>リソースを返す、<xref:System.Byte>すべての応答を含む配列。|  
|<xref:System.Net.WebClient.UploadValuesAsync%2A>|送信、<xref:System.Collections.Specialized.NameValueCollection>リソースを返す、<xref:System.Byte>呼び出し元のスレッドをブロックすることがなく、すべての応答を含む配列。|  
|<xref:System.Net.WebClient.UploadString%2A>|送信、<xref:System.String>呼び出し元のスレッドをブロックすることがなく、リソースにします。|  
|<xref:System.Net.WebClient.UploadStringAsync%2A>|送信、<xref:System.String>呼び出し元のスレッドをブロックすることがなく、リソースにします。|  
  
 次の表<xref:System.Net.WebClient>リソースからデータをダウンロードするためのメソッドです。  
  
|メソッド|説明|  
|------------|-----------------|  
|<xref:System.Net.WebClient.OpenRead%2A>|リソースからデータを返します、<xref:System.IO.Stream>です。|  
|<xref:System.Net.WebClient.OpenReadAsync%2A>|呼び出し元のスレッドをブロックすることがなく、リソースからデータを返します。|  
|<xref:System.Net.WebClient.DownloadData%2A>|リソースからデータをダウンロードしを返します、<xref:System.Byte>配列。|  
|<xref:System.Net.WebClient.DownloadDataAsync%2A>|リソースからデータをダウンロードしを返します、<xref:System.Byte>呼び出し元のスレッドをブロックすることがなくの配列。|  
|<xref:System.Net.WebClient.DownloadFile%2A>|リソースからローカル ファイルにデータをダウンロードします。|  
|<xref:System.Net.WebClient.DownloadFileAsync%2A>|呼び出し元のスレッドをブロックすることがなく、データをリソースからローカル ファイルにダウンロードします。|  
|<xref:System.Net.WebClient.DownloadString%2A>|ダウンロード、<xref:System.String>からリソースを返す、<xref:System.String>です。|  
|<xref:System.Net.WebClient.DownloadStringAsync%2A>|ダウンロード、<xref:System.String>呼び出し元のスレッドをブロックすることがなく、リソースからです。|  
  
 使用することができます、<xref:System.Net.WebClient.CancelAsync%2A>メソッドを完了していない非同期操作をキャンセルします。  
  
 A<xref:System.Net.WebClient>インスタンスは、既定では省略可能な HTTP ヘッダーを送信しません。 要求は、省略可能なヘッダーを必要とする場合は、ヘッダーを追加する必要があります、<xref:System.Net.WebClient.Headers%2A>コレクション。 たとえば、応答内のクエリを保持するには、user-agent ヘッダーを追加する必要があります。 また、ユーザー エージェントのヘッダーが見つからない場合は、サーバーは 500 (内部サーバー エラー) を返す可能性があります。  
  
 <xref:System.Net.HttpWebRequest.AllowAutoRedirect%2A>設定されている`true`で<xref:System.Net.WebClient>インスタンス。  
  
   
  
## Examples  
 次のコード例は、リソースの URI を使用し、それを取得、応答を表示します。  
  
 [!code-cpp[NCLWebClientUserAgent#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientUserAgent/CPP/useragent.cpp#1)]
 [!code-csharp[NCLWebClientUserAgent#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientUserAgent/CS/useragent.cs#1)]
 [!code-vb[NCLWebClientUserAgent#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientUserAgent/VB/useragent.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Net.WebPermission">要求された URI またはに要求をリダイレクトする任意の URI にアクセスします。 関連する列挙値:<see cref="F:System.Net.NetworkAccess.Connect" />です。</permission>
    <block subset="none" type="overrides">
      <para>派生クラスの基本クラス実装を呼び出す必要があります<see cref="T:System.Net.WebClient" />期待どおりに動作を派生クラスを確認します。</para>
    </block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebClient ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Net.WebClient" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 既定のコンス トラクターの新しいインスタンスを作成する、<xref:System.Net.WebClient>クラスです。 既定の HTTP メソッドは、GET です。 既定の FTP メソッドは、RETR です。 既定値 <xref:System.Net.WebClient.Encoding%2A> は <xref:System.Text.Encoding.Default%2A> です。 <xref:System.Net.HttpWebRequest.AllowAutoRedirect%2A> の既定値は `true` です。  
  
   
  
## Examples  
 次のコード例を作成、<xref:System.Net.WebClient>インスタンス化しを使用してそれをサーバーからデータをダウンロードして、システム コンソールに表示するサーバーからデータをダウンロードしたり、ファイルに書き込むとフォーム値をサーバーにアップロードし、応答を受信します。  
  
 [!code-cpp[WebClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient/CPP/webclient.cpp#1)]
 [!code-csharp[WebClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient/CS/webclient.cs#1)]
 [!code-vb[WebClient#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient/VB/webclient.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowReadStreamBuffering">
      <MemberSignature Language="C#" Value="public bool AllowReadStreamBuffering { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowReadStreamBuffering" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebClient.AllowReadStreamBuffering" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定については、インターネット リソースから読み取ったデータをバッファリングするかどうかを示す値、<see cref="T:System.Net.WebClient" />インスタンス。</summary>
        <value><see cref="T:System.Boolean" /> を返します。  
  
 インターネット リソースから受信したデータのバッファリングを有効にする場合は <see langword="true" />。バッファリングを無効にする場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ときに、<xref:System.Net.WebClient.AllowReadStreamBuffering%2A>プロパティは`true`、バッファーされるデータはメモリ内では、アプリが読み取ることができるようにします。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowWriteStreamBuffering">
      <MemberSignature Language="C#" Value="public bool AllowWriteStreamBuffering { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowWriteStreamBuffering" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebClient.AllowWriteStreamBuffering" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはインターネット リソースに書き込まれたデータをバッファーするかどうかを示す値を設定、<see cref="T:System.Net.WebClient" />インスタンス。</summary>
        <value><see cref="T:System.Boolean" /> を返します。  
  
 <see langword="true" />インターネット リソースに書き込まれたデータのバッファリングを有効にするには<see langword="false" />バッファリングを無効にします。 既定値は、<see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ときに、<xref:System.Net.WebClient.AllowWriteStreamBuffering%2A>プロパティは`true`、大きな単位でインターネット リソースをより効率的に書き込まれることができますので、データがメモリにバッファリングされています。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseAddress">
      <MemberSignature Language="C#" Value="public string BaseAddress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BaseAddress" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebClient.BaseAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定によって行われる要求のベース URI、<see cref="T:System.Net.WebClient" />です。</summary>
        <value>A<see cref="T:System.String" />によって行われる要求のベース URI を含む、<see cref="T:System.Net.WebClient" />または<see cref="F:System.String.Empty" />ベース アドレスが指定されていない場合。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebClient.BaseAddress%2A>プロパティが相対アドレスと結合するベース URI が含まれています。 アップロードまたは、データをダウンロードするメソッドを呼び出すと、<xref:System.Net.WebClient>オブジェクトは、メソッドの呼び出しで指定する相対アドレスを持つこのベース URI を結合します。 絶対 URI を指定する場合<xref:System.Net.WebClient>使用しない、<xref:System.Net.WebClient.BaseAddress%2A>プロパティの値。  
  
 以前に設定を削除する値をこのプロパティを設定`null`または空の文字列 ("") です。  
  
   
  
## Examples  
 次のコード例では、インターネット サーバーからデータをダウンロードし、それをコンソールに表示します。 されて (http://www.contoso.com など)、サーバーのアドレスがあると想定`hostUri`こと (/default.htm) などのリソースへのパスが`uriSuffix`です。  
  
 [!code-cpp[WebClient_BaseAddress_ResponseHeaders#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient_BaseAddress_ResponseHeaders/CPP/webclient_baseaddress_responseheaders.cpp#1)]
 [!code-csharp[WebClient_BaseAddress_ResponseHeaders#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient_BaseAddress_ResponseHeaders/CS/webclient_baseaddress_responseheaders.cs#1)]
 [!code-vb[WebClient_BaseAddress_ResponseHeaders#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient_BaseAddress_ResponseHeaders/VB/webclient_baseaddress_responseheaders.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <see cref="P:System.Net.WebClient.BaseAddress" />無効な URI に設定されます。 内部例外には、エラーを特定するのに役立つ情報を含めることがあります。</exception>
      </Docs>
    </Member>
    <Member MemberName="CachePolicy">
      <MemberSignature Language="C#" Value="public System.Net.Cache.RequestCachePolicy CachePolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Cache.RequestCachePolicy CachePolicy" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebClient.CachePolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Cache.RequestCachePolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この WebClient インスタンスを使用して取得したすべてのリソースのキャッシュ ポリシーをアプリケーションの設定を取得または<see cref="T:System.Net.WebRequest" />オブジェクト。</summary>
        <value>A<see cref="T:System.Net.Cache.RequestCachePolicy" />のキャッシュ要件をアプリケーションを表すオブジェクト。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelAsync">
      <MemberSignature Language="C#" Value="public void CancelAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CancelAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.CancelAsync" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>保留中の非同期操作をキャンセルします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 操作が保留中の場合は、このメソッドを呼び出す<xref:System.Net.WebRequest.Abort%2A>、基になるで<xref:System.Net.WebRequest>です。  
  
 呼び出すと<xref:System.Net.WebClient.CancelAsync%2A>アプリケーションでは、操作に関連付けられている完了イベントが受信します。 たとえば、呼び出す<xref:System.Net.WebClient.CancelAsync%2A>を取り消す、<xref:System.Net.WebClient.DownloadStringAsync%2A>のイベント ハンドラーを指定した場合は、操作、<xref:System.Net.WebClient.DownloadStringCompleted>イベント、イベント ハンドラーが、操作が終了した通知を受信します。 については、操作を正常に完了するかどうか、確認、<xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A>の基本クラスのプロパティで<xref:System.Net.DownloadDataCompletedEventArgs>データ オブジェクトが、イベント ハンドラーに渡されるイベント。  
  
 非同期操作が進行中でない場合は、このメソッドは何も行いません。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Credentials">
      <MemberSignature Language="C#" Value="public System.Net.ICredentials Credentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.ICredentials Credentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebClient.Credentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.ICredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはホストに送信され、要求を認証するために使用されるネットワーク資格情報を設定します。</summary>
        <value><see cref="T:System.Net.ICredentials" />要求の認証の資格情報を格納します。 既定値は、<see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebClient.Credentials%2A>プロパティには、ホスト上のリソースにアクセスするために使用する認証の資格情報が含まれています。 ほとんどのクライアント側のシナリオで使用する必要があります、 <xref:System.Net.CredentialCache.DefaultCredentials%2A>、これは、現在ログオンしているユーザーの資格情報。 これを行うには、設定、<xref:System.Net.WebClient.UseDefaultCredentials%2A>プロパティを`true`このプロパティを設定する代わりにします。  
  
 場合、<xref:System.Net.WebClient>クラスは、ASP.NET アプリケーションなどの中間層アプリケーションで使用されている、 <xref:System.Net.CredentialCache.DefaultCredentials%2A> ASP ページ (サーバー側の資格情報) を実行しているアカウントに属しています。 通常、に代わって、要求したクライアントの資格情報をこのプロパティを設定します。  
  
 セキュリティ上の理由から、自動的に次のリダイレクト時でリダイレクトの対象にするための資格情報を格納、<xref:System.Net.CredentialCache>し、このプロパティに割り当てます。 このプロパティが自動的に設定されます`null`以外のものが含まれている場合のリダイレクト時に、<xref:System.Net.CredentialCache>です。 自動的に設定するこのプロパティの値を持つ`null`これらの条件下で、意図しない先に送信されない資格情報を防止します。
  
## Examples  
 次のコード例では、ユーザーのシステム資格情報を使用して、要求を認証します。  
  
 [!code-cpp[WebClientAuthentication#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClientAuthentication/CPP/webclientauth.cpp#1)]
 [!code-csharp[WebClientAuthentication#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClientAuthentication/CS/webclientauth.cs#1)]
 [!code-vb[WebClientAuthentication#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClientAuthentication/VB/webclientauth.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DownloadData">
      <MemberSignature Language="C#" Value="public byte[] DownloadData (string address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] DownloadData(string address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadData(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">データのダウンロード元の URI。</param>
        <summary>としてリソースをダウンロード、<see cref="T:System.Byte" />指定された URI からの配列。</summary>
        <returns>A<see cref="T:System.Byte" />ダウンロードしたリソースを含む配列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebClient.DownloadData%2A>メソッドで指定された URI を持つリソースのダウンロード、`address`パラメーター。 このメソッドは、リソースのダウンロード中にブロックしています。 リソースをダウンロードして、サーバーの応答の待機中に実行を続行のいずれかの操作を使用して、<xref:System.Net.WebClient.DownloadDataAsync%2A>メソッドです。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティが空の文字列 ("") と`address`は絶対 URI が含まれていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>要求されたデータの絶対 URI を作成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティが空の文字列ではないに追加されます`address`です。  
  
 このメソッドは、RETR コマンドを使用して、FTP リソースをダウンロードします。 HTTP リソースでは、GET メソッドを使用します。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。 [.NET Framework のネットワークのトレース](~/docs/framework/network-programming/network-tracing.md)です。  
  
   
  
## Examples  
 次のコード例では、サーバーからデータを要求し、返されるデータを表示します。 いるものと`remoteUri`要求されたデータに有効な URI が含まれています。  
  
 [!code-cpp[WebClient_DownloadData#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient_DownloadData/CPP/webclient_downloaddata.cpp#1)]
 [!code-csharp[WebClient_DownloadData#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient_DownloadData/CS/webclient_downloaddata.cs#1)]
 [!code-vb[WebClient_DownloadData#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient_DownloadData/VB/webclient_downloaddata.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="address" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">結合して形成された URI<see cref="P:System.Net.WebClient.BaseAddress" />と<paramref name="address" />が無効です。  
  
 または  
  
 データのダウンロード中にエラーが発生しました。</exception>
        <exception cref="T:System.NotSupportedException">メソッドは複数のスレッドで同時に呼び出されました。</exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadData">
      <MemberSignature Language="C#" Value="public byte[] DownloadData (Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] DownloadData(class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadData(System.Uri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="address">によって表される URI、<see cref="T:System.Uri" />データをダウンロードする元のオブジェクト。</param>
        <summary>としてリソースをダウンロード、<see cref="T:System.Byte" />指定された URI からの配列。</summary>
        <returns>A<see cref="T:System.Byte" />ダウンロードしたリソースを含む配列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebClient.DownloadData%2A>メソッドで指定された URI を持つリソースのダウンロード、`address`パラメーター。 このメソッドは、リソースのダウンロード中にブロックしています。 リソースをダウンロードして、サーバーの応答の待機中に実行を続行のいずれかの操作を使用して、<xref:System.Net.WebClient.DownloadDataAsync%2A>メソッドです。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティが空の文字列 ("") と`address`は絶対 URI が含まれていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>要求されたデータの絶対 URI を作成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティが空の文字列ではないに追加されます`address`です。  
  
 このメソッドは、RETR コマンドを使用して、FTP リソースをダウンロードします。 HTTP リソースでは、GET メソッドを使用します。  
  
 **注**このメンバーは、アプリケーションでネットワーク トレースを有効にする場合にトレース情報を出力します。 詳細については、次を参照してください。 [.NET Framework のネットワークのトレース](~/docs/framework/network-programming/network-tracing.md)です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="address" /> パラメーターが <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadDataAsync">
      <MemberSignature Language="C#" Value="public void DownloadDataAsync (Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DownloadDataAsync(class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadDataAsync(System.Uri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="address">A<see cref="T:System.Uri" />をダウンロードする URI を格納します。</param>
        <summary>としてリソースをダウンロード、<see cref="T:System.Byte" />非同期操作として指定された URI からの配列。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドで指定した URI スキームに関連付けられているプロトコルの既定の方法を使用して、指定したリソースを取得する`address`です。 データは、スレッド プールから自動的に割り当てられているスレッド リソースを使用して非同期的にダウンロードされます。  
  
 このメソッドは、リソースのダウンロード中に呼び出し元のスレッドをブロックしません。 サーバーの応答の待機中にダウンロードは、リソースおよびブロックを使用してのいずれかの操作を使用して、<xref:System.Net.WebClient.DownloadData%2A>メソッドです。 ダウンロードが完了したら、<xref:System.Net.WebClient.DownloadDataCompleted>イベントが発生します。 アプリケーションでは、通知を受信するには、このイベントを処理する必要があります。 ダウンロードされたデータで使用できる、<xref:System.Net.DownloadDataCompletedEventArgs.Result%2A>プロパティです。  
  
 使用することができます、<xref:System.Net.WebClient.CancelAsync%2A>メソッドを完了していない非同期操作をキャンセルします。  
  
 このメソッドは、RETR コマンドを使用して、FTP リソースをダウンロードします。 HTTP リソースでは、GET メソッドを使用します。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティが空の文字列 ("") と`address`は絶対 URI が含まれていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>要求されたデータの絶対 URI を作成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティが空の文字列ではないに追加されます`address`です。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。 [.NET Framework のネットワークのトレース](~/docs/framework/network-programming/network-tracing.md)です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="address" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">結合して形成された URI<see cref="P:System.Net.WebClient.BaseAddress" />と<paramref name="address" />が無効です。  
  
 または  
  
 リソースのダウンロード中にエラーが発生しました。</exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadDataAsync">
      <MemberSignature Language="C#" Value="public void DownloadDataAsync (Uri address, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DownloadDataAsync(class System.Uri address, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadDataAsync(System.Uri,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="address">A<see cref="T:System.Uri" />をダウンロードする URI を格納します。</param>
        <param name="userToken">非同期操作の完了時に呼び出されるメソッドに渡されるユーザー定義のオブジェクト。</param>
        <summary>としてリソースをダウンロード、<see cref="T:System.Byte" />非同期操作として指定された URI からの配列。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドで指定した URI スキームに関連付けられているプロトコルの既定の方法を使用して、指定したリソースを取得する`address`です。 データは、スレッド プールから自動的に割り当てられているスレッド リソースを使用して非同期的にダウンロードされます。  
  
 このメソッドは、リソースのダウンロード中に呼び出し元のスレッドをブロックしません。 サーバーの応答の待機中にダウンロードは、リソースおよびブロックを使用してのいずれかの操作を使用して、<xref:System.Net.WebClient.DownloadData%2A>メソッドです。 ダウンロードが完了したら、<xref:System.Net.WebClient.DownloadDataCompleted>イベントが発生します。 アプリケーションでは、通知を受信するには、このイベントを処理する必要があります。 ダウンロードされたデータで使用できる、<xref:System.Net.DownloadDataCompletedEventArgs.Result%2A>プロパティです。  
  
 使用することができます、<xref:System.Net.WebClient.CancelAsync%2A>メソッドを完了していない非同期操作をキャンセルします。  
  
 このメソッドは、RETR コマンドを使用して、FTP リソースをダウンロードします。 HTTP リソースでは、GET メソッドを使用します。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティが空の文字列 ("") と`address`は絶対 URI が含まれていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>要求されたデータの絶対 URI を作成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティが空の文字列ではないに追加されます`address`です。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。 [.NET Framework のネットワークのトレース](~/docs/framework/network-programming/network-tracing.md)です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="address" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">結合して形成された URI<see cref="P:System.Net.WebClient.BaseAddress" />と<paramref name="address" />が無効です。  
  
 または  
  
 リソースのダウンロード中にエラーが発生しました。</exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadDataCompleted">
      <MemberSignature Language="C#" Value="public event System.Net.DownloadDataCompletedEventHandler DownloadDataCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Net.DownloadDataCompletedEventHandler DownloadDataCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Net.WebClient.DownloadDataCompleted" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.DownloadDataCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>非同期のデータのダウンロード操作が完了したときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このイベントは、非同期のデータのダウンロード操作が完了するたびにでは発生します。 非同期のデータのダウンロードが呼び出すことによって開始された、<xref:System.Net.WebClient.DownloadDataAsync%2A>メソッドです。  
  
 <xref:System.Net.DownloadDataCompletedEventHandler>は、このイベントのデリゲート。 <xref:System.Net.DownloadDataCompletedEventArgs>クラスには、イベント データを持つイベント ハンドラーが用意されています。  
  
 イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。  
  
   
  
## Examples  
 次のコード例では、このイベントのイベント ハンドラーの設定を示します。  
  
 [!code-cpp[NCLWebClientAsync#21](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#21)]
 [!code-csharp[NCLWebClientAsync#21](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#21)]
 [!code-vb[NCLWebClientAsync#21](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DownloadDataTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; DownloadDataTaskAsync (string address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; DownloadDataTaskAsync(string address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadDataTaskAsync(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">ダウンロードするリソースの URI。</param>
        <summary>としてリソースをダウンロード、<see cref="T:System.Byte" />タスク オブジェクトを使用して非同期操作として指定された URI からの配列。</summary>
        <returns><see cref="T:System.Threading.Tasks.Task`1" /> を返します。  
  
 非同期操作を表すタスク オブジェクト。 <see cref="P:System.Threading.Tasks.Task`1.Result" />タスク オブジェクトのプロパティを返します、<see cref="T:System.Byte" />ダウンロードしたリソースを含む配列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この操作はブロックされません。 返された<xref:System.Threading.Tasks.Task%601>オブジェクトは、データのリソースがダウンロードした後に完了します。  
  
 このメソッドで指定した URI スキームに関連付けられているプロトコルの既定の方法を使用して、指定されたリソースの取得、`address`パラメーター。 データは、スレッド プールから自動的に割り当てられているスレッド リソースを使用して非同期的にダウンロードされます。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティが空の文字列 ("") と`address`は絶対 URI が含まれていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>要求されたデータの絶対 URI を作成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティが空の文字列ではないに追加されます`address`です。  
  
 このメソッドは、RETR コマンドを使用して、FTP リソースをダウンロードします。 HTTP リソースでは、GET メソッドを使用します。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。 [.NET Framework のネットワークのトレース](~/docs/framework/network-programming/network-tracing.md)です。  
  
 次のコード例では、サーバーからデータを要求し、返されるデータを表示します。 いるものと`remoteUri`要求されたデータに有効な URI が含まれています。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="address" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">結合して形成された URI<see cref="P:System.Net.WebClient.BaseAddress" />と<paramref name="address" />が無効です。  
  
 または  
  
 リソースのダウンロード中にエラーが発生しました。</exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadDataTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; DownloadDataTaskAsync (Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; DownloadDataTaskAsync(class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadDataTaskAsync(System.Uri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="address">ダウンロードするリソースの URI。</param>
        <summary>としてリソースをダウンロード、<see cref="T:System.Byte" />タスク オブジェクトを使用して非同期操作として指定された URI からの配列。</summary>
        <returns><see cref="T:System.Threading.Tasks.Task`1" /> を返します。  
  
 非同期操作を表すタスク オブジェクト。 <see cref="P:System.Threading.Tasks.Task`1.Result" />タスク オブジェクトのプロパティを返します、<see cref="T:System.Byte" />ダウンロードしたリソースを含む配列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この操作はブロックされません。 返された<xref:System.Threading.Tasks.Task%601>オブジェクトは、データのリソースがダウンロードした後に完了します。  
  
 このメソッドで指定した URI スキームに関連付けられているプロトコルの既定の方法を使用して、指定されたリソースの取得、`address`パラメーター。 データは、スレッド プールから自動的に割り当てられているスレッド リソースを使用して非同期的にダウンロードされます。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティが空の文字列 ("") と`address`は絶対 URI が含まれていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>要求されたデータの絶対 URI を作成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティが空の文字列ではないに追加されます`address`です。  
  
 このメソッドは、RETR コマンドを使用して、FTP リソースをダウンロードします。 HTTP リソースでは、GET メソッドを使用します。  
  
 **注**このメンバーは、アプリケーションでネットワーク トレースを有効にする場合にトレース情報を出力します。 詳細については、次を参照してください。 [.NET Framework のネットワークのトレース](~/docs/framework/network-programming/network-tracing.md)です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="address" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">結合して形成された URI<see cref="P:System.Net.WebClient.BaseAddress" />と<paramref name="address" />が無効です。  
  
 または  
  
 リソースのダウンロード中にエラーが発生しました。</exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (string address, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DownloadFile(string address, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadFile(System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">データのダウンロード元の URI。</param>
        <param name="fileName">データを受信するローカル ファイルの名前。</param>
        <summary>ローカル ファイルには、指定した URI にリソースをダウンロードします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebClient.DownloadFile%2A>メソッドがで指定された URI からローカル ファイル データをダウンロード、`address`パラメーター。 このメソッドは、リソースのダウンロード中にブロックしています。 リソースをダウンロードして、サーバーの応答の待機中に実行を続行のいずれかの操作を使用して、<xref:System.Net.WebClient.DownloadFileAsync%2A>メソッドです。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティが空の文字列 ("") と`address`は絶対 URI が含まれていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>要求されたデータの絶対 URI を作成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティが空の文字列ではないに追加されます`address`です。  
  
 このメソッドは、RETR コマンドを使用して、FTP リソースをダウンロードします。 HTTP リソースでは、GET メソッドを使用します。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。 [.NET Framework のネットワークのトレース](~/docs/framework/network-programming/network-tracing.md)です。  
  
 ASP.NET ページなどの中間層アプリケーションでこのメソッドを使用する場合、アプリケーションを実行するアカウントにファイルへのアクセス許可がない場合、エラーが表示されます。  
  
   
  
## Examples  
 次のコード例では、ローカル ハード ドライブに http://www.contoso.com からファイルをダウンロードします。  
  
 [!code-cpp[WebClient_DownloadFile#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient_DownloadFile/CPP/webclient_downloadfile.cpp#1)]
 [!code-csharp[WebClient_DownloadFile#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient_DownloadFile/CS/webclient_downloadfile.cs#1)]
 [!code-vb[WebClient_DownloadFile#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient_DownloadFile/VB/webclient_downloadfile.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="address" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">結合して形成された URI<see cref="P:System.Net.WebClient.BaseAddress" />と<paramref name="address" />が無効です。  
  
 または  
  
 <paramref name="filename" /> は <see langword="null" /> または <see cref="F:System.String.Empty" /> です。  
  
 または  
  
 ファイルが存在しません。  
  
 または、データのダウンロード中にエラーが発生しました。</exception>
        <exception cref="T:System.NotSupportedException">メソッドは複数のスレッドで同時に呼び出されました。</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">ファイルの書き込みに<paramref name="fileName" />です。 関連する列挙値:<see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />です。</permission>
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (Uri address, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DownloadFile(class System.Uri address, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadFile(System.Uri,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">として指定された URI、 <see cref="T:System.String" />、元のデータをダウンロードします。</param>
        <param name="fileName">データを受信するローカル ファイルの名前。</param>
        <summary>ローカル ファイルには、指定した URI にリソースをダウンロードします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebClient.DownloadFile%2A>メソッドがで指定された URI からローカル ファイル データをダウンロード、`address`パラメーター。 このメソッドは、リソースのダウンロード中にブロックしています。 リソースをダウンロードして、サーバーの応答の待機中に実行を続行のいずれかの操作を使用して、<xref:System.Net.WebClient.DownloadFileAsync%2A>メソッドです。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティが空の文字列 ("") と`address`は絶対 URI が含まれていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>要求されたデータの絶対 URI を作成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティが空の文字列ではないに追加されます`address`です。  
  
 このメソッドは、RETR コマンドを使用して、FTP リソースをダウンロードします。 HTTP リソースでは、GET メソッドを使用します。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。 [.NET Framework のネットワークのトレース](~/docs/framework/network-programming/network-tracing.md)です。  
  
 ASP.NET ページなどの中間層アプリケーションでこのメソッドを使用する場合、アプリケーションを実行するアカウントにファイルへのアクセス許可がない場合、エラーが表示されます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="address" /> パラメーターが <see langword="null" /> です。  
  
 または  
  
 <paramref name="fileName" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">結合して形成された URI<see cref="P:System.Net.WebClient.BaseAddress" />と<paramref name="address" />が無効です。  
  
 または  
  
 <paramref name="filename" /> は <see langword="null" /> または <see cref="F:System.String.Empty" /> です。  
  
 または  
  
 ファイルが存在しません。  
  
 または  
  
 データのダウンロード中にエラーが発生しました。</exception>
        <exception cref="T:System.NotSupportedException">メソッドは複数のスレッドで同時に呼び出されました。</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">ファイルの書き込みに<paramref name="fileName" />です。 関連する列挙値:<see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />です。</permission>
      </Docs>
    </Member>
    <Member MemberName="DownloadFileAsync">
      <MemberSignature Language="C#" Value="public void DownloadFileAsync (Uri address, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DownloadFileAsync(class System.Uri address, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadFileAsync(System.Uri,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">ダウンロードするリソースの URI。</param>
        <param name="fileName">ローカル コンピューターに配置されるファイルの名前。</param>
        <summary>指定した URI にリソースをローカル ファイルにダウンロードします。 このメソッドは、呼び出し元のスレッドをブロックしていません。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッド内で指定された URI にあるリソースのダウンロード、`address`パラメーター。 ダウンロードしたファイルの名前は、ダウンロードが正常に完了すると、`fileName`ローカル コンピューターにします。 スレッド プールから自動的に割り当てられているスレッド リソースを使用して非同期的にファイルがダウンロードされます。 ファイルが使用可能な場合に通知を受信するイベント ハンドラーを追加、<xref:System.Net.WebClient.DownloadFileCompleted>イベント。  
  
 このメソッドは、リソースのダウンロード中に、呼び出し元のスレッドをブロックしません。 ダウンロードが完了の待機中にブロックするには、いずれかを使用、<xref:System.Net.WebClient.DownloadFile%2A>メソッドです。  
  
 使用することができます、<xref:System.Net.WebClient.CancelAsync%2A>メソッドを完了していない非同期操作をキャンセルします。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティは空の文字列ではありません ("") と`address`は絶対 URI で指定されていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>を要求されたデータの絶対 URI を形成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティが空の文字列ではないに追加されます`address`です。  
  
 このメソッドは、RETR コマンドを使用して、FTP リソースをダウンロードします。 HTTP リソースでは、GET メソッドを使用します。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。 [.NET Framework のネットワークのトレース](~/docs/framework/network-programming/network-tracing.md)です。  
  
 このメソッドを使用して、ASP.NET ページで、ときにページの下で実行するアカウントには、ローカル ファイルにアクセスする権限がない場合、エラーが表示されます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="address" /> パラメーターが <see langword="null" /> です。  
  
 または  
  
 <paramref name="fileName" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">結合して形成された URI<see cref="P:System.Net.WebClient.BaseAddress" />と<paramref name="address" />が無効です。  
  
 または  
  
 リソースのダウンロード中にエラーが発生しました。</exception>
        <exception cref="T:System.InvalidOperationException">によって指定されたローカル ファイル<paramref name="fileName" />別のスレッドによって使用されています。</exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadFileAsync">
      <MemberSignature Language="C#" Value="public void DownloadFileAsync (Uri address, string fileName, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DownloadFileAsync(class System.Uri address, string fileName, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadFileAsync(System.Uri,System.String,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="address">ダウンロードするリソースの URI。</param>
        <param name="fileName">ローカル コンピューターに配置されるファイルの名前。</param>
        <param name="userToken">非同期操作の完了時に呼び出されるメソッドに渡されるユーザー定義のオブジェクト。</param>
        <summary>指定した URI にリソースをローカル ファイルにダウンロードします。 このメソッドは、呼び出し元のスレッドをブロックしていません。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッド内で指定された URI にあるリソースのダウンロード、`address`パラメーター。 ダウンロードしたファイルの名前は、ダウンロードが正常に完了すると、`fileName`ローカル コンピューターにします。 スレッド プールから自動的に割り当てられているスレッド リソースを使用して非同期的にファイルがダウンロードされます。 ファイルが使用可能な場合に通知を受信するイベント ハンドラーを追加、<xref:System.Net.WebClient.DownloadFileCompleted>イベント。  
  
 このメソッドは、リソースのダウンロード中に、呼び出し元のスレッドをブロックしません。 ダウンロードが完了の待機中にブロックするには、いずれかを使用、<xref:System.Net.WebClient.DownloadFile%2A>メソッドです。  
  
 使用することができます、<xref:System.Net.WebClient.CancelAsync%2A>メソッドを完了していない非同期操作をキャンセルします。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティは空の文字列ではありません ("") と`address`は絶対 URI で指定されていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>を要求されたデータの絶対 URI を形成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティが空の文字列ではないに追加されます`address`です。  
  
 このメソッドは、RETR コマンドを使用して、FTP リソースをダウンロードします。 HTTP リソースでは、GET メソッドを使用します。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。 [.NET Framework のネットワークのトレース](~/docs/framework/network-programming/network-tracing.md)です。  
  
 このメソッドを使用して、ASP.NET ページで、ときにページの下で実行するアカウントには、ローカル ファイルにアクセスする権限がない場合、エラーが表示されます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="address" /> パラメーターが <see langword="null" /> です。  
  
 または  
  
 <paramref name="fileName" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">結合して形成された URI<see cref="P:System.Net.WebClient.BaseAddress" />と<paramref name="address" />が無効です。  
  
 または  
  
 リソースのダウンロード中にエラーが発生しました。</exception>
        <exception cref="T:System.InvalidOperationException">によって指定されたローカル ファイル<paramref name="fileName" />別のスレッドによって使用されています。</exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadFileCompleted">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.AsyncCompletedEventHandler DownloadFileCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.AsyncCompletedEventHandler DownloadFileCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Net.WebClient.DownloadFileCompleted" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AsyncCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>非同期のファイル ダウンロード操作が完了したときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このイベントは、非同期のファイル ダウンロード操作が完了するたびにでは発生します。 非同期のファイルのダウンロードが呼び出すことによって開始された、<xref:System.Net.WebClient.DownloadFileAsync%2A>メソッドです。  
  
 <xref:System.ComponentModel.AsyncCompletedEventHandler>は、このイベントのデリゲート。 <xref:System.ComponentModel.AsyncCompletedEventArgs>クラスには、イベント データを持つイベント ハンドラーが用意されています。  
  
 イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。  
  
   
  
## Examples  
 次のコード例では、このイベントのイベント ハンドラーの設定を示します。  
  
 [!code-cpp[NCLWebClientAsync#19](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#19)]
 [!code-csharp[NCLWebClientAsync#19](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#19)]
 [!code-vb[NCLWebClientAsync#19](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#19)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DownloadFileTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task DownloadFileTaskAsync (string address, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task DownloadFileTaskAsync(string address, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadFileTaskAsync(System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">ダウンロードするリソースの URI。</param>
        <param name="fileName">ローカル コンピューターに配置されるファイルの名前。</param>
        <summary>タスク オブジェクトを使用して非同期操作として、ローカル ファイルに指定したリソースをダウンロードします。</summary>
        <returns><see cref="T:System.Threading.Tasks.Task" /> を返します。  
  
 非同期操作を表すタスク オブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この操作はブロックされません。 返された<xref:System.Threading.Tasks.Task>オブジェクトは、データのリソースがダウンロードした後に完了します。  
  
 このメソッド内で指定された URI にあるリソースのダウンロード、`address`パラメーター。 ダウンロードしたファイルの名前は、ダウンロードが正常に完了すると、`fileName`ローカル コンピューターにします。 スレッド プールから自動的に割り当てられているスレッド リソースを使用して非同期的にファイルがダウンロードされます。  
  
 使用することができます、<xref:System.Net.WebClient.CancelAsync%2A>メソッドを完了していない非同期操作をキャンセルします。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティは空の文字列ではありません ("") と`address`は絶対 URI で指定されていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>を要求されたデータの絶対 URI を形成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティが空の文字列ではないに追加されます`address`です。  
  
 このメソッドは、RETR コマンドを使用して、FTP リソースをダウンロードします。 HTTP リソースでは、GET メソッドを使用します。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。 [.NET Framework のネットワークのトレース](~/docs/framework/network-programming/network-tracing.md)です。  
  
 このメソッドを使用して、ASP.NET ページで、ときにページの下で実行するアカウントには、ローカル ファイルにアクセスする権限がない場合、エラーが表示されます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="address" /> パラメーターが <see langword="null" /> です。  
  
 または  
  
 <paramref name="fileName" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">結合して形成された URI<see cref="P:System.Net.WebClient.BaseAddress" />と<paramref name="address" />が無効です。  
  
 または  
  
 リソースのダウンロード中にエラーが発生しました。</exception>
        <exception cref="T:System.InvalidOperationException">によって指定されたローカル ファイル<paramref name="fileName" />別のスレッドによって使用されています。</exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadFileTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task DownloadFileTaskAsync (Uri address, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task DownloadFileTaskAsync(class System.Uri address, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadFileTaskAsync(System.Uri,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">ダウンロードするリソースの URI。</param>
        <param name="fileName">ローカル コンピューターに配置されるファイルの名前。</param>
        <summary>タスク オブジェクトを使用して非同期操作として、ローカル ファイルに指定したリソースをダウンロードします。</summary>
        <returns><see cref="T:System.Threading.Tasks.Task" /> を返します。  
  
 非同期操作を表すタスク オブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この操作はブロックされません。 返された<xref:System.Threading.Tasks.Task>オブジェクトは、データのリソースがダウンロードした後に完了します。  
  
 このメソッド内で指定された URI にあるリソースのダウンロード、`address`パラメーター。 ダウンロードしたファイルの名前は、ダウンロードが正常に完了すると、`fileName`ローカル コンピューターにします。 スレッド プールから自動的に割り当てられているスレッド リソースを使用して非同期的にファイルがダウンロードされます。  
  
 使用することができます、<xref:System.Net.WebClient.CancelAsync%2A>メソッドを完了していない非同期操作をキャンセルします。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティは空の文字列ではありません ("") と`address`は絶対 URI で指定されていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>を要求されたデータの絶対 URI を形成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティが空の文字列ではないに追加されます`address`です。  
  
 このメソッドは、RETR コマンドを使用して、FTP リソースをダウンロードします。 HTTP リソースでは、GET メソッドを使用します。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。 [.NET Framework のネットワークのトレース](~/docs/framework/network-programming/network-tracing.md)です。  
  
 このメソッドを使用して、ASP.NET ページで、ときにページの下で実行するアカウントには、ローカル ファイルにアクセスする権限がない場合、エラーが表示されます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="address" /> パラメーターが <see langword="null" /> です。  
  
 または  
  
 <paramref name="fileName" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">結合して形成された URI<see cref="P:System.Net.WebClient.BaseAddress" />と<paramref name="address" />が無効です。  
  
 または  
  
 リソースのダウンロード中にエラーが発生しました。</exception>
        <exception cref="T:System.InvalidOperationException">によって指定されたローカル ファイル<paramref name="fileName" />別のスレッドによって使用されています。</exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadProgressChanged">
      <MemberSignature Language="C#" Value="public event System.Net.DownloadProgressChangedEventHandler DownloadProgressChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Net.DownloadProgressChangedEventHandler DownloadProgressChanged" />
      <MemberSignature Language="DocId" Value="E:System.Net.WebClient.DownloadProgressChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.DownloadProgressChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>一部またはすべてのデータの非同期ダウンロード操作が正常に転送するときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このイベントは、非同期のダウンロードが進行するたびにでは発生します。 このイベントを使用して次のいずれかのダウンロードが開始されたときに発生します。  
  
|メソッド|説明|  
|------------|-----------------|  
|<xref:System.Net.WebClient.DownloadDataAsync%2A>|リソースからデータをダウンロードしを返します、<xref:System.Byte>呼び出し元のスレッドをブロックすることがなくの配列。|  
|<xref:System.Net.WebClient.DownloadFileAsync%2A>|呼び出し元のスレッドをブロックすることがなく、データをリソースからローカル ファイルにダウンロードします。|  
|<xref:System.Net.WebClient.OpenReadAsync%2A>|呼び出し元のスレッドをブロックすることがなく、リソースからデータを返します。|  
  
 <xref:System.Net.DownloadProgressChangedEventHandler>は、このイベントのデリゲート。 <xref:System.Net.DownloadProgressChangedEventArgs>クラスには、イベント データを持つイベント ハンドラーが用意されています。  
  
 イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。  
  
> [!NOTE]
>  パッシブ FTP ファイル転送では、サーバーは、ファイルのサイズを送信しなかったために、0、進行状況は常に表示します。 進行状況を表示することができますを変更する FTP 接続をアクティブにオーバーライドすることで、<xref:System.Net.WebClient.GetWebRequest%2A>仮想メソッド。  
  
```  
internal class MyWebClient:WebClient{  
        protected override WebRequest GetWebRequest(Uri address) {  
            FtpWebRequest req = (FtpWebRequest)base.GetWebRequest(address);  
            req.UsePassive = false;  
            return req;  
        }  
    }  
```  
  
   
  
## Examples  
 次のコード例では、このイベントのイベント ハンドラーの設定を示します。  
  
 [!code-cpp[NCLWebClientAsync#19](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#19)]
 [!code-csharp[NCLWebClientAsync#19](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#19)]
 [!code-vb[NCLWebClientAsync#19](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#19)]  
  
 次のコード例は、このイベントのハンドラーの実装を示しています。  
  
 [!code-cpp[NCLWebClientAsync#42](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#42)]
 [!code-csharp[NCLWebClientAsync#42](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#42)]
 [!code-vb[NCLWebClientAsync#42](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#42)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DownloadString">
      <MemberSignature Language="C#" Value="public string DownloadString (string address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string DownloadString(string address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadString(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">A<see cref="T:System.String" />をダウンロードする URI を格納します。</param>
        <summary>要求されたリソースとしてのダウンロード、<see cref="T:System.String" />です。 としてダウンロードするリソースが指定されて、 <see cref="T:System.String" /> URI を格納します。</summary>
        <returns>A<see cref="T:System.String" />要求されたリソースを格納します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、指定したリソースを取得します。 メソッドでに指定されたエンコーディングを使用して、リソース、ダウンロードした後、<xref:System.Net.WebClient.Encoding%2A>にリソースを変換するプロパティ、<xref:System.String>です。 このメソッドは、リソースのダウンロード中にブロックしています。 リソースをダウンロードして、サーバーの応答の待機中に実行を続行のいずれかの操作を使用して、<xref:System.Net.WebClient.DownloadStringAsync%2A>メソッドです。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティが空の文字列 ("") と`address`は絶対 URI が含まれていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>要求されたデータの絶対 URI を作成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティが空の文字列ではないに追加されます`address`です。  
  
 このメソッドは、RETR コマンドを使用して、FTP リソースをダウンロードします。 HTTP リソースでは、GET メソッドを使用します。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。 [.NET Framework のネットワークのトレース](~/docs/framework/network-programming/network-tracing.md)です。  
  
   
  
## Examples  
 次のコード例では、このメソッドを呼び出すことを示します。  
  
 [!code-cpp[NCLWebClientAsync#25](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#25)]
 [!code-csharp[NCLWebClientAsync#25](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#25)]
 [!code-vb[NCLWebClientAsync#25](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#25)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="address" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">結合して形成された URI<see cref="P:System.Net.WebClient.BaseAddress" />と<paramref name="address" />が無効です。  
  
 または  
  
 リソースのダウンロード中にエラーが発生しました。</exception>
        <exception cref="T:System.NotSupportedException">メソッドは複数のスレッドで同時に呼び出されました。</exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadString">
      <MemberSignature Language="C#" Value="public string DownloadString (Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string DownloadString(class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadString(System.Uri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="address">A<see cref="T:System.Uri" />をダウンロードする URI を含むオブジェクト。</param>
        <summary>要求されたリソースとしてのダウンロード、<see cref="T:System.String" />です。 としてダウンロードするリソースが指定されて、<see cref="T:System.Uri" />です。</summary>
        <returns>A<see cref="T:System.String" />要求されたリソースを格納します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、指定したリソースを取得します。 メソッドでに指定されたエンコーディングを使用して、リソース、ダウンロードした後、<xref:System.Net.WebClient.Encoding%2A>にリソースを変換するプロパティ、<xref:System.String>です。 このメソッドは、リソースのダウンロード中にブロックしています。 リソースをダウンロードして、サーバーの応答の待機中に実行を続行のいずれかの操作を使用して、<xref:System.Net.WebClient.DownloadStringAsync%2A>メソッドです。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティが空の文字列 ("") と`address`は絶対 URI が含まれていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>要求されたデータの絶対 URI を作成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティが空の文字列ではないに追加されます`address`です。  
  
 このメソッドは、RETR コマンドを使用して、FTP リソースをダウンロードします。 HTTP リソースでは、GET メソッドを使用します。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。 [.NET Framework のネットワークのトレース](~/docs/framework/network-programming/network-tracing.md)です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="address" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">結合して形成された URI<see cref="P:System.Net.WebClient.BaseAddress" />と<paramref name="address" />が無効です。  
  
 または  
  
 リソースのダウンロード中にエラーが発生しました。</exception>
        <exception cref="T:System.NotSupportedException">メソッドは複数のスレッドで同時に呼び出されました。</exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadStringAsync">
      <MemberSignature Language="C#" Value="public void DownloadStringAsync (Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DownloadStringAsync(class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadStringAsync(System.Uri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="address">A<see cref="T:System.Uri" />をダウンロードする URI を格納します。</param>
        <summary>として指定されたリソースをダウンロード、<see cref="T:System.Uri" />です。 このメソッドは、呼び出し元のスレッドをブロックしていません。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 リソースは、スレッド プールから自動的に割り当てられているスレッド リソースを使用して非同期的にダウンロードされます。  
  
 このメソッドがで指定されたエンコーディングを使用、リソースをダウンロードした後、<xref:System.Net.WebClient.Encoding%2A>にリソースを変換するプロパティ、<xref:System.String>です。 このメソッドは、リソースのダウンロード中に呼び出し元のスレッドをブロックしません。 サーバーの応答の待機中にダウンロードは、リソースおよびブロックを使用してを使用して、<xref:System.Net.WebClient.DownloadString%2A>メソッドです。 ダウンロードが完了したら、<xref:System.Net.WebClient.DownloadStringCompleted>イベントが発生します。 アプリケーションでは、通知を受信するには、このイベントを処理する必要があります。 ダウンロードされた文字列は、<xref:System.Net.DownloadStringCompletedEventArgs.Result%2A>プロパティです。  
  
 使用することができます、<xref:System.Net.WebClient.CancelAsync%2A>メソッドを完了していない非同期操作をキャンセルします。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティが空の文字列 ("") と`address`は絶対 URI が含まれていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>要求されたデータの絶対 URI を作成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティが空の文字列ではないに追加されます`address`です。  
  
 このメソッドは、RETR コマンドを使用して、FTP リソースをダウンロードします。 HTTP リソースでは、GET メソッドを使用します。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。 [.NET Framework のネットワークのトレース](~/docs/framework/network-programming/network-tracing.md)です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="address" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">結合して形成された URI<see cref="P:System.Net.WebClient.BaseAddress" />と<paramref name="address" />が無効です。  
  
 または  
  
 リソースのダウンロード中にエラーが発生しました。</exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadStringAsync">
      <MemberSignature Language="C#" Value="public void DownloadStringAsync (Uri address, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DownloadStringAsync(class System.Uri address, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadStringAsync(System.Uri,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="address">A<see cref="T:System.Uri" />をダウンロードする URI を格納します。</param>
        <param name="userToken">非同期操作の完了時に呼び出されるメソッドに渡されるユーザー定義のオブジェクト。</param>
        <summary>指定した文字列を指定されたリソースにダウンロードします。 このメソッドは、呼び出し元のスレッドをブロックしていません。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 リソースは、スレッド プールから自動的に割り当てられているスレッド リソースを使用して非同期的にダウンロードされます。  
  
 このメソッドがで指定されたエンコーディングを使用、リソースをダウンロードした後、<xref:System.Net.WebClient.Encoding%2A>にリソースを変換するプロパティ、<xref:System.String>です。 このメソッドは、リソースのダウンロード中に呼び出し元のスレッドをブロックしません。 サーバーの応答の待機中にダウンロードは、リソースおよびブロックを使用してを使用して、<xref:System.Net.WebClient.DownloadString%2A>メソッドです。 ダウンロードが完了したら、<xref:System.Net.WebClient.DownloadStringCompleted>イベントが発生します。 アプリケーションでは、通知を受信するには、このイベントを処理する必要があります。 ダウンロードされた文字列は、<xref:System.Net.DownloadStringCompletedEventArgs.Result%2A>プロパティです。  
  
 使用することができます、<xref:System.Net.WebClient.CancelAsync%2A>メソッドを完了していない非同期操作をキャンセルします。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティが空の文字列 ("") と`address`は絶対 URI が含まれていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>要求されたデータの絶対 URI を作成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティが空の文字列ではないに追加されます`address`です。  
  
 このメソッドは、RETR コマンドを使用して、FTP リソースをダウンロードします。 HTTP リソースでは、GET メソッドを使用します。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。 [.NET Framework のネットワークのトレース](~/docs/framework/network-programming/network-tracing.md)です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="address" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">結合して形成された URI<see cref="P:System.Net.WebClient.BaseAddress" />と<paramref name="address" />が無効です。  
  
 または  
  
 リソースのダウンロード中にエラーが発生しました。</exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadStringCompleted">
      <MemberSignature Language="C#" Value="public event System.Net.DownloadStringCompletedEventHandler DownloadStringCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Net.DownloadStringCompletedEventHandler DownloadStringCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Net.WebClient.DownloadStringCompleted" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.DownloadStringCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>非同期のリソース ダウンロード操作が完了したときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このイベントは、文字列としてリソースをダウンロードする非同期操作が完了するたびにします。 これらの操作は呼び出すことによって、<xref:System.Net.WebClient.DownloadStringAsync%2A>メソッドです。  
  
 <xref:System.Net.DownloadStringCompletedEventHandler>は、このイベントのデリゲート。 <xref:System.Net.DownloadStringCompletedEventArgs>クラスには、イベント データを持つイベント ハンドラーが用意されています。  
  
 イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。  
  
   
  
## Examples  
 次のコード例では、このイベントのイベント ハンドラーの設定を示します。  
  
 [!code-cpp[NCLWebClientAsync#28](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#28)]
 [!code-csharp[NCLWebClientAsync#28](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#28)]
 [!code-vb[NCLWebClientAsync#28](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#28)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DownloadStringTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;string&gt; DownloadStringTaskAsync (string address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;string&gt; DownloadStringTaskAsync(string address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadStringTaskAsync(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">ダウンロードするリソースの URI。</param>
        <summary>としてリソースをダウンロード、<see cref="T:System.String" />タスク オブジェクトを使用して非同期操作として指定された URI からです。</summary>
        <returns><see cref="T:System.Threading.Tasks.Task`1" /> を返します。  
  
 非同期操作を表すタスク オブジェクト。 <see cref="P:System.Threading.Tasks.Task`1.Result" />タスク オブジェクトのプロパティを返します、<see cref="T:System.Byte" />ダウンロードしたリソースを含む配列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この操作はブロックされません。 返された<xref:System.Threading.Tasks.Task%601>オブジェクトは、データのリソースがダウンロードした後に完了します。  リソースは、スレッド プールから自動的に割り当てられているスレッド リソースを使用して非同期的にダウンロードされます。  
  
 このメソッドがで指定されたエンコーディングを使用、リソースをダウンロードした後、<xref:System.Net.WebClient.Encoding%2A>にリソースを変換するプロパティ、<xref:System.String>です。 このメソッドは、リソースのダウンロード中に呼び出し元のスレッドをブロックしません。  
  
 使用することができます、<xref:System.Net.WebClient.CancelAsync%2A>メソッドを完了していない非同期操作をキャンセルします。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティが空の文字列 ("") と`address`は絶対 URI が含まれていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>要求されたデータの絶対 URI を作成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティが空の文字列ではないに追加されます`address`です。  
  
 このメソッドは、RETR コマンドを使用して、FTP リソースをダウンロードします。 HTTP リソースでは、GET メソッドを使用します。  
  
 このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。 [.NET Framework のネットワークのトレース](~/docs/framework/network-programming/network-tracing.md)です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="address" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">結合して形成された URI<see cref="P:System.Net.WebClient.BaseAddress" />と<paramref name="address" />が無効です。  
  
 または  
  
 リソースのダウンロード中にエラーが発生しました。</exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadStringTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;string&gt; DownloadStringTaskAsync (Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;string&gt; DownloadStringTaskAsync(class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadStringTaskAsync(System.Uri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="address">ダウンロードするリソースの URI。</param>
        <summary>としてリソースをダウンロード、<see cref="T:System.String" />タスク オブジェクトを使用して非同期操作として指定された URI からです。</summary>
        <returns><see cref="T:System.Threading.Tasks.Task`1" /> を返します。  
  
 非同期操作を表すタスク オブジェクト。 <see cref="P:System.Threading.Tasks.Task`1.Result" />タスク オブジェクトのプロパティを返します、<see cref="T:System.Byte" />ダウンロードしたリソースを含む配列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この操作はブロックされません。 返された<xref:System.Threading.Tasks.Task%601>オブジェクトは、データのリソースがダウンロードした後に完了します。 リソースは、スレッド プールから自動的に割り当てられているスレッド リソースを使用して非同期的にダウンロードされます。  
  
 このメソッドがで指定されたエンコーディングを使用、リソースをダウンロードした後、<xref:System.Net.WebClient.Encoding%2A>にリソースを変換するプロパティ、<xref:System.String>です。 このメソッドは、リソースのダウンロード中に呼び出し元のスレッドをブロックしません。  
  
 使用することができます、<xref:System.Net.WebClient.CancelAsync%2A>メソッドを完了していない非同期操作をキャンセルします。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティが空の文字列 ("") と`address`は絶対 URI が含まれていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>要求されたデータの絶対 URI を作成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティが空の文字列ではないに追加されます`address`です。  
  
 このメソッドは、RETR コマンドを使用して、FTP リソースをダウンロードします。 HTTP リソースでは、GET メソッドを使用します。  
  
 このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。 [.NET Framework のネットワークのトレース](~/docs/framework/network-programming/network-tracing.md)です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="address" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">結合して形成された URI<see cref="P:System.Net.WebClient.BaseAddress" />と<paramref name="address" />が無効です。  
  
 または  
  
 リソースのダウンロード中にエラーが発生しました。</exception>
      </Docs>
    </Member>
    <Member MemberName="Encoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding Encoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding Encoding" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebClient.Encoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得および設定、<see cref="T:System.Text.Encoding" />のアップロードし、文字列をダウンロードするために使用します。</summary>
        <value>A<see cref="T:System.Text.Encoding" />文字列のエンコードに使用されます。 このプロパティの既定値は、によって返されるエンコーディング<see cref="P:System.Text.Encoding.Default" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebClient.UploadString%2A>と<xref:System.Net.WebClient.UploadStringAsync%2A>メソッドに指定した文字列に変換するこのプロパティを使用して、<xref:System.Byte>文字列をアップロードする前に配列。 詳細については、次を参照してください。、<xref:System.Text.Encoding.GetBytes%2A>メソッドです。  
  
 使用して文字列をダウンロードすると、<xref:System.Net.WebClient.DownloadString%2A>または<xref:System.Net.WebClient.DownloadStringAsync%2A>メソッド、<xref:System.Net.WebClient>を使用して、 <xref:System.Text.Encoding> 、ダウンロードした変換にによって返される<xref:System.Byte>文字列の配列。 詳細については、次を参照してください。、<xref:System.Text.Encoding.GetString%2A>メソッドです。  
  
   
  
## Examples  
 次のコード例では、このプロパティの値の設定を示します。  
  
 [!code-cpp[NCLWebClientAsync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#1)]
 [!code-csharp[NCLWebClientAsync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#1)]
 [!code-vb[NCLWebClientAsync#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWebRequest">
      <MemberSignature Language="C#" Value="protected virtual System.Net.WebRequest GetWebRequest (Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Net.WebRequest GetWebRequest(class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.GetWebRequest(System.Uri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebRequest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="address">A<see cref="T:System.Uri" />に要求するリソースを識別します。</param>
        <summary>返します、<see cref="T:System.Net.WebRequest" />指定されたリソース オブジェクト。</summary>
        <returns>新しい<see cref="T:System.Net.WebRequest" />指定されたリソース オブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは既存のコピー <xref:System.Net.WebClient.Headers%2A>、 <xref:System.Net.WebClient.Credentials%2A>、新しく作成してメソッドを<xref:System.Net.WebRequest>オブジェクト。  
  
 このメソッドは、継承クラスによってのみ呼び出すことが<xref:System.Net.WebClient>です。 基になる継承元のアクセス権を付与するものです<xref:System.Net.WebRequest>オブジェクト。 派生クラスの基本クラス実装を呼び出す必要があります<xref:System.Net.WebClient.GetWebRequest%2A>をメソッドが期待どおりに動作を確認します。  
  
   
  
## Examples  
 次のコード例は、このから派生するクラスによってカスタマイズ可能なメソッドの実装を示しています。<xref:System.Net.WebClient>です。  
  
 [!code-cpp[NCLCustomWebClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCustomWebClient/CPP/mywebclient.cpp#1)]
 [!code-csharp[NCLCustomWebClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCustomWebClient/CS/mywebclient.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWebResponse">
      <MemberSignature Language="C#" Value="protected virtual System.Net.WebResponse GetWebResponse (System.Net.WebRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Net.WebResponse GetWebResponse(class System.Net.WebRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.GetWebResponse(System.Net.WebRequest)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Net.WebRequest" />
      </Parameters>
      <Docs>
        <param name="request">A<see cref="T:System.Net.WebRequest" />応答の取得に使用されます。</param>
        <summary>指定した <see cref="T:System.Net.WebResponse" /> の <see cref="T:System.Net.WebRequest" /> を返します。</summary>
        <returns>A <see cref="T:System.Net.WebResponse" /> 、指定された応答を含む<see cref="T:System.Net.WebRequest" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドによって返されるオブジェクトを呼び出すことによって取得、<xref:System.Net.WebRequest.GetResponse%2A>メソッドを指定した<xref:System.Net.WebRequest>オブジェクト。  
  
 このメソッドは、継承クラスによってのみ呼び出すことが<xref:System.Net.WebClient>です。 基になる継承元のアクセス権を付与するものです<xref:System.Net.WebResponse>オブジェクト。  
  
   
  
## Examples  
 次のコード例は、このから派生するクラスによってカスタマイズ可能なメソッドの実装を示しています。<xref:System.Net.WebClient>です。  
  
 [!code-cpp[NCLCustomWebClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCustomWebClient/CPP/mywebclient.cpp#2)]
 [!code-csharp[NCLCustomWebClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCustomWebClient/CS/mywebclient.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWebResponse">
      <MemberSignature Language="C#" Value="protected virtual System.Net.WebResponse GetWebResponse (System.Net.WebRequest request, IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Net.WebResponse GetWebResponse(class System.Net.WebRequest request, class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.GetWebResponse(System.Net.WebRequest,System.IAsyncResult)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Net.WebRequest" />
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="request">A<see cref="T:System.Net.WebRequest" />応答の取得に使用されます。</param>
        <param name="result"><see cref="T:System.IAsyncResult" />前の呼び出しから取得したオブジェクト<see cref="M:System.Net.WebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />です。</param>
        <summary>返します、 <see cref="T:System.Net.WebResponse" /> 、指定された<see cref="T:System.Net.WebRequest" />指定して<see cref="T:System.IAsyncResult" />です。</summary>
        <returns>A <see cref="T:System.Net.WebResponse" /> 、指定された応答を含む<see cref="T:System.Net.WebRequest" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドによって返されるオブジェクトを呼び出すことによって取得、<xref:System.Net.WebRequest.EndGetResponse%2A>メソッドを指定した<xref:System.Net.WebRequest>オブジェクト。  
  
 このメソッドは、継承クラスによってのみ呼び出すことが<xref:System.Net.WebClient>です。 基になる継承元のアクセス権を付与するものです<xref:System.Net.WebResponse>オブジェクト。  
  
   
  
## Examples  
 次のコード例は、このから派生するクラスによってカスタマイズ可能なメソッドの実装を示しています。<xref:System.Net.WebClient>です。  
  
 [!code-cpp[NCLCustomWebClient#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCustomWebClient/CPP/mywebclient.cpp#3)]
 [!code-csharp[NCLCustomWebClient#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCustomWebClient/CS/mywebclient.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Headers">
      <MemberSignature Language="C#" Value="public System.Net.WebHeaderCollection Headers { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.WebHeaderCollection Headers" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebClient.Headers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebHeaderCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または要求に関連付けられているヘッダーの名前/値ペアのコレクションを設定します。</summary>
        <value>A<see cref="T:System.Net.WebHeaderCollection" />この要求に関連付けられたヘッダーの名前/値ペアを含むです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebClient.Headers%2A>プロパティが含まれています、<xref:System.Net.WebHeaderCollection>プロトコル ヘッダーを含むインスタンスを<xref:System.Net.WebClient>要求と共に送信されます。  
  
 一部の共通ヘッダーは制限されていると、システムで保護されているとことはできません設定または変更すると見なされます、<xref:System.Net.WebHeaderCollection>オブジェクト。 これらの制限付きヘッダー内のいずれかを設定しようとすると、<xref:System.Net.WebHeaderCollection>オブジェクトに関連付けられている、<xref:System.Net.WebClient>オブジェクトを送信しようとしました。 後で例外がスローされます、<xref:System.Net.WebClient>要求します。  
  
 システムによって保護されている制限付きのヘッダーはなどが、次に限定されていません。  
  
-   日付  
  
-   Host  
  
 さらに、その他のいくつかのヘッダーでは制限を使用する場合、<xref:System.Net.WebClient>オブジェクト。 これらの制限付きヘッダーなどが、以下に限定されていません。  
  
-   そのまま使用します。  
  
-   接続  
  
-   コンテンツの長さ  
  
-   期待 (に値を設定すると"100-続行"  
  
-   場合の変更-以降  
  
-   範囲  
  
-   転送エンコード  
  
 <xref:System.Net.HttpWebRequest>クラス上のヘッダーの一部を設定するためのプロパティがあります。 これらのヘッダーを設定するアプリケーションにとって重要である場合、<xref:System.Net.HttpWebRequest>の代わりにクラスを使用する必要があります、<xref:System.Net.WebRequest>クラスです。  
  
 あるヘッダーの値は変更されません、Web サーバーおよびキャッシュは、変更または Web 要求にヘッダーを追加するためと想定する必要があります。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Net.WebClient.Headers%2A>を HTTP に設定するコレクション`Content-Type`ヘッダーを`application/x-www-form-urlencoded,`に投稿にデータを形成するサーバーが接続されている通知します。  
  
 [!code-cpp[WebClient_UpLoadData_Headers#2](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient_UpLoadData_Headers/CPP/webclient_uploaddata_headers.cpp#2)]
 [!code-csharp[WebClient_UpLoadData_Headers#2](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient_UpLoadData_Headers/CS/webclient_uploaddata_headers.cs#2)]
 [!code-vb[WebClient_UpLoadData_Headers#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient_UpLoadData_Headers/VB/webclient_uploaddata_headers.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBusy">
      <MemberSignature Language="C#" Value="public bool IsBusy { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBusy" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebClient.IsBusy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Web 要求が進行中かどうかを取得します。</summary>
        <value>
          <see langword="true" />Web 要求がまだ実行中である場合それ以外の場合<see langword="false" />です。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDownloadDataCompleted">
      <MemberSignature Language="C#" Value="protected virtual void OnDownloadDataCompleted (System.Net.DownloadDataCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDownloadDataCompleted(class System.Net.DownloadDataCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OnDownloadDataCompleted(System.Net.DownloadDataCompletedEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.DownloadDataCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A<see cref="T:System.Net.DownloadDataCompletedEventArgs" />イベント データを格納するオブジェクト。</param>
        <summary><see cref="E:System.Net.WebClient.DownloadDataCompleted" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このクラスから継承するクラスでオーバーライドできるメソッドを追加するときの操作、<xref:System.Net.WebClient.DownloadDataCompleted>イベントが発生します。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください[NIB: イベントの発生。](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)  
  
 <xref:System.Net.WebClient.OnDownloadDataCompleted%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
   
  
## Examples  
 次のコード例は、このから派生するクラスによってカスタマイズ可能なメソッドの実装を示しています。<xref:System.Net.WebClient>です。  
  
 [!code-cpp[NCLCustomWebClient#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCustomWebClient/CPP/mywebclient.cpp#4)]
 [!code-csharp[NCLCustomWebClient#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCustomWebClient/CS/mywebclient.cs#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>オーバーライドする場合<see cref="M:System.Net.WebClient.OnDownloadDataCompleted(System.Net.DownloadDataCompletedEventArgs)" />派生クラスでは、基本クラスの呼び出しを必ず<see cref="M:System.Net.WebClient.OnDownloadDataCompleted(System.Net.DownloadDataCompletedEventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnDownloadFileCompleted">
      <MemberSignature Language="C#" Value="protected virtual void OnDownloadFileCompleted (System.ComponentModel.AsyncCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDownloadFileCompleted(class System.ComponentModel.AsyncCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OnDownloadFileCompleted(System.ComponentModel.AsyncCompletedEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.AsyncCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.ComponentModel.AsyncCompletedEventArgs" />イベント データを含むオブジェクト。</param>
        <summary><see cref="E:System.Net.WebClient.DownloadFileCompleted" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このクラスから継承するクラスでオーバーライドできるメソッドを追加するときの操作、<xref:System.Net.WebClient.DownloadFileCompleted>イベントが発生します。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)です。  
  
 <xref:System.Net.WebClient.OnDownloadFileCompleted%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
   
  
## Examples  
 次のコード例は、このから派生するクラスによってカスタマイズ可能なメソッドの実装を示しています。<xref:System.Net.WebClient>です。  
  
 [!code-cpp[NCLCustomWebClient#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCustomWebClient/CPP/mywebclient.cpp#5)]
 [!code-csharp[NCLCustomWebClient#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCustomWebClient/CS/mywebclient.cs#5)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>オーバーライドする場合<see cref="M:System.Net.WebClient.OnDownloadFileCompleted(System.ComponentModel.AsyncCompletedEventArgs)" />派生クラスでは、基本クラスの呼び出しを必ず<see cref="M:System.Net.WebClient.OnDownloadFileCompleted(System.ComponentModel.AsyncCompletedEventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnDownloadProgressChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDownloadProgressChanged (System.Net.DownloadProgressChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDownloadProgressChanged(class System.Net.DownloadProgressChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OnDownloadProgressChanged(System.Net.DownloadProgressChangedEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.DownloadProgressChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A<see cref="T:System.Net.DownloadProgressChangedEventArgs" />イベント データを含むオブジェクト。</param>
        <summary><see cref="E:System.Net.WebClient.DownloadProgressChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このクラスから継承するクラスでオーバーライドできるメソッドを追加するときの操作、<xref:System.Net.WebClient.DownloadProgressChanged>イベントが発生します。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)です。  
  
 <xref:System.Net.WebClient.OnDownloadProgressChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
   
  
## Examples  
 次のコード例は、このから派生するクラスによってカスタマイズ可能なメソッドの実装を示しています。<xref:System.Net.WebClient>です。  
  
 [!code-cpp[NCLCustomWebClient#12](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCustomWebClient/CPP/mywebclient.cpp#12)]
 [!code-csharp[NCLCustomWebClient#12](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCustomWebClient/CS/mywebclient.cs#12)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>オーバーライドする場合<see cref="M:System.Net.WebClient.OnDownloadProgressChanged(System.Net.DownloadProgressChangedEventArgs)" />派生クラスでは、基本クラスの呼び出しを必ず<see cref="M:System.Net.WebClient.OnDownloadProgressChanged(System.Net.DownloadProgressChangedEventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnDownloadStringCompleted">
      <MemberSignature Language="C#" Value="protected virtual void OnDownloadStringCompleted (System.Net.DownloadStringCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDownloadStringCompleted(class System.Net.DownloadStringCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OnDownloadStringCompleted(System.Net.DownloadStringCompletedEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.DownloadStringCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A<see cref="T:System.Net.DownloadStringCompletedEventArgs" />イベント データを含むオブジェクト。</param>
        <summary><see cref="E:System.Net.WebClient.DownloadStringCompleted" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このクラスから継承するクラスでオーバーライドできるメソッドを追加するときの操作、<xref:System.Net.WebClient.DownloadStringCompleted>イベントが発生します。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)です。  
  
 <xref:System.Net.WebClient.OnDownloadStringCompleted%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
   
  
## Examples  
 次のコード例は、このから派生するクラスによってカスタマイズ可能なメソッドの実装を示しています。<xref:System.Net.WebClient>です。  
  
 [!code-cpp[NCLCustomWebClient#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCustomWebClient/CPP/mywebclient.cpp#6)]
 [!code-csharp[NCLCustomWebClient#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCustomWebClient/CS/mywebclient.cs#6)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>オーバーライドする場合<see cref="M:System.Net.WebClient.OnDownloadStringCompleted(System.Net.DownloadStringCompletedEventArgs)" />派生クラスでは、基本クラスの呼び出しを必ず<see cref="M:System.Net.WebClient.OnDownloadStringCompleted(System.Net.DownloadStringCompletedEventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnOpenReadCompleted">
      <MemberSignature Language="C#" Value="protected virtual void OnOpenReadCompleted (System.Net.OpenReadCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnOpenReadCompleted(class System.Net.OpenReadCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OnOpenReadCompleted(System.Net.OpenReadCompletedEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.OpenReadCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A<see cref="T:System.Net.OpenReadCompletedEventArgs" />イベント データを含むオブジェクト。</param>
        <summary><see cref="E:System.Net.WebClient.OpenReadCompleted" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このクラスから継承するクラスでオーバーライドできるメソッドを追加するときの操作、<xref:System.Net.WebClient.OpenReadCompleted>イベントが発生します。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)です。  
  
 <xref:System.Net.WebClient.OnOpenReadCompleted%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
   
  
## Examples  
 次のコード例は、このから派生するクラスによってカスタマイズ可能なメソッドの実装を示しています。<xref:System.Net.WebClient>です。  
  
 [!code-cpp[NCLCustomWebClient#7](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCustomWebClient/CPP/mywebclient.cpp#7)]
 [!code-csharp[NCLCustomWebClient#7](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCustomWebClient/CS/mywebclient.cs#7)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>オーバーライドする場合<see cref="M:System.Net.WebClient.OnOpenReadCompleted(System.Net.OpenReadCompletedEventArgs)" />派生クラスでは、基本クラスの呼び出しを必ず<see cref="M:System.Net.WebClient.OnOpenReadCompleted(System.Net.OpenReadCompletedEventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnOpenWriteCompleted">
      <MemberSignature Language="C#" Value="protected virtual void OnOpenWriteCompleted (System.Net.OpenWriteCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnOpenWriteCompleted(class System.Net.OpenWriteCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OnOpenWriteCompleted(System.Net.OpenWriteCompletedEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.OpenWriteCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A<see cref="T:System.Net.OpenWriteCompletedEventArgs" />イベント データを含むオブジェクト。</param>
        <summary><see cref="E:System.Net.WebClient.OpenWriteCompleted" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このクラスから継承するクラスでオーバーライドできるメソッドを追加するときの操作、<xref:System.Net.WebClient.OpenWriteCompleted>イベントが発生します。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)です。  
  
 <xref:System.Net.WebClient.OnOpenWriteCompleted%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
   
  
## Examples  
 次のコード例は、このから派生するクラスによってカスタマイズ可能なメソッドの実装を示しています。<xref:System.Net.WebClient>です。  
  
 [!code-cpp[NCLCustomWebClient#8](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCustomWebClient/CPP/mywebclient.cpp#8)]
 [!code-csharp[NCLCustomWebClient#8](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCustomWebClient/CS/mywebclient.cs#8)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>オーバーライドする場合<see cref="M:System.Net.WebClient.OnOpenWriteCompleted(System.Net.OpenWriteCompletedEventArgs)" />派生クラスでは、基本クラスの呼び出しを必ず<see cref="M:System.Net.WebClient.OnOpenWriteCompleted(System.Net.OpenWriteCompletedEventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnUploadDataCompleted">
      <MemberSignature Language="C#" Value="protected virtual void OnUploadDataCompleted (System.Net.UploadDataCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUploadDataCompleted(class System.Net.UploadDataCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OnUploadDataCompleted(System.Net.UploadDataCompletedEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.UploadDataCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A<see cref="T:System.Net.UploadDataCompletedEventArgs" />イベント データを含むオブジェクト。</param>
        <summary><see cref="E:System.Net.WebClient.UploadDataCompleted" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このクラスから継承するクラスでオーバーライドできるメソッドを追加するときの操作、<xref:System.Net.WebClient.UploadDataCompleted>イベントが発生します。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)です。  
  
 <xref:System.Net.WebClient.OnUploadDataCompleted%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
   
  
## Examples  
 次のコード例は、このから派生するクラスによってカスタマイズ可能なメソッドの実装を示しています。<xref:System.Net.WebClient>です。  
  
 [!code-cpp[NCLCustomWebClient#9](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCustomWebClient/CPP/mywebclient.cpp#9)]
 [!code-csharp[NCLCustomWebClient#9](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCustomWebClient/CS/mywebclient.cs#9)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>オーバーライドする場合<see cref="M:System.Net.WebClient.OnUploadDataCompleted(System.Net.UploadDataCompletedEventArgs)" />派生クラスでは、基本クラスの呼び出しを必ず<see cref="M:System.Net.WebClient.OnUploadDataCompleted(System.Net.UploadDataCompletedEventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnUploadFileCompleted">
      <MemberSignature Language="C#" Value="protected virtual void OnUploadFileCompleted (System.Net.UploadFileCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUploadFileCompleted(class System.Net.UploadFileCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OnUploadFileCompleted(System.Net.UploadFileCompletedEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.UploadFileCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.Net.UploadFileCompletedEventArgs" />イベント データを含むオブジェクト。</param>
        <summary><see cref="E:System.Net.WebClient.UploadFileCompleted" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このクラスから継承するクラスでオーバーライドできるメソッドを追加するときの操作、<xref:System.Net.WebClient.UploadFileCompleted>イベントが発生します。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)です。  
  
 <xref:System.Net.WebClient.OnUploadFileCompleted%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
   
  
## Examples  
 次のコード例は、このから派生するクラスによってカスタマイズ可能なメソッドの実装を示しています。<xref:System.Net.WebClient>です。  
  
 [!code-cpp[NCLCustomWebClient#10](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCustomWebClient/CPP/mywebclient.cpp#10)]
 [!code-csharp[NCLCustomWebClient#10](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCustomWebClient/CS/mywebclient.cs#10)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>オーバーライドする場合<see cref="M:System.Net.WebClient.OnUploadFileCompleted(System.Net.UploadFileCompletedEventArgs)" />派生クラスでは、基本クラスの呼び出しを必ず<see cref="M:System.Net.WebClient.OnUploadFileCompleted(System.Net.UploadFileCompletedEventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnUploadProgressChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnUploadProgressChanged (System.Net.UploadProgressChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUploadProgressChanged(class System.Net.UploadProgressChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OnUploadProgressChanged(System.Net.UploadProgressChangedEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.UploadProgressChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.Net.UploadProgressChangedEventArgs" />イベント データを含むオブジェクト。</param>
        <summary><see cref="E:System.Net.WebClient.UploadProgressChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このクラスから継承するクラスでオーバーライドできるメソッドを追加するときの操作、<xref:System.Net.WebClient.UploadProgressChanged>イベントが発生します。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)です。  
  
 <xref:System.Net.WebClient.OnUploadProgressChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
   
  
## Examples  
 次のコード例は、このから派生するクラスによってカスタマイズ可能なメソッドの実装を示しています。<xref:System.Net.WebClient>です。  
  
 [!code-cpp[NCLCustomWebClient#13](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCustomWebClient/CPP/mywebclient.cpp#13)]
 [!code-csharp[NCLCustomWebClient#13](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCustomWebClient/CS/mywebclient.cs#13)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>オーバーライドする場合<see cref="M:System.Net.WebClient.OnUploadProgressChanged(System.Net.UploadProgressChangedEventArgs)" />派生クラスでは、基本クラスの呼び出しを必ず<see cref="M:System.Net.WebClient.OnUploadProgressChanged(System.Net.UploadProgressChangedEventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnUploadStringCompleted">
      <MemberSignature Language="C#" Value="protected virtual void OnUploadStringCompleted (System.Net.UploadStringCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUploadStringCompleted(class System.Net.UploadStringCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OnUploadStringCompleted(System.Net.UploadStringCompletedEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.UploadStringCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.Net.UploadStringCompletedEventArgs" />イベント データを含むオブジェクト。</param>
        <summary><see cref="E:System.Net.WebClient.UploadStringCompleted" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このクラスから継承するクラスでオーバーライドできるメソッドを追加するときの操作、<xref:System.Net.WebClient.UploadStringCompleted>イベントが発生します。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)です。  
  
 <xref:System.Net.WebClient.OnUploadStringCompleted%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
   
  
## Examples  
 次のコード例は、このから派生するクラスによってカスタマイズ可能なメソッドの実装を示しています。<xref:System.Net.WebClient>です。  
  
 [!code-cpp[NCLCustomWebClient#11](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCustomWebClient/CPP/mywebclient.cpp#11)]
 [!code-csharp[NCLCustomWebClient#11](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCustomWebClient/CS/mywebclient.cs#11)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>オーバーライドする場合<see cref="M:System.Net.WebClient.OnUploadStringCompleted(System.Net.UploadStringCompletedEventArgs)" />派生クラスでは、基本クラスの呼び出しを必ず<see cref="M:System.Net.WebClient.OnUploadStringCompleted(System.Net.UploadStringCompletedEventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnUploadValuesCompleted">
      <MemberSignature Language="C#" Value="protected virtual void OnUploadValuesCompleted (System.Net.UploadValuesCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUploadValuesCompleted(class System.Net.UploadValuesCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OnUploadValuesCompleted(System.Net.UploadValuesCompletedEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.UploadValuesCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A<see cref="T:System.Net.UploadValuesCompletedEventArgs" />イベント データを含むオブジェクト。</param>
        <summary><see cref="E:System.Net.WebClient.UploadValuesCompleted" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このクラスから継承するクラスでオーバーライドできるメソッドを追加するときの操作、<xref:System.Net.WebClient.UploadValuesCompleted>イベントが発生します。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)です。  
  
 <xref:System.Net.WebClient.OnUploadValuesCompleted%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
   
  
## Examples  
 次のコード例は、このから派生するクラスによってカスタマイズ可能なメソッドの実装を示しています。<xref:System.Net.WebClient>です。  
  
 [!code-cpp[NCLCustomWebClient#14](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCustomWebClient/CPP/mywebclient.cpp#14)]
 [!code-csharp[NCLCustomWebClient#14](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCustomWebClient/CS/mywebclient.cs#14)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>オーバーライドする場合<see cref="M:System.Net.WebClient.OnUploadValuesCompleted(System.Net.UploadValuesCompletedEventArgs)" />派生クラスでは、基本クラスの呼び出しを必ず<see cref="M:System.Net.WebClient.OnUploadValuesCompleted(System.Net.UploadValuesCompletedEventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnWriteStreamClosed">
      <MemberSignature Language="C#" Value="protected virtual void OnWriteStreamClosed (System.Net.WriteStreamClosedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnWriteStreamClosed(class System.Net.WriteStreamClosedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OnWriteStreamClosed(System.Net.WriteStreamClosedEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.WriteStreamClosedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A<see cref="T:System.Net.WriteStreamClosedEventArgs" />イベント データを含むオブジェクト。</param>
        <summary><see cref="E:System.Net.WebClient.WriteStreamClosed" /> イベントを発生させます。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenRead">
      <MemberSignature Language="C#" Value="public System.IO.Stream OpenRead (string address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream OpenRead(string address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenRead(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">として指定された URI、<see cref="T:System.String" />元となるデータをダウンロードします。</param>
        <summary>として指定された URI を持つリソースからダウンロードしたデータの読み取り可能なストリームが開き、<see cref="T:System.String" />です。</summary>
        <returns>A<see cref="T:System.IO.Stream" />リソースからデータを読み取るために使用します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebClient.OpenRead%2A>メソッドを作成、<xref:System.IO.Stream>で指定されたリソースの内容を読み取るために使用されるインスタンス、`address`パラメーター。 ストリームを開くときに、このメソッドはブロックします。 ストリームの待機中に実行を続行するには、いずれかを使用、<xref:System.Net.WebClient.OpenReadAsync%2A>メソッドです。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティが空の文字列 ("") と`address`は絶対 URI が含まれていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>要求されたデータの絶対 URI を作成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティは使用されません`null`に追加されます`address`です。  
  
 このメソッドは、RETR コマンドを使用して、FTP リソースをダウンロードします。 HTTP リソースでは、GET メソッドを使用します。  
  
> [!NOTE]
>  呼び出す必要があります<xref:System.IO.Stream.Close%2A?displayProperty=nameWithType>の使用が終わったら、<xref:System.IO.Stream>システム リソースの不足を回避します。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。 [.NET Framework のネットワークのトレース](~/docs/framework/network-programming/network-tracing.md)です。  
  
   
  
## Examples  
 次のコード例は、によって識別されるリソースを開く`uriString`システム コンソールで、結果を表示します。 なお、<xref:System.IO.Stream>によって返される<xref:System.Net.WebClient.OpenRead%2A>データが読み取られたときに終了します。  
  
 [!code-cpp[WebClient_OpenRead#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient_OpenRead/CPP/webclient_openread.cpp#1)]
 [!code-csharp[WebClient_OpenRead#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient_OpenRead/CS/webclient_openread.cs#1)]
 [!code-vb[WebClient_OpenRead#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient_OpenRead/VB/webclient_openread.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="address" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">結合して形成された URI <see cref="P:System.Net.WebClient.BaseAddress" />、<paramref name="address" />が無効です。  
  
 または  
  
 データのダウンロード中にエラーが発生しました。</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenRead">
      <MemberSignature Language="C#" Value="public System.IO.Stream OpenRead (Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream OpenRead(class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenRead(System.Uri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="address">として指定された URI、<see cref="T:System.Uri" />元となるデータをダウンロードします。</param>
        <summary>として指定された URI を持つリソースからダウンロードしたデータの読み取り可能なストリームが開き、<see cref="T:System.Uri" /></summary>
        <returns>A<see cref="T:System.IO.Stream" />リソースからデータを読み取るために使用します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebClient.OpenRead%2A>メソッドを作成、<xref:System.IO.Stream>で指定されたリソースの内容を読み取るために使用されるインスタンス、`address`パラメーター。 ストリームを開くときに、このメソッドはブロックします。 ストリームの待機中に実行を続行するには、いずれかを使用、<xref:System.Net.WebClient.OpenReadAsync%2A>メソッドです。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティが空の文字列 ("") と`address`は絶対 URI が含まれていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>要求されたデータの絶対 URI を作成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティは使用されません`null`に追加されます`address`です。  
  
 このメソッドは、RETR コマンドを使用して、FTP リソースをダウンロードします。 HTTP リソースでは、GET メソッドを使用します。  
  
> [!NOTE]
>  呼び出す必要があります<xref:System.IO.Stream.Close%2A?displayProperty=nameWithType>の使用が終わったら、<xref:System.IO.Stream>システム リソースの不足を回避します。  
  
 **注**このメンバーは、アプリケーションでネットワーク トレースを有効にする場合にトレース情報を出力します。 詳細については、次を参照してください。 [.NET Framework のネットワークのトレース](~/docs/framework/network-programming/network-tracing.md)です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="address" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">結合して形成された URI <see cref="P:System.Net.WebClient.BaseAddress" />、<paramref name="address" />が無効です。  
  
 または  
  
 データのダウンロード中にエラーが発生しました。</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenReadAsync">
      <MemberSignature Language="C#" Value="public void OpenReadAsync (Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OpenReadAsync(class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenReadAsync(System.Uri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="address">取得するリソースの URI。</param>
        <summary>指定したリソースを格納している読み取り可能なストリームを開きます。 このメソッドは、呼び出し元のスレッドをブロックしていません。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、取得、<xref:System.IO.Stream>で指定されたリソースへのアクセスに使用されるインスタンス、`address`パラメーター。 スレッド プールから自動的に割り当てられているスレッド リソースを使用して、ストリームが取得されます。 ストリームが使用可能なときに通知を受信するイベント ハンドラーを追加、<xref:System.Net.WebClient.OpenReadCompleted>イベント。  
  
> [!NOTE]
>  呼び出す必要があります<xref:System.IO.Stream.Close%2A?displayProperty=nameWithType>使用が終了したら、<xref:System.IO.Stream>システム リソースの不足を回避します。  
  
 このメソッドは、ストリームを開くときに、呼び出し元のスレッドをブロックしません。 ストリームの待機中に、禁止するを使用して、<xref:System.Net.WebClient.OpenReadAsync%2A>メソッドです。  
  
 使用して完了していない非同期操作を取り消すことができます、<xref:System.Net.WebClient.CancelAsync%2A>メソッドです。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティは空の文字列ではありません ("") と`address`は絶対 URI で指定されていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>を要求されたリソースの絶対 URI を形成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティは使用されません`null`に追加されます`address`です。  
  
 このメソッドは、RETR コマンドを使用して、FTP リソースをダウンロードします。 HTTP リソースでは、GET メソッドを使用します。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。 [.NET Framework のネットワークのトレース](~/docs/framework/network-programming/network-tracing.md)です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="address" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">結合して形成された URI<see cref="P:System.Net.WebClient.BaseAddress" />アドレスは無効です。  
  
 または  
  
 リソースのダウンロード中にエラーが発生しました。  
  
 または  
  
 ストリームを開くときにエラーが発生しました。</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenReadAsync">
      <MemberSignature Language="C#" Value="public void OpenReadAsync (Uri address, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OpenReadAsync(class System.Uri address, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenReadAsync(System.Uri,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="address">取得するリソースの URI。</param>
        <param name="userToken">非同期操作の完了時に呼び出されるメソッドに渡されるユーザー定義のオブジェクト。</param>
        <summary>指定したリソースを格納している読み取り可能なストリームを開きます。 このメソッドは、呼び出し元のスレッドをブロックしていません。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、取得、<xref:System.IO.Stream>で指定されたリソースへのアクセスに使用されるインスタンス、`address`パラメーター。 スレッド プールから自動的に割り当てられているスレッド リソースを使用して、ストリームが取得されます。 ストリームが使用可能なときに通知を受信するイベント ハンドラーを追加、<xref:System.Net.WebClient.OpenReadCompleted>イベント。  
  
> [!NOTE]
>  呼び出す必要があります<xref:System.IO.Stream.Close%2A?displayProperty=nameWithType>使用が終了したら、<xref:System.IO.Stream>システム リソースの不足を回避します。  
  
 このメソッドは、ストリームを開くときに、呼び出し元のスレッドをブロックしません。 ストリームの待機中に、禁止するを使用して、<xref:System.Net.WebClient.OpenRead%2A>メソッドです。  
  
 使用して完了していない非同期操作を取り消すことができます、<xref:System.Net.WebClient.CancelAsync%2A>メソッドです。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティは空の文字列ではありません ("") と`address`は絶対 URI で指定されていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>を要求されたリソースの絶対 URI を形成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティは使用されません`null`に追加されます`address`です。  
  
 このメソッドは、RETR コマンドを使用して、FTP リソースをダウンロードします。 HTTP リソースでは、GET メソッドを使用します。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。 [.NET Framework のネットワークのトレース](~/docs/framework/network-programming/network-tracing.md)です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="address" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">結合して形成された URI<see cref="P:System.Net.WebClient.BaseAddress" />アドレスは無効です。  
  
 または  
  
 リソースのダウンロード中にエラーが発生しました。  
  
 または  
  
 ストリームを開くときにエラーが発生しました。</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenReadCompleted">
      <MemberSignature Language="C#" Value="public event System.Net.OpenReadCompletedEventHandler OpenReadCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Net.OpenReadCompletedEventHandler OpenReadCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Net.WebClient.OpenReadCompleted" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.OpenReadCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>リソースを含むストリームを開く非同期操作の完了時に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このイベントは、リソースを含むストリームを開く非同期操作が完了するたびにします。 これらの操作は呼び出すことによって、<xref:System.Net.WebClient.OpenReadAsync%2A>メソッドです。  
  
 <xref:System.Net.OpenReadCompletedEventHandler>は、このイベントのデリゲート。 <xref:System.Net.OpenReadCompletedEventArgs>クラスには、イベント データを持つイベント ハンドラーが用意されています。  
  
 イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。  
  
   
  
## Examples  
 次のコード例では、このイベントのイベント ハンドラーの設定を示します。  
  
 [!code-cpp[NCLWebClientAsync#30](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#30)]
 [!code-csharp[NCLWebClientAsync#30](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#30)]
 [!code-vb[NCLWebClientAsync#30](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#30)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenReadTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.IO.Stream&gt; OpenReadTaskAsync (string address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; OpenReadTaskAsync(string address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenReadTaskAsync(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">取得するリソースの URI。</param>
        <summary>タスク オブジェクトを使用して非同期操作として、指定されたリソースを格納している読み取り可能なストリームを開きます。</summary>
        <returns><see cref="T:System.Threading.Tasks.Task`1" /> を返します。  
  
 非同期操作を表すタスク オブジェクト。 <see cref="P:System.Threading.Tasks.Task`1.Result" />タスク オブジェクトのプロパティを返します、<see cref="T:System.IO.Stream" />リソースからデータを読み取るために使用します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この操作はブロックされません。 返された<xref:System.Threading.Tasks.Task%601>オブジェクトは、完了した後、データ リソースへの読み取り可能なストリームが開かれました。 このメソッドは、ストリームを開くときに、呼び出し元のスレッドをブロックしません。  
  
 このメソッドは、取得、<xref:System.IO.Stream>で指定されたリソースへのアクセスに使用されるインスタンス、`address`パラメーター。 スレッド プールから自動的に割り当てられているスレッド リソースを使用して、ストリームが取得されます。  
  
> [!NOTE]
>  呼び出す必要があります<xref:System.IO.Stream.Close%2A?displayProperty=nameWithType>使用が終了したら、<xref:System.IO.Stream>システム リソースの不足を回避します。  
  
 使用して完了していない非同期操作を取り消すことができます、<xref:System.Net.WebClient.CancelAsync%2A>メソッドです。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティは空の文字列ではありません ("") と`address`は絶対 URI で指定されていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>を要求されたリソースの絶対 URI を形成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティは使用されません`null`に追加されます`address`です。  
  
 このメソッドは、RETR コマンドを使用して、FTP リソースをダウンロードします。 HTTP リソースでは、GET メソッドを使用します。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。 [.NET Framework のネットワークのトレース](~/docs/framework/network-programming/network-tracing.md)です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="address" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">結合して形成された URI<see cref="P:System.Net.WebClient.BaseAddress" />アドレスは無効です。  
  
 または  
  
 リソースのダウンロード中にエラーが発生しました。  
  
 または  
  
 ストリームを開くときにエラーが発生しました。</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenReadTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.IO.Stream&gt; OpenReadTaskAsync (Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; OpenReadTaskAsync(class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenReadTaskAsync(System.Uri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="address">取得するリソースの URI。</param>
        <summary>タスク オブジェクトを使用して非同期操作として、指定されたリソースを格納している読み取り可能なストリームを開きます。</summary>
        <returns><see cref="T:System.Threading.Tasks.Task`1" /> を返します。  
  
 非同期操作を表すタスク オブジェクト。 <see cref="P:System.Threading.Tasks.Task`1.Result" />タスク オブジェクトのプロパティを返します、<see cref="T:System.IO.Stream" />リソースからデータを読み取るために使用します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この操作はブロックされません。 返された<xref:System.Threading.Tasks.Task%601>オブジェクトは、完了した後、データ リソースへの読み取り可能なストリームが開かれました。 このメソッドは、ストリームを開くときに、呼び出し元のスレッドをブロックしません。  
  
 このメソッドは、取得、<xref:System.IO.Stream>で指定されたリソースへのアクセスに使用されるインスタンス、`address`パラメーター。 スレッド プールから自動的に割り当てられているスレッド リソースを使用して、ストリームが取得されます。  
  
> [!NOTE]
>  呼び出す必要があります<xref:System.IO.Stream.Close%2A?displayProperty=nameWithType>使用が終了したら、<xref:System.IO.Stream>システム リソースの不足を回避します。  
  
 使用して完了していない非同期操作を取り消すことができます、<xref:System.Net.WebClient.CancelAsync%2A>メソッドです。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティは空の文字列ではありません ("") と`address`は絶対 URI で指定されていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>を要求されたリソースの絶対 URI を形成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティは使用されません`null`に追加されます`address`です。  
  
 このメソッドは、RETR コマンドを使用して、FTP リソースをダウンロードします。 HTTP リソースでは、GET メソッドを使用します。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。 [.NET Framework のネットワークのトレース](~/docs/framework/network-programming/network-tracing.md)です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="address" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">結合して形成された URI<see cref="P:System.Net.WebClient.BaseAddress" />アドレスは無効です。  
  
 または  
  
 リソースのダウンロード中にエラーが発生しました。  
  
 または  
  
 ストリームを開くときにエラーが発生しました。</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenWrite">
      <MemberSignature Language="C#" Value="public System.IO.Stream OpenWrite (string address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream OpenWrite(string address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenWrite(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">データを受信する、リソースの URI。</param>
        <summary>指定のリソースへのデータを書き込むためのストリームを開きます。</summary>
        <returns>A<see cref="T:System.IO.Stream" />リソースにデータを書き込むために使用します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebClient.OpenWrite%2A>メソッドのリソースへのデータの送信に使用される書き込み可能ストリームを返します。 ストリームを開くときに、このメソッドはブロックします。 ストリームの待機中に実行を続行するには、いずれかを使用、<xref:System.Net.WebClient.OpenWriteAsync%2A>メソッドです。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティが空の文字列 ("") と`address`は絶対 URI が含まれていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>要求されたデータの絶対 URI を作成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティが空の文字列ではないに追加されます`address`です。  
  
 このメソッドは、ストレージのコマンドを使用して、FTP リソースをアップロードします。 HTTP リソースでは、POST メソッドを使用します。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。 [.NET Framework のネットワークのトレース](~/docs/framework/network-programming/network-tracing.md)です。  
  
   
  
## Examples  
 次のコード例は、コマンドラインからデータを読み取り、使用して<xref:System.Net.WebClient.OpenWrite%2A>データを書き込むためのストリームを取得します。 なお、<xref:System.IO.Stream>によって返される<xref:System.Net.WebClient.OpenWrite%2A>データが送信された後に終了します。  
  
 [!code-cpp[WebClient_OpenWrite2#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient_OpenWrite2/CPP/webclient_openwrite2.cpp#1)]
 [!code-csharp[WebClient_OpenWrite2#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient_OpenWrite2/CS/webclient_openwrite2.cs#1)]
 [!code-vb[WebClient_OpenWrite2#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient_OpenWrite2/VB/webclient_openwrite2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="address" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">結合して形成された URI <see cref="P:System.Net.WebClient.BaseAddress" />、および<paramref name="address" />が無効です。  
  
 または  
  
 ストリームを開くときにエラーが発生しました。</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenWrite">
      <MemberSignature Language="C#" Value="public System.IO.Stream OpenWrite (Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream OpenWrite(class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenWrite(System.Uri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="address">データを受信する、リソースの URI。</param>
        <summary>指定のリソースへのデータを書き込むためのストリームを開きます。</summary>
        <returns>A<see cref="T:System.IO.Stream" />リソースにデータを書き込むために使用します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebClient.OpenWrite%2A>メソッドのリソースへのデータの送信に使用される書き込み可能ストリームを返します。 ストリームを開くときに、このメソッドはブロックします。 ストリームの待機中に実行を続行するには、いずれかを使用、<xref:System.Net.WebClient.OpenWriteAsync%2A>メソッドです。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティが空の文字列 ("") と`address`は絶対 URI が含まれていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>要求されたデータの絶対 URI を作成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティが空の文字列ではないに追加されます`address`です。  
  
 このメソッドは、ストレージのコマンドを使用して、FTP リソースをアップロードします。 HTTP リソースでは、POST メソッドを使用します。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。 [.NET Framework のネットワークのトレース](~/docs/framework/network-programming/network-tracing.md)です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="address" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">結合して形成された URI <see cref="P:System.Net.WebClient.BaseAddress" />、および<paramref name="address" />が無効です。  
  
 または  
  
 ストリームを開くときにエラーが発生しました。</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenWrite">
      <MemberSignature Language="C#" Value="public System.IO.Stream OpenWrite (string address, string method);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream OpenWrite(string address, string method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenWrite(System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="method" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">データを受信する、リソースの URI。</param>
        <param name="method">リソースにデータを送信するために使用するメソッド。 Null の場合、既定値は POST を http に、ストレージ ftp です。</param>
        <summary>指定したメソッドを使用して、指定されたリソースにデータを書き込むためのストリームを開きます。</summary>
        <returns>A<see cref="T:System.IO.Stream" />リソースにデータを書き込むために使用します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebClient.OpenWrite%2A>メソッドのリソースへのデータの送信に使用される書き込み可能ストリームを返します。 基になる要求が要求で指定されたメソッドを使用して、`method`パラメーター。 ストリームを閉じるときに、データをサーバーに送信されます。 ストリームを開くときに、このメソッドはブロックします。 ストリームの待機中に実行を続行するには、いずれかを使用、<xref:System.Net.WebClient.OpenWriteAsync%2A>メソッドです。  
  
 場合、`method`が認識できない、サーバーによって、基になるプロトコル クラスが発生する内容を決定するメソッドを指定します。 通常、<xref:System.Net.WebException>でがスローされます、<xref:System.Net.WebException.Status%2A>はエラーを示すプロパティを設定します。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティは空の文字列ではありません ("") と`address`、絶対アドレスが指定されていません`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>を要求されたデータの絶対 URI を形成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティが空の文字列ではないに追加されます`address`です。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。 [.NET Framework のネットワークのトレース](~/docs/framework/network-programming/network-tracing.md)です。  
  
   
  
## Examples  
 次のコード例は、コマンドラインからデータを読み取り、使用して<xref:System.Net.WebClient.OpenWrite%2A>データの書き込みに使用されるストリームを取得します。 なお、<xref:System.IO.Stream>によって返される<xref:System.Net.WebClient.OpenWrite%2A>データを送信する閉じる必要があります。  
  
 [!code-cpp[WebClient_OpenWrite#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient_OpenWrite/CPP/webclient_openwrite.cpp#1)]
 [!code-csharp[WebClient_OpenWrite#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient_OpenWrite/CS/webclient_openwrite.cs#1)]
 [!code-vb[WebClient_OpenWrite#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient_OpenWrite/VB/webclient_openwrite.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="address" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">結合して形成された URI <see cref="P:System.Net.WebClient.BaseAddress" />、および<paramref name="address" />が無効です。  
  
 または  
  
 ストリームを開くときにエラーが発生しました。</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenWrite">
      <MemberSignature Language="C#" Value="public System.IO.Stream OpenWrite (Uri address, string method);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream OpenWrite(class System.Uri address, string method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenWrite(System.Uri,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">データを受信する、リソースの URI。</param>
        <param name="method">リソースにデータを送信するために使用するメソッド。 Null の場合、既定値は POST を http に、ストレージ ftp です。</param>
        <summary>指定されたメソッドを使用して、指定されたリソースにデータを書き込むためのストリームを開きます。</summary>
        <returns>A<see cref="T:System.IO.Stream" />リソースにデータを書き込むために使用します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebClient.OpenWrite%2A>メソッドのリソースへのデータの送信に使用される書き込み可能ストリームを返します。 ストリームを開くときに、このメソッドはブロックします。 ストリームの待機中に実行を続行するには、いずれかを使用、<xref:System.Net.WebClient.OpenWriteAsync%2A>メソッドです。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティが空の文字列 ("") と`address`は絶対 URI が含まれていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>要求されたデータの絶対 URI を作成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティが空の文字列ではないに追加されます`address`です。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。 [.NET Framework のネットワークのトレース](~/docs/framework/network-programming/network-tracing.md)です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="address" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">結合して形成された URI <see cref="P:System.Net.WebClient.BaseAddress" />、および<paramref name="address" />が無効です。  
  
 または  
  
 ストリームを開くときにエラーが発生しました。</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenWriteAsync">
      <MemberSignature Language="C#" Value="public void OpenWriteAsync (Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OpenWriteAsync(class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenWriteAsync(System.Uri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="address">データを受信する、リソースの URI。</param>
        <summary>指定のリソースへのデータを書き込むためのストリームを開きます。 このメソッドは、呼び出し元のスレッドをブロックしていません。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、リソースへのデータの送信に使用される書き込み可能なストリームを取得します。 ストリームは、スレッド プールから自動的に割り当てられているスレッド リソースを使用して取得します。 ストリームが使用可能なときに通知を受信するイベント ハンドラーを追加、<xref:System.Net.WebClient.OpenWriteCompleted>イベント。 要求が送信されるまで、スレッドがブロックを閉じると、ストリーム、`address`して応答を受信します。  
  
 このメソッドは、ストリームが開かれるときに、呼び出し元のスレッドをブロックしません。 ストリームの待機中にブロックするには、いずれかを使用、<xref:System.Net.WebClient.OpenWrite%2A>メソッドです。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティが空の文字列 ("") と`address`は絶対 URI が含まれていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>要求されたデータの絶対 URI を作成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティが空の文字列ではないに追加されます`address`です。  
  
 このメソッドは、ストレージのコマンドを使用して、FTP リソースをアップロードします。 HTTP リソースでは、POST メソッドを使用します。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。 [.NET Framework のネットワークのトレース](~/docs/framework/network-programming/network-tracing.md)です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="address" /> パラメーターが <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenWriteAsync">
      <MemberSignature Language="C#" Value="public void OpenWriteAsync (Uri address, string method);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OpenWriteAsync(class System.Uri address, string method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenWriteAsync(System.Uri,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">データを受信する、リソースの URI。</param>
        <param name="method">リソースにデータを送信するために使用するメソッド。 Null の場合、既定値は POST を http に、ストレージ ftp です。</param>
        <summary>指定のリソースへのデータを書き込むためのストリームを開きます。 このメソッドは、呼び出し元のスレッドをブロックしていません。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、リソースへのデータの送信に使用される書き込み可能なストリームを取得します。 ストリームは、スレッド プールから自動的に割り当てられているスレッド リソースを使用して取得します。 ストリームが使用可能なときに通知を受信するイベント ハンドラーを追加、<xref:System.Net.WebClient.OpenWriteCompleted>イベント。 要求が送信されるまで、スレッドがブロックを閉じると、ストリーム、`address`して応答を受信します。  
  
 このメソッドは、ストリームが開かれるときに、呼び出し元のスレッドをブロックしません。 ストリームの待機中にブロックするには、いずれかを使用、<xref:System.Net.WebClient.OpenWrite%2A>メソッドです。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティが空の文字列 ("") と`address`は絶対 URI が含まれていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>要求されたデータの絶対 URI を作成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティが空の文字列ではないに追加されます`address`です。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。 [.NET Framework のネットワークのトレース](~/docs/framework/network-programming/network-tracing.md)です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="address" /> パラメーターが <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenWriteAsync">
      <MemberSignature Language="C#" Value="public void OpenWriteAsync (Uri address, string method, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OpenWriteAsync(class System.Uri address, string method, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenWriteAsync(System.Uri,System.String,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="address">データを受信する、リソースの URI。</param>
        <param name="method">リソースにデータを送信するために使用するメソッド。 Null の場合、既定値は POST を http に、ストレージ ftp です。</param>
        <param name="userToken">非同期操作の完了時に呼び出されるメソッドに渡されるユーザー定義のオブジェクト</param>
        <summary>指定したメソッドを使用して、指定されたリソースにデータを書き込むためのストリームを開きます。 このメソッドは、呼び出し元のスレッドをブロックしていません。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、リソースへのデータの送信に使用される書き込み可能なストリームを取得します。 ストリームは、スレッド プールから自動的に割り当てられているスレッド リソースを使用して非同期に取得します。 ストリームが使用可能なときに通知を受信するイベント ハンドラーを追加、<xref:System.Net.WebClient.OpenWriteCompleted>イベント。 ストリームの内容は、ストリームを閉じるときに、サーバーに送信されます。  
  
 場合、`method`が認識できない、サーバーによって、基になるプロトコル クラスが発生する内容を決定するメソッドを指定します。 通常、<xref:System.Net.WebException>でがスローされます、<xref:System.Net.WebException.Status%2A>はエラーを示すプロパティを設定します。  
  
 使用して完了していない非同期操作を取り消すことができます、<xref:System.Net.WebClient.CancelAsync%2A>メソッドです。  
  
 このメソッドは、ストリームが開かれるときに、呼び出し元のスレッドをブロックしません。 ストリームの待機中にブロックするには、いずれかを使用、<xref:System.Net.WebClient.OpenWrite%2A>メソッドです。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティが空の文字列 ("") と`address`は絶対 URI が含まれていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>要求されたデータの絶対 URI を作成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティが空の文字列ではないに追加されます`address`です。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。 [.NET Framework のネットワークのトレース](~/docs/framework/network-programming/network-tracing.md)です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="address" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">結合して形成された URI<see cref="P:System.Net.WebClient.BaseAddress" />と<paramref name="address" />が無効です。  
  
 または  
  
 ストリームを開くときにエラーが発生しました。</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenWriteCompleted">
      <MemberSignature Language="C#" Value="public event System.Net.OpenWriteCompletedEventHandler OpenWriteCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Net.OpenWriteCompletedEventHandler OpenWriteCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Net.WebClient.OpenWriteCompleted" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.OpenWriteCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>リソースへのデータを書き込むストリームを開く非同期操作の完了時に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このイベントは、リソースへのデータの送信に使用されるストリームを開く非同期操作が完了するたびにします。 これらの操作は呼び出すことによって、<xref:System.Net.WebClient.OpenWriteAsync%2A>メソッドです。  
  
 <xref:System.Net.OpenWriteCompletedEventHandler>は、このイベントのデリゲート。 <xref:System.Net.OpenWriteCompletedEventArgs>クラスには、イベント データを持つイベント ハンドラーが用意されています。  
  
 イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。  
  
   
  
## Examples  
 次のコード例では、このイベントのイベント ハンドラーの設定を示します。  
  
 [!code-cpp[NCLWebClientAsync#14](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#14)]
 [!code-csharp[NCLWebClientAsync#14](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#14)]
 [!code-vb[NCLWebClientAsync#14](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenWriteTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.IO.Stream&gt; OpenWriteTaskAsync (string address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; OpenWriteTaskAsync(string address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenWriteTaskAsync(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">データを受信する、リソースの URI。</param>
        <summary>タスク オブジェクトを使用して非同期操作として、指定されたリソースにデータを書き込むためのストリームを開きます。</summary>
        <returns><see cref="T:System.Threading.Tasks.Task`1" /> を返します。  
  
 非同期操作を表すタスク オブジェクト。 <see cref="P:System.Threading.Tasks.Task`1.Result" />タスク オブジェクトのプロパティを返します、<see cref="T:System.IO.Stream" />リソースにデータを書き込むために使用します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この操作はブロックされません。 返された<xref:System.Threading.Tasks.Task%601>オブジェクトは、後に完了する、データのリソースを書き込み可能なストリームが開かれました。 このメソッドは、ストリームを開くときに、呼び出し元のスレッドをブロックしません。  
  
 このメソッドは、取得、<xref:System.IO.Stream>で指定されたリソースへのデータの書き込みに使用されるインスタンス、`address`パラメーター。 スレッド プールから自動的に割り当てられているスレッド リソースを使用して、ストリームが取得されます。  
  
> [!NOTE]
>  呼び出す必要があります<xref:System.IO.Stream.Close%2A?displayProperty=nameWithType>使用が終了したら、<xref:System.IO.Stream>システム リソースの不足を回避します。  
  
 使用して完了していない非同期操作を取り消すことができます、<xref:System.Net.WebClient.CancelAsync%2A>メソッドです。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティが空の文字列 ("") と`address`は絶対 URI が含まれていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>要求されたデータの絶対 URI を作成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティが空の文字列ではないに追加されます`address`です。  
  
 このメソッドは、ストレージのコマンドを使用して、FTP リソースをアップロードします。 HTTP リソースでは、POST メソッドを使用します。  
  
 このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。 [.NET Framework のネットワークのトレース](~/docs/framework/network-programming/network-tracing.md)です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="address" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">結合して形成された URI<see cref="P:System.Net.WebClient.BaseAddress" />と<paramref name="address" />が無効です。  
  
 または  
  
 ストリームを開くときにエラーが発生しました。</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenWriteTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.IO.Stream&gt; OpenWriteTaskAsync (Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; OpenWriteTaskAsync(class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenWriteTaskAsync(System.Uri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="address">データを受信する、リソースの URI。</param>
        <summary>タスク オブジェクトを使用して非同期操作として、指定されたリソースにデータを書き込むためのストリームを開きます。</summary>
        <returns><see cref="T:System.Threading.Tasks.Task`1" /> を返します。  
  
 非同期操作を表すタスク オブジェクト。 <see cref="P:System.Threading.Tasks.Task`1.Result" />タスク オブジェクトのプロパティを返します、<see cref="T:System.IO.Stream" />リソースにデータを書き込むために使用します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この操作はブロックされません。 返された<xref:System.Threading.Tasks.Task%601>オブジェクトは、後に完了する、データのリソースを書き込み可能なストリームが開かれました。 このメソッドは、ストリームを開くときに、呼び出し元のスレッドをブロックしません。  
  
 このメソッドは、取得、<xref:System.IO.Stream>で指定されたリソースへのデータの書き込みに使用されるインスタンス、`address`パラメーター。 スレッド プールから自動的に割り当てられているスレッド リソースを使用して、ストリームが取得されます。  
  
> [!NOTE]
>  呼び出す必要があります<xref:System.IO.Stream.Close%2A?displayProperty=nameWithType>使用が終了したら、<xref:System.IO.Stream>システム リソースの不足を回避します。  
  
 使用して完了していない非同期操作を取り消すことができます、<xref:System.Net.WebClient.CancelAsync%2A>メソッドです。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティが空の文字列 ("") と`address`は絶対 URI が含まれていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>要求されたデータの絶対 URI を作成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティが空の文字列ではないに追加されます`address`です。  
  
 このメソッドは、ストレージのコマンドを使用して、FTP リソースをアップロードします。 HTTP リソースでは、POST メソッドを使用します。  
  
 このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。 [.NET Framework のネットワークのトレース](~/docs/framework/network-programming/network-tracing.md)です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="address" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">結合して形成された URI<see cref="P:System.Net.WebClient.BaseAddress" />と<paramref name="address" />が無効です。  
  
 または  
  
 ストリームを開くときにエラーが発生しました。</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenWriteTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.IO.Stream&gt; OpenWriteTaskAsync (string address, string method);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; OpenWriteTaskAsync(string address, string method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenWriteTaskAsync(System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="method" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">データを受信する、リソースの URI。</param>
        <param name="method">リソースにデータを送信するために使用するメソッド。 Null の場合、既定値は POST を http に、ストレージ ftp です。</param>
        <summary>タスク オブジェクトを使用して非同期操作として、指定されたリソースにデータを書き込むためのストリームを開きます。</summary>
        <returns><see cref="T:System.Threading.Tasks.Task`1" /> を返します。  
  
 非同期操作を表すタスク オブジェクト。 <see cref="P:System.Threading.Tasks.Task`1.Result" />タスク オブジェクトのプロパティを返します、<see cref="T:System.IO.Stream" />リソースにデータを書き込むために使用します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この操作はブロックされません。 返された<xref:System.Threading.Tasks.Task%601>オブジェクトは、後に完了する、データのリソースを書き込み可能なストリームが開かれました。 このメソッドは、ストリームを開くときに、呼び出し元のスレッドをブロックしません。  
  
 このメソッドは、取得、<xref:System.IO.Stream>で指定されたリソースへのデータの書き込みに使用されるインスタンス、`address`パラメーター。 スレッド プールから自動的に割り当てられているスレッド リソースを使用して、ストリームが取得されます。  
  
> [!NOTE]
>  呼び出す必要があります<xref:System.IO.Stream.Close%2A?displayProperty=nameWithType>使用が終了したら、<xref:System.IO.Stream>システム リソースの不足を回避します。  
  
 場合、`method`が認識できない、サーバーによって、基になるプロトコル クラスが発生する内容を決定するメソッドを指定します。 通常、<xref:System.Net.WebException>でがスローされます、<xref:System.Net.WebException.Status%2A>はエラーを示すプロパティを設定します。  
  
 使用して完了していない非同期操作を取り消すことができます、<xref:System.Net.WebClient.CancelAsync%2A>メソッドです。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティが空の文字列 ("") と`address`は絶対 URI が含まれていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>要求されたデータの絶対 URI を作成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティが空の文字列ではないに追加されます`address`です。  
  
 このメソッドは、ストレージのコマンドを使用して、FTP リソースをアップロードします。 HTTP リソースでは、POST メソッドを使用します。  
  
 このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。 [.NET Framework のネットワークのトレース](~/docs/framework/network-programming/network-tracing.md)です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="address" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">結合して形成された URI<see cref="P:System.Net.WebClient.BaseAddress" />と<paramref name="address" />が無効です。  
  
 または  
  
 ストリームを開くときにエラーが発生しました。</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenWriteTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.IO.Stream&gt; OpenWriteTaskAsync (Uri address, string method);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; OpenWriteTaskAsync(class System.Uri address, string method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenWriteTaskAsync(System.Uri,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">データを受信する、リソースの URI。</param>
        <param name="method">リソースにデータを送信するために使用するメソッド。 Null の場合、既定値は POST を http に、ストレージ ftp です。</param>
        <summary>タスク オブジェクトを使用して非同期操作として、指定されたリソースにデータを書き込むためのストリームを開きます。</summary>
        <returns><see cref="T:System.Threading.Tasks.Task`1" /> を返します。  
  
 非同期操作を表すタスク オブジェクト。 <see cref="P:System.Threading.Tasks.Task`1.Result" />タスク オブジェクトのプロパティを返します、<see cref="T:System.IO.Stream" />リソースにデータを書き込むために使用します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この操作はブロックされません。 返された<xref:System.Threading.Tasks.Task%601>オブジェクトは、後に完了する、データのリソースを書き込み可能なストリームが開かれました。 このメソッドは、ストリームを開くときに、呼び出し元のスレッドをブロックしません。  
  
 このメソッドは、取得、<xref:System.IO.Stream>で指定されたリソースへのデータの書き込みに使用されるインスタンス、`address`パラメーター。 スレッド プールから自動的に割り当てられているスレッド リソースを使用して、ストリームが取得されます。  
  
> [!NOTE]
>  呼び出す必要があります<xref:System.IO.Stream.Close%2A?displayProperty=nameWithType>使用が終了したら、<xref:System.IO.Stream>システム リソースの不足を回避します。  
  
 場合、`method`が認識できない、サーバーによって、基になるプロトコル クラスが発生する内容を決定するメソッドを指定します。 通常、<xref:System.Net.WebException>でがスローされます、<xref:System.Net.WebException.Status%2A>はエラーを示すプロパティを設定します。  
  
 使用して完了していない非同期操作を取り消すことができます、<xref:System.Net.WebClient.CancelAsync%2A>メソッドです。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティが空の文字列 ("") と`address`は絶対 URI が含まれていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>要求されたデータの絶対 URI を作成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティが空の文字列ではないに追加されます`address`です。  
  
 このメソッドは、ストレージのコマンドを使用して、FTP リソースをアップロードします。 HTTP リソースでは、POST メソッドを使用します。  
  
 このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。 [.NET Framework のネットワークのトレース](~/docs/framework/network-programming/network-tracing.md)です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="address" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">結合して形成された URI<see cref="P:System.Net.WebClient.BaseAddress" />と<paramref name="address" />が無効です。  
  
 または  
  
 ストリームを開くときにエラーが発生しました。</exception>
      </Docs>
    </Member>
    <Member MemberName="Proxy">
      <MemberSignature Language="C#" Value="public System.Net.IWebProxy Proxy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.IWebProxy Proxy" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebClient.Proxy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IWebProxy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>これによって使用されるプロキシの設定を取得または<see cref="T:System.Net.WebClient" />オブジェクト。</summary>
        <value><see cref="T:System.Net.IWebProxy" />インスタンス要求を送信するために使用します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebClient.Proxy%2A>プロパティを識別、<xref:System.Net.IWebProxy>これの代わりに、リモート サーバーと通信するインスタンス<xref:System.Net.WebClient>オブジェクト。 プロキシは、構成ファイルと、Internet Explorer のローカル エリア ネットワーク設定を使用して、システムによって設定されます。 プロキシを使用しないことを指定するには、設定、<xref:System.Net.WebClient.Proxy%2A>プロパティによって返されるプロキシ インスタンスを<xref:System.Net.GlobalProxySelection.GetEmptyWebProxy%2A>メソッドです。  
  
 自動プロキシ検出については、次を参照してください。[自動プロキシ検出](~/docs/framework/network-programming/automatic-proxy-detection.md)です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <see cref="P:System.Net.WebClient.Proxy" /> が <see langword="null" /> に設定されます。</exception>
        <permission cref="T:System.Net.WebPermission">制限付きではありません。 関連する列挙値:<see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />です。</permission>
      </Docs>
    </Member>
    <Member MemberName="QueryString">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.NameValueCollection QueryString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameValueCollection QueryString" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebClient.QueryString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または要求に関連付けられているクエリの名前/値ペアのコレクションを設定します。</summary>
        <value>A<see cref="T:System.Collections.Specialized.NameValueCollection" />要求に関連付けられているクエリの名前/値ペアを格納します。 値は、空のペアが要求に関連付けられていない場合は、<see cref="T:System.Collections.Specialized.NameValueCollection" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebClient.QueryString%2A>プロパティが含まれています、<xref:System.Collections.Specialized.NameValueCollection>クエリ文字列として URI に追加する名前/値ペアを含むインスタンス。 内容、<xref:System.Net.WebClient.QueryString%2A>プロパティで始まり、疑問符 (?)、アンパサンドでいずれかの別の名前/値ペアが区切られます (&)。  
  
   
  
## Examples  
 次のコード例は、コマンドラインからのユーザー入力を受け取るし、ビルド、<xref:System.Collections.Specialized.NameValueCollection>に割り当てられている、<xref:System.Net.WebClient.QueryString%2A>プロパティです。 これをダウンロード、応答、サーバーからローカル ファイルにします。  
  
 [!code-cpp[WebClient_QueryString#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient_QueryString/CPP/webclient_querystring.cpp#1)]
 [!code-csharp[WebClient_QueryString#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient_QueryString/CS/webclient_querystring.cs#1)]
 [!code-vb[WebClient_QueryString#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient_QueryString/VB/webclient_querystring.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResponseHeaders">
      <MemberSignature Language="C#" Value="public System.Net.WebHeaderCollection ResponseHeaders { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.WebHeaderCollection ResponseHeaders" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebClient.ResponseHeaders" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebHeaderCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>応答に関連付けられているヘッダーの名前/値ペアのコレクションを取得します。</summary>
        <value>A <see cref="T:System.Net.WebHeaderCollection" /> 、応答に関連付けられているヘッダーの名前/値ペアを含むまたは<see langword="null" />応答が受信されていない場合。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebClient.ResponseHeaders%2A>プロパティが含まれています、<xref:System.Net.WebHeaderCollection>ヘッダー情報を含むインスタンス、<xref:System.Net.WebClient>応答を受信します。  
  
   
  
## Examples  
 次のコード例をダウンロードし、表示、<xref:System.Net.WebClient.ResponseHeaders%2A>サーバーによって返されます。  
  
 [!code-cpp[WebClient_BaseAddress_ResponseHeaders#2](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient_BaseAddress_ResponseHeaders/CPP/webclient_baseaddress_responseheaders.cpp#2)]
 [!code-csharp[WebClient_BaseAddress_ResponseHeaders#2](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient_BaseAddress_ResponseHeaders/CS/webclient_baseaddress_responseheaders.cs#2)]
 [!code-vb[WebClient_BaseAddress_ResponseHeaders#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient_BaseAddress_ResponseHeaders/VB/webclient_baseaddress_responseheaders.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UploadData">
      <MemberSignature Language="C#" Value="public byte[] UploadData (string address, byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] UploadData(string address, unsigned int8[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadData(System.String,System.Byte[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="data" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="address">データを受信する、リソースの URI。</param>
        <param name="data">リソースに送信するデータ バッファー。</param>
        <summary>URI で識別されるリソースにデータ バッファーをアップロードします。</summary>
        <returns>A<see cref="T:System.Byte" />リソースからの応答の本文を含む配列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebClient.UploadData%2A>メソッドは、リソースにデータ バッファーを送信します。  
  
 このメソッドは、ストレージのコマンドを使用して、FTP リソースをアップロードします。 HTTP リソースでは、POST メソッドを使用します。 基になる要求がサーバーによって認識されない、基礎となるプロトコル クラス処理を決定します。 通常、<xref:System.Net.WebException>でがスローされます、<xref:System.Net.WebException.Status%2A>はエラーを示すプロパティを設定します。  
  
 <xref:System.Net.WebClient.UploadData%2A>メソッドのコンテンツを送信する`data`エンコードなしでサーバーにします。 このメソッドは、データのアップロード中にブロックしています。 続けるには、サーバーの応答の待機中に実行するのいずれかの操作を使用して、<xref:System.Net.WebClient.UploadDataAsync%2A>メソッドです。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティが空の文字列 ("") と`address`は絶対 URI が含まれていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>要求されたデータの絶対 URI を作成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティが空の文字列ではないに追加されます`address`です。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。 [.NET Framework のネットワークのトレース](~/docs/framework/network-programming/network-tracing.md)です。  
  
   
  
## Examples  
 次のコード例はコンソールから入力した文字列を変換、<xref:System.Byte>配列し、指定されたサーバーを使用して、先の配列を投稿<xref:System.Net.WebClient.UploadData%2A>です。 サーバーからの応答はコンソールに表示されます。  
  
 [!code-cpp[WebClient_UpLoadData2#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient_UpLoadData2/CPP/webclient_uploaddata2.cpp#1)]
 [!code-csharp[WebClient_UpLoadData2#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient_UpLoadData2/CS/webclient_uploaddata2.cs#1)]
 [!code-vb[WebClient_UpLoadData2#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient_UpLoadData2/VB/webclient_uploaddata2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="address" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">結合して形成された URI <see cref="P:System.Net.WebClient.BaseAddress" />、および<paramref name="address" />が無効です。  
  
 または  
  
 <paramref name="data" /> は <see langword="null" /> です。  
  
 または  
  
 データの送信中にエラーが発生しました。  
  
 または  
  
 リソースをホストするサーバーからの応答がありませんでした。</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadData">
      <MemberSignature Language="C#" Value="public byte[] UploadData (Uri address, byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] UploadData(class System.Uri address, unsigned int8[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadData(System.Uri,System.Byte[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="data" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="address">データを受信する、リソースの URI。</param>
        <param name="data">リソースに送信するデータ バッファー。</param>
        <summary>URI で識別されるリソースにデータ バッファーをアップロードします。</summary>
        <returns>A<see cref="T:System.Byte" />リソースからの応答の本文を含む配列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebClient.UploadData%2A>メソッドは、リソースにデータ バッファーを送信します。  
  
 このメソッドは、ストレージのコマンドを使用して、FTP リソースをアップロードします。 HTTP リソースでは、POST メソッドを使用します。 基になる要求がサーバーによって認識されない、基礎となるプロトコル クラス処理を決定します。 通常、<xref:System.Net.WebException>でがスローされます、<xref:System.Net.WebException.Status%2A>はエラーを示すプロパティを設定します。  
  
 <xref:System.Net.WebClient.UploadData%2A>メソッドのコンテンツを送信する`data`エンコードなしでサーバーにします。 このメソッドは、データのアップロード中にブロックしています。 続けるには、サーバーの応答の待機中に実行するのいずれかの操作を使用して、<xref:System.Net.WebClient.UploadDataAsync%2A>メソッドです。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティが空の文字列 ("") と`address`は絶対 URI が含まれていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>要求されたデータの絶対 URI を作成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティが空の文字列ではないに追加されます`address`です。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。 [.NET Framework のネットワークのトレース](~/docs/framework/network-programming/network-tracing.md)です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="address" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">結合して形成された URI <see cref="P:System.Net.WebClient.BaseAddress" />、および<paramref name="address" />が無効です。  
  
 または  
  
 <paramref name="data" /> は <see langword="null" /> です。  
  
 または  
  
 データの送信中にエラーが発生しました。  
  
 または  
  
 リソースをホストするサーバーからの応答がありませんでした。</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadData">
      <MemberSignature Language="C#" Value="public byte[] UploadData (string address, string method, byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] UploadData(string address, string method, unsigned int8[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadData(System.String,System.String,System.Byte[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="address">データを受信する、リソースの URI。</param>
        <param name="method">リソースにデータを送信するために使用する HTTP メソッド。 Null の場合、既定値は POST を http に、ストレージ ftp です。</param>
        <param name="data">リソースに送信するデータ バッファー。</param>
        <summary>指定したメソッドを使用して、指定されたリソースへのデータ バッファーをアップロードします。</summary>
        <returns>A<see cref="T:System.Byte" />リソースからの応答の本文を含む配列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebClient.UploadData%2A>メソッドで指定された HTTP メソッドを使用してリソースにデータ バッファーを送信する、`method`パラメーター、サーバーからすべての応答を返します。 このメソッドは、データのアップロード中にブロックしています。 続けるには、サーバーの応答の待機中に実行するのいずれかの操作を使用して、<xref:System.Net.WebClient.UploadDataAsync%2A>メソッドです。  
  
 <xref:System.Net.WebClient.UploadData%2A>メソッドのコンテンツを送信する`data`エンコードなしでサーバーにします。  
  
 場合、`method`が認識できない、サーバーによって、基になるプロトコル クラスが発生する内容を決定する動詞を指定します。 通常、<xref:System.Net.WebException>でがスローされます、<xref:System.Net.WebException.Status%2A>はエラーを示すプロパティを設定します。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティが空の文字列 ("") と`address`は絶対 URI が含まれていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>要求されたデータの絶対 URI を作成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティが空の文字列ではないに追加されます`address`です。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。 [.NET Framework のネットワークのトレース](~/docs/framework/network-programming/network-tracing.md)です。  
  
   
  
## Examples  
 次のコード例をバイト配列に、コンソールから入力した文字列に変換しを使用して、指定されたサーバーに、配列<xref:System.Net.WebClient.UploadData%2A>です。 サーバーからの応答はコンソールに表示されます。  
  
 [!code-cpp[WebClient_UpLoadData_Headers#2](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient_UpLoadData_Headers/CPP/webclient_uploaddata_headers.cpp#2)]
 [!code-csharp[WebClient_UpLoadData_Headers#2](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient_UpLoadData_Headers/CS/webclient_uploaddata_headers.cs#2)]
 [!code-vb[WebClient_UpLoadData_Headers#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient_UpLoadData_Headers/VB/webclient_uploaddata_headers.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="address" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">結合して形成された URI <see cref="P:System.Net.WebClient.BaseAddress" />、および<paramref name="address" />が無効です。  
  
 または  
  
 <paramref name="data" /> は <see langword="null" /> です。  
  
 または  
  
 データのアップロード中にエラーが発生しました。  
  
 または  
  
 リソースをホストするサーバーからの応答がありませんでした。</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadData">
      <MemberSignature Language="C#" Value="public byte[] UploadData (Uri address, string method, byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] UploadData(class System.Uri address, string method, unsigned int8[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadData(System.Uri,System.String,System.Byte[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="address">データを受信する、リソースの URI。</param>
        <param name="method">リソースにデータを送信するために使用する HTTP メソッド。 Null の場合、既定値は POST を http に、ストレージ ftp です。</param>
        <param name="data">リソースに送信するデータ バッファー。</param>
        <summary>指定したメソッドを使用して、指定されたリソースへのデータ バッファーをアップロードします。</summary>
        <returns>A<see cref="T:System.Byte" />リソースからの応答の本文を含む配列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebClient.UploadData%2A>メソッドで指定された HTTP メソッドを使用してリソースにデータ バッファーを送信する、`method`パラメーター、サーバーからすべての応答を返します。 このメソッドは、データのアップロード中にブロックしています。 続けるには、サーバーの応答の待機中に実行するのいずれかの操作を使用して、<xref:System.Net.WebClient.UploadDataAsync%2A>メソッドです。  
  
 <xref:System.Net.WebClient.UploadData%2A>メソッドのコンテンツを送信する`data`エンコードなしでサーバーにします。  
  
 場合、`method`が認識できない、サーバーによって、基になるプロトコル クラスが発生する内容を決定する動詞を指定します。 通常、<xref:System.Net.WebException>でがスローされます、<xref:System.Net.WebException.Status%2A>はエラーを示すプロパティを設定します。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティが空の文字列 ("") と`address`は絶対 URI が含まれていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>要求されたデータの絶対 URI を作成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティが空の文字列ではないに追加されます`address`です。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。 [.NET Framework のネットワークのトレース](~/docs/framework/network-programming/network-tracing.md)です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="address" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">結合して形成された URI <see cref="P:System.Net.WebClient.BaseAddress" />、および<paramref name="address" />が無効です。  
  
 または  
  
 <paramref name="data" /> は <see langword="null" /> です。  
  
 または  
  
 データのアップロード中にエラーが発生しました。  
  
 または  
  
 リソースをホストするサーバーからの応答がありませんでした。</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadDataAsync">
      <MemberSignature Language="C#" Value="public void UploadDataAsync (Uri address, byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UploadDataAsync(class System.Uri address, unsigned int8[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadDataAsync(System.Uri,System.Byte[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="data" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="address">データを受信する、リソースの URI。</param>
        <param name="data">リソースに送信するデータ バッファー。</param>
        <summary>POST メソッドを使用して、URI で識別されるリソースにデータ バッファーをアップロードします。 このメソッドは、呼び出し元のスレッドをブロックしていません。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、リソースへのデータ バッファーを送信します。 データ バッファーは、スレッド プールから自動的に割り当てられているスレッド リソースを使用して非同期に送信されます。 データがエンコードされていません。 データのアップロードが完了したときに通知を受信するには、イベント ハンドラーを追加、<xref:System.Net.WebClient.UploadDataCompleted>イベント。  
  
 このメソッドは、データの送信中に、呼び出し元のスレッドをブロックしません。 サーバーの応答の待機中にデータおよびブロックを送信するには、いずれかを使用、<xref:System.Net.WebClient.UploadData%2A>メソッドです。  
  
 使用して完了していない非同期操作を取り消すことができます、<xref:System.Net.WebClient.CancelAsync%2A>メソッドです。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティは空の文字列ではありません ("")、および`address`は絶対 URI が含まれていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>を要求されたデータの絶対 URI を形成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティが空の文字列ではないに追加されます`address`です。  
  
 このメソッドは、ストレージのコマンドを使用して、FTP リソースをアップロードします。 HTTP リソースでは、POST メソッドを使用します。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。 [.NET Framework のネットワークのトレース](~/docs/framework/network-programming/network-tracing.md)です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="address" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">結合して形成された URI<see cref="P:System.Net.WebClient.BaseAddress" />と<paramref name="address" />が無効です。  
  
 または  
  
 ストリームを開くときにエラーが発生しました。  
  
 または  
  
 リソースをホストするサーバーからの応答がありませんでした。</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadDataAsync">
      <MemberSignature Language="C#" Value="public void UploadDataAsync (Uri address, string method, byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UploadDataAsync(class System.Uri address, string method, unsigned int8[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadDataAsync(System.Uri,System.String,System.Byte[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="address">データを受信する、リソースの URI。</param>
        <param name="method">リソースにデータを送信するために使用するメソッド。 場合<see langword="null" />既定では、http およびストレージの POST は ftp のです。</param>
        <param name="data">リソースに送信するデータ バッファー。</param>
        <summary>指定したメソッドを使用して、URI で識別されるリソースにデータ バッファーをアップロードします。 このメソッドは、呼び出し元のスレッドをブロックしていません。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、リソースへのデータ バッファーを送信します。 データ バッファーは、スレッド プールから自動的に割り当てられているスレッド リソースを使用して非同期に送信されます。 データがエンコードされていません。 データのアップロードが完了したときに通知を受信するには、イベント ハンドラーを追加、<xref:System.Net.WebClient.UploadDataCompleted>イベント。  
  
 このメソッドは、データの送信中に、呼び出し元のスレッドをブロックしません。 サーバーの応答の待機中にデータおよびブロックを送信するには、いずれかを使用、<xref:System.Net.WebClient.UploadData%2A>メソッドです。  
  
 使用して完了していない非同期操作を取り消すことができます、<xref:System.Net.WebClient.CancelAsync%2A>メソッドです。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティは空の文字列ではありません ("")、および`address`は絶対 URI が含まれていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>を要求されたデータの絶対 URI を形成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティが空の文字列ではないに追加されます`address`です。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。 [.NET Framework のネットワークのトレース](~/docs/framework/network-programming/network-tracing.md)です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="address" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">結合して形成された URI<see cref="P:System.Net.WebClient.BaseAddress" />と<paramref name="address" />が無効です。  
  
 または  
  
 ストリームを開くときにエラーが発生しました。  
  
 または  
  
 リソースをホストするサーバーからの応答がありませんでした。</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadDataAsync">
      <MemberSignature Language="C#" Value="public void UploadDataAsync (Uri address, string method, byte[] data, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UploadDataAsync(class System.Uri address, string method, unsigned int8[] data, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadDataAsync(System.Uri,System.String,System.Byte[],System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.Byte[]" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="address">データを受信する、リソースの URI。</param>
        <param name="method">リソースにデータを送信するために使用するメソッド。 場合<see langword="null" />既定では、http およびストレージの POST は ftp のです。</param>
        <param name="data">リソースに送信するデータ バッファー。</param>
        <param name="userToken">非同期操作の完了時に呼び出されるメソッドに渡されるユーザー定義のオブジェクト。</param>
        <summary>データ バッファーを指定したメソッドを使用して、トークンを識別する URI で識別されるリソースをアップロードします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、リソースへのデータ バッファーを送信します。 データ バッファーは、スレッド プールから自動的に割り当てられているスレッド リソースを使用して非同期に送信されます。 データがエンコードされていません。 データのアップロードが完了したときに通知を受信するには、イベント ハンドラーを追加、<xref:System.Net.WebClient.UploadDataCompleted>イベント。  
  
 このメソッドは、データの送信中に、呼び出し元のスレッドをブロックしません。 サーバーの応答の待機中にデータおよびブロックを送信するには、いずれかを使用、<xref:System.Net.WebClient.UploadData%2A>メソッドです。  
  
 使用して完了していない非同期操作を取り消すことができます、<xref:System.Net.WebClient.CancelAsync%2A>メソッドです。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティは空の文字列ではありません ("")、および`address`は絶対 URI が含まれていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>を要求されたデータの絶対 URI を形成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティが空の文字列ではないに追加されます`address`です。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。 [.NET Framework のネットワークのトレース](~/docs/framework/network-programming/network-tracing.md)です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="address" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">結合して形成された URI<see cref="P:System.Net.WebClient.BaseAddress" />と<paramref name="address" />が無効です。  
  
 または  
  
 ストリームを開くときにエラーが発生しました。  
  
 または  
  
 リソースをホストするサーバーからの応答がありませんでした。</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadDataCompleted">
      <MemberSignature Language="C#" Value="public event System.Net.UploadDataCompletedEventHandler UploadDataCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Net.UploadDataCompletedEventHandler UploadDataCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Net.WebClient.UploadDataCompleted" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.UploadDataCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>非同期のデータ アップロード操作が完了したときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このイベントは、非同期のデータのアップロード操作が完了するたびにでは発生します。 非同期のデータのアップロードが呼び出すことによって開始された、<xref:System.Net.WebClient.UploadDataAsync%2A>メソッドです。  
  
 <xref:System.Net.UploadDataCompletedEventHandler>は、このイベントのデリゲート。 <xref:System.Net.UploadDataCompletedEventArgs>クラスには、イベント データを持つイベント ハンドラーが用意されています。  
  
 イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。  
  
   
  
## Examples  
 次のコード例では、このイベントのイベント ハンドラーの設定を示します。  
  
 [!code-cpp[NCLWebClientAsync#36](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#36)]
 [!code-csharp[NCLWebClientAsync#36](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#36)]
 [!code-vb[NCLWebClientAsync#36](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#36)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UploadDataTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; UploadDataTaskAsync (string address, byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; UploadDataTaskAsync(string address, unsigned int8[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadDataTaskAsync(System.String,System.Byte[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="data" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="address">データを受信する、リソースの URI。</param>
        <param name="data">リソースに送信するデータ バッファー。</param>
        <summary>含むデータ バッファーをアップロード、<see cref="T:System.Byte" />タスク オブジェクトを使用して非同期操作として指定された URI への配列。</summary>
        <returns><see cref="T:System.Threading.Tasks.Task`1" /> を返します。  
  
 非同期操作を表すタスク オブジェクト。 <see cref="P:System.Threading.Tasks.Task`1.Result" />タスク オブジェクトのプロパティを返します、<see cref="T:System.Byte" />データ バッファーがアップロードされたときに、リソースから受け取った応答の本文を含む配列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この操作はブロックされません。 返された<xref:System.Threading.Tasks.Task%601>オブジェクトは、完了した後、データ バッファーは、リソースにアップロードされています。  
  
 このメソッドは、リソースへのデータ バッファーを送信します。 データ バッファーは、スレッド プールから自動的に割り当てられているスレッド リソースを使用して非同期に送信されます。 データがエンコードされていません。  
  
 使用して完了していない非同期操作を取り消すことができます、<xref:System.Net.WebClient.CancelAsync%2A>メソッドです。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティは空の文字列ではありません ("")、および`address`は絶対 URI が含まれていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>を要求されたデータの絶対 URI を形成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティが空の文字列ではないに追加されます`address`です。  
  
 このメソッドは、ストレージのコマンドを使用して、FTP リソースをアップロードします。 HTTP リソースでは、POST メソッドを使用します。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。 [.NET Framework のネットワークのトレース](~/docs/framework/network-programming/network-tracing.md)です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="address" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">結合して形成された URI<see cref="P:System.Net.WebClient.BaseAddress" />と<paramref name="address" />が無効です。  
  
 または  
  
 ストリームを開くときにエラーが発生しました。  
  
 または  
  
 リソースをホストするサーバーからの応答がありませんでした。</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadDataTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; UploadDataTaskAsync (Uri address, byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; UploadDataTaskAsync(class System.Uri address, unsigned int8[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadDataTaskAsync(System.Uri,System.Byte[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="data" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="address">データを受信する、リソースの URI。</param>
        <param name="data">リソースに送信するデータ バッファー。</param>
        <summary>含むデータ バッファーをアップロード、<see cref="T:System.Byte" />タスク オブジェクトを使用して非同期操作として指定された URI への配列。</summary>
        <returns><see cref="T:System.Threading.Tasks.Task`1" /> を返します。  
  
 非同期操作を表すタスク オブジェクト。 <see cref="P:System.Threading.Tasks.Task`1.Result" />タスク オブジェクトのプロパティを返します、<see cref="T:System.Byte" />データ バッファーがアップロードされたときに、リソースから受け取った応答の本文を含む配列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この操作はブロックされません。 返された<xref:System.Threading.Tasks.Task%601>オブジェクトは、完了した後、データ バッファーは、リソースにアップロードされています。  
  
 このメソッドは、リソースへのデータ バッファーを送信します。 データ バッファーは、スレッド プールから自動的に割り当てられているスレッド リソースを使用して非同期に送信されます。 データがエンコードされていません。  
  
 使用して完了していない非同期操作を取り消すことができます、<xref:System.Net.WebClient.CancelAsync%2A>メソッドです。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティは空の文字列ではありません ("")、および`address`は絶対 URI が含まれていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>を要求されたデータの絶対 URI を形成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティが空の文字列ではないに追加されます`address`です。  
  
 このメソッドは、ストレージのコマンドを使用して、FTP リソースをアップロードします。 HTTP リソースでは、POST メソッドを使用します。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。 [.NET Framework のネットワークのトレース](~/docs/framework/network-programming/network-tracing.md)です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="address" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">結合して形成された URI<see cref="P:System.Net.WebClient.BaseAddress" />と<paramref name="address" />が無効です。  
  
 または  
  
 ストリームを開くときにエラーが発生しました。  
  
 または  
  
 リソースをホストするサーバーからの応答がありませんでした。</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadDataTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; UploadDataTaskAsync (string address, string method, byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; UploadDataTaskAsync(string address, string method, unsigned int8[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadDataTaskAsync(System.String,System.String,System.Byte[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="address">データを受信する、リソースの URI。</param>
        <param name="method">リソースにデータを送信するために使用するメソッド。 場合<see langword="null" />既定では、http およびストレージの POST は ftp のです。</param>
        <param name="data">リソースに送信するデータ バッファー。</param>
        <summary>含むデータ バッファーをアップロード、<see cref="T:System.Byte" />タスク オブジェクトを使用して非同期操作として指定された URI への配列。</summary>
        <returns><see cref="T:System.Threading.Tasks.Task`1" /> を返します。  
  
 非同期操作を表すタスク オブジェクト。 <see cref="P:System.Threading.Tasks.Task`1.Result" />タスク オブジェクトのプロパティを返します、<see cref="T:System.Byte" />データ バッファーがアップロードされたときに、リソースから受け取った応答の本文を含む配列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この操作はブロックされません。 返された<xref:System.Threading.Tasks.Task%601>オブジェクトは、完了した後、データ バッファーは、リソースにアップロードされています。  
  
 このメソッドは、リソースへのデータ バッファーを送信します。 データ バッファーは、スレッド プールから自動的に割り当てられているスレッド リソースを使用して非同期に送信されます。 データがエンコードされていません。  
  
 使用して完了していない非同期操作を取り消すことができます、<xref:System.Net.WebClient.CancelAsync%2A>メソッドです。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティは空の文字列ではありません ("")、および`address`は絶対 URI が含まれていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>を要求されたデータの絶対 URI を形成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティが空の文字列ではないに追加されます`address`です。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。 [.NET Framework のネットワークのトレース](~/docs/framework/network-programming/network-tracing.md)です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="address" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">結合して形成された URI<see cref="P:System.Net.WebClient.BaseAddress" />と<paramref name="address" />が無効です。  
  
 または  
  
 ストリームを開くときにエラーが発生しました。  
  
 または  
  
 リソースをホストするサーバーからの応答がありませんでした。</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadDataTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; UploadDataTaskAsync (Uri address, string method, byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; UploadDataTaskAsync(class System.Uri address, string method, unsigned int8[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadDataTaskAsync(System.Uri,System.String,System.Byte[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="address">データを受信する、リソースの URI。</param>
        <param name="method">リソースにデータを送信するために使用するメソッド。 場合<see langword="null" />既定では、http およびストレージの POST は ftp のです。</param>
        <param name="data">リソースに送信するデータ バッファー。</param>
        <summary>含むデータ バッファーをアップロード、<see cref="T:System.Byte" />タスク オブジェクトを使用して非同期操作として指定された URI への配列。</summary>
        <returns><see cref="T:System.Threading.Tasks.Task`1" /> を返します。  
  
 非同期操作を表すタスク オブジェクト。 <see cref="P:System.Threading.Tasks.Task`1.Result" />タスク オブジェクトのプロパティを返します、<see cref="T:System.Byte" />データ バッファーがアップロードされたときに、リソースから受け取った応答の本文を含む配列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この操作はブロックされません。 返された<xref:System.Threading.Tasks.Task%601>オブジェクトは、完了した後、データ バッファーは、リソースにアップロードされています。  
  
 このメソッドは、リソースへのデータ バッファーを送信します。 データ バッファーは、スレッド プールから自動的に割り当てられているスレッド リソースを使用して非同期に送信されます。 データがエンコードされていません。  
  
 使用して完了していない非同期操作を取り消すことができます、<xref:System.Net.WebClient.CancelAsync%2A>メソッドです。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティは空の文字列ではありません ("")、および`address`は絶対 URI が含まれていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>を要求されたデータの絶対 URI を形成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティが空の文字列ではないに追加されます`address`です。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。 [.NET Framework のネットワークのトレース](~/docs/framework/network-programming/network-tracing.md)です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="address" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">結合して形成された URI<see cref="P:System.Net.WebClient.BaseAddress" />と<paramref name="address" />が無効です。  
  
 または  
  
 ストリームを開くときにエラーが発生しました。  
  
 または  
  
 リソースをホストするサーバーからの応答がありませんでした。</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public byte[] UploadFile (string address, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] UploadFile(string address, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadFile(System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">ファイルを受信するリソースの URI。 たとえば、ftp://localhost/samplefile.txt です。</param>
        <param name="fileName">リソースに送信するファイル。 たとえば、"samplefile.txt"とします。</param>
        <summary>指定した URI を持つリソースに指定されたローカル ファイルをアップロードします。</summary>
        <returns>A<see cref="T:System.Byte" />リソースからの応答の本文を含む配列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebClient.UploadFile%2A>メソッドは、リソースにローカル ファイルを送信します。 このメソッドは、ストレージのコマンドを使用して、FTP リソースをアップロードします。 HTTP リソースでは、POST メソッドを使用します。  
  
 このメソッドは、ファイルのアップロード中にブロックしています。 続けるには、サーバーの応答の待機中に実行するのいずれかの操作を使用して、<xref:System.Net.WebClient.UploadFileAsync%2A>メソッドです。  
  
 `POST`メソッドが HTTP で定義されています。 基になる要求が HTTP を使用しない場合および`POST`が認識できない、サーバーによって、基になるプロトコル クラスが発生する内容を決定します。 通常、<xref:System.Net.WebException>でがスローされます、<xref:System.Net.WebException.Status%2A>はエラーを示すプロパティを設定します。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティが空の文字列 ("") と`address`は絶対 URI が含まれていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>要求されたデータの絶対 URI を作成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティが空の文字列ではないに追加されます`address`です。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。 [.NET Framework のネットワークのトレース](~/docs/framework/network-programming/network-tracing.md)です。  
  
   
  
## Examples  
 次のコード例を使用して指定された URI に指定されたファイルをアップロード<xref:System.Net.WebClient.UploadFile%2A>です。 サーバーによって返されるすべての応答は、コンソールに表示されます。  
  
 [!code-cpp[WebClient_UpLoadFile#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient_UpLoadFile/CPP/webclient_uploadfile.cpp#1)]
 [!code-csharp[WebClient_UpLoadFile#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient_UpLoadFile/CS/webclient_uploadfile.cs#1)]
 [!code-vb[WebClient_UpLoadFile#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient_UpLoadFile/VB/webclient_uploadfile.vb#1)]  
  
 次のコード例は、ポストされたファイルを受け入れることができる ASP.NET ページを示していてで使用するのに適した、<xref:System.Net.WebClient.UploadFile%2A>メソッドです。 ページは、Web サーバー上に存在する必要があります。 そのアドレスの値を提供する、`address`のパラメーター、<xref:System.Net.WebClient.UploadFile%2A>メソッドです。  
  
 [!code-aspx-csharp[NCLWebClientAsp#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsp/CS/fileuploadercs.aspx#1)]
 [!code-aspx-vb[NCLWebClientAsp#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsp/VB/fileuploadervb.aspx#1)]
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="address" /> パラメーターが <see langword="null" /> です。  
  
 または  
  
 <paramref name="fileName" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">結合して形成された URI <see cref="P:System.Net.WebClient.BaseAddress" />、および<paramref name="address" />が無効です。  
  
 または  
  
 <paramref name="fileName" /><see langword="null" />は<see cref="F:System.String.Empty" />、無効な文字が含まれるか、存在しません。  
  
 または  
  
 ファイルのアップロード中にエラーが発生しました。  
  
 または  
  
 リソースをホストするサーバーからの応答がありませんでした。  
  
 または  
  
 <see langword="Content-type" />ヘッダーが始まる<see langword="multipart" />です。</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">ローカル ファイルにアクセスします。 関連する列挙値:<see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />です。</permission>
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public byte[] UploadFile (Uri address, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] UploadFile(class System.Uri address, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadFile(System.Uri,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">ファイルを受信するリソースの URI。 たとえば、ftp://localhost/samplefile.txt です。</param>
        <param name="fileName">リソースに送信するファイル。 たとえば、"samplefile.txt"とします。</param>
        <summary>指定した URI を持つリソースに指定されたローカル ファイルをアップロードします。</summary>
        <returns>A<see cref="T:System.Byte" />リソースからの応答の本文を含む配列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebClient.UploadFile%2A>メソッドは、リソースにローカル ファイルを送信します。 このメソッドは、ストレージのコマンドを使用して、FTP リソースをアップロードします。 HTTP リソースでは、POST メソッドを使用します。  
  
 このメソッドは、ファイルのアップロード中にブロックしています。 続けるには、サーバーの応答の待機中に実行するのいずれかの操作を使用して、<xref:System.Net.WebClient.UploadFileAsync%2A>メソッドです。  
  
 `POST`メソッドが HTTP で定義されています。 基になる要求が HTTP を使用しない場合および`POST`が認識できない、サーバーによって、基になるプロトコル クラスが発生する内容を決定します。 通常、<xref:System.Net.WebException>でがスローされます、<xref:System.Net.WebException.Status%2A>はエラーを示すプロパティを設定します。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティが空の文字列 ("") と`address`は絶対 URI が含まれていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>要求されたデータの絶対 URI を作成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティが空の文字列ではないに追加されます`address`です。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。 [.NET Framework のネットワークのトレース](~/docs/framework/network-programming/network-tracing.md)です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="address" /> パラメーターが <see langword="null" /> です。  
  
 または  
  
 <paramref name="fileName" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">結合して形成された URI <see cref="P:System.Net.WebClient.BaseAddress" />、および<paramref name="address" />が無効です。  
  
 または  
  
 <paramref name="fileName" /><see langword="null" />は<see cref="F:System.String.Empty" />、無効な文字が含まれるか、存在しません。  
  
 または  
  
 ファイルのアップロード中にエラーが発生しました。  
  
 または  
  
 リソースをホストするサーバーからの応答がありませんでした。  
  
 または  
  
 <see langword="Content-type" />ヘッダーが始まる<see langword="multipart" />です。</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">ローカル ファイルにアクセスします。 関連する列挙値:<see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />です。</permission>
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public byte[] UploadFile (string address, string method, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] UploadFile(string address, string method, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadFile(System.String,System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">ファイルを受信するリソースの URI。</param>
        <param name="method">リソース ファイルを送信するために使用するメソッド。 場合<see langword="null" />既定では、http およびストレージの POST は ftp のです。</param>
        <param name="fileName">リソースに送信するファイル。</param>
        <summary>指定したメソッドを使用して、指定されたリソースに指定されたローカル ファイルをアップロードします。</summary>
        <returns>A<see cref="T:System.Byte" />リソースからの応答の本文を含む配列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 アドレスが HTTP リソースを指定すると、<xref:System.Net.WebClient.UploadFile%2A>メソッドで指定された HTTP メソッドを使用してリソースにローカル ファイルを送信する、`method`パラメーターをサーバーからすべての応答を返します。 このメソッドは、ファイルのアップロード中にブロックしています。 続けるには、サーバーの応答の待機中に実行するのいずれかの操作を使用して、<xref:System.Net.WebClient.UploadFileAsync%2A>メソッドです。  
  
 場合、`method`パラメーターは、サーバーによって認識されない動詞を指定または`address`リソース、基礎となるプロトコル クラスが発生する内容を決定します。 通常、<xref:System.Net.WebException>でがスローされます、<xref:System.Net.WebException.Status%2A>はエラーを示すプロパティを設定します。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティが空の文字列 ("") と`address`は絶対 URI が含まれていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>要求されたデータの絶対 URI を作成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティが空の文字列ではないに追加されます`address`です。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。 [.NET Framework のネットワークのトレース](~/docs/framework/network-programming/network-tracing.md)です。  
  
   
  
## Examples  
 次のコード例を使用して指定された URI に指定されたファイルをアップロード<xref:System.Net.WebClient.UploadFile%2A>です。 サーバーによって返されるすべての応答は、コンソールに表示されます。  
  
 [!code-cpp[WebClient_UpLoadFile2#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient_UpLoadFile2/CPP/webclient_uploadfile2.cpp#1)]
 [!code-csharp[WebClient_UpLoadFile2#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient_UpLoadFile2/CS/webclient_uploadfile2.cs#1)]
 [!code-vb[WebClient_UpLoadFile2#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient_UpLoadFile2/VB/webclient_uploadfile2.vb#1)]  
  
 次のコード例は、ポストされたファイルを受け入れることができる ASP.NET ページを示していてで使用するのに適した、<xref:System.Net.WebClient.UploadFile%2A>メソッドです。 ページは、Web サーバー上に存在する必要があります。 そのアドレスの値を提供する、`address`のパラメーター、<xref:System.Net.WebClient.UploadFile%2A>メソッドです。  
  
 [!code-aspx-csharp[NCLWebClientAsp#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsp/CS/fileuploadercs.aspx#1)]
 [!code-aspx-vb[NCLWebClientAsp#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsp/VB/fileuploadervb.aspx#1)]
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="address" /> パラメーターが <see langword="null" /> です。  
  
 または  
  
 <paramref name="fileName" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">結合して形成された URI <see cref="P:System.Net.WebClient.BaseAddress" />、および<paramref name="address" />が無効です。  
  
 または  
  
 <paramref name="fileName" /><see langword="null" />は<see cref="F:System.String.Empty" />、無効な文字が含まれるか、存在しません。  
  
 または  
  
 ファイルのアップロード中にエラーが発生しました。  
  
 または  
  
 リソースをホストするサーバーからの応答がありませんでした。  
  
 または  
  
 <see langword="Content-type" />ヘッダーが始まる<see langword="multipart" />です。</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">ローカル ファイルにアクセスします。 関連する列挙。<see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></permission>
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public byte[] UploadFile (Uri address, string method, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] UploadFile(class System.Uri address, string method, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadFile(System.Uri,System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">ファイルを受信するリソースの URI。</param>
        <param name="method">リソース ファイルを送信するために使用するメソッド。 場合<see langword="null" />既定では、http およびストレージの POST は ftp のです。</param>
        <param name="fileName">リソースに送信するファイル。</param>
        <summary>指定したメソッドを使用して、指定されたリソースに指定されたローカル ファイルをアップロードします。</summary>
        <returns>A<see cref="T:System.Byte" />リソースからの応答の本文を含む配列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 アドレスが HTTP リソースを指定すると、<xref:System.Net.WebClient.UploadFile%2A>メソッドで指定された HTTP メソッドを使用してリソースにローカル ファイルを送信する、`method`パラメーターをサーバーからすべての応答を返します。 このメソッドは、ファイルのアップロード中にブロックしています。 続けるには、サーバーの応答の待機中に実行するのいずれかの操作を使用して、<xref:System.Net.WebClient.UploadFileAsync%2A>メソッドです。  
  
 場合、`method`パラメーターは、サーバーによって認識されない動詞を指定または`address`リソース、基礎となるプロトコル クラスが発生する内容を決定します。 通常、<xref:System.Net.WebException>でがスローされます、<xref:System.Net.WebException.Status%2A>はエラーを示すプロパティを設定します。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティが空の文字列 ("") と`address`は絶対 URI が含まれていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>要求されたデータの絶対 URI を作成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティが空の文字列ではないに追加されます`address`です。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。 [.NET Framework のネットワークのトレース](~/docs/framework/network-programming/network-tracing.md)です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="address" /> パラメーターが <see langword="null" /> です。  
  
 または  
  
 <paramref name="fileName" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">結合して形成された URI <see cref="P:System.Net.WebClient.BaseAddress" />、および<paramref name="address" />が無効です。  
  
 または  
  
 <paramref name="fileName" /><see langword="null" />は<see cref="F:System.String.Empty" />、無効な文字が含まれるか、存在しません。  
  
 または  
  
 ファイルのアップロード中にエラーが発生しました。  
  
 または  
  
 リソースをホストするサーバーからの応答がありませんでした。  
  
 または  
  
 <see langword="Content-type" />ヘッダーが始まる<see langword="multipart" />です。</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">ローカル ファイルにアクセスします。 関連する列挙。<see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></permission>
      </Docs>
    </Member>
    <Member MemberName="UploadFileAsync">
      <MemberSignature Language="C#" Value="public void UploadFileAsync (Uri address, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UploadFileAsync(class System.Uri address, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadFileAsync(System.Uri,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">ファイルを受信するリソースの URI。 HTTP リソースの場合は、この URI は、ASP ページ、スクリプトなど、POST メソッドを使用して送信される要求を受け入れることができるリソースを識別する必要があります。</param>
        <param name="fileName">リソースに送信するファイル。</param>
        <summary>POST メソッドを使用して、指定されたリソースに指定されたローカル ファイルをアップロードします。 このメソッドは、呼び出し元のスレッドをブロックしていません。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ファイルは、スレッド プールから自動的に割り当てられているスレッド リソースを使用して非同期に送信されます。 ファイルのアップロードが完了したときに通知を受信するには、イベント ハンドラーを追加、<xref:System.Net.WebClient.UploadFileCompleted>イベント。  
  
 このメソッドは、ファイルの送信中に、呼び出し元のスレッドをブロックしません。 サーバーの応答の待機中に、ファイルおよびブロックを送信するのいずれかの操作を使用して、<xref:System.Net.WebClient.UploadFile%2A>メソッドです。  
  
 使用して完了していない非同期操作を取り消すことができます、<xref:System.Net.WebClient.CancelAsync%2A>メソッドです。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティが空の文字列 ("")、`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>要求されたデータの絶対 URI を作成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティが空の文字列ではないに追加されます`address`です。  
  
 このメソッドは、ストレージのコマンドを使用して、FTP リソースをアップロードします。 HTTP リソースでは、POST メソッドを使用します。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。 [.NET Framework のネットワークのトレース](~/docs/framework/network-programming/network-tracing.md)です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="address" /> パラメーターが <see langword="null" /> です。  
  
 または  
  
 <paramref name="fileName" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">結合して形成された URI<see cref="P:System.Net.WebClient.BaseAddress" />と<paramref name="address" />が無効です。  
  
 または  
  
 <paramref name="fileName" /><see langword="null" />は<see cref="F:System.String.Empty" />、無効な文字が含まれていますか、ファイルに指定されたパスが存在しません。  
  
 または  
  
 ストリームを開くときにエラーが発生しました。  
  
 または  
  
 リソースをホストするサーバーからの応答がありませんでした。  
  
 または  
  
 <see langword="Content-type" />ヘッダーが始まる<see langword="multipart" />です。</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">ローカル ファイルにアクセスします。 関連する列挙値:<see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />です。</permission>
      </Docs>
    </Member>
    <Member MemberName="UploadFileAsync">
      <MemberSignature Language="C#" Value="public void UploadFileAsync (Uri address, string method, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UploadFileAsync(class System.Uri address, string method, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadFileAsync(System.Uri,System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">ファイルを受信するリソースの URI。 HTTP リソースの場合は、この URI は、ASP ページ、スクリプトなど、POST メソッドを使用して送信される要求を受け入れることができるリソースを識別する必要があります。</param>
        <param name="method">リソースにデータを送信するために使用するメソッド。 場合<see langword="null" />既定では、http およびストレージの POST は ftp のです。</param>
        <param name="fileName">リソースに送信するファイル。</param>
        <summary>POST メソッドを使用して、指定されたリソースに指定されたローカル ファイルをアップロードします。 このメソッドは、呼び出し元のスレッドをブロックしていません。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ファイルは、スレッド プールから自動的に割り当てられているスレッド リソースを使用して非同期に送信されます。 ファイルのアップロードが完了したときに通知を受信するには、イベント ハンドラーを追加、<xref:System.Net.WebClient.UploadFileCompleted>イベント。  
  
 このメソッドは、ファイルの送信中に、呼び出し元のスレッドをブロックしません。 サーバーの応答の待機中に、ファイルおよびブロックを送信するのいずれかの操作を使用して、<xref:System.Net.WebClient.UploadFile%2A>メソッドです。  
  
 使用して完了していない非同期操作を取り消すことができます、<xref:System.Net.WebClient.CancelAsync%2A>メソッドです。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティが空の文字列 ("")、`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>要求されたデータの絶対 URI を作成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティが空の文字列ではないに追加されます`address`です。  
  
 このメソッドは、ストレージのコマンドを使用して、FTP リソースをアップロードします。 HTTP リソースでは、POST メソッドを使用します。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。 [.NET Framework のネットワークのトレース](~/docs/framework/network-programming/network-tracing.md)です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="address" /> パラメーターが <see langword="null" /> です。  
  
 または  
  
 <paramref name="fileName" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">結合して形成された URI<see cref="P:System.Net.WebClient.BaseAddress" />と<paramref name="address" />が無効です。  
  
 または  
  
 <paramref name="fileName" /><see langword="null" />は<see cref="F:System.String.Empty" />、無効な文字が含まれていますか、ファイルに指定されたパスが存在しません。  
  
 または  
  
 ストリームを開くときにエラーが発生しました。  
  
 または  
  
 リソースをホストするサーバーからの応答がありませんでした。  
  
 または  
  
 <see langword="Content-type" />ヘッダーが始まる<see langword="multipart" />です。</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">ローカル ファイルにアクセスします。 関連する列挙値:<see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />です。</permission>
      </Docs>
    </Member>
    <Member MemberName="UploadFileAsync">
      <MemberSignature Language="C#" Value="public void UploadFileAsync (Uri address, string method, string fileName, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UploadFileAsync(class System.Uri address, string method, string fileName, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadFileAsync(System.Uri,System.String,System.String,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="address">ファイルを受信するリソースの URI。 HTTP リソースの場合は、この URI は、ASP ページ、スクリプトなど、POST メソッドを使用して送信される要求を受け入れることができるリソースを識別する必要があります。</param>
        <param name="method">リソースにデータを送信するために使用するメソッド。 場合<see langword="null" />既定では、http およびストレージの POST は ftp のです。</param>
        <param name="fileName">リソースに送信するファイル。</param>
        <param name="userToken">非同期操作の完了時に呼び出されるメソッドに渡されるユーザー定義のオブジェクト。</param>
        <summary>POST メソッドを使用して、指定されたリソースに指定されたローカル ファイルをアップロードします。 このメソッドは、呼び出し元のスレッドをブロックしていません。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ファイルは、スレッド プールから自動的に割り当てられているスレッド リソースを使用して非同期に送信されます。 ファイルのアップロードが完了したときに通知を受信するには、イベント ハンドラーを追加、<xref:System.Net.WebClient.UploadFileCompleted>イベント。  
  
 このメソッドは、ファイルの送信中に、呼び出し元のスレッドをブロックしません。 サーバーの応答の待機中に、ファイルおよびブロックを送信するのいずれかの操作を使用して、<xref:System.Net.WebClient.UploadFile%2A>メソッドです。  
  
 使用して完了していない非同期操作を取り消すことができます、<xref:System.Net.WebClient.CancelAsync%2A>メソッドです。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティが空の文字列 ("")、`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>要求されたデータの絶対 URI を作成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティが空の文字列ではないに追加されます`address`です。  
  
 このメソッドは、ストレージのコマンドを使用して、FTP リソースをアップロードします。 HTTP リソースでは、POST メソッドを使用します。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。 [.NET Framework のネットワークのトレース](~/docs/framework/network-programming/network-tracing.md)です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="address" /> パラメーターが <see langword="null" /> です。  
  
 または  
  
 <paramref name="fileName" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">結合して形成された URI<see cref="P:System.Net.WebClient.BaseAddress" />と<paramref name="address" />が無効です。  
  
 または  
  
 <paramref name="fileName" /><see langword="null" />は<see cref="F:System.String.Empty" />、無効な文字が含まれていますか、ファイルに指定されたパスが存在しません。  
  
 または  
  
 ストリームを開くときにエラーが発生しました。  
  
 または  
  
 リソースをホストするサーバーからの応答がありませんでした。  
  
 または  
  
 <see langword="Content-type" />ヘッダーが始まる<see langword="multipart" />です。</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">ローカル ファイルにアクセスします。 関連する列挙値:<see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />です。</permission>
      </Docs>
    </Member>
    <Member MemberName="UploadFileCompleted">
      <MemberSignature Language="C#" Value="public event System.Net.UploadFileCompletedEventHandler UploadFileCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Net.UploadFileCompletedEventHandler UploadFileCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Net.WebClient.UploadFileCompleted" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.UploadFileCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>非同期のファイル アップロード操作が完了したときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このイベントは、非同期のファイルのアップロード操作が完了するたびにでは発生します。 非同期のファイル アップロードは呼び出すことによって、<xref:System.Net.WebClient.UploadFileAsync%2A>メソッドです。  
  
 <xref:System.Net.UploadFileCompletedEventHandler>は、このイベントのデリゲート。 <xref:System.Net.UploadFileCompletedEventArgs>クラスには、イベント データを持つイベント ハンドラーが用意されています。  
  
 イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。  
  
   
  
## Examples  
 次のコード例では、このイベントのイベント ハンドラーの設定を示します。  
  
 [!code-cpp[NCLWebClientAsync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#4)]
 [!code-csharp[NCLWebClientAsync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#4)]
 [!code-vb[NCLWebClientAsync#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UploadFileTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; UploadFileTaskAsync (string address, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; UploadFileTaskAsync(string address, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadFileTaskAsync(System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">ファイルを受信するリソースの URI。 HTTP リソースの場合は、この URI は、ASP ページ、スクリプトなど、POST メソッドを使用して送信される要求を受け入れることができるリソースを識別する必要があります。</param>
        <param name="fileName">リソースに送信するローカル ファイルです。</param>
        <summary>タスク オブジェクトを使用して非同期操作として、リソースに指定されたローカル ファイルをアップロードします。</summary>
        <returns><see cref="T:System.Threading.Tasks.Task`1" /> を返します。  
  
 非同期操作を表すタスク オブジェクト。 <see cref="P:System.Threading.Tasks.Task`1.Result" />タスク オブジェクトのプロパティを返します、<see cref="T:System.Byte" />ファイルがアップロードされたときに、リソースから受け取った応答の本文を含む配列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この操作はブロックされません。 返された<xref:System.Threading.Tasks.Task%601>オブジェクトは、リソースに、ファイルがアップロードされた後に完了します。 ファイルは、スレッド プールから自動的に割り当てられているスレッド リソースを使用して非同期に送信されます。  
  
 使用して完了していない非同期操作を取り消すことができます、<xref:System.Net.WebClient.CancelAsync%2A>メソッドです。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティが空の文字列 ("")、`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>要求されたデータの絶対 URI を作成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティが空の文字列ではないに追加されます`address`です。  
  
 このメソッドは、ストレージのコマンドを使用して、FTP リソースをアップロードします。 HTTP リソースでは、POST メソッドを使用します。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。 [.NET Framework のネットワークのトレース](~/docs/framework/network-programming/network-tracing.md)です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="address" /> パラメーターが <see langword="null" /> です。  
  
 または  
  
 <paramref name="fileName" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">結合して形成された URI<see cref="P:System.Net.WebClient.BaseAddress" />と<paramref name="address" />が無効です。  
  
 または  
  
 <paramref name="fileName" /><see langword="null" />は<see cref="F:System.String.Empty" />、無効な文字が含まれていますか、ファイルに指定されたパスが存在しません。  
  
 または  
  
 ストリームを開くときにエラーが発生しました。  
  
 または  
  
 リソースをホストするサーバーからの応答がありませんでした。  
  
 または  
  
 <see langword="Content-type" />ヘッダーが始まる<see langword="multipart" />です。</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadFileTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; UploadFileTaskAsync (Uri address, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; UploadFileTaskAsync(class System.Uri address, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadFileTaskAsync(System.Uri,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">ファイルを受信するリソースの URI。 HTTP リソースの場合は、この URI は、ASP ページ、スクリプトなど、POST メソッドを使用して送信される要求を受け入れることができるリソースを識別する必要があります。</param>
        <param name="fileName">リソースに送信するローカル ファイルです。</param>
        <summary>タスク オブジェクトを使用して非同期操作として、リソースに指定されたローカル ファイルをアップロードします。</summary>
        <returns><see cref="T:System.Threading.Tasks.Task`1" /> を返します。  
  
 非同期操作を表すタスク オブジェクト。 <see cref="P:System.Threading.Tasks.Task`1.Result" />タスク オブジェクトのプロパティを返します、<see cref="T:System.Byte" />ファイルがアップロードされたときに、リソースから受け取った応答の本文を含む配列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この操作はブロックされません。 返された<xref:System.Threading.Tasks.Task%601>オブジェクトは、リソースに、ファイルがアップロードされた後に完了します。 ファイルは、スレッド プールから自動的に割り当てられているスレッド リソースを使用して非同期に送信されます。  
  
 使用して完了していない非同期操作を取り消すことができます、<xref:System.Net.WebClient.CancelAsync%2A>メソッドです。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティが空の文字列 ("")、`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>要求されたデータの絶対 URI を作成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティが空の文字列ではないに追加されます`address`です。  
  
 このメソッドは、ストレージのコマンドを使用して、FTP リソースをアップロードします。 HTTP リソースでは、POST メソッドを使用します。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。 [.NET Framework のネットワークのトレース](~/docs/framework/network-programming/network-tracing.md)です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="address" /> パラメーターが <see langword="null" /> です。  
  
 または  
  
 <paramref name="fileName" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">結合して形成された URI<see cref="P:System.Net.WebClient.BaseAddress" />と<paramref name="address" />が無効です。  
  
 または  
  
 <paramref name="fileName" /><see langword="null" />は<see cref="F:System.String.Empty" />、無効な文字が含まれていますか、ファイルに指定されたパスが存在しません。  
  
 または  
  
 ストリームを開くときにエラーが発生しました。  
  
 または  
  
 リソースをホストするサーバーからの応答がありませんでした。  
  
 または  
  
 <see langword="Content-type" />ヘッダーが始まる<see langword="multipart" />です。</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadFileTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; UploadFileTaskAsync (string address, string method, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; UploadFileTaskAsync(string address, string method, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadFileTaskAsync(System.String,System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">ファイルを受信するリソースの URI。 HTTP リソースの場合は、この URI は、ASP ページ、スクリプトなど、POST メソッドを使用して送信される要求を受け入れることができるリソースを識別する必要があります。</param>
        <param name="method">リソースにデータを送信するために使用するメソッド。 場合<see langword="null" />既定では、http およびストレージの POST は ftp のです。</param>
        <param name="fileName">リソースに送信するローカル ファイルです。</param>
        <summary>タスク オブジェクトを使用して非同期操作として、リソースに指定されたローカル ファイルをアップロードします。</summary>
        <returns><see cref="T:System.Threading.Tasks.Task`1" /> を返します。  
  
 非同期操作を表すタスク オブジェクト。 <see cref="P:System.Threading.Tasks.Task`1.Result" />タスク オブジェクトのプロパティを返します、<see cref="T:System.Byte" />ファイルがアップロードされたときに、リソースから受け取った応答の本文を含む配列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この操作はブロックされません。 返された<xref:System.Threading.Tasks.Task%601>オブジェクトは、リソースに、ファイルがアップロードされた後に完了します。 ファイルは、スレッド プールから自動的に割り当てられているスレッド リソースを使用して非同期に送信されます。  
  
 使用して完了していない非同期操作を取り消すことができます、<xref:System.Net.WebClient.CancelAsync%2A>メソッドです。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティが空の文字列 ("")、`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>要求されたデータの絶対 URI を作成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティが空の文字列ではないに追加されます`address`です。  
  
 既定では、このメソッドは、FTP リソースをアップロードするのにストレージ コマンドを使用します。 HTTP リソースでは、POST メソッドを使用します。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。 [.NET Framework のネットワークのトレース](~/docs/framework/network-programming/network-tracing.md)です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="address" /> パラメーターが <see langword="null" /> です。  
  
 または  
  
 <paramref name="fileName" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">結合して形成された URI<see cref="P:System.Net.WebClient.BaseAddress" />と<paramref name="address" />が無効です。  
  
 または  
  
 <paramref name="fileName" /><see langword="null" />は<see cref="F:System.String.Empty" />、無効な文字が含まれていますか、ファイルに指定されたパスが存在しません。  
  
 または  
  
 ストリームを開くときにエラーが発生しました。  
  
 または  
  
 リソースをホストするサーバーからの応答がありませんでした。  
  
 または  
  
 <see langword="Content-type" />ヘッダーが始まる<see langword="multipart" />です。</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadFileTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; UploadFileTaskAsync (Uri address, string method, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; UploadFileTaskAsync(class System.Uri address, string method, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadFileTaskAsync(System.Uri,System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">ファイルを受信するリソースの URI。 HTTP リソースの場合は、この URI は、ASP ページ、スクリプトなど、POST メソッドを使用して送信される要求を受け入れることができるリソースを識別する必要があります。</param>
        <param name="method">リソースにデータを送信するために使用するメソッド。 場合<see langword="null" />既定では、http およびストレージの POST は ftp のです。</param>
        <param name="fileName">リソースに送信するローカル ファイルです。</param>
        <summary>タスク オブジェクトを使用して非同期操作として、リソースに指定されたローカル ファイルをアップロードします。</summary>
        <returns><see cref="T:System.Threading.Tasks.Task`1" /> を返します。  
  
 非同期操作を表すタスク オブジェクト。 <see cref="P:System.Threading.Tasks.Task`1.Result" />タスク オブジェクトのプロパティを返します、<see cref="T:System.Byte" />ファイルがアップロードされたときに、リソースから受け取った応答の本文を含む配列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この操作はブロックされません。 返された<xref:System.Threading.Tasks.Task%601>オブジェクトは、リソースに、ファイルがアップロードされた後に完了します。 ファイルは、スレッド プールから自動的に割り当てられているスレッド リソースを使用して非同期に送信されます。  
  
 使用して完了していない非同期操作を取り消すことができます、<xref:System.Net.WebClient.CancelAsync%2A>メソッドです。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティが空の文字列 ("")、`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>要求されたデータの絶対 URI を作成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティが空の文字列ではないに追加されます`address`です。  
  
 既定では、このメソッドは、FTP リソースをアップロードするのにストレージ コマンドを使用します。 HTTP リソースでは、POST メソッドを使用します。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。 [.NET Framework のネットワークのトレース](~/docs/framework/network-programming/network-tracing.md)です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="address" /> パラメーターが <see langword="null" /> です。  
  
 または  
  
 <paramref name="fileName" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">結合して形成された URI<see cref="P:System.Net.WebClient.BaseAddress" />と<paramref name="address" />が無効です。  
  
 または  
  
 <paramref name="fileName" /><see langword="null" />は<see cref="F:System.String.Empty" />、無効な文字が含まれていますか、ファイルに指定されたパスが存在しません。  
  
 または  
  
 ストリームを開くときにエラーが発生しました。  
  
 または  
  
 リソースをホストするサーバーからの応答がありませんでした。  
  
 または  
  
 <see langword="Content-type" />ヘッダーが始まる<see langword="multipart" />です。</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadProgressChanged">
      <MemberSignature Language="C#" Value="public event System.Net.UploadProgressChangedEventHandler UploadProgressChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Net.UploadProgressChangedEventHandler UploadProgressChanged" />
      <MemberSignature Language="DocId" Value="E:System.Net.WebClient.UploadProgressChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.UploadProgressChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>一部またはすべてのデータの非同期アップロード操作が正常に転送するときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このイベントは、非同期のアップロードが進行するたびにでは発生します。 このイベントは、次のメソッドのいずれかを使用してアップロードが開始されたときに発生します。  
  
|メソッド|説明|  
|------------|-----------------|  
|<xref:System.Net.WebClient.UploadDataAsync%2A>|送信、<xref:System.Byte>呼び出し元のスレッドをブロックすることがなく、リソースへの配列。|  
|<xref:System.Net.WebClient.UploadFileAsync%2A>|呼び出し元のスレッドをブロックすることがなく、リソースをローカル ファイルを送信します。|  
|<xref:System.Net.WebClient.UploadValuesAsync%2A>|送信、<xref:System.Collections.Specialized.NameValueCollection>リソースを返す、<xref:System.Byte>呼び出し元のスレッドをブロックすることがなく、すべての応答を含む配列。|  
  
 <xref:System.Net.UploadProgressChangedEventHandler>は、このイベントのデリゲート。 <xref:System.Net.UploadProgressChangedEventArgs>クラスには、イベント データを持つイベント ハンドラーが用意されています。  
  
 イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。  
  
   
  
## Examples  
 次のコード例では、このイベントのイベント ハンドラーの設定を示します。  
  
 [!code-cpp[NCLWebClientAsync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#4)]
 [!code-csharp[NCLWebClientAsync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#4)]
 [!code-vb[NCLWebClientAsync#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#4)]  
  
 次のコード例は、このイベントのハンドラーの実装を示しています。  
  
 [!code-cpp[NCLWebClientAsync#42](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#42)]
 [!code-csharp[NCLWebClientAsync#42](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#42)]
 [!code-vb[NCLWebClientAsync#42](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#42)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UploadString">
      <MemberSignature Language="C#" Value="public string UploadString (string address, string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string UploadString(string address, string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadString(System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">文字列を受信するリソースの URI。 Http リソースの場合は、この URI は、ASP ページ、スクリプトなど、POST メソッドを使用して送信される要求を受け入れることができるリソースを識別する必要があります。</param>
        <param name="data">アップロードする文字列。</param>
        <summary>POST メソッドを使用して、指定されたリソースに、指定した文字列をアップロードします。</summary>
        <returns>A<see cref="T:System.String" />サーバーによって送信された応答を格納します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 文字列をアップロードする前にこのメソッドに変換する、<xref:System.Byte>配列に指定されたエンコーディングを使用して、<xref:System.Net.WebClient.Encoding%2A>プロパティです。 このメソッドは、文字列が転送されるときにブロックします。 文字列を送信して、サーバーの応答の待機中に実行を続行のいずれかの操作を使用して、<xref:System.Net.WebClient.UploadStringAsync%2A>メソッドです。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティは空の文字列ではありません ("")、および`address`は絶対 URI が含まれていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>を要求されたデータの絶対 URI を形成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティが空の文字列ではないに追加されます`address`です。  
  
 このメソッドは、ストレージのコマンドを使用して、FTP リソースをアップロードします。 HTTP リソースでは、POST メソッドを使用します。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。 [.NET Framework のネットワークのトレース](~/docs/framework/network-programming/network-tracing.md)です。  
  
   
  
## Examples  
 次のコード例では、このメソッドを呼び出すことを示します。  
  
 [!code-cpp[NCLWebClientAsync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#1)]
 [!code-csharp[NCLWebClientAsync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#1)]
 [!code-vb[NCLWebClientAsync#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="address" /> パラメーターが <see langword="null" /> です。  
  
 または  
  
 <paramref name="data" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">結合して形成された URI<see cref="P:System.Net.WebClient.BaseAddress" />と<paramref name="address" />が無効です。  
  
 または  
  
 リソースをホストするサーバーからの応答がありませんでした。</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadString">
      <MemberSignature Language="C#" Value="public string UploadString (Uri address, string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string UploadString(class System.Uri address, string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadString(System.Uri,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">文字列を受信するリソースの URI。 Http リソースの場合は、この URI は、ASP ページ、スクリプトなど、POST メソッドを使用して送信される要求を受け入れることができるリソースを識別する必要があります。</param>
        <param name="data">アップロードする文字列。</param>
        <summary>POST メソッドを使用して、指定されたリソースに、指定した文字列をアップロードします。</summary>
        <returns>A<see cref="T:System.String" />サーバーによって送信された応答を格納します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 文字列をアップロードする前にこのメソッドに変換する、<xref:System.Byte>配列に指定されたエンコーディングを使用して、<xref:System.Net.WebClient.Encoding%2A>プロパティです。 このメソッドは、文字列が転送されるときにブロックします。 文字列を送信して、サーバーの応答の待機中に実行を続行のいずれかの操作を使用して、<xref:System.Net.WebClient.UploadStringAsync%2A>メソッドです。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティは空の文字列ではありません ("")、および`address`は絶対 URI が含まれていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>を要求されたデータの絶対 URI を形成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティが空の文字列ではないに追加されます`address`です。  
  
 このメソッドは、ストレージのコマンドを使用して、FTP リソースをアップロードします。 HTTP リソースでは、POST メソッドを使用します。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。 [.NET Framework のネットワークのトレース](~/docs/framework/network-programming/network-tracing.md)です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="address" /> パラメーターが <see langword="null" /> です。  
  
 または  
  
 <paramref name="data" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">結合して形成された URI<see cref="P:System.Net.WebClient.BaseAddress" />と<paramref name="address" />が無効です。  
  
 または  
  
 リソースをホストするサーバーからの応答がありませんでした。</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadString">
      <MemberSignature Language="C#" Value="public string UploadString (string address, string method, string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string UploadString(string address, string method, string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadString(System.String,System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">文字列を受信するリソースの URI。 この URI はと共に送信される要求を受け入れることができるリソースを識別する必要があります、<c>メソッド</c>メソッドです。</param>
        <param name="method">リソースに文字列を送信するために使用する HTTP メソッド。 Null の場合、既定値は POST を http に、ストレージ ftp です。</param>
        <param name="data">アップロードする文字列。</param>
        <summary>指定した文字列を指定したメソッドを使用して、指定されたリソースにアップロードします。</summary>
        <returns>A<see cref="T:System.String" />サーバーによって送信された応答を格納します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 文字列をアップロードする前にこのメソッドに変換する、<xref:System.Byte>配列に指定されたエンコーディングを使用して、<xref:System.Net.WebClient.Encoding%2A>プロパティです。 このメソッドは、文字列が転送されるときにブロックします。 文字列を送信して、サーバーの応答の待機中に実行を続行のいずれかの操作を使用して、<xref:System.Net.WebClient.UploadStringAsync%2A>メソッドです。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティが空の文字列 ("") と`address`は絶対 URI が含まれていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>要求されたデータの絶対 URI を作成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティが空の文字列ではないに追加されます`address`です。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。 [.NET Framework のネットワークのトレース](~/docs/framework/network-programming/network-tracing.md)です。  
  
   
  
## Examples  
 次のコード例では、このメソッドを呼び出すことを示します。  
  
 [!code-cpp[NCLWebClientAsync#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#2)]
 [!code-csharp[NCLWebClientAsync#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#2)]
 [!code-vb[NCLWebClientAsync#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="address" /> パラメーターが <see langword="null" /> です。  
  
 または  
  
 <paramref name="data" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">結合して形成された URI<see cref="P:System.Net.WebClient.BaseAddress" />と<paramref name="address" />が無効です。  
  
 または  
  
 リソースをホストするサーバーからの応答がありませんでした。  
  
 または  
  
 <paramref name="method" />コンテンツの送信には使用できません。</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadString">
      <MemberSignature Language="C#" Value="public string UploadString (Uri address, string method, string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string UploadString(class System.Uri address, string method, string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadString(System.Uri,System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">文字列を受信するリソースの URI。 この URI はと共に送信される要求を受け入れることができるリソースを識別する必要があります、<c>メソッド</c>メソッドです。</param>
        <param name="method">リソースに文字列を送信するために使用する HTTP メソッド。 Null の場合、既定値は POST を http に、ストレージ ftp です。</param>
        <param name="data">アップロードする文字列。</param>
        <summary>指定した文字列を指定したメソッドを使用して、指定されたリソースにアップロードします。</summary>
        <returns>A<see cref="T:System.String" />サーバーによって送信された応答を格納します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 文字列をアップロードする前にこのメソッドに変換する、<xref:System.Byte>配列に指定されたエンコーディングを使用して、<xref:System.Net.WebClient.Encoding%2A>プロパティです。 このメソッドは、文字列が転送されるときにブロックします。 文字列を送信して、サーバーの応答の待機中に実行を続行のいずれかの操作を使用して、<xref:System.Net.WebClient.UploadStringAsync%2A>メソッドです。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティが空の文字列 ("") と`address`は絶対 URI が含まれていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>要求されたデータの絶対 URI を作成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティが空の文字列ではないに追加されます`address`です。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。 [.NET Framework のネットワークのトレース](~/docs/framework/network-programming/network-tracing.md)です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="address" /> パラメーターが <see langword="null" /> です。  
  
 または  
  
 <paramref name="data" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">結合して形成された URI<see cref="P:System.Net.WebClient.BaseAddress" />と<paramref name="address" />が無効です。  
  
 または  
  
 リソースをホストするサーバーからの応答がありませんでした。  
  
 または  
  
 <paramref name="method" />コンテンツの送信には使用できません。</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadStringAsync">
      <MemberSignature Language="C#" Value="public void UploadStringAsync (Uri address, string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UploadStringAsync(class System.Uri address, string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadStringAsync(System.Uri,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">文字列を受信するリソースの URI。 HTTP リソースの場合は、この URI は、ASP ページ、スクリプトなど、POST メソッドを使用して送信される要求を受け入れることができるリソースを識別する必要があります。</param>
        <param name="data">アップロードする文字列。</param>
        <summary>指定した文字列を指定されたリソースにアップロードします。 このメソッドは、呼び出し元のスレッドをブロックしていません。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、リソースへの文字列を送信します。 文字列は、スレッド プールから自動的に割り当てられているスレッド リソースを使用して非同期に送信されます。 文字列をアップロードする前にこのメソッドに変換する、<xref:System.Byte>配列に指定されたエンコーディングを使用して、<xref:System.Net.WebClient.Encoding%2A>プロパティです。 文字列のアップロードが完了したときに通知を受信するイベント ハンドラーを追加することができます、<xref:System.Net.WebClient.UploadStringCompleted>イベント。  
  
 このメソッドは、文字列の送信中に、呼び出し元のスレッドをブロックしません。 サーバーの応答の待機中に文字列およびブロックを送信するには、いずれかを使用、<xref:System.Net.WebClient.UploadString%2A>メソッドです。  
  
 使用して完了していない非同期操作を取り消すことができます、<xref:System.Net.WebClient.CancelAsync%2A>メソッドです。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティが空の文字列 ("") と`address`は絶対 URI が含まれていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>要求されたデータの絶対 URI を作成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティが空の文字列ではないに追加されます`address`です。  
  
 このメソッドは、ストレージのコマンドを使用して、FTP リソースをアップロードします。 HTTP リソースでは、POST メソッドを使用します。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。 [.NET Framework のネットワークのトレース](~/docs/framework/network-programming/network-tracing.md)です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="address" /> パラメーターが <see langword="null" /> です。  
  
 または  
  
 <paramref name="data" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">結合して形成された URI<see cref="P:System.Net.WebClient.BaseAddress" />と<paramref name="address" />が無効です。  
  
 または  
  
 リソースをホストするサーバーからの応答がありませんでした。</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadStringAsync">
      <MemberSignature Language="C#" Value="public void UploadStringAsync (Uri address, string method, string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UploadStringAsync(class System.Uri address, string method, string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadStringAsync(System.Uri,System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">文字列を受信するリソースの URI。 HTTP リソースの場合は、この URI は、ASP ページ、スクリプトなど、POST メソッドを使用して送信される要求を受け入れることができるリソースを識別する必要があります。</param>
        <param name="method">リソース ファイルを送信するために使用する HTTP メソッド。 Null の場合、既定値は POST を http に、ストレージ ftp です。</param>
        <param name="data">アップロードする文字列。</param>
        <summary>指定した文字列を指定されたリソースにアップロードします。 このメソッドは、呼び出し元のスレッドをブロックしていません。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、リソースへの文字列を送信します。 文字列は、スレッド プールから自動的に割り当てられているスレッド リソースを使用して非同期に送信されます。 文字列をアップロードする前にこのメソッドに変換する、<xref:System.Byte>配列に指定されたエンコーディングを使用して、<xref:System.Net.WebClient.Encoding%2A>プロパティです。 文字列のアップロードが完了したときに通知を受信するイベント ハンドラーを追加することができます、<xref:System.Net.WebClient.UploadStringCompleted>イベント。  
  
 このメソッドは、文字列の送信中に、呼び出し元のスレッドをブロックしません。 サーバーの応答の待機中に文字列およびブロックを送信するには、いずれかを使用、<xref:System.Net.WebClient.UploadString%2A>メソッドです。  
  
 使用して完了していない非同期操作を取り消すことができます、<xref:System.Net.WebClient.CancelAsync%2A>メソッドです。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティが空の文字列 ("") と`address`は絶対 URI が含まれていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>要求されたデータの絶対 URI を作成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティが空の文字列ではないに追加されます`address`です。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。 [.NET Framework のネットワークのトレース](~/docs/framework/network-programming/network-tracing.md)です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="address" /> パラメーターが <see langword="null" /> です。  
  
 または  
  
 <paramref name="data" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">結合して形成された URI<see cref="P:System.Net.WebClient.BaseAddress" />と<paramref name="address" />が無効です。  
  
 または  
  
 <paramref name="method" />コンテンツの送信には使用できません。  
  
 または  
  
 リソースをホストするサーバーからの応答がありませんでした。</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadStringAsync">
      <MemberSignature Language="C#" Value="public void UploadStringAsync (Uri address, string method, string data, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UploadStringAsync(class System.Uri address, string method, string data, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadStringAsync(System.Uri,System.String,System.String,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.String" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="address">文字列を受信するリソースの URI。 HTTP リソースの場合は、この URI は、ASP ページ、スクリプトなど、POST メソッドを使用して送信される要求を受け入れることができるリソースを識別する必要があります。</param>
        <param name="method">リソース ファイルを送信するために使用する HTTP メソッド。 Null の場合、既定値は POST を http に、ストレージ ftp です。</param>
        <param name="data">アップロードする文字列。</param>
        <param name="userToken">非同期操作の完了時に呼び出されるメソッドに渡されるユーザー定義のオブジェクト。</param>
        <summary>指定した文字列を指定されたリソースにアップロードします。 このメソッドは、呼び出し元のスレッドをブロックしていません。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、リソースへの文字列を送信します。 文字列は、スレッド プールから自動的に割り当てられているスレッド リソースを使用して非同期に送信されます。 文字列をアップロードする前にこのメソッドに変換する、<xref:System.Byte>配列に指定されたエンコーディングを使用して、<xref:System.Net.WebClient.Encoding%2A>プロパティです。 文字列のアップロードが完了したときに通知を受信するイベント ハンドラーを追加することができます、<xref:System.Net.WebClient.UploadStringCompleted>イベント。  
  
 このメソッドは、文字列の送信中に、呼び出し元のスレッドをブロックしません。 サーバーの応答の待機中に文字列およびブロックを送信するには、いずれかを使用、<xref:System.Net.WebClient.UploadString%2A>メソッドです。  
  
 使用して完了していない非同期操作を取り消すことができます、<xref:System.Net.WebClient.CancelAsync%2A>メソッドです。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティが空の文字列 ("") と`address`は絶対 URI が含まれていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>要求されたデータの絶対 URI を作成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティが空の文字列ではないに追加されます`address`です。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。 [.NET Framework のネットワークのトレース](~/docs/framework/network-programming/network-tracing.md)です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="address" /> パラメーターが <see langword="null" /> です。  
  
 または  
  
 <paramref name="data" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">結合して形成された URI<see cref="P:System.Net.WebClient.BaseAddress" />と<paramref name="address" />が無効です。  
  
 または  
  
 <paramref name="method" />コンテンツの送信には使用できません。  
  
 または  
  
 リソースをホストするサーバーからの応答がありませんでした。</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadStringCompleted">
      <MemberSignature Language="C#" Value="public event System.Net.UploadStringCompletedEventHandler UploadStringCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Net.UploadStringCompletedEventHandler UploadStringCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Net.WebClient.UploadStringCompleted" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.UploadStringCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>文字列-アップロードの非同期操作の完了時に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このイベントは、非同期の文字列のアップロード操作が完了するたびにします。 文字列の非同期アップロードは呼び出すことによって、<xref:System.Net.WebClient.UploadStringAsync%2A>メソッドです。  
  
 <xref:System.Net.UploadStringCompletedEventHandler>は、このイベントのデリゲート。 <xref:System.Net.UploadStringCompletedEventArgs>クラスには、イベント データを持つイベント ハンドラーが用意されています。  
  
 イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。  
  
   
  
## Examples  
 次のコード例では、このイベントのイベント ハンドラーの設定を示します。  
  
 [!code-cpp[NCLWebClientAsync#38](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#38)]
 [!code-csharp[NCLWebClientAsync#38](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#38)]
 [!code-vb[NCLWebClientAsync#38](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#38)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UploadStringTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;string&gt; UploadStringTaskAsync (string address, string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;string&gt; UploadStringTaskAsync(string address, string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadStringTaskAsync(System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">文字列を受信するリソースの URI。 HTTP リソースの場合は、この URI は、ASP ページ、スクリプトなど、POST メソッドを使用して送信される要求を受け入れることができるリソースを識別する必要があります。</param>
        <param name="data">アップロードする文字列。</param>
        <summary>タスク オブジェクトを使用して非同期操作として、指定した文字列を指定されたリソースにアップロードします。</summary>
        <returns><see cref="T:System.Threading.Tasks.Task`1" /> を返します。  
  
 非同期操作を表すタスク オブジェクト。 <see cref="P:System.Threading.Tasks.Task`1.Result" />タスク オブジェクトのプロパティを返します、<see cref="T:System.String" />サーバーによって送信された応答を格納します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この操作はブロックされません。 返された<xref:System.Threading.Tasks.Task%601>オブジェクトは、文字列がリソースにアップロードされた後に完了します。 文字列は、スレッド プールから自動的に割り当てられているスレッド リソースを使用して非同期に送信されます。  
  
 使用して完了していない非同期操作を取り消すことができます、<xref:System.Net.WebClient.CancelAsync%2A>メソッドです。  
  
 文字列をアップロードする前にこのメソッドに変換する、<xref:System.Byte>配列に指定されたエンコーディングを使用して、<xref:System.Net.WebClient.Encoding%2A>プロパティです。 このメソッドは、文字列が転送されるときにブロックします。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティが空の文字列 ("") と`address`は絶対 URI が含まれていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>要求されたデータの絶対 URI を作成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティが空の文字列ではないに追加されます`address`です。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。 [.NET Framework のネットワークのトレース](~/docs/framework/network-programming/network-tracing.md)です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="address" /> パラメーターが <see langword="null" /> です。  
  
 または  
  
 <paramref name="data" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">結合して形成された URI<see cref="P:System.Net.WebClient.BaseAddress" />と<paramref name="address" />が無効です。  
  
 または  
  
 リソースをホストするサーバーからの応答がありませんでした。</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadStringTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;string&gt; UploadStringTaskAsync (Uri address, string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;string&gt; UploadStringTaskAsync(class System.Uri address, string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadStringTaskAsync(System.Uri,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">文字列を受信するリソースの URI。 HTTP リソースの場合は、この URI は、ASP ページ、スクリプトなど、POST メソッドを使用して送信される要求を受け入れることができるリソースを識別する必要があります。</param>
        <param name="data">アップロードする文字列。</param>
        <summary>タスク オブジェクトを使用して非同期操作として、指定した文字列を指定されたリソースにアップロードします。</summary>
        <returns><see cref="T:System.Threading.Tasks.Task`1" /> を返します。  
  
 非同期操作を表すタスク オブジェクト。 <see cref="P:System.Threading.Tasks.Task`1.Result" />タスク オブジェクトのプロパティを返します、<see cref="T:System.String" />サーバーによって送信された応答を格納します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この操作はブロックされません。 返された<xref:System.Threading.Tasks.Task%601>オブジェクトは、文字列がリソースにアップロードされた後に完了します。 文字列は、スレッド プールから自動的に割り当てられているスレッド リソースを使用して非同期に送信されます。  
  
 使用して完了していない非同期操作を取り消すことができます、<xref:System.Net.WebClient.CancelAsync%2A>メソッドです。  
  
 文字列をアップロードする前にこのメソッドに変換する、<xref:System.Byte>配列に指定されたエンコーディングを使用して、<xref:System.Net.WebClient.Encoding%2A>プロパティです。 このメソッドは、文字列が転送されるときにブロックします。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティが空の文字列 ("") と`address`は絶対 URI が含まれていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>要求されたデータの絶対 URI を作成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティが空の文字列ではないに追加されます`address`です。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。 [.NET Framework のネットワークのトレース](~/docs/framework/network-programming/network-tracing.md)です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="address" /> パラメーターが <see langword="null" /> です。  
  
 または  
  
 <paramref name="data" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">結合して形成された URI<see cref="P:System.Net.WebClient.BaseAddress" />と<paramref name="address" />が無効です。  
  
 または  
  
 リソースをホストするサーバーからの応答がありませんでした。</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadStringTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;string&gt; UploadStringTaskAsync (string address, string method, string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;string&gt; UploadStringTaskAsync(string address, string method, string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadStringTaskAsync(System.String,System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">文字列を受信するリソースの URI。 HTTP リソースの場合は、この URI は、ASP ページ、スクリプトなど、POST メソッドを使用して送信される要求を受け入れることができるリソースを識別する必要があります。</param>
        <param name="method">リソース ファイルを送信するために使用する HTTP メソッド。 Null の場合、既定値は POST を http に、ストレージ ftp です。</param>
        <param name="data">アップロードする文字列。</param>
        <summary>タスク オブジェクトを使用して非同期操作として、指定した文字列を指定されたリソースにアップロードします。</summary>
        <returns><see cref="T:System.Threading.Tasks.Task`1" /> を返します。  
  
 非同期操作を表すタスク オブジェクト。 <see cref="P:System.Threading.Tasks.Task`1.Result" />タスク オブジェクトのプロパティを返します、<see cref="T:System.String" />サーバーによって送信された応答を格納します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この操作はブロックされません。 返された<xref:System.Threading.Tasks.Task%601>オブジェクトは、文字列がリソースにアップロードされた後に完了します。 文字列は、スレッド プールから自動的に割り当てられているスレッド リソースを使用して非同期に送信されます。  
  
 使用して完了していない非同期操作を取り消すことができます、<xref:System.Net.WebClient.CancelAsync%2A>メソッドです。  
  
 文字列をアップロードする前にこのメソッドに変換する、<xref:System.Byte>配列に指定されたエンコーディングを使用して、<xref:System.Net.WebClient.Encoding%2A>プロパティです。 このメソッドは、文字列が転送されるときにブロックします。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティが空の文字列 ("") と`address`は絶対 URI が含まれていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>要求されたデータの絶対 URI を作成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティが空の文字列ではないに追加されます`address`です。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。 [.NET Framework のネットワークのトレース](~/docs/framework/network-programming/network-tracing.md)です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="address" /> パラメーターが <see langword="null" /> です。  
  
 または  
  
 <paramref name="data" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">結合して形成された URI<see cref="P:System.Net.WebClient.BaseAddress" />と<paramref name="address" />が無効です。  
  
 または  
  
 <paramref name="method" />コンテンツの送信には使用できません。  
  
 または  
  
 リソースをホストするサーバーからの応答がありませんでした。</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadStringTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;string&gt; UploadStringTaskAsync (Uri address, string method, string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;string&gt; UploadStringTaskAsync(class System.Uri address, string method, string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadStringTaskAsync(System.Uri,System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">文字列を受信するリソースの URI。 HTTP リソースの場合は、この URI は、ASP ページ、スクリプトなど、POST メソッドを使用して送信される要求を受け入れることができるリソースを識別する必要があります。</param>
        <param name="method">リソース ファイルを送信するために使用する HTTP メソッド。 Null の場合、既定値は POST を http に、ストレージ ftp です。</param>
        <param name="data">アップロードする文字列。</param>
        <summary>タスク オブジェクトを使用して非同期操作として、指定した文字列を指定されたリソースにアップロードします。</summary>
        <returns><see cref="T:System.Threading.Tasks.Task`1" /> を返します。  
  
 非同期操作を表すタスク オブジェクト。 <see cref="P:System.Threading.Tasks.Task`1.Result" />タスク オブジェクトのプロパティを返します、<see cref="T:System.String" />サーバーによって送信された応答を格納します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この操作はブロックされません。 返された<xref:System.Threading.Tasks.Task%601>オブジェクトは、文字列がリソースにアップロードされた後に完了します。 文字列は、スレッド プールから自動的に割り当てられているスレッド リソースを使用して非同期に送信されます。  
  
 使用して完了していない非同期操作を取り消すことができます、<xref:System.Net.WebClient.CancelAsync%2A>メソッドです。  
  
 文字列をアップロードする前にこのメソッドに変換する、<xref:System.Byte>配列に指定されたエンコーディングを使用して、<xref:System.Net.WebClient.Encoding%2A>プロパティです。 このメソッドは、文字列が転送されるときにブロックします。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティが空の文字列 ("") と`address`は絶対 URI が含まれていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>要求されたデータの絶対 URI を作成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティが空の文字列ではないに追加されます`address`です。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。 [.NET Framework のネットワークのトレース](~/docs/framework/network-programming/network-tracing.md)です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="address" /> パラメーターが <see langword="null" /> です。  
  
 または  
  
 <paramref name="data" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">結合して形成された URI<see cref="P:System.Net.WebClient.BaseAddress" />と<paramref name="address" />が無効です。  
  
 または  
  
 <paramref name="method" />コンテンツの送信には使用できません。  
  
 または  
  
 リソースをホストするサーバーからの応答がありませんでした。</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadValues">
      <MemberSignature Language="C#" Value="public byte[] UploadValues (string address, System.Collections.Specialized.NameValueCollection data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] UploadValues(string address, class System.Collections.Specialized.NameValueCollection data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadValues(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="data" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="address">コレクションを受信する、リソースの URI。</param>
        <param name="data"><see cref="T:System.Collections.Specialized.NameValueCollection" />リソースに送信します。</param>
        <summary>指定された URI で識別されるリソースに指定した名前/値のコレクションをアップロードします。</summary>
        <returns>A<see cref="T:System.Byte" />リソースからの応答の本文を含む配列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebClient.UploadValues%2A>メソッド送信、<xref:System.Collections.Specialized.NameValueCollection>サーバーにします。 このメソッドは、データのアップロード中にブロックしています。 続けるには、サーバーの応答の待機中に実行するのいずれかの操作を使用して、<xref:System.Net.WebClient.UploadValuesAsync%2A>メソッドです。  
  
 基になる要求がサーバーによって認識されない、基礎となるプロトコル クラス処理を決定します。 通常、<xref:System.Net.WebException>でがスローされます、<xref:System.Net.WebException.Status%2A>はエラーを示すプロパティを設定します。  
  
 Content-type ヘッダーが場合`null`、<xref:System.Net.WebClient.UploadValues%2A>メソッドが"アプリケーション/x-www-form-urlencoded"に設定します。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティが空の文字列 ("") と`address`は絶対 URI が含まれていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>要求されたデータの絶対 URI を作成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティが空の文字列ではないに追加されます`address`です。  
  
 このメソッドは、ストレージのコマンドを使用して、FTP リソースをアップロードします。 HTTP リソースでは、POST メソッドを使用します。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。 [.NET Framework のネットワークのトレース](~/docs/framework/network-programming/network-tracing.md)です。  
  
   
  
## Examples  
 次のコード例は、(名前、年齢、およびアドレス) のユーザーから情報を収集し、値を使用してサーバーを<xref:System.Net.WebClient.UploadValues%2A>です。 サーバーからの応答は、コンソールに表示されます。  
  
 [!code-cpp[WebClient_UploadValues#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient_UploadValues/CPP/webclient_uploadvalues.cpp#1)]
 [!code-csharp[WebClient_UploadValues#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient_UploadValues/CS/webclient_uploadvalues.cs#1)]
 [!code-vb[WebClient_UploadValues#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient_UploadValues/VB/webclient_uploadvalues.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="address" /> パラメーターが <see langword="null" /> です。  
  
 または  
  
 <paramref name="data" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">結合して形成された URI <see cref="P:System.Net.WebClient.BaseAddress" />、および<paramref name="address" />が無効です。  
  
 または  
  
 <paramref name="data" /> は <see langword="null" /> です。  
  
 または  
  
 リソースをホストするサーバーからの応答がありませんでした。  
  
 または  
  
 ストリームを開くときにエラーが発生しました。  
  
 または  
  
 <see langword="Content-type" />ヘッダーが<see langword="null" />または"アプリケーション/x-www-form-urlencoded"です。</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadValues">
      <MemberSignature Language="C#" Value="public byte[] UploadValues (Uri address, System.Collections.Specialized.NameValueCollection data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] UploadValues(class System.Uri address, class System.Collections.Specialized.NameValueCollection data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadValues(System.Uri,System.Collections.Specialized.NameValueCollection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="data" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="address">コレクションを受信する、リソースの URI。</param>
        <param name="data"><see cref="T:System.Collections.Specialized.NameValueCollection" />リソースに送信します。</param>
        <summary>指定された URI で識別されるリソースに指定した名前/値のコレクションをアップロードします。</summary>
        <returns>A<see cref="T:System.Byte" />リソースからの応答の本文を含む配列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebClient.UploadValues%2A>メソッド送信、<xref:System.Collections.Specialized.NameValueCollection>サーバーにします。 このメソッドは、データのアップロード中にブロックしています。 続けるには、サーバーの応答の待機中に実行するのいずれかの操作を使用して、<xref:System.Net.WebClient.UploadValuesAsync%2A>メソッドです。  
  
 基になる要求がサーバーによって認識されない、基礎となるプロトコル クラス処理を決定します。 通常、<xref:System.Net.WebException>でがスローされます、<xref:System.Net.WebException.Status%2A>はエラーを示すプロパティを設定します。  
  
 Content-type ヘッダーが場合`null`、<xref:System.Net.WebClient.UploadValues%2A>メソッドが"アプリケーション/x-www-form-urlencoded"に設定します。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティが空の文字列 ("") と`address`は絶対 URI が含まれていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>要求されたデータの絶対 URI を作成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティが空の文字列ではないに追加されます`address`です。  
  
 このメソッドは、ストレージのコマンドを使用して、FTP リソースをアップロードします。 HTTP リソースでは、POST メソッドを使用します。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。 [.NET Framework のネットワークのトレース](~/docs/framework/network-programming/network-tracing.md)です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="address" /> パラメーターが <see langword="null" /> です。  
  
 または  
  
 <paramref name="data" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">結合して形成された URI <see cref="P:System.Net.WebClient.BaseAddress" />、および<paramref name="address" />が無効です。  
  
 または  
  
 <paramref name="data" /> は <see langword="null" /> です。  
  
 または  
  
 リソースをホストするサーバーからの応答がありませんでした。  
  
 または  
  
 ストリームを開くときにエラーが発生しました。  
  
 または  
  
 <see langword="Content-type" />ヘッダーが<see langword="null" />または"アプリケーション/x-www-form-urlencoded"です。</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadValues">
      <MemberSignature Language="C#" Value="public byte[] UploadValues (string address, string method, System.Collections.Specialized.NameValueCollection data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] UploadValues(string address, string method, class System.Collections.Specialized.NameValueCollection data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadValues(System.String,System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="address">コレクションを受信する、リソースの URI。</param>
        <param name="method">リソース ファイルを送信するために使用する HTTP メソッド。 Null の場合、既定値は POST を http に、ストレージ ftp です。</param>
        <param name="data"><see cref="T:System.Collections.Specialized.NameValueCollection" />リソースに送信します。</param>
        <summary>指定した名前/値のコレクションを指定したメソッドを使用して、指定された URI で識別されるリソースにアップロードされます。</summary>
        <returns>A<see cref="T:System.Byte" />リソースからの応答の本文を含む配列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebClient.UploadValues%2A>メソッド送信、<xref:System.Collections.Specialized.NameValueCollection>で指定されたメソッドを使用してリソースに、`method`パラメーターをサーバーからすべての応答を返します。 このメソッドは、データのアップロード中にブロックしています。 続けるには、サーバーの応答の待機中に実行するのいずれかの操作を使用して、<xref:System.Net.WebClient.UploadValuesAsync%2A>メソッドです。  
  
 場合、`Content-type`ヘッダーが`null`、<xref:System.Net.WebClient.UploadValues%2A>メソッドに設定を`application/x-www-form-urlencoded`です。  
  
 場合、`method`が認識できない、サーバーによって、基になるプロトコル クラスが発生する内容を決定する動詞を指定します。 通常、<xref:System.Net.WebException>でがスローされます、<xref:System.Net.WebException.Status%2A>はエラーを示すプロパティを設定します。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティが空の文字列 ("") と`address`は絶対 URI が含まれていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>要求されたデータの絶対 URI を作成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティが空の文字列ではないに追加されます`address`です。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。 [.NET Framework のネットワークのトレース](~/docs/framework/network-programming/network-tracing.md)です。  
  
   
  
## Examples  
 次のコード例は、(名前、年齢、およびアドレス) のユーザーから情報を収集し、値を使用してサーバーを<xref:System.Net.WebClient.UploadValues%2A>です。 サーバーからの応答は、コンソールに表示されます。  
  
 [!code-cpp[WebClient_UploadValues2#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient_UploadValues2/CPP/webclient_uploadvalues2.cpp#1)]
 [!code-csharp[WebClient_UploadValues2#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient_UploadValues2/CS/webclient_uploadvalues2.cs#1)]
 [!code-vb[WebClient_UploadValues2#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient_UploadValues2/VB/webclient_uploadvalues2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="address" /> パラメーターが <see langword="null" /> です。  
  
 または  
  
 <paramref name="data" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">結合して形成された URI <see cref="P:System.Net.WebClient.BaseAddress" />、および<paramref name="address" />が無効です。  
  
 または  
  
 <paramref name="data" /> は <see langword="null" /> です。  
  
 または  
  
 ストリームを開くときにエラーが発生しました。  
  
 または  
  
 リソースをホストするサーバーからの応答がありませんでした。  
  
 または  
  
 <see langword="Content-type" />ヘッダーの値が<see langword="null" />ありいない<see langword="application/x-www-form-urlencoded" />です。</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadValues">
      <MemberSignature Language="C#" Value="public byte[] UploadValues (Uri address, string method, System.Collections.Specialized.NameValueCollection data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] UploadValues(class System.Uri address, string method, class System.Collections.Specialized.NameValueCollection data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadValues(System.Uri,System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="address">コレクションを受信する、リソースの URI。</param>
        <param name="method">リソース ファイルを送信するために使用する HTTP メソッド。 Null の場合、既定値は POST を http に、ストレージ ftp です。</param>
        <param name="data"><see cref="T:System.Collections.Specialized.NameValueCollection" />リソースに送信します。</param>
        <summary>指定した名前/値のコレクションを指定したメソッドを使用して、指定された URI で識別されるリソースにアップロードされます。</summary>
        <returns>A<see cref="T:System.Byte" />リソースからの応答の本文を含む配列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebClient.UploadValues%2A>メソッド送信、<xref:System.Collections.Specialized.NameValueCollection>で指定されたメソッドを使用してリソースに、`method`パラメーターをサーバーからすべての応答を返します。 このメソッドは、データのアップロード中にブロックしています。 続けるには、サーバーの応答の待機中に実行するのいずれかの操作を使用して、<xref:System.Net.WebClient.UploadValuesAsync%2A>メソッドです。  
  
 場合、`Content-type`ヘッダーが`null`、<xref:System.Net.WebClient.UploadValues%2A>メソッドに設定を`application/x-www-form-urlencoded`です。  
  
 場合、`method`が認識できない、サーバーによって、基になるプロトコル クラスが発生する内容を決定する動詞を指定します。 通常、<xref:System.Net.WebException>でがスローされます、<xref:System.Net.WebException.Status%2A>はエラーを示すプロパティを設定します。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティが空の文字列 ("") と`address`は絶対 URI が含まれていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>要求されたデータの絶対 URI を作成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティが空の文字列ではないに追加されます`address`です。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。 [.NET Framework のネットワークのトレース](~/docs/framework/network-programming/network-tracing.md)です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="address" /> パラメーターが <see langword="null" /> です。  
  
 または  
  
 <paramref name="data" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">結合して形成された URI <see cref="P:System.Net.WebClient.BaseAddress" />、および<paramref name="address" />が無効です。  
  
 または  
  
 <paramref name="data" /> は <see langword="null" /> です。  
  
 または  
  
 ストリームを開くときにエラーが発生しました。  
  
 または  
  
 リソースをホストするサーバーからの応答がありませんでした。  
  
 または  
  
 <see langword="Content-type" />ヘッダーの値が<see langword="null" />ありいない<see langword="application/x-www-form-urlencoded" />です。</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadValuesAsync">
      <MemberSignature Language="C#" Value="public void UploadValuesAsync (Uri address, System.Collections.Specialized.NameValueCollection data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UploadValuesAsync(class System.Uri address, class System.Collections.Specialized.NameValueCollection data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadValuesAsync(System.Uri,System.Collections.Specialized.NameValueCollection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="data" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="address">コレクションを受信する、リソースの URI。 この URI は、既定の方法で送信される要求を受け入れることができるリソースを識別する必要があります。</param>
        <param name="data"><see cref="T:System.Collections.Specialized.NameValueCollection" />リソースに送信します。</param>
        <summary>指定された URI で識別されるリソースに指定した名前/値コレクション内のデータをアップロードします。 このメソッドは、呼び出し元のスレッドをブロックしていません。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、リソースへの文字列を送信します。 文字列は、スレッド プールから自動的に割り当てられているスレッド リソースを使用して非同期に送信されます。 文字列をアップロードする前にこのメソッドに変換する、<xref:System.Byte>配列に指定されたエンコーディングを使用して、<xref:System.Net.WebClient.Encoding%2A>プロパティです。 文字列のアップロードが完了したときに通知を受信するイベント ハンドラーを追加することができます、<xref:System.Net.WebClient.UploadStringCompleted>イベント。  
  
 このメソッドは、文字列の送信中に、呼び出し元のスレッドをブロックしません。 サーバーの応答の待機中に文字列およびブロックを送信するには、いずれかを使用、<xref:System.Net.WebClient.UploadString%2A>メソッドです。  
  
 使用して完了していない非同期操作を取り消すことができます、<xref:System.Net.WebClient.CancelAsync%2A>メソッドです。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティが空の文字列 ("") と`address`は絶対 URI が含まれていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>要求されたデータの絶対 URI を作成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティが空の文字列ではないに追加されます`address`です。  
  
 このメソッドは、ストレージのコマンドを使用して、FTP リソースをアップロードします。 HTTP リソースでは、POST メソッドを使用します。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。 [.NET Framework のネットワークのトレース](~/docs/framework/network-programming/network-tracing.md)です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="address" /> パラメーターが <see langword="null" /> です。  
  
 または  
  
 <paramref name="data" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">結合して形成された URI<see cref="P:System.Net.WebClient.BaseAddress" />と<paramref name="address" />が無効です。  
  
 または  
  
 リソースをホストするサーバーからの応答がありませんでした。</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadValuesAsync">
      <MemberSignature Language="C#" Value="public void UploadValuesAsync (Uri address, string method, System.Collections.Specialized.NameValueCollection data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UploadValuesAsync(class System.Uri address, string method, class System.Collections.Specialized.NameValueCollection data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadValuesAsync(System.Uri,System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="address">コレクションを受信する、リソースの URI。 この URI はと共に送信される要求を受け入れることができるリソースを識別する必要があります、<c>メソッド</c>メソッドです。</param>
        <param name="method">リソースに文字列を送信するために使用するメソッド。 Null の場合、既定値は POST を http に、ストレージ ftp です。</param>
        <param name="data"><see cref="T:System.Collections.Specialized.NameValueCollection" />リソースに送信します。</param>
        <summary>指定したメソッドを使用して、指定された URI で識別されるリソースに指定した名前/値コレクション内のデータをアップロードします。 このメソッドは、呼び出し元のスレッドをブロックしていません。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドに含まれるデータの送信、<xref:System.Collections.Specialized.NameValueCollection>を`address`リソース。 このメソッドを使用して、フォーム データを処理するための URI に送信します。 フォーム エンコード メディアの種類です。 を使用して、データを送信します。Content-type ヘッダーの値は、"アプリケーション/x-www-form-urlencoded"に設定する必要があります。 ヘッダーは、既定で正しく設定されています。 <xref:System.Net.WebClient.UploadValuesAsync%2A>メソッドをスロー、 <xref:System.Net.WebException> 、さまざまなコンテンツ タイプ ヘッダー値を設定してでは、このメソッドを呼び出す場合、<xref:System.Net.WebClient.Headers%2A>コレクション。  
  
 場合、`method`メソッドが認識できない、サーバーによって、基になるプロトコル クラスが発生する内容を決定します。 通常、<xref:System.Net.WebException>でがスローされます、<xref:System.Net.WebException.Status%2A>はエラーを示すプロパティを設定します。  
  
 <xref:System.Collections.Specialized.NameValueCollection>スレッド プールから自動的に割り当てられているスレッド リソースを使用して非同期に送信します。 アップロード操作が完了したら通知を受信するには、イベント ハンドラーを追加、<xref:System.Net.WebClient.UploadValuesCompleted>イベント。  
  
 このメソッドは、文字列の送信中に、呼び出し元のスレッドをブロックしません。 サーバーの応答の待機中に文字列およびブロックを送信するには、いずれかを使用、<xref:System.Net.WebClient.UploadValues%2A>メソッドです。  
  
 使用して完了していない非同期操作を取り消すことができます、<xref:System.Net.WebClient.CancelAsync%2A>メソッドです。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティが空の文字列 ("") と`address`は絶対 URI が含まれていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>要求されたデータの絶対 URI を作成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティが空でないに追加されます`address`です。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。 [.NET Framework のネットワークのトレース](~/docs/framework/network-programming/network-tracing.md)です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="address" /> パラメーターが <see langword="null" /> です。  
  
 または  
  
 <paramref name="data" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">結合して形成された URI<see cref="P:System.Net.WebClient.BaseAddress" />と<paramref name="address" />が無効です。  
  
 または  
  
 リソースをホストするサーバーからの応答がありませんでした。  
  
 または  
  
 <paramref name="method" />コンテンツの送信には使用できません。</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadValuesAsync">
      <MemberSignature Language="C#" Value="public void UploadValuesAsync (Uri address, string method, System.Collections.Specialized.NameValueCollection data, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UploadValuesAsync(class System.Uri address, string method, class System.Collections.Specialized.NameValueCollection data, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadValuesAsync(System.Uri,System.String,System.Collections.Specialized.NameValueCollection,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.Collections.Specialized.NameValueCollection" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="address">コレクションを受信する、リソースの URI。 この URI はと共に送信される要求を受け入れることができるリソースを識別する必要があります、<c>メソッド</c>メソッドです。</param>
        <param name="method">リソースに文字列を送信するために使用する HTTP メソッド。 Null の場合、既定値は POST を http に、ストレージ ftp です。</param>
        <param name="data"><see cref="T:System.Collections.Specialized.NameValueCollection" />リソースに送信します。</param>
        <param name="userToken">非同期操作の完了時に呼び出されるメソッドに渡されるユーザー定義のオブジェクト。</param>
        <summary>指定したメソッドを使用して、指定された URI で識別されるリソースに指定した名前/値コレクション内のデータをアップロードします。 このメソッドは、呼び出し元のスレッドをブロックしませんし、オブジェクトを渡し、操作が完了したときに呼び出されるメソッドを呼び出し元を許可します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドに含まれるデータの送信、<xref:System.Collections.Specialized.NameValueCollection>を`address`リソース。 このメソッドを使用して、フォーム データを処理するための URI に送信します。 フォーム エンコード メディアの種類です。 を使用して、データを送信します。Content-type ヘッダーの値は、"アプリケーション/x-www-form-urlencoded"に設定する必要があります。 ヘッダーは、既定で正しく設定されています。 <xref:System.Net.WebClient.UploadValuesAsync%2A>メソッドをスロー、 <xref:System.Net.WebException> 、さまざまなコンテンツ タイプ ヘッダー値を設定してでは、このメソッドを呼び出す場合、<xref:System.Net.WebClient.Headers%2A>コレクション。  
  
 場合、`method`メソッドが認識できない、サーバーによって、基になるプロトコル クラスが発生する内容を決定します。 通常、<xref:System.Net.WebException>でがスローされます、<xref:System.Net.WebException.Status%2A>はエラーを示すプロパティを設定します。  
  
 <xref:System.Collections.Specialized.NameValueCollection>スレッド プールから自動的に割り当てられているスレッド リソースを使用して非同期に送信します。 アップロード操作が完了したら通知を受信するには、イベント ハンドラーを追加、<xref:System.Net.WebClient.UploadValuesCompleted>イベント。  
  
 このメソッドは、文字列の送信中に、呼び出し元のスレッドをブロックしません。 サーバーの応答の待機中に文字列およびブロックを送信するには、いずれかを使用、<xref:System.Net.WebClient.UploadValues%2A>メソッドです。  
  
 使用して完了していない非同期操作を取り消すことができます、<xref:System.Net.WebClient.CancelAsync%2A>メソッドです。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティが空の文字列 ("") と`address`は絶対 URI が含まれていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>要求されたデータの絶対 URI を作成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティが空でないに追加されます`address`です。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。 [.NET Framework のネットワークのトレース](~/docs/framework/network-programming/network-tracing.md)です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="address" /> パラメーターが <see langword="null" /> です。  
  
 または  
  
 <paramref name="data" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">結合して形成された URI<see cref="P:System.Net.WebClient.BaseAddress" />と<paramref name="address" />が無効です。  
  
 または  
  
 リソースをホストするサーバーからの応答がありませんでした。  
  
 または  
  
 <paramref name="method" />コンテンツの送信には使用できません。</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadValuesCompleted">
      <MemberSignature Language="C#" Value="public event System.Net.UploadValuesCompletedEventHandler UploadValuesCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Net.UploadValuesCompletedEventHandler UploadValuesCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Net.WebClient.UploadValuesCompleted" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.UploadValuesCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>名前/値コレクションの非同期アップロードが完了したときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このイベントは発生の非同期アップロードされるたびに、<xref:System.Collections.Specialized.NameValueCollection>オブジェクトのデータが完了します。 これらのアップロードは呼び出すことによって、<xref:System.Net.WebClient.UploadValuesAsync%2A>メソッドです。  
  
 <xref:System.Net.UploadValuesCompletedEventHandler>は、このイベントのデリゲート。 <xref:System.Net.UploadValuesCompletedEventArgs>クラスには、イベント データを持つイベント ハンドラーが用意されています。  
  
 イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UploadValuesTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; UploadValuesTaskAsync (string address, System.Collections.Specialized.NameValueCollection data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; UploadValuesTaskAsync(string address, class System.Collections.Specialized.NameValueCollection data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadValuesTaskAsync(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="data" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="address">コレクションを受信する、リソースの URI。</param>
        <param name="data"><see cref="T:System.Collections.Specialized.NameValueCollection" />リソースに送信します。</param>
        <summary>タスク オブジェクトを使用して非同期操作として指定された URI で識別されるリソースに指定した名前/値のコレクションをアップロードします。</summary>
        <returns><see cref="T:System.Threading.Tasks.Task`1" /> を返します。  
  
 非同期操作を表すタスク オブジェクト。 <see cref="P:System.Threading.Tasks.Task`1.Result" />タスク オブジェクトのプロパティを返します、<see cref="T:System.Byte" />サーバーによって送信される応答を含む配列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この操作はブロックされません。 返された<xref:System.Threading.Tasks.Task%601>オブジェクトは、名前/値のコレクションがリソースにアップロードされた後に完了します。 名前/値のコレクションがスレッド プールから自動的に割り当てられているスレッド リソースを使用して非同期に送信されます。  
  
 使用して完了していない非同期操作を取り消すことができます、<xref:System.Net.WebClient.CancelAsync%2A>メソッドです。  
  
 基になる要求がサーバーによって認識されない、基礎となるプロトコル クラス処理を決定します。 通常、<xref:System.Net.WebException>でがスローされます、<xref:System.Net.WebException.Status%2A>はエラーを示すプロパティを設定します。  
  
 Content-type ヘッダーが場合`null`、このメソッドが"アプリケーション/x-www-form-urlencoded"に設定します。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティが空の文字列 ("") と`address`は絶対 URI が含まれていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>要求されたデータの絶対 URI を作成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティが空の文字列ではないに追加されます`address`です。  
  
 このメソッドは、ストレージのコマンドを使用して、FTP リソースをアップロードします。 HTTP リソースでは、POST メソッドを使用します。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。 [.NET Framework のネットワークのトレース](~/docs/framework/network-programming/network-tracing.md)です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="address" /> パラメーターが <see langword="null" /> です。  
  
 または  
  
 <paramref name="data" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">結合して形成された URI <see cref="P:System.Net.WebClient.BaseAddress" />、および<paramref name="address" />が無効です。  
  
 または  
  
 リソースをホストするサーバーからの応答がありませんでした。  
  
 または  
  
 ストリームを開くときにエラーが発生しました。  
  
 または  
  
 <see langword="Content-type" />ヘッダーが<see langword="null" />または"アプリケーション/x-www-form-urlencoded"です。</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadValuesTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; UploadValuesTaskAsync (Uri address, System.Collections.Specialized.NameValueCollection data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; UploadValuesTaskAsync(class System.Uri address, class System.Collections.Specialized.NameValueCollection data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadValuesTaskAsync(System.Uri,System.Collections.Specialized.NameValueCollection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="data" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="address">コレクションを受信する、リソースの URI。</param>
        <param name="data"><see cref="T:System.Collections.Specialized.NameValueCollection" />リソースに送信します。</param>
        <summary>タスク オブジェクトを使用して非同期操作として指定された URI で識別されるリソースに指定した名前/値のコレクションをアップロードします。</summary>
        <returns><see cref="T:System.Threading.Tasks.Task`1" /> を返します。  
  
 非同期操作を表すタスク オブジェクト。 <see cref="P:System.Threading.Tasks.Task`1.Result" />タスク オブジェクトのプロパティを返します、<see cref="T:System.Byte" />サーバーによって送信される応答を含む配列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この操作はブロックされません。 返された<xref:System.Threading.Tasks.Task%601>オブジェクトは、名前/値のコレクションがリソースにアップロードされた後に完了します。 名前/値のコレクションがスレッド プールから自動的に割り当てられているスレッド リソースを使用して非同期に送信されます。  
  
 使用して完了していない非同期操作を取り消すことができます、<xref:System.Net.WebClient.CancelAsync%2A>メソッドです。  
  
 基になる要求がサーバーによって認識されない、基礎となるプロトコル クラス処理を決定します。 通常、<xref:System.Net.WebException>でがスローされます、<xref:System.Net.WebException.Status%2A>はエラーを示すプロパティを設定します。  
  
 Content-type ヘッダーが場合`null`、このメソッドが"アプリケーション/x-www-form-urlencoded"に設定します。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティが空の文字列 ("") と`address`は絶対 URI が含まれていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>要求されたデータの絶対 URI を作成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティが空の文字列ではないに追加されます`address`です。  
  
 このメソッドは、ストレージのコマンドを使用して、FTP リソースをアップロードします。 HTTP リソースでは、POST メソッドを使用します。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。 [.NET Framework のネットワークのトレース](~/docs/framework/network-programming/network-tracing.md)です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="address" /> パラメーターが <see langword="null" /> です。  
  
 または  
  
 <paramref name="data" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">結合して形成された URI <see cref="P:System.Net.WebClient.BaseAddress" />、および<paramref name="address" />が無効です。  
  
 または  
  
 ストリームを開くときにエラーが発生しました。  
  
 または  
  
 リソースをホストするサーバーからの応答がありませんでした。  
  
 または  
  
 <see langword="Content-type" />ヘッダーの値が<see langword="null" />ありいない<see langword="application/x-www-form-urlencoded" />です。</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadValuesTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; UploadValuesTaskAsync (string address, string method, System.Collections.Specialized.NameValueCollection data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; UploadValuesTaskAsync(string address, string method, class System.Collections.Specialized.NameValueCollection data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadValuesTaskAsync(System.String,System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="address">コレクションを受信する、リソースの URI。</param>
        <param name="method">コレクション リソースに送信するために使用する HTTP メソッド。 Null の場合、既定値は POST を http に、ストレージ ftp です。</param>
        <param name="data"><see cref="T:System.Collections.Specialized.NameValueCollection" />リソースに送信します。</param>
        <summary>タスク オブジェクトを使用して非同期操作として指定された URI で識別されるリソースに指定した名前/値のコレクションをアップロードします。</summary>
        <returns><see cref="T:System.Threading.Tasks.Task`1" /> を返します。  
  
 非同期操作を表すタスク オブジェクト。 <see cref="P:System.Threading.Tasks.Task`1.Result" />タスク オブジェクトのプロパティを返します、<see cref="T:System.Byte" />サーバーによって送信される応答を含む配列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この操作はブロックされません。 返された<xref:System.Threading.Tasks.Task%601>オブジェクトは、名前/値のコレクションがリソースにアップロードされた後に完了します。 名前/値のコレクションがスレッド プールから自動的に割り当てられているスレッド リソースを使用して非同期に送信されます。  
  
 使用して完了していない非同期操作を取り消すことができます、<xref:System.Net.WebClient.CancelAsync%2A>メソッドです。  
  
 基になる要求がサーバーによって認識されない、基礎となるプロトコル クラス処理を決定します。 通常、<xref:System.Net.WebException>でがスローされます、<xref:System.Net.WebException.Status%2A>はエラーを示すプロパティを設定します。  
  
 Content-type ヘッダーが場合`null`、このメソッドが"アプリケーション/x-www-form-urlencoded"に設定します。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティが空の文字列 ("") と`address`は絶対 URI が含まれていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>要求されたデータの絶対 URI を作成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティが空の文字列ではないに追加されます`address`です。  
  
 このメソッドは、ストレージのコマンドを使用して、FTP リソースをアップロードします。 HTTP リソースでは、POST メソッドを使用します。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。 [.NET Framework のネットワークのトレース](~/docs/framework/network-programming/network-tracing.md)です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="address" /> パラメーターが <see langword="null" /> です。  
  
 または  
  
 <paramref name="data" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">結合して形成された URI <see cref="P:System.Net.WebClient.BaseAddress" />、および<paramref name="address" />が無効です。  
  
 または  
  
 <paramref name="method" />コンテンツの送信には使用できません。  
  
 または  
  
 リソースをホストするサーバーからの応答がありませんでした。  
  
 または  
  
 ストリームを開くときにエラーが発生しました。  
  
 または  
  
 <see langword="Content-type" />ヘッダーが<see langword="null" />または"アプリケーション/x-www-form-urlencoded"です。</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadValuesTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; UploadValuesTaskAsync (Uri address, string method, System.Collections.Specialized.NameValueCollection data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; UploadValuesTaskAsync(class System.Uri address, string method, class System.Collections.Specialized.NameValueCollection data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadValuesTaskAsync(System.Uri,System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="address">コレクションを受信する、リソースの URI。</param>
        <param name="method">コレクション リソースに送信するために使用する HTTP メソッド。 Null の場合、既定値は POST を http に、ストレージ ftp です。</param>
        <param name="data"><see cref="T:System.Collections.Specialized.NameValueCollection" />リソースに送信します。</param>
        <summary>タスク オブジェクトを使用して非同期操作として指定された URI で識別されるリソースに指定した名前/値のコレクションをアップロードします。</summary>
        <returns><see cref="T:System.Threading.Tasks.Task`1" /> を返します。  
  
 非同期操作を表すタスク オブジェクト。 <see cref="P:System.Threading.Tasks.Task`1.Result" />タスク オブジェクトのプロパティを返します、<see cref="T:System.Byte" />サーバーによって送信される応答を含む配列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この操作はブロックされません。 返された<xref:System.Threading.Tasks.Task%601>オブジェクトは、名前/値のコレクションがリソースにアップロードされた後に完了します。 名前/値のコレクションがスレッド プールから自動的に割り当てられているスレッド リソースを使用して非同期に送信されます。  
  
 使用して完了していない非同期操作を取り消すことができます、<xref:System.Net.WebClient.CancelAsync%2A>メソッドです。  
  
 基になる要求がサーバーによって認識されない、基礎となるプロトコル クラス処理を決定します。 通常、<xref:System.Net.WebException>でがスローされます、<xref:System.Net.WebException.Status%2A>はエラーを示すプロパティを設定します。  
  
 Content-type ヘッダーが場合`null`、このメソッドが"アプリケーション/x-www-form-urlencoded"に設定します。  
  
 場合、<xref:System.Net.WebClient.BaseAddress%2A>プロパティが空の文字列 ("") と`address`は絶対 URI が含まれていない`address`と組み合わせる相対 URI でなければなりません<xref:System.Net.WebClient.BaseAddress%2A>要求されたデータの絶対 URI を作成します。 場合、<xref:System.Net.WebClient.QueryString%2A>プロパティが空の文字列ではないに追加されます`address`です。  
  
 このメソッドは、ストレージのコマンドを使用して、FTP リソースをアップロードします。 HTTP リソースでは、POST メソッドを使用します。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。 [.NET Framework のネットワークのトレース](~/docs/framework/network-programming/network-tracing.md)です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="address" /> パラメーターが <see langword="null" /> です。  
  
 または  
  
 <paramref name="data" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.WebException">結合して形成された URI <see cref="P:System.Net.WebClient.BaseAddress" />、および<paramref name="address" />が無効です。  
  
 または  
  
 <paramref name="method" />コンテンツの送信には使用できません。  
  
 または  
  
 リソースをホストするサーバーからの応答がありませんでした。  
  
 または  
  
 ストリームを開くときにエラーが発生しました。  
  
 または  
  
 <see langword="Content-type" />ヘッダーが<see langword="null" />または"アプリケーション/x-www-form-urlencoded"です。</exception>
      </Docs>
    </Member>
    <Member MemberName="UseDefaultCredentials">
      <MemberSignature Language="C#" Value="public bool UseDefaultCredentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseDefaultCredentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebClient.UseDefaultCredentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定、<see cref="T:System.Boolean" />値を制御するのかどうか、<see cref="P:System.Net.CredentialCache.DefaultCredentials" />要求と共に送信されます。</summary>
        <value>
          既定の資格情報を使用する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティを設定`true`これによって行われた要求の場合<xref:System.Net.WebClient>オブジェクト認証が必要で、サーバーから要求された場合、現在ログオンしているユーザーの既定の資格情報を使用しています。 クライアント アプリケーションでは、これはほとんどのシナリオでは、目的の動作です。 中間層アプリケーションの場合、このプロパティを使用する代わりに、ASP.NET アプリケーションなど、通常、設定、<xref:System.Net.WebClient.Credentials%2A>プロパティが代わりに、要求が行われるクライアントの資格情報をします。  
  
   
  
## Examples  
 次のコード例では、このプロパティの設定を示しています。  
  
 [!code-cpp[NCLWebClientAsync#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#3)]
 [!code-csharp[NCLWebClientAsync#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#3)]
 [!code-vb[NCLWebClientAsync#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteStreamClosed">
      <MemberSignature Language="C#" Value="public event System.Net.WriteStreamClosedEventHandler WriteStreamClosed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Net.WriteStreamClosedEventHandler WriteStreamClosed" />
      <MemberSignature Language="DocId" Value="E:System.Net.WebClient.WriteStreamClosed" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.WriteStreamClosedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>書き込みストリームを使用してリソースにデータを書き込む非同期操作が閉じられたときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このイベントは、書き込みストリームを使用してリソースにデータを書き込むために使用するための非同期操作を閉じるたびにします。 これらの操作の結果への呼び出しから、<xref:System.Net.WebClient.OpenWriteTaskAsync%2A>メソッドです。  
  
 <xref:System.Net.WriteStreamClosedEventHandler>は、このイベントのデリゲート。 <xref:System.Net.WriteStreamClosedEventArgs>クラスには、イベント データを持つイベント ハンドラーが用意されています。  
  
 イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
