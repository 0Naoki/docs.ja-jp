<Type Name="Typography" FullName="System.Windows.Documents.Typography">
  <TypeSignature Language="C#" Value="public sealed class Typography" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed Typography extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Documents.Typography" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>OpenType の文字体裁プロパティの豊富なセットへのアクセスを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Documents.Typography>オブジェクトは一連の機能を公開する、[!INCLUDE[TLA#tla_opentype](~/includes/tlasharptla-opentype-md.md)]フォントをサポートしています。 プロパティを設定して<xref:System.Windows.Documents.Typography>マークアップまたはコードではを活用するドキュメントを作成することが簡単に[!INCLUDE[TLA#tla_opentype](~/includes/tlasharptla-opentype-md.md)]機能します。  
  
 次のテキストは、Pescadero フォントの標準の大文字と、その後に "SmallCaps" および "AllSmallCaps" のスタイルをあてた文字を示したものです。 この場合、同じフォント サイズは 3 つすべての単語の使用します。  
  
 ![OpenType の大文字を使用してテキストを](~/add/media/opentypefont11.gif "OpenType の大文字を使用するテキスト")  
OpenType の大文字を使用するテキスト  
  
 次のマークアップの例は、英大文字のプロパティを使用して、Pescadero フォントを定義する方法を示します、<xref:System.Windows.Documents.Typography>オブジェクト。 "SmallCaps" 形式を使用する場合は、先頭の大文字は無視されます。  
  
 [!code-xaml[OpenTypeFontSamples#9](~/samples/snippets/csharp/VS_Snippets_Wpf/OpenTypeFontSamples/CS/PageOne.xaml#9)]   
  
 次のコード例では、前のマークアップの例と同じタスクを実行します。  
  
 [!code-csharp[TypographyCodeSnippets#TypographyCodeSnippet1](~/samples/snippets/csharp/VS_Snippets_Wpf/TypographyCodeSnippets/CSharp/Page1.xaml.cs#typographycodesnippet1)]
 [!code-vb[TypographyCodeSnippets#TypographyCodeSnippet1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TypographyCodeSnippets/visualbasic/page1.xaml.vb#typographycodesnippet1)]  
  
## <a name="typography-properties"></a>文字体裁プロパティ  
 次の表は、プロパティ、値、および既定値は、<xref:System.Windows.Documents.Typography>オブジェクト。  
  
|プロパティ|[値]|既定値|  
|--------------|----------------|-------------------|  
|<xref:System.Windows.Documents.Typography.AnnotationAlternates%2A>|数値 – バイト|0|  
|<xref:System.Windows.Documents.Typography.Capitals%2A>|<xref:System.Windows.FontCapitals.AllPetiteCaps> &#124; <xref:System.Windows.FontCapitals.AllSmallCaps> &#124; <xref:System.Windows.FontCapitals.Normal> &#124; <xref:System.Windows.FontCapitals.PetiteCaps> &#124; <xref:System.Windows.FontCapitals.SmallCaps> &#124; <xref:System.Windows.FontCapitals.Titling> &#124; <xref:System.Windows.FontCapitals.Unicase>|<xref:System.Windows.FontCapitals>.<xref:System.Windows.FontCapitals.Normal>|  
|<xref:System.Windows.Documents.Typography.CapitalSpacing%2A>|<xref:System.Boolean>|`false`|  
|<xref:System.Windows.Documents.Typography.CaseSensitiveForms%2A>|<xref:System.Boolean>|`false`|  
|<xref:System.Windows.Documents.Typography.ContextualAlternates%2A>|<xref:System.Boolean>|`true`|  
|<xref:System.Windows.Documents.Typography.ContextualLigatures%2A>|<xref:System.Boolean>|`true`|  
|<xref:System.Windows.Documents.Typography.ContextualSwashes%2A>|数値 - バイト|0|  
|<xref:System.Windows.Documents.Typography.DiscretionaryLigatures%2A>|<xref:System.Boolean>|`false`|  
|<xref:System.Windows.Documents.Typography.EastAsianExpertForms%2A>|<xref:System.Boolean>|`false`|  
|<xref:System.Windows.Documents.Typography.EastAsianLanguage%2A>|<xref:System.Windows.FontEastAsianLanguage.HojoKanji> &#124; <xref:System.Windows.FontEastAsianLanguage.Jis04> &#124; <xref:System.Windows.FontEastAsianLanguage.Jis78> &#124; <xref:System.Windows.FontEastAsianLanguage.Jis83> &#124; <xref:System.Windows.FontEastAsianLanguage.Jis90> &#124; <xref:System.Windows.FontEastAsianLanguage.NlcKanji> &#124; <xref:System.Windows.FontEastAsianLanguage.Normal> &#124; <xref:System.Windows.FontEastAsianLanguage.Simplified> &#124; <xref:System.Windows.FontEastAsianLanguage.Traditional> &#124; <xref:System.Windows.FontEastAsianLanguage.TraditionalNames>|<xref:System.Windows.FontEastAsianLanguage>.<xref:System.Windows.FontEastAsianLanguage.Normal>|  
|<xref:System.Windows.Documents.Typography.EastAsianWidths%2A>|<xref:System.Windows.FontEastAsianWidths.Full> &#124; <xref:System.Windows.FontEastAsianWidths.Half> &#124; <xref:System.Windows.FontEastAsianWidths.Normal> &#124; <xref:System.Windows.FontEastAsianWidths.Proportional> &#124; <xref:System.Windows.FontEastAsianWidths.Quarter> &#124; <xref:System.Windows.FontEastAsianWidths.Third>|<xref:System.Windows.FontEastAsianWidths>.<xref:System.Windows.FontEastAsianWidths.Normal>|  
|<xref:System.Windows.Documents.Typography.Fraction%2A>|<xref:System.Windows.FontFraction.Normal> &#124; <xref:System.Windows.FontFraction.Slashed> &#124; <xref:System.Windows.FontFraction.Stacked>|<xref:System.Windows.FontFraction>.<xref:System.Windows.FontFraction.Normal>|  
|<xref:System.Windows.Documents.Typography.HistoricalForms%2A>|<xref:System.Boolean>|`false`|  
|<xref:System.Windows.Documents.Typography.HistoricalLigatures%2A>|<xref:System.Boolean>|`false`|  
|<xref:System.Windows.Documents.Typography.Kerning%2A>|<xref:System.Boolean>|`true`|  
|<xref:System.Windows.Documents.Typography.MathematicalGreek%2A>|<xref:System.Boolean>|`false`|  
|<xref:System.Windows.Documents.Typography.NumeralAlignment%2A>|<xref:System.Windows.FontNumeralAlignment.Normal> &#124; <xref:System.Windows.FontNumeralAlignment.Proportional> &#124; <xref:System.Windows.FontNumeralAlignment.Tabular>|<xref:System.Windows.FontNumeralAlignment>.<xref:System.Windows.FontNumeralAlignment.Normal>|  
|<xref:System.Windows.Documents.Typography.NumeralStyle%2A>|<xref:System.Boolean>|<xref:System.Windows.FontNumeralStyle>.<xref:System.Windows.FontNumeralStyle.Normal>|  
|<xref:System.Windows.Documents.Typography.SlashedZero%2A>|<xref:System.Boolean>|`false`|  
|<xref:System.Windows.Documents.Typography.StandardLigatures%2A>|<xref:System.Boolean>|`true`|  
|<xref:System.Windows.Documents.Typography.StandardSwashes%2A>|数値 - バイト|0|  
|<xref:System.Windows.Documents.Typography.StylisticAlternates%2A>|数値 - バイト|0|  
|<xref:System.Windows.Documents.Typography.StylisticSet1%2A>|<xref:System.Boolean>|`false`|  
|<xref:System.Windows.Documents.Typography.StylisticSet2%2A>|<xref:System.Boolean>|`false`|  
|<xref:System.Windows.Documents.Typography.StylisticSet3%2A>|<xref:System.Boolean>|`false`|  
|<xref:System.Windows.Documents.Typography.StylisticSet4%2A>|<xref:System.Boolean>|`false`|  
|<xref:System.Windows.Documents.Typography.StylisticSet5%2A>|<xref:System.Boolean>|`false`|  
|<xref:System.Windows.Documents.Typography.StylisticSet6%2A>|<xref:System.Boolean>|`false`|  
|<xref:System.Windows.Documents.Typography.StylisticSet7%2A>|<xref:System.Boolean>|`false`|  
|<xref:System.Windows.Documents.Typography.StylisticSet8%2A>|<xref:System.Boolean>|`false`|  
|<xref:System.Windows.Documents.Typography.StylisticSet9%2A>|<xref:System.Boolean>|`false`|  
|<xref:System.Windows.Documents.Typography.StylisticSet10%2A>|<xref:System.Boolean>|`false`|  
|<xref:System.Windows.Documents.Typography.StylisticSet11%2A>|<xref:System.Boolean>|`false`|  
|<xref:System.Windows.Documents.Typography.StylisticSet12%2A>|<xref:System.Boolean>|`false`|  
|<xref:System.Windows.Documents.Typography.StylisticSet13%2A>|<xref:System.Boolean>|`false`|  
|<xref:System.Windows.Documents.Typography.StylisticSet14%2A>|<xref:System.Boolean>|`false`|  
|<xref:System.Windows.Documents.Typography.StylisticSet15%2A>|<xref:System.Boolean>|`false`|  
|<xref:System.Windows.Documents.Typography.StylisticSet16%2A>|<xref:System.Boolean>|`false`|  
|<xref:System.Windows.Documents.Typography.StylisticSet17%2A>|<xref:System.Boolean>|`false`|  
|<xref:System.Windows.Documents.Typography.StylisticSet18%2A>|<xref:System.Boolean>|`false`|  
|<xref:System.Windows.Documents.Typography.StylisticSet19%2A>|<xref:System.Boolean>|`false`|  
|<xref:System.Windows.Documents.Typography.StylisticSet20%2A>|<xref:System.Boolean>|`false`|  
|<xref:System.Windows.Documents.Typography.Variants%2A>|<xref:System.Windows.FontVariants.Inferior> &#124; <xref:System.Windows.FontVariants.Normal> &#124; <xref:System.Windows.FontVariants.Ordinal> &#124; <xref:System.Windows.FontVariants.Ruby> &#124; <xref:System.Windows.FontVariants.Subscript> &#124; <xref:System.Windows.FontVariants.Superscript>|<xref:System.Windows.FontVariants>.<xref:System.Windows.FontVariants.Normal>|  
  
 このクラスのすべての依存関係プロパティに添付プロパティの使用もがある[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]です。 たとえば、設定、<xref:System.Windows.Documents.Typography.AnnotationAlternates%2A>この構文を使用してプロパティ: `<`*オブジェクト*``**Typography.AnnotationAlternates**`="`*値*`".../>`  
  
   
  
## Examples  
 次の例を使用する文字体裁<xref:System.Windows.Documents.Typography.Capitals%2A>で[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]です。 バリアント型の機能に含まれているすべてのテキストに適用されることに注意してください、<xref:System.Windows.Documents.Paragraph>要素。  
  
 [!code-xaml[TypographySnippets#TypographySnippet2](~/samples/snippets/csharp/VS_Snippets_Wpf/TypographySnippets/CS/PageTwo.xaml#typographysnippet2)]  
  
 次の例を使用する文字体裁<xref:System.Windows.Documents.Typography.Capitals%2A>と<xref:System.Windows.Documents.Typography.NumeralStyle%2A>機能[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]します。 両方の文字体裁プロパティは、段落全体に適用されることに注意してください。  
  
 [!code-xaml[TypographySnippets#TypographySnippet3](~/samples/snippets/csharp/VS_Snippets_Wpf/TypographySnippets/CS/PageThree.xaml#typographysnippet3)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AnnotationAlternates">
      <MemberSignature Language="C#" Value="public int AnnotationAlternates { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AnnotationAlternates" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.Typography.AnnotationAlternates" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または注釈の代替形式のインデックスを指定する値を設定します。</summary>
        <value>注釈の代替形式のインデックス。 既定値は 0 (ゼロです)。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 注釈のフォームには、または塗りつぶされた円、四角形、かっこ、ひし形または丸みのあるボックス内に配置されたグリフが含まれます。  
  
 場合の値<xref:System.Windows.Documents.Typography.AnnotationAlternates%2A>が 0 と、選択したよりも大きいフォントでは、注釈のバリエーションはサポートされていません、文字の既定のフォームが表示されます。  
  
 このプロパティを取得または所有しているオブジェクトの値を設定、`Typography`プロパティにアクセスする唯一の方法、<xref:System.Windows.Documents.Typography>クラスのインスタンス。 さらに、このオブジェクトにテキストを格納していることを設定できるように、添付プロパティの使用法プロパティがサポートする[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]です。  
  
<a name="xamlAttributeUsage_AnnotationAlternates"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト* **Typography.AnnotationAlternates**="*int*"/>  
  
<a name="dependencyPropertyInfo_AnnotationAlternates"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Documents.Typography.AnnotationAlternatesProperty>|  
|メタデータ プロパティに設定します。`true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>、<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>、<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AnnotationAlternatesProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AnnotationAlternatesProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AnnotationAlternatesProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.Typography.AnnotationAlternatesProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Documents.Typography.AnnotationAlternates" /> 添付プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Capitals">
      <MemberSignature Language="C#" Value="public System.Windows.FontCapitals Capitals { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.FontCapitals Capitals" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.Typography.Capitals" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.FontCapitals</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定、<see cref="T:System.Windows.FontCapitals" />を選択したフォントの大文字の形式を示す値を列挙します。</summary>
        <value>A<see cref="T:System.Windows.FontCapitals" />列挙値。 既定値は <see cref="F:System.Windows.FontCapitals.Normal" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティを取得または所有しているオブジェクトの値を設定、`Typography`プロパティにアクセスする唯一の方法、<xref:System.Windows.Documents.Typography>クラスのインスタンス。 さらに、このオブジェクトにテキストを格納していることを設定できるように、添付プロパティの使用法プロパティがサポートする[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]です。  
  
 大文字は、大文字スタイルのグリフでテキストをレンダリングするタイポグラフィ形式のセットです。 通常、テキストをすべて大文字で表示すると、文字間隔が狭すぎるように見え、文字の印象と縦横比が重すぎるように感じられます。 OpenType は、英大文字、小型英大文字を含め、超小型英大文字、タイトル、および大文字スペーシングのスタイル書式の数をサポートします。 これらのスタイル形式を使用して、英大文字の外観を変えることができます。  
  
 次のテキストは、Pescadero フォントの標準の大文字と、その後に "SmallCaps" および "AllSmallCaps" のスタイルをあてた文字を示したものです。 この場合、同じフォント サイズは 3 つすべての単語の使用します。  
  
 ![OpenType の大文字を使用してテキストを](~/add/media/opentypefont11.gif "OpenType の大文字を使用するテキスト")  
大文字の例  
  
 次のコード例は、英大文字の Pescadero フォントを定義する方法を示しますを使用して、<xref:System.Windows.Documents.Typography.Capitals%2A>プロパティです。 "SmallCaps" 形式を使用する場合は、先頭の大文字は無視されます。  
  
 [!code-xaml[OpenTypeFontSamples#9](~/samples/snippets/csharp/VS_Snippets_Wpf/OpenTypeFontSamples/CS/PageOne.xaml#9)]   
  
 次のコード例では、前のマークアップの例と同じタスクを実行します。  
  
 [!code-csharp[TypographyCodeSnippets#TypographyCodeSnippet1](~/samples/snippets/csharp/VS_Snippets_Wpf/TypographyCodeSnippets/CSharp/Page1.xaml.cs#typographycodesnippet1)]
 [!code-vb[TypographyCodeSnippets#TypographyCodeSnippet1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TypographyCodeSnippets/visualbasic/page1.xaml.vb#typographycodesnippet1)]  
  
<a name="xamlAttributeUsage_Capitals"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト* **Typography.Capitals**="<xref:System.Windows.FontCapitals>"/>  
  
<a name="dependencyPropertyInfo_Capitals"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Documents.Typography.CapitalsProperty>|  
|メタデータ プロパティに設定します。`true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>、<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>、<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CapitalSpacing">
      <MemberSignature Language="C#" Value="public bool CapitalSpacing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CapitalSpacing" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.Typography.CapitalSpacing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはグリフ間のスペースをすべて大文字のテキストを読みやすさを向上させるためにグローバルに調整するかどうかを決定する値を設定します。</summary>
        <value>
          <see langword="true" />間隔を調整します。 場合、それ以外の場合、<see langword="false" />です。 既定値は <see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティを取得または所有しているオブジェクトの値を設定、`Typography`プロパティにアクセスする唯一の方法、<xref:System.Windows.Documents.Typography>クラスのインスタンス。 さらに、このオブジェクトにテキストを格納していることを設定できるように、添付プロパティの使用法プロパティがサポートする[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]です。  
  
 大文字スペーシングは、テキストをすべて大文字にする場合に間隔を広くする機能です。 大文字は通常小文字とのブレンドに設計されます。 間で魅力的な間隔を表示し、大文字と小文字可能性がありますが密接すぎますすべて大文字を使用する場合。 次のテキストは、Pescadero フォントの通常の動作と大文字の間隔を表示します。  
  
 ![OpenType の大文字スペーシングを使用してテキストを](~/add/media/opentypefont21.gif "OpenType の大文字スペーシングを使用するテキスト")  
通常の動作と大文字のスペースの例  
  
 次のコード例に示します Pescadero フォントの大文字の間隔を定義する方法を使用して、<xref:System.Windows.Documents.Typography.CapitalSpacing%2A>プロパティです。  
  
 [!code-xaml[OpenTypeFontSamples#OpenTypeFontSnippet18](~/samples/snippets/csharp/VS_Snippets_Wpf/OpenTypeFontSamples/CS/PageOne.xaml#opentypefontsnippet18)]   
  
<a name="xamlAttributeUsage_CapitalSpacing"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト* **Typography.CapitalSpacing**="*bool*"/>  
  
<a name="dependencyPropertyInfo_CapitalSpacing"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Documents.Typography.CapitalSpacingProperty>|  
|メタデータ プロパティに設定します。`true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>、<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>、<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CapitalSpacingProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CapitalSpacingProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CapitalSpacingProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.Typography.CapitalSpacingProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Documents.Typography.CapitalSpacing" /> 添付プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CapitalsProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CapitalsProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CapitalsProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.Typography.CapitalsProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Documents.Typography.Capitals" /> 添付プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CaseSensitiveForms">
      <MemberSignature Language="C#" Value="public bool CaseSensitiveForms { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CaseSensitiveForms" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.Typography.CaseSensitiveForms" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはグリフが大文字のグリフに合わせるために垂直方向の位置を調整するかどうかを決定する値を設定します。</summary>
        <value>
          <see langword="true" />垂直方向の位置が調整されている場合それ以外の場合、<see langword="false" />です。 既定値は <see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティを取得または所有しているオブジェクトの値を設定、`Typography`プロパティにアクセスする唯一の方法、<xref:System.Windows.Documents.Typography>クラスのインスタンス。 さらに、このオブジェクトにテキストを格納していることを設定できるように、添付プロパティの使用法プロパティがサポートする[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]です。  
  
<a name="xamlAttributeUsage_CaseSensitiveForms"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト* **Typography.CaseSensitiveForms**="*bool*"/>  
  
<a name="dependencyPropertyInfo_CaseSensitiveForms"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Documents.Typography.CaseSensitiveFormsProperty>|  
|メタデータ プロパティに設定します。`true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>、<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>、<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CaseSensitiveFormsProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CaseSensitiveFormsProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CaseSensitiveFormsProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.Typography.CaseSensitiveFormsProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Documents.Typography.CaseSensitiveForms" /> 添付プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextualAlternates">
      <MemberSignature Language="C#" Value="public bool ContextualAlternates { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ContextualAlternates" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.Typography.ContextualAlternates" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または表示されているテキストのコンテキストに基づいて、カスタム グリフのフォームを使用できるかどうかを決定する値を設定します。</summary>
        <value>
          <see langword="true" />カスタム グリフのフォームを使用する場合それ以外の場合、<see langword="false" />です。 既定値は <see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティを取得または所有しているオブジェクトの値を設定、`Typography`プロパティにアクセスする唯一の方法、<xref:System.Windows.Documents.Typography>クラスのインスタンス。 さらに、このオブジェクトにテキストを格納していることを設定できるように、添付プロパティの使用法プロパティがサポートする[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]です。  
  
 ランダムなコンテキスト代替は、単一文字に複数の代替グリフを提供します。 スクリプトの種類のフォントで実装された場合、この機能は、一連のランダムに選択されたグリフの外観にわずかに異なりますを使用して手書き入力をシミュレートできます。 次のテキストは、Lindsey フォントのランダムなコンテキスト代替グリフを使用します。 注意して、文字"a"が多少異なります外観  
  
 ![OpenType のランダムなコンテキスト代替グリフを使用してテキストを](~/add/media/opentypefont23.gif "OpenType のランダムなコンテキスト代替グリフを使用するテキスト")  
ランダムなコンテキスト代替グリフの例  
  
 次のコード例は、Lindsey フォントのランダムなコンテキスト代替グリフを定義する方法を示しています。 を使用して、<xref:System.Windows.Documents.Typography.ContextualAlternates%2A>プロパティです。  
  
 [!code-xaml[OpenTypeFontSamples#OpenTypeFontSnippet20](~/samples/snippets/csharp/VS_Snippets_Wpf/OpenTypeFontSamples/CS/Window1.xaml#opentypefontsnippet20)]   
  
<a name="xamlAttributeUsage_ContextualAlternates"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト* **Typography.ContextualAlternates**="*bool*"/>  
  
<a name="dependencyPropertyInfo_ContextualAlternates"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Documents.Typography.ContextualAlternatesProperty>|  
|メタデータ プロパティに設定します。`true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>、<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>、<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextualAlternatesProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ContextualAlternatesProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ContextualAlternatesProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.Typography.ContextualAlternatesProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Documents.Typography.ContextualAlternates" /> 添付プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextualLigatures">
      <MemberSignature Language="C#" Value="public bool ContextualLigatures { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ContextualLigatures" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.Typography.ContextualLigatures" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはコンテキスト合字が有効になっているかどうかを決定する値を設定します。</summary>
        <value>
          <see langword="true" />コンテキスト合字が有効な場合それ以外の場合、<see langword="false" />です。 既定値は <see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティを取得または所有しているオブジェクトの値を設定、`Typography`プロパティにアクセスする唯一の方法、<xref:System.Windows.Documents.Typography>クラスのインスタンス。 さらに、このオブジェクトにテキストを格納していることを設定できるように、添付プロパティの使用法プロパティがサポートする[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]です。  
  
 コンテキスト合字は、合字を構成する文字の間の結合の動作を提供することによって、読みやすさを強化するために設計されています。  
  
 場合の値<xref:System.Windows.Documents.Typography.ContextualLigatures%2A>は`true`と選択したフォントがコンテキスト合字をサポートしていないため、文字の既定のフォームが表示されます。  
  
<a name="xamlAttributeUsage_ContextualLigatures"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト* **Typography.ContextualLigatures**="*bool*"/>  
  
<a name="dependencyPropertyInfo_ContextualLigatures"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Documents.Typography.ContextualLigaturesProperty>|  
|メタデータ プロパティに設定します。`true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>、<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>、<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextualLigaturesProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ContextualLigaturesProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ContextualLigaturesProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.Typography.ContextualLigaturesProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Documents.Typography.ContextualLigatures" /> 添付プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextualSwashes">
      <MemberSignature Language="C#" Value="public int ContextualSwashes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ContextualSwashes" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.Typography.ContextualSwashes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはコンテキスト巻き髭形式のインデックスを指定する値を設定します。</summary>
        <value>標準の巻き髭形式のインデックス。 既定値は 0 (ゼロです)。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティを取得または所有しているオブジェクトの値を設定、`Typography`プロパティにアクセスする唯一の方法、<xref:System.Windows.Documents.Typography>クラスのインスタンス。 さらに、このオブジェクトにテキストを格納していることを設定できるように、添付プロパティの使用法プロパティがサポートする[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]です。  
  
 飾り付きグリフの特定の組み合わせでは、隣りあう文字の下に延びる部分が重なり合うなど、美しくない外観になる可能性があります。 コンテキスト スワッシュを使用するより優れた外観を生成する代替スワッシュ グリフを使用できます。 次のテキストは前に、とコンテキスト スワッシュが適用された後に、同じ単語を示します。  
  
 ![OpenType のコンテキスト巻き髭を使用してテキストを](~/add/media/opentypefont19.gif "OpenType のコンテキスト巻き髭を使用するテキスト")  
コンテキスト スワッシュの例  
  
 次のコード例は、コンテキストのスワッシュ Pescadero フォントを定義する方法を示しますを使用して、<xref:System.Windows.Documents.Typography.ContextualSwashes%2A>プロパティです。  
  
 [!code-xaml[OpenTypeFontSamples#OpenTypeFontSnippet16](~/samples/snippets/csharp/VS_Snippets_Wpf/OpenTypeFontSamples/CS/PageOne.xaml#opentypefontsnippet16)]   
  
<a name="xamlAttributeUsage_ContextualSwashes"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト* **Typography.ContextualSwashes**="*int*"/>  
  
<a name="dependencyPropertyInfo_ContextualSwashes"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Documents.Typography.ContextualSwashesProperty>|  
|メタデータ プロパティに設定します。`true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>、<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>、<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextualSwashesProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ContextualSwashesProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ContextualSwashesProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.Typography.ContextualSwashesProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Documents.Typography.ContextualSwashes" /> 添付プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiscretionaryLigatures">
      <MemberSignature Language="C#" Value="public bool DiscretionaryLigatures { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DiscretionaryLigatures" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.Typography.DiscretionaryLigatures" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または随意合字が有効になっているかどうかを決定する値を設定します。</summary>
        <value>
          <see langword="true" />随意合字が有効な場合それ以外の場合、<see langword="false" />です。 既定値は <see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティを取得または所有しているオブジェクトの値を設定、`Typography`プロパティにアクセスする唯一の方法、<xref:System.Windows.Documents.Typography>クラスのインスタンス。 さらに、このオブジェクトにテキストを格納していることを設定できるように、添付プロパティの使用法プロパティがサポートする[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]です。  
  
 随意合字は、装飾、読みやすくするために設計されたされるようにするために設計されています。 次のテキストは、Pericles フォントの随意合字グリフを示したものです。  
  
 ![OpenType の随意合字を使用してテキストを](~/add/media/opentypefont05.gif "OpenType の随意合字を使用するテキスト")  
随意合字セットの例  
  
 次のコード例に示します Pericles フォントの随意合字の記号を定義する方法を使用して、<xref:System.Windows.Documents.Typography.DiscretionaryLigatures%2A>プロパティです。  
  
[!code-xaml[OpenTypeFontSamples#5](~/samples/snippets/csharp/VS_Snippets_Wpf/OpenTypeFontSamples/CS/PageOne.xaml#5)]   
  
<a name="xamlAttributeUsage_DiscretionaryLigatures"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト* **Typography.DiscretionaryLigatures**="*bool*"/>  
  
<a name="dependencyPropertyInfo_DiscretionaryLigatures"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Documents.Typography.DiscretionaryLigaturesProperty>|  
|メタデータ プロパティに設定します。`true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>、<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>、<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DiscretionaryLigaturesProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty DiscretionaryLigaturesProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty DiscretionaryLigaturesProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.Typography.DiscretionaryLigaturesProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Documents.Typography.DiscretionaryLigatures" /> 添付プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EastAsianExpertForms">
      <MemberSignature Language="C#" Value="public bool EastAsianExpertForms { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EastAsianExpertForms" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.Typography.EastAsianExpertForms" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または、日本語フォントの標準的な形式を対応する優先傍点を文字形式に置き換えられているかどうかを決定する値を設定します。</summary>
        <value>
          <see langword="true" />日本語フォントの標準的な形式は; の対応する優先傍点を文字形式に置き換えられている場合それ以外の場合、<see langword="false" />です。 既定値は <see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティを取得または所有しているオブジェクトの値を設定、`Typography`プロパティにアクセスする唯一の方法、<xref:System.Windows.Documents.Typography>クラスのインスタンス。 さらに、このオブジェクトにテキストを格納していることを設定できるように、添付プロパティの使用法プロパティがサポートする[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]です。  
  
<a name="xamlAttributeUsage_EastAsianExpertForms"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト* **Typography.ExpertForms**="*bool*"/>  
  
<a name="dependencyPropertyInfo_EastAsianExpertForms"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Documents.Typography.EastAsianExpertFormsProperty>|  
|メタデータ プロパティに設定します。`true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>、<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>、<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EastAsianExpertFormsProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty EastAsianExpertFormsProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty EastAsianExpertFormsProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.Typography.EastAsianExpertFormsProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Documents.Typography.EastAsianExpertForms" /> 添付プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EastAsianLanguage">
      <MemberSignature Language="C#" Value="public System.Windows.FontEastAsianLanguage EastAsianLanguage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.FontEastAsianLanguage EastAsianLanguage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.Typography.EastAsianLanguage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.FontEastAsianLanguage</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定、<see cref="T:System.Windows.FontEastAsianLanguage" />を特定の書記体系または言語に使用するグリフのバージョンを示す値を列挙します。</summary>
        <value>A<see cref="T:System.Windows.FontEastAsianLanguage" />列挙値。 既定値は <see cref="F:System.Windows.FontEastAsianLanguage.Normal" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティを取得または所有しているオブジェクトの値を設定、`Typography`プロパティにアクセスする唯一の方法、<xref:System.Windows.Documents.Typography>クラスのインスタンス。 さらに、このオブジェクトにテキストを格納していることを設定できるように、添付プロパティの使用法プロパティがサポートする[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]です。  
  
<a name="xamlAttributeUsage_EastAsianLanguage"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト* **Typography.EastAsianLanguage**="<xref:System.Windows.FontEastAsianLanguage>"/>  
  
<a name="dependencyPropertyInfo_EastAsianLanguage"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Documents.Typography.EastAsianLanguageProperty>|  
|メタデータ プロパティに設定します。`true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>、<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>、<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EastAsianLanguageProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty EastAsianLanguageProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty EastAsianLanguageProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.Typography.EastAsianLanguageProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Documents.Typography.EastAsianLanguage" /> 添付プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EastAsianWidths">
      <MemberSignature Language="C#" Value="public System.Windows.FontEastAsianWidths EastAsianWidths { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.FontEastAsianWidths EastAsianWidths" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.Typography.EastAsianWidths" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.FontEastAsianWidths</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定、<see cref="T:System.Windows.FontEastAsianWidths" />東アジア言語のフォントでラテン文字の使用に比例して幅を示す値を列挙します。</summary>
        <value>A<see cref="T:System.Windows.FontEastAsianWidths" />列挙値。 既定値は <see cref="F:System.Windows.FontEastAsianWidths.Normal" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティを取得または所有しているオブジェクトの値を設定、`Typography`プロパティにアクセスする唯一の方法、<xref:System.Windows.Documents.Typography>クラスのインスタンス。 さらに、このオブジェクトにテキストを格納していることを設定できるように、添付プロパティの使用法プロパティがサポートする[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]です。  
  
<a name="xamlAttributeUsage_EastAsianWidths"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト* **Typography.EastAsianWidths**="<xref:System.Windows.FontEastAsianWidths>"/>  
  
<a name="dependencyPropertyInfo_EastAsianWidths"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Documents.Typography.EastAsianWidthsProperty>|  
|メタデータ プロパティに設定します。`true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>、<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>、<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EastAsianWidthsProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty EastAsianWidthsProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty EastAsianWidthsProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.Typography.EastAsianWidthsProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Documents.Typography.EastAsianWidths" /> 添付プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fraction">
      <MemberSignature Language="C#" Value="public System.Windows.FontFraction Fraction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.FontFraction Fraction" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.Typography.Fraction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.FontFraction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定、<see cref="T:System.Windows.FontFraction" />分数のスタイルを示す値を列挙します。</summary>
        <value>A<see cref="T:System.Windows.FontFraction" />列挙値。 既定値は <see cref="F:System.Windows.FontFraction.Normal" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティを取得または所有しているオブジェクトの値を設定、`Typography`プロパティにアクセスする唯一の方法、<xref:System.Windows.Documents.Typography>クラスのインスタンス。 さらに、このオブジェクトにテキストを格納していることを設定できるように、添付プロパティの使用法プロパティがサポートする[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]です。  
  
 OpenType フォントは、スラッシュや積み上げなど、分数のスタイルをサポートします。  
  
 次のテキストは、Palatino Linotype フォントの小数スタイルを示したものです。  
  
 ![OpenType を使用してテキストをスラッシュし、分数を積み上げ](~/add/media/opentypefont12.gif "OpenType を使用してテキストをスラッシュし、分数を示す積み上")  
スラッシュと積み上げ分数スタイルの例  
  
 次のコード例は、分数 Palatino Linotype フォントのスタイルを定義する方法を示しています。 を使用して、<xref:System.Windows.Documents.Typography.Fraction%2A>プロパティです。  
  
 [!code-xaml[OpenTypeFontSamples#10](~/samples/snippets/csharp/VS_Snippets_Wpf/OpenTypeFontSamples/CS/PageOne.xaml#10)]   
  
<a name="xamlAttributeUsage_Fraction"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト* **Typography.Fraction**="<xref:System.Windows.FontFraction>"/>  
  
<a name="dependencyPropertyInfo_Fraction"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Documents.Typography.FractionProperty>|  
|メタデータ プロパティに設定します。`true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>、<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>、<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FractionProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty FractionProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty FractionProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.Typography.FractionProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Documents.Typography.Fraction" /> 添付プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAnnotationAlternates">
      <MemberSignature Language="C#" Value="public static int GetAnnotationAlternates (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetAnnotationAlternates(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Typography.GetAnnotationAlternates(System.Windows.DependencyObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">値を取得する対象の依存関係オブジェクト、<see cref="P:System.Windows.Documents.Typography.AnnotationAlternates" />プロパティです。</param>
        <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.AnnotationAlternates" /> 添付プロパティの値を返します。</summary>
        <returns>現在の値、<see cref="P:System.Windows.Documents.TextElement.FontFamily" />指定した依存関係オブジェクトのプロパティを添付します。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">いつ発生する<paramref name="element" />は<see langword="null" />します。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetCapitals">
      <MemberSignature Language="C#" Value="public static System.Windows.FontCapitals GetCapitals (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.FontCapitals GetCapitals(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Typography.GetCapitals(System.Windows.DependencyObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.FontCapitals</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">値を取得する対象の依存関係オブジェクト、<see cref="P:System.Windows.Documents.Typography.Capitals" />プロパティです。</param>
        <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.Capitals" /> 添付プロパティの値を返します。</summary>
        <returns>現在の値、<see cref="P:System.Windows.Documents.Typography.Capitals" />指定した依存関係オブジェクトのプロパティを添付します。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCapitalSpacing">
      <MemberSignature Language="C#" Value="public static bool GetCapitalSpacing (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetCapitalSpacing(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Typography.GetCapitalSpacing(System.Windows.DependencyObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">値を取得する対象の依存関係オブジェクト、<see cref="P:System.Windows.Documents.Typography.CapitalSpacing" />プロパティです。</param>
        <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.CapitalSpacing" /> 添付プロパティの値を返します。</summary>
        <returns>現在の値、<see cref="P:System.Windows.Documents.Typography.CapitalSpacing" />指定した依存関係オブジェクトのプロパティを添付します。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCaseSensitiveForms">
      <MemberSignature Language="C#" Value="public static bool GetCaseSensitiveForms (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetCaseSensitiveForms(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Typography.GetCaseSensitiveForms(System.Windows.DependencyObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">値を取得する対象の依存関係オブジェクト、<see cref="P:System.Windows.Documents.Typography.CaseSensitiveForms" />プロパティです。</param>
        <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.CaseSensitiveForms" /> 添付プロパティの値を返します。</summary>
        <returns>現在の値、<see cref="P:System.Windows.Documents.Typography.CaseSensitiveForms" />指定した依存関係オブジェクトのプロパティを添付します。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContextualAlternates">
      <MemberSignature Language="C#" Value="public static bool GetContextualAlternates (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetContextualAlternates(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Typography.GetContextualAlternates(System.Windows.DependencyObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">値を取得する対象の依存関係オブジェクト、<see cref="P:System.Windows.Documents.Typography.ContextualAlternates" />プロパティです。</param>
        <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.ContextualAlternates" /> 添付プロパティの値を返します。</summary>
        <returns>現在の値、<see cref="P:System.Windows.Documents.Typography.ContextualAlternates" />指定した依存関係オブジェクトのプロパティを添付します。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContextualLigatures">
      <MemberSignature Language="C#" Value="public static bool GetContextualLigatures (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetContextualLigatures(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Typography.GetContextualLigatures(System.Windows.DependencyObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">値を取得する対象の依存関係オブジェクト、<see cref="P:System.Windows.Documents.Typography.ContextualLigatures" />プロパティです。</param>
        <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.ContextualLigatures" /> 添付プロパティの値を返します。</summary>
        <returns>現在の値、<see cref="P:System.Windows.Documents.Typography.ContextualLigatures" />指定した依存関係オブジェクトのプロパティを添付します。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContextualSwashes">
      <MemberSignature Language="C#" Value="public static int GetContextualSwashes (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetContextualSwashes(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Typography.GetContextualSwashes(System.Windows.DependencyObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">値を取得する対象の依存関係オブジェクト、<see cref="P:System.Windows.Documents.Typography.ContextualSwashes" />プロパティです。</param>
        <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.ContextualSwashes" /> 添付プロパティの値を返します。</summary>
        <returns>現在の値、<see cref="P:System.Windows.Documents.Typography.ContextualSwashes" />指定した依存関係オブジェクトのプロパティを添付します。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDiscretionaryLigatures">
      <MemberSignature Language="C#" Value="public static bool GetDiscretionaryLigatures (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetDiscretionaryLigatures(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Typography.GetDiscretionaryLigatures(System.Windows.DependencyObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">値を取得する対象の依存関係オブジェクト、<see cref="P:System.Windows.Documents.Typography.DiscretionaryLigatures" />プロパティです。</param>
        <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.DiscretionaryLigatures" /> 添付プロパティの値を返します。</summary>
        <returns>現在の値、<see cref="P:System.Windows.Documents.Typography.DiscretionaryLigatures" />指定した依存関係オブジェクトのプロパティを添付します。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEastAsianExpertForms">
      <MemberSignature Language="C#" Value="public static bool GetEastAsianExpertForms (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetEastAsianExpertForms(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Typography.GetEastAsianExpertForms(System.Windows.DependencyObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">値を取得する対象の依存関係オブジェクト、<see cref="P:System.Windows.Documents.Typography.EastAsianExpertForms" />プロパティです。</param>
        <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.EastAsianExpertForms" /> 添付プロパティの値を返します。</summary>
        <returns>現在の値、<see cref="P:System.Windows.Documents.Typography.EastAsianExpertForms" />指定した依存関係オブジェクトのプロパティを添付します。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEastAsianLanguage">
      <MemberSignature Language="C#" Value="public static System.Windows.FontEastAsianLanguage GetEastAsianLanguage (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.FontEastAsianLanguage GetEastAsianLanguage(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Typography.GetEastAsianLanguage(System.Windows.DependencyObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.FontEastAsianLanguage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">値を取得する対象の依存関係オブジェクト、<see cref="P:System.Windows.Documents.Typography.EastAsianLanguage" />プロパティです。</param>
        <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.EastAsianLanguage" /> 添付プロパティの値を返します。</summary>
        <returns>現在の値、<see cref="P:System.Windows.Documents.Typography.EastAsianLanguage" />指定した依存関係オブジェクトのプロパティを添付します。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEastAsianWidths">
      <MemberSignature Language="C#" Value="public static System.Windows.FontEastAsianWidths GetEastAsianWidths (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.FontEastAsianWidths GetEastAsianWidths(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Typography.GetEastAsianWidths(System.Windows.DependencyObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.FontEastAsianWidths</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">値を取得する対象の依存関係オブジェクト、<see cref="P:System.Windows.Documents.Typography.EastAsianWidths" />プロパティです。</param>
        <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.EastAsianWidths" /> 添付プロパティの値を返します。</summary>
        <returns>現在の値、<see cref="P:System.Windows.Documents.Typography.EastAsianWidths" />指定した依存関係オブジェクトのプロパティを添付します。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFraction">
      <MemberSignature Language="C#" Value="public static System.Windows.FontFraction GetFraction (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.FontFraction GetFraction(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Typography.GetFraction(System.Windows.DependencyObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.FontFraction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">値を取得する対象の依存関係オブジェクト、<see cref="P:System.Windows.Documents.Typography.Fraction" />プロパティです。</param>
        <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.Fraction" /> 添付プロパティの値を返します。</summary>
        <returns>現在の値、<see cref="P:System.Windows.Documents.Typography.Fraction" />指定した依存関係オブジェクトのプロパティを添付します。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHistoricalForms">
      <MemberSignature Language="C#" Value="public static bool GetHistoricalForms (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetHistoricalForms(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Typography.GetHistoricalForms(System.Windows.DependencyObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">値を取得する対象の依存関係オブジェクト、<see cref="P:System.Windows.Documents.Typography.HistoricalForms" />プロパティです。</param>
        <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.HistoricalForms" /> 添付プロパティの値を返します。</summary>
        <returns>現在の値、<see cref="P:System.Windows.Documents.Typography.HistoricalForms" />指定した依存関係オブジェクトのプロパティを添付します。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHistoricalLigatures">
      <MemberSignature Language="C#" Value="public static bool GetHistoricalLigatures (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetHistoricalLigatures(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Typography.GetHistoricalLigatures(System.Windows.DependencyObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">値を取得する対象の依存関係オブジェクト、<see cref="P:System.Windows.Documents.Typography.HistoricalLigatures" />プロパティです。</param>
        <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.HistoricalLigatures" /> 添付プロパティの値を返します。</summary>
        <returns>現在の値、<see cref="P:System.Windows.Documents.Typography.HistoricalLigatures" />指定した依存関係オブジェクトのプロパティを添付します。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetKerning">
      <MemberSignature Language="C#" Value="public static bool GetKerning (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetKerning(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Typography.GetKerning(System.Windows.DependencyObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">値を取得する対象の依存関係オブジェクト、<see cref="P:System.Windows.Documents.Typography.Kerning" />プロパティです。</param>
        <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.Kerning" /> 添付プロパティの値を返します。</summary>
        <returns>現在の値、<see cref="P:System.Windows.Documents.Typography.Kerning" />指定した依存関係オブジェクトのプロパティを添付します。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMathematicalGreek">
      <MemberSignature Language="C#" Value="public static bool GetMathematicalGreek (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetMathematicalGreek(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Typography.GetMathematicalGreek(System.Windows.DependencyObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">値を取得する対象の依存関係オブジェクト、<see cref="P:System.Windows.Documents.Typography.MathematicalGreek" />プロパティです。</param>
        <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.MathematicalGreek" /> 添付プロパティの値を返します。</summary>
        <returns>現在の値、<see cref="P:System.Windows.Documents.Typography.MathematicalGreek" />指定した依存関係オブジェクトのプロパティを添付します。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNumeralAlignment">
      <MemberSignature Language="C#" Value="public static System.Windows.FontNumeralAlignment GetNumeralAlignment (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.FontNumeralAlignment GetNumeralAlignment(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Typography.GetNumeralAlignment(System.Windows.DependencyObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.FontNumeralAlignment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">値を取得する対象の依存関係オブジェクト、<see cref="P:System.Windows.Documents.Typography.NumeralAlignment" />プロパティです。</param>
        <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.NumeralAlignment" /> 添付プロパティの値を返します。</summary>
        <returns>現在の値、<see cref="P:System.Windows.Documents.Typography.NumeralAlignment" />指定した依存関係オブジェクトのプロパティを添付します。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNumeralStyle">
      <MemberSignature Language="C#" Value="public static System.Windows.FontNumeralStyle GetNumeralStyle (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.FontNumeralStyle GetNumeralStyle(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Typography.GetNumeralStyle(System.Windows.DependencyObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.FontNumeralStyle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">値を取得する対象の依存関係オブジェクト、<see cref="P:System.Windows.Documents.Typography.NumeralStyle" />プロパティです。</param>
        <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.NumeralStyle" /> 添付プロパティの値を返します。</summary>
        <returns>現在の値、<see cref="P:System.Windows.Documents.Typography.NumeralStyle" />指定した依存関係オブジェクトのプロパティを添付します。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSlashedZero">
      <MemberSignature Language="C#" Value="public static bool GetSlashedZero (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetSlashedZero(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Typography.GetSlashedZero(System.Windows.DependencyObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">値を取得する対象の依存関係オブジェクト、<see cref="P:System.Windows.Documents.Typography.SlashedZero" />プロパティです。</param>
        <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.SlashedZero" /> 添付プロパティの値を返します。</summary>
        <returns>現在の値、<see cref="P:System.Windows.Documents.Typography.SlashedZero" />指定した依存関係オブジェクトのプロパティを添付します。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStandardLigatures">
      <MemberSignature Language="C#" Value="public static bool GetStandardLigatures (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetStandardLigatures(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Typography.GetStandardLigatures(System.Windows.DependencyObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">値を取得する対象の依存関係オブジェクト、<see cref="P:System.Windows.Documents.Typography.StandardLigatures" />プロパティです。</param>
        <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StandardLigatures" /> 添付プロパティの値を返します。</summary>
        <returns>現在の値、<see cref="P:System.Windows.Documents.Typography.StandardLigatures" />指定した依存関係オブジェクトのプロパティを添付します。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStandardSwashes">
      <MemberSignature Language="C#" Value="public static int GetStandardSwashes (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetStandardSwashes(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Typography.GetStandardSwashes(System.Windows.DependencyObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">値を取得する対象の依存関係オブジェクト、<see cref="P:System.Windows.Documents.Typography.StandardSwashes" />プロパティです。</param>
        <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StandardSwashes" /> 添付プロパティの値を返します。</summary>
        <returns>現在の値、<see cref="P:System.Windows.Documents.Typography.StandardSwashes" />指定した依存関係オブジェクトのプロパティを添付します。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStylisticAlternates">
      <MemberSignature Language="C#" Value="public static int GetStylisticAlternates (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetStylisticAlternates(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Typography.GetStylisticAlternates(System.Windows.DependencyObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">値を取得する対象の依存関係オブジェクト、<see cref="P:System.Windows.Documents.Typography.StylisticAlternates" />プロパティです。</param>
        <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StylisticAlternates" /> 添付プロパティの値を返します。</summary>
        <returns>現在の値、<see cref="P:System.Windows.Documents.Typography.StylisticAlternates" />指定した依存関係オブジェクトのプロパティを添付します。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStylisticSet1">
      <MemberSignature Language="C#" Value="public static bool GetStylisticSet1 (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetStylisticSet1(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Typography.GetStylisticSet1(System.Windows.DependencyObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">値を取得する対象の依存関係オブジェクト、<see cref="P:System.Windows.Documents.Typography.StylisticSet1" />プロパティです。</param>
        <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StylisticSet1" /> 添付プロパティの値を返します。</summary>
        <returns>現在の値、<see cref="P:System.Windows.Documents.Typography.StylisticSet1" />指定した依存関係オブジェクトのプロパティを添付します。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStylisticSet10">
      <MemberSignature Language="C#" Value="public static bool GetStylisticSet10 (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetStylisticSet10(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Typography.GetStylisticSet10(System.Windows.DependencyObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">値を取得する対象の依存関係オブジェクト、<see cref="P:System.Windows.Documents.Typography.StylisticSet10" />プロパティです。</param>
        <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StylisticSet10" /> 添付プロパティの値を返します。</summary>
        <returns>現在の値、<see cref="P:System.Windows.Documents.Typography.StylisticSet10" />指定した依存関係オブジェクトのプロパティを添付します。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStylisticSet11">
      <MemberSignature Language="C#" Value="public static bool GetStylisticSet11 (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetStylisticSet11(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Typography.GetStylisticSet11(System.Windows.DependencyObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">値を取得する対象の依存関係オブジェクト、<see cref="P:System.Windows.Documents.Typography.StylisticSet11" />プロパティです。</param>
        <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StylisticSet11" /> 添付プロパティの値を返します。</summary>
        <returns>現在の値、<see cref="P:System.Windows.Documents.Typography.StylisticSet11" />指定した依存関係オブジェクトのプロパティを添付します。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStylisticSet12">
      <MemberSignature Language="C#" Value="public static bool GetStylisticSet12 (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetStylisticSet12(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Typography.GetStylisticSet12(System.Windows.DependencyObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">値を取得する対象の依存関係オブジェクト、<see cref="P:System.Windows.Documents.Typography.StylisticSet12" />プロパティです。</param>
        <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StylisticSet12" /> 添付プロパティの値を返します。</summary>
        <returns>現在の値、<see cref="P:System.Windows.Documents.Typography.StylisticSet12" />指定した依存関係オブジェクトのプロパティを添付します。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStylisticSet13">
      <MemberSignature Language="C#" Value="public static bool GetStylisticSet13 (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetStylisticSet13(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Typography.GetStylisticSet13(System.Windows.DependencyObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">値を取得する対象の依存関係オブジェクト、<see cref="P:System.Windows.Documents.Typography.StylisticSet13" />プロパティです。</param>
        <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StylisticSet13" /> 添付プロパティの値を返します。</summary>
        <returns>現在の値、<see cref="P:System.Windows.Documents.Typography.StylisticSet13" />指定した依存関係オブジェクトのプロパティを添付します。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStylisticSet14">
      <MemberSignature Language="C#" Value="public static bool GetStylisticSet14 (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetStylisticSet14(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Typography.GetStylisticSet14(System.Windows.DependencyObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">値を取得する対象の依存関係オブジェクト、<see cref="P:System.Windows.Documents.Typography.StylisticSet14" />プロパティです。</param>
        <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StylisticSet14" /> 添付プロパティの値を返します。</summary>
        <returns>現在の値、<see cref="P:System.Windows.Documents.Typography.StylisticSet14" />指定した依存関係オブジェクトのプロパティを添付します。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStylisticSet15">
      <MemberSignature Language="C#" Value="public static bool GetStylisticSet15 (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetStylisticSet15(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Typography.GetStylisticSet15(System.Windows.DependencyObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">値を取得する対象の依存関係オブジェクト、<see cref="P:System.Windows.Documents.Typography.StylisticSet15" />プロパティです。</param>
        <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StylisticSet15" /> 添付プロパティの値を返します。</summary>
        <returns>現在の値、<see cref="P:System.Windows.Documents.Typography.StylisticSet15" />指定した依存関係オブジェクトのプロパティを添付します。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStylisticSet16">
      <MemberSignature Language="C#" Value="public static bool GetStylisticSet16 (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetStylisticSet16(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Typography.GetStylisticSet16(System.Windows.DependencyObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">値を取得する対象の依存関係オブジェクト、<see cref="P:System.Windows.Documents.Typography.StylisticSet16" />プロパティです。</param>
        <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StylisticSet16" /> 添付プロパティの値を返します。</summary>
        <returns>現在の値、<see cref="P:System.Windows.Documents.Typography.StylisticSet16" />指定した依存関係オブジェクトのプロパティを添付します。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStylisticSet17">
      <MemberSignature Language="C#" Value="public static bool GetStylisticSet17 (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetStylisticSet17(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Typography.GetStylisticSet17(System.Windows.DependencyObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">値を取得する対象の依存関係オブジェクト、<see cref="P:System.Windows.Documents.Typography.StylisticSet17" />プロパティです。</param>
        <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StylisticSet17" /> 添付プロパティの値を返します。</summary>
        <returns>現在の値、<see cref="P:System.Windows.Documents.Typography.StylisticSet17" />指定した依存関係オブジェクトのプロパティを添付します。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStylisticSet18">
      <MemberSignature Language="C#" Value="public static bool GetStylisticSet18 (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetStylisticSet18(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Typography.GetStylisticSet18(System.Windows.DependencyObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">値を取得する対象の依存関係オブジェクト、<see cref="P:System.Windows.Documents.Typography.StylisticSet18" />プロパティです。</param>
        <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StylisticSet18" /> 添付プロパティの値を返します。</summary>
        <returns>現在の値、<see cref="P:System.Windows.Documents.Typography.StylisticSet18" />指定した依存関係オブジェクトのプロパティを添付します。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStylisticSet19">
      <MemberSignature Language="C#" Value="public static bool GetStylisticSet19 (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetStylisticSet19(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Typography.GetStylisticSet19(System.Windows.DependencyObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">値を取得する対象の依存関係オブジェクト、<see cref="P:System.Windows.Documents.Typography.StylisticSet19" />プロパティです。</param>
        <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StylisticSet19" /> 添付プロパティの値を返します。</summary>
        <returns>現在の値、<see cref="P:System.Windows.Documents.Typography.StylisticSet19" />指定した依存関係オブジェクトのプロパティを添付します。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStylisticSet2">
      <MemberSignature Language="C#" Value="public static bool GetStylisticSet2 (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetStylisticSet2(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Typography.GetStylisticSet2(System.Windows.DependencyObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">値を取得する対象の依存関係オブジェクト、<see cref="P:System.Windows.Documents.Typography.StylisticSet2" />プロパティです。</param>
        <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StylisticSet2" /> 添付プロパティの値を返します。</summary>
        <returns>現在の値、<see cref="P:System.Windows.Documents.Typography.StylisticSet2" />指定した依存関係オブジェクトのプロパティを添付します。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStylisticSet20">
      <MemberSignature Language="C#" Value="public static bool GetStylisticSet20 (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetStylisticSet20(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Typography.GetStylisticSet20(System.Windows.DependencyObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">値を取得する対象の依存関係オブジェクト、<see cref="P:System.Windows.Documents.Typography.StylisticSet20" />プロパティです。</param>
        <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StylisticSet20" /> 添付プロパティの値を返します。</summary>
        <returns>現在の値、<see cref="P:System.Windows.Documents.Typography.StylisticSet20" />指定した依存関係オブジェクトのプロパティを添付します。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStylisticSet3">
      <MemberSignature Language="C#" Value="public static bool GetStylisticSet3 (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetStylisticSet3(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Typography.GetStylisticSet3(System.Windows.DependencyObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">値を取得する対象の依存関係オブジェクト、<see cref="P:System.Windows.Documents.Typography.StylisticSet3" />プロパティです。</param>
        <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StylisticSet3" /> 添付プロパティの値を返します。</summary>
        <returns>現在の値、<see cref="P:System.Windows.Documents.Typography.StylisticSet3" />指定した依存関係オブジェクトのプロパティを添付します。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStylisticSet4">
      <MemberSignature Language="C#" Value="public static bool GetStylisticSet4 (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetStylisticSet4(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Typography.GetStylisticSet4(System.Windows.DependencyObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">値を取得する対象の依存関係オブジェクト、<see cref="P:System.Windows.Documents.Typography.StylisticSet4" />プロパティです。</param>
        <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StylisticSet4" /> 添付プロパティの値を返します。</summary>
        <returns>現在の値、<see cref="P:System.Windows.Documents.Typography.StylisticSet4" />指定した依存関係オブジェクトのプロパティを添付します。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStylisticSet5">
      <MemberSignature Language="C#" Value="public static bool GetStylisticSet5 (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetStylisticSet5(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Typography.GetStylisticSet5(System.Windows.DependencyObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">値を取得する対象の依存関係オブジェクト、<see cref="P:System.Windows.Documents.Typography.StylisticSet5" />プロパティです。</param>
        <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StylisticSet5" /> 添付プロパティの値を返します。</summary>
        <returns>現在の値、<see cref="P:System.Windows.Documents.Typography.StylisticSet5" />指定した依存関係オブジェクトのプロパティを添付します。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStylisticSet6">
      <MemberSignature Language="C#" Value="public static bool GetStylisticSet6 (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetStylisticSet6(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Typography.GetStylisticSet6(System.Windows.DependencyObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">値を取得する対象の依存関係オブジェクト、<see cref="P:System.Windows.Documents.Typography.StylisticSet6" />プロパティです。</param>
        <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StylisticSet6" /> 添付プロパティの値を返します。</summary>
        <returns>現在の値、<see cref="P:System.Windows.Documents.Typography.StylisticSet6" />指定した依存関係オブジェクトのプロパティを添付します。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStylisticSet7">
      <MemberSignature Language="C#" Value="public static bool GetStylisticSet7 (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetStylisticSet7(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Typography.GetStylisticSet7(System.Windows.DependencyObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">値を取得する対象の依存関係オブジェクト、<see cref="P:System.Windows.Documents.Typography.StylisticSet7" />プロパティです。</param>
        <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StylisticSet7" /> 添付プロパティの値を返します。</summary>
        <returns>現在の値、<see cref="P:System.Windows.Documents.Typography.StylisticSet7" />指定した依存関係オブジェクトのプロパティを添付します。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStylisticSet8">
      <MemberSignature Language="C#" Value="public static bool GetStylisticSet8 (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetStylisticSet8(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Typography.GetStylisticSet8(System.Windows.DependencyObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">値を取得する対象の依存関係オブジェクト、<see cref="P:System.Windows.Documents.Typography.StylisticSet8" />プロパティです。</param>
        <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StylisticSet8" /> 添付プロパティの値を返します。</summary>
        <returns>現在の値、<see cref="P:System.Windows.Documents.Typography.StylisticSet8" />指定した依存関係オブジェクトのプロパティを添付します。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStylisticSet9">
      <MemberSignature Language="C#" Value="public static bool GetStylisticSet9 (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetStylisticSet9(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Typography.GetStylisticSet9(System.Windows.DependencyObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">値を取得する対象の依存関係オブジェクト、<see cref="P:System.Windows.Documents.Typography.StylisticSet8" />プロパティです。</param>
        <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StylisticSet8" /> 添付プロパティの値を返します。</summary>
        <returns>現在の値、<see cref="P:System.Windows.Documents.Typography.StylisticSet8" />指定した依存関係オブジェクトのプロパティを添付します。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVariants">
      <MemberSignature Language="C#" Value="public static System.Windows.FontVariants GetVariants (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.FontVariants GetVariants(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Typography.GetVariants(System.Windows.DependencyObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.FontVariants</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">値を取得する対象の依存関係オブジェクト、<see cref="P:System.Windows.Documents.Typography.Variants" />プロパティです。</param>
        <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.Variants" /> 添付プロパティの値を返します。</summary>
        <returns>現在の値、<see cref="P:System.Windows.Documents.Typography.Variants" />指定した依存関係オブジェクトのプロパティを添付します。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HistoricalForms">
      <MemberSignature Language="C#" Value="public bool HistoricalForms { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HistoricalForms" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.Typography.HistoricalForms" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはフォームの履歴が有効になっているかどうかを決定する値を設定します。</summary>
        <value>
          <see langword="true" />歴史的書体は有効な場合それ以外の場合、<see langword="false" />です。 既定値は <see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティを取得または所有しているオブジェクトの値を設定、`Typography`プロパティにアクセスする唯一の方法、<xref:System.Windows.Documents.Typography>クラスのインスタンス。 さらに、このオブジェクトにテキストを格納していることを設定できるように、添付プロパティの使用法プロパティがサポートする[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]です。  
  
 歴史的形式は、過去に一般的であった表示形式です。 次のテキストには、「ボストン, Massachusetts」という語句が表示されます。 Palatino Linotype フォントのグリフの履歴フォームを使用します。  
  
 ![OpenType の履歴フォームを使用してテキストを](~/add/media/opentypefont10.gif "OpenType の履歴フォームを使用するテキスト")  
歴史的書体の例  
  
 次のコード例に示します Palatino Linotype フォントの履歴フォームを定義する方法を使用して、<xref:System.Windows.Documents.Typography.HistoricalForms%2A>プロパティです。  
  
 [!code-xaml[OpenTypeFontSamples#8](~/samples/snippets/csharp/VS_Snippets_Wpf/OpenTypeFontSamples/CS/PageOne.xaml#8)]   
  
<a name="xamlAttributeUsage_HistoricalForms"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト* **Typography.HistoricalForms**="*bool*"/>  
  
<a name="dependencyPropertyInfo_HistoricalForms"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Documents.Typography.HistoricalFormsProperty>|  
|メタデータ プロパティに設定します。`true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>、<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>、<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HistoricalFormsProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty HistoricalFormsProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty HistoricalFormsProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.Typography.HistoricalFormsProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Documents.Typography.HistoricalForms" /> 添付プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HistoricalLigatures">
      <MemberSignature Language="C#" Value="public bool HistoricalLigatures { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HistoricalLigatures" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.Typography.HistoricalLigatures" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または歴史的合字が有効になっているかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" />歴史的合字が有効な場合それ以外の場合、<see langword="false" />です。 既定値は <see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティを取得または所有しているオブジェクトの値を設定、`Typography`プロパティにアクセスする唯一の方法、<xref:System.Windows.Documents.Typography>クラスのインスタンス。 さらに、このオブジェクトにテキストを格納していることを設定できるように、添付プロパティの使用法プロパティがサポートする[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]です。  
  
 歴史的合字とは、フォント デザイナーは、フォントに追加される履歴の文字体裁で使用される文字体裁の形式です。  
  
<a name="xamlAttributeUsage_HistoricalLigatures"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト* **Typography.HistoricalLigatures**="*bool*"/>  
  
<a name="dependencyPropertyInfo_HistoricalLigatures"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Documents.Typography.HistoricalLigaturesProperty>|  
|メタデータ プロパティに設定します。`true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>、<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>、<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HistoricalLigaturesProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty HistoricalLigaturesProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty HistoricalLigaturesProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.Typography.HistoricalLigaturesProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Documents.Typography.HistoricalLigatures" /> 添付プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Kerning">
      <MemberSignature Language="C#" Value="public bool Kerning { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Kerning" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.Typography.Kerning" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはカーニングが有効になっているかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" />カーニングは有効な場合それ以外の場合、<see langword="false" />です。 既定値は <see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティを取得または所有しているオブジェクトの値を設定、`Typography`プロパティにアクセスする唯一の方法、<xref:System.Windows.Documents.Typography>クラスのインスタンス。 さらに、このオブジェクトにテキストを格納していることを設定できるように、添付プロパティの使用法プロパティがサポートする[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]です。  
  
 カーニングは、word の図形を強化するために文字間隔を調整します。 文字体裁の機能です。  
  
<a name="xamlAttributeUsage_Kerning"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト* **Typography.Kerning**="*bool*"/>  
  
<a name="dependencyPropertyInfo_Kerning"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Documents.Typography.KerningProperty>|  
|メタデータ プロパティに設定します。`true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>、<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>、<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KerningProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty KerningProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty KerningProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.Typography.KerningProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Documents.Typography.Kerning" /> 添付プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MathematicalGreek">
      <MemberSignature Language="C#" Value="public bool MathematicalGreek { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MathematicalGreek" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.Typography.MathematicalGreek" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはギリシャ語グリフの標準の文字体裁フォント形式を数学的な表記法でよく使用されるフォントの対応する形式で置き換えられているかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" />数学ギリシャ フォームが有効な場合それ以外の場合、<see langword="false" />です。 既定値は <see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティを取得または所有しているオブジェクトの値を設定、`Typography`プロパティにアクセスする唯一の方法、<xref:System.Windows.Documents.Typography>クラスのインスタンス。 さらに、このオブジェクトにテキストを格納していることを設定できるように、添付プロパティの使用法プロパティがサポートする[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]です。  
  
 場合の値<xref:System.Windows.Documents.Typography.MathematicalGreek%2A>は`true`と選択したフォントが数学ギリシャ語形式をサポートしていない、文字の既定のフォームが表示されます。  
  
<a name="xamlAttributeUsage_MathematicalGreek"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト* **Typography.MethematicalGreek**="*bool*"/>  
  
<a name="dependencyPropertyInfo_MathematicalGreek"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Documents.Typography.MathematicalGreekProperty>|  
|メタデータ プロパティに設定します。`true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>、<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>、<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MathematicalGreekProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty MathematicalGreekProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty MathematicalGreekProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.Typography.MathematicalGreekProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Documents.Typography.MathematicalGreek" /> 添付プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NumeralAlignment">
      <MemberSignature Language="C#" Value="public System.Windows.FontNumeralAlignment NumeralAlignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.FontNumeralAlignment NumeralAlignment" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.Typography.NumeralAlignment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.FontNumeralAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定、<see cref="T:System.Windows.FontNumeralAlignment" />数字を使用するときは、幅の調整を示す値を列挙します。</summary>
        <value>A<see cref="T:System.Windows.FontNumeralAlignment" />列挙値。 既定値は <see cref="F:System.Windows.FontNumeralAlignment.Normal" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティを取得または所有しているオブジェクトの値を設定、`Typography`プロパティにアクセスする唯一の方法、<xref:System.Windows.Documents.Typography>クラスのインスタンス。 さらに、このオブジェクトにテキストを格納していることを設定できるように、添付プロパティの使用法プロパティがサポートする[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]です。  
  
 OpenType フォントでは、数字を使用する際の幅の調整を制御するプロポーショナルおよび表形式の図機能をサポートします。 プロポーショナルの数字では、それぞれの数字は異なる幅を持つものとして扱われます。たとえば "1" は "5" より狭い幅です。 表形式の図は、位置が揃う垂直方向に、型が財務情報の読みやすさを向上できるように、等幅の数字として扱われます。  
  
 次のテキストは、Miramonte フォントを使用して最初の列に 2 つのプロポーショナル数字を表示します。 「5」と「1」数字の幅の違いに注意してください。 2 番目の列は、表形式の図の機能を使用して調整幅と同じ 2 つの数値を示します。  
  
 ![OpenType のプロポーショナル & 表形式の数字を使用してテキストを](~/add/media/opentypefont22.gif "OpenType 比例 & 表形式の数字を使用するテキスト")  
プロポーショナルおよびタブ付きの図の例  
  
 次のコード例は、の Miramonte フォント比例と表形式の数値を定義する方法を示しています。 を使用して、<xref:System.Windows.Documents.Typography.NumeralAlignment%2A>プロパティです。  
  
[!code-xaml[OpenTypeFontSamples#OpenTypeFontSnippet19](~/samples/snippets/csharp/VS_Snippets_Wpf/OpenTypeFontSamples/CS/Window1.xaml#opentypefontsnippet19)]   
  
<a name="xamlAttributeUsage_NumeralAlignment"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト* **Typography.NumericalAlignment**="<xref:System.Windows.FontNumeralAlignment>"/>  
  
<a name="dependencyPropertyInfo_NumeralAlignment"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Documents.Typography.NumeralAlignmentProperty>|  
|メタデータ プロパティに設定します。`true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>、<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>、<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NumeralAlignmentProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty NumeralAlignmentProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty NumeralAlignmentProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.Typography.NumeralAlignmentProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Documents.Typography.NumeralAlignment" /> 添付プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NumeralStyle">
      <MemberSignature Language="C#" Value="public System.Windows.FontNumeralStyle NumeralStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.FontNumeralStyle NumeralStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.Typography.NumeralStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.FontNumeralStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定、<see cref="T:System.Windows.FontNumeralStyle" />一連の数字の代替フォント フォームを表示するために使用されるグリフを決定する値を列挙します。</summary>
        <value>A<see cref="T:System.Windows.FontNumeralStyle" />列挙値。 既定値は <see cref="F:System.Windows.FontNumeralStyle.Normal" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティを取得または所有しているオブジェクトの値を設定、`Typography`プロパティにアクセスする唯一の方法、<xref:System.Windows.Documents.Typography>クラスのインスタンス。 さらに、このオブジェクトにテキストを格納していることを設定できるように、添付プロパティの使用法プロパティがサポートする[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]です。  
  
 OpenType フォントでは、古いスタイル数字形式をサポートします。 この形式は、もはや標準ではなくなったスタイルで数字を表示するのに便利です。 次のテキストは、Palatino Linotype フォントの標準と古いスタイルの数値表示形式で 18 世紀日付を表示します。  
  
 ![OpenType の古いスタイルの数字を使用してテキストを](~/add/media/opentypefont24.gif "OpenType の古いスタイルの数字を使用するテキスト")  
標準と古いスタイルの数字の例  
  
 次のテキストは、Palatino Linotype フォントの標準の数字と、旧式スタイルの数字を示したものです。  
  
 ![OpenType 古いスタイルの数字セットを使用してテキストを](~/add/media/opentypefont13.gif "OpenType 古いスタイルの数字セットを使用するテキスト")  
標準および古いスタイルの数字セットの例  
  
 次のコード例は、古いスタイルの数字の Palatino Linotype フォントを定義する方法を示しますを使用して、<xref:System.Windows.Documents.Typography.NumeralStyle%2A>プロパティです。  
  
 [!code-xaml[OpenTypeFontSamples#11](~/samples/snippets/csharp/VS_Snippets_Wpf/OpenTypeFontSamples/CS/PageOne.xaml#11)]   
  
<a name="xamlAttributeUsage_NumeralStyle"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト* **Typography.NumeralStyle**="<xref:System.Windows.FontNumeralStyle>"/>  
  
<a name="dependencyPropertyInfo_NumeralStyle"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Documents.Typography.NumeralStyleProperty>|  
|メタデータ プロパティに設定します。`true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>、<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>、<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NumeralStyleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty NumeralStyleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty NumeralStyleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.Typography.NumeralStyleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Documents.Typography.NumeralStyle" /> 添付プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAnnotationAlternates">
      <MemberSignature Language="C#" Value="public static void SetAnnotationAlternates (System.Windows.DependencyObject element, int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetAnnotationAlternates(class System.Windows.DependencyObject element, int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Typography.SetAnnotationAlternates(System.Windows.DependencyObject,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="element">値を設定する対象の依存関係オブジェクト、<see cref="P:System.Windows.Documents.Typography.AnnotationAlternates" />プロパティです。</param>
        <param name="value">プロパティを設定する新しい値。</param>
        <summary>値を設定、<see cref="P:System.Windows.Documents.Typography.AnnotationAlternates" />添付プロパティを指定した依存関係オブジェクト。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">いつ発生する<paramref name="element" />は<see langword="null" />します。</exception>
      </Docs>
    </Member>
    <Member MemberName="SetCapitals">
      <MemberSignature Language="C#" Value="public static void SetCapitals (System.Windows.DependencyObject element, System.Windows.FontCapitals value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetCapitals(class System.Windows.DependencyObject element, valuetype System.Windows.FontCapitals value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Typography.SetCapitals(System.Windows.DependencyObject,System.Windows.FontCapitals)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Windows.FontCapitals" />
      </Parameters>
      <Docs>
        <param name="element">値を設定する対象の依存関係オブジェクト、<see cref="P:System.Windows.Documents.Typography.Capitals" />プロパティです。</param>
        <param name="value">プロパティを設定する新しい値。</param>
        <summary>値を設定、<see cref="P:System.Windows.Documents.Typography.Capitals" />添付プロパティを指定した依存関係オブジェクト。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">いつ発生する<paramref name="element" />は<see langword="null" />します。</exception>
      </Docs>
    </Member>
    <Member MemberName="SetCapitalSpacing">
      <MemberSignature Language="C#" Value="public static void SetCapitalSpacing (System.Windows.DependencyObject element, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetCapitalSpacing(class System.Windows.DependencyObject element, bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Typography.SetCapitalSpacing(System.Windows.DependencyObject,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">値を設定する対象の依存関係オブジェクト、<see cref="P:System.Windows.Documents.Typography.CapitalSpacing" />プロパティです。</param>
        <param name="value">プロパティを設定する新しい値。</param>
        <summary>値を設定、<see cref="P:System.Windows.Documents.Typography.CapitalSpacing" />添付プロパティを指定した依存関係オブジェクト。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">いつ発生する<paramref name="element" />は<see langword="null" />します。</exception>
      </Docs>
    </Member>
    <Member MemberName="SetCaseSensitiveForms">
      <MemberSignature Language="C#" Value="public static void SetCaseSensitiveForms (System.Windows.DependencyObject element, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetCaseSensitiveForms(class System.Windows.DependencyObject element, bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Typography.SetCaseSensitiveForms(System.Windows.DependencyObject,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">値を設定する対象の依存関係オブジェクト、<see cref="P:System.Windows.Documents.Typography.CaseSensitiveForms" />プロパティです。</param>
        <param name="value">プロパティを設定する新しい値。</param>
        <summary>値を設定、<see cref="P:System.Windows.Documents.Typography.CaseSensitiveForms" />添付プロパティを指定した依存関係オブジェクト。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">いつ発生する<paramref name="element" />は<see langword="null" />します。</exception>
      </Docs>
    </Member>
    <Member MemberName="SetContextualAlternates">
      <MemberSignature Language="C#" Value="public static void SetContextualAlternates (System.Windows.DependencyObject element, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetContextualAlternates(class System.Windows.DependencyObject element, bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Typography.SetContextualAlternates(System.Windows.DependencyObject,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">値を設定する対象の依存関係オブジェクト、<see cref="P:System.Windows.Documents.Typography.ContextualAlternates" />プロパティです。</param>
        <param name="value">プロパティを設定する新しい値。</param>
        <summary>値を設定、<see cref="P:System.Windows.Documents.Typography.ContextualAlternates" />添付プロパティを指定した依存関係オブジェクト。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">いつ発生する<paramref name="element" />は<see langword="null" />します。</exception>
      </Docs>
    </Member>
    <Member MemberName="SetContextualLigatures">
      <MemberSignature Language="C#" Value="public static void SetContextualLigatures (System.Windows.DependencyObject element, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetContextualLigatures(class System.Windows.DependencyObject element, bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Typography.SetContextualLigatures(System.Windows.DependencyObject,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">値を設定する対象の依存関係オブジェクト、<see cref="P:System.Windows.Documents.Typography.ContextualLigatures" />プロパティです。</param>
        <param name="value">プロパティを設定する新しい値。</param>
        <summary>値を設定、<see cref="P:System.Windows.Documents.Typography.ContextualLigatures" />添付プロパティを指定した依存関係オブジェクト。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">いつ発生する<paramref name="element" />は<see langword="null" />します。</exception>
      </Docs>
    </Member>
    <Member MemberName="SetContextualSwashes">
      <MemberSignature Language="C#" Value="public static void SetContextualSwashes (System.Windows.DependencyObject element, int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetContextualSwashes(class System.Windows.DependencyObject element, int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Typography.SetContextualSwashes(System.Windows.DependencyObject,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="element">値を設定する対象の依存関係オブジェクト、<see cref="P:System.Windows.Documents.Typography.ContextualSwashes" />プロパティです。</param>
        <param name="value">プロパティを設定する新しい値。</param>
        <summary>値を設定、<see cref="P:System.Windows.Documents.Typography.ContextualSwashes" />添付プロパティを指定した依存関係オブジェクト。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">いつ発生する<paramref name="element" />は<see langword="null" />します。</exception>
      </Docs>
    </Member>
    <Member MemberName="SetDiscretionaryLigatures">
      <MemberSignature Language="C#" Value="public static void SetDiscretionaryLigatures (System.Windows.DependencyObject element, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetDiscretionaryLigatures(class System.Windows.DependencyObject element, bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Typography.SetDiscretionaryLigatures(System.Windows.DependencyObject,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">値を設定する対象の依存関係オブジェクト、<see cref="P:System.Windows.Documents.Typography.DiscretionaryLigatures" />プロパティです。</param>
        <param name="value">プロパティを設定する新しい値。</param>
        <summary>値を設定、<see cref="P:System.Windows.Documents.Typography.DiscretionaryLigatures" />添付プロパティを指定した依存関係オブジェクト。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">いつ発生する<paramref name="element" />は<see langword="null" />します。</exception>
      </Docs>
    </Member>
    <Member MemberName="SetEastAsianExpertForms">
      <MemberSignature Language="C#" Value="public static void SetEastAsianExpertForms (System.Windows.DependencyObject element, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetEastAsianExpertForms(class System.Windows.DependencyObject element, bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Typography.SetEastAsianExpertForms(System.Windows.DependencyObject,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">値を設定する対象の依存関係オブジェクト、<see cref="P:System.Windows.Documents.Typography.EastAsianExpertForms" />プロパティです。</param>
        <param name="value">プロパティを設定する新しい値。</param>
        <summary>値を設定、<see cref="P:System.Windows.Documents.Typography.EastAsianExpertForms" />添付プロパティを指定した依存関係オブジェクト。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">いつ発生する<paramref name="element" />は<see langword="null" />します。</exception>
      </Docs>
    </Member>
    <Member MemberName="SetEastAsianLanguage">
      <MemberSignature Language="C#" Value="public static void SetEastAsianLanguage (System.Windows.DependencyObject element, System.Windows.FontEastAsianLanguage value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetEastAsianLanguage(class System.Windows.DependencyObject element, valuetype System.Windows.FontEastAsianLanguage value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Typography.SetEastAsianLanguage(System.Windows.DependencyObject,System.Windows.FontEastAsianLanguage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Windows.FontEastAsianLanguage" />
      </Parameters>
      <Docs>
        <param name="element">値を設定する対象の依存関係オブジェクト、<see cref="P:System.Windows.Documents.Typography.EastAsianLanguage" />プロパティです。</param>
        <param name="value">プロパティを設定する新しい値。</param>
        <summary>値を設定、<see cref="P:System.Windows.Documents.Typography.EastAsianLanguage" />添付プロパティを指定した依存関係オブジェクト。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">いつ発生する<paramref name="element" />は<see langword="null" />します。</exception>
      </Docs>
    </Member>
    <Member MemberName="SetEastAsianWidths">
      <MemberSignature Language="C#" Value="public static void SetEastAsianWidths (System.Windows.DependencyObject element, System.Windows.FontEastAsianWidths value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetEastAsianWidths(class System.Windows.DependencyObject element, valuetype System.Windows.FontEastAsianWidths value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Typography.SetEastAsianWidths(System.Windows.DependencyObject,System.Windows.FontEastAsianWidths)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Windows.FontEastAsianWidths" />
      </Parameters>
      <Docs>
        <param name="element">値を設定する対象の依存関係オブジェクト、<see cref="P:System.Windows.Documents.Typography.EastAsianWidths" />プロパティです。</param>
        <param name="value">プロパティを設定する新しい値。</param>
        <summary>値を設定、<see cref="P:System.Windows.Documents.Typography.EastAsianWidths" />添付プロパティを指定した依存関係オブジェクト。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">いつ発生する<paramref name="element" />は<see langword="null" />します。</exception>
      </Docs>
    </Member>
    <Member MemberName="SetFraction">
      <MemberSignature Language="C#" Value="public static void SetFraction (System.Windows.DependencyObject element, System.Windows.FontFraction value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetFraction(class System.Windows.DependencyObject element, valuetype System.Windows.FontFraction value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Typography.SetFraction(System.Windows.DependencyObject,System.Windows.FontFraction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Windows.FontFraction" />
      </Parameters>
      <Docs>
        <param name="element">値を設定する対象の依存関係オブジェクト、<see cref="P:System.Windows.Documents.Typography.Fraction" />プロパティです。</param>
        <param name="value">プロパティを設定する新しい値。</param>
        <summary>値を設定、<see cref="P:System.Windows.Documents.Typography.Fraction" />添付プロパティを指定した依存関係オブジェクト。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">いつ発生する<paramref name="element" />は<see langword="null" />します。</exception>
      </Docs>
    </Member>
    <Member MemberName="SetHistoricalForms">
      <MemberSignature Language="C#" Value="public static void SetHistoricalForms (System.Windows.DependencyObject element, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetHistoricalForms(class System.Windows.DependencyObject element, bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Typography.SetHistoricalForms(System.Windows.DependencyObject,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">値を設定する対象の依存関係オブジェクト、<see cref="P:System.Windows.Documents.Typography.HistoricalForms" />プロパティです。</param>
        <param name="value">プロパティを設定する新しい値。</param>
        <summary>値を設定、<see cref="P:System.Windows.Documents.Typography.HistoricalForms" />添付プロパティを指定した依存関係オブジェクト。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">いつ発生する<paramref name="element" />は<see langword="null" />します。</exception>
      </Docs>
    </Member>
    <Member MemberName="SetHistoricalLigatures">
      <MemberSignature Language="C#" Value="public static void SetHistoricalLigatures (System.Windows.DependencyObject element, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetHistoricalLigatures(class System.Windows.DependencyObject element, bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Typography.SetHistoricalLigatures(System.Windows.DependencyObject,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">値を設定する対象の依存関係オブジェクト、<see cref="P:System.Windows.Documents.Typography.HistoricalLigatures" />プロパティです。</param>
        <param name="value">プロパティを設定する新しい値。</param>
        <summary>値を設定、<see cref="P:System.Windows.Documents.Typography.HistoricalLigatures" />添付プロパティを指定した依存関係オブジェクト。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">いつ発生する<paramref name="element" />は<see langword="null" />します。</exception>
      </Docs>
    </Member>
    <Member MemberName="SetKerning">
      <MemberSignature Language="C#" Value="public static void SetKerning (System.Windows.DependencyObject element, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetKerning(class System.Windows.DependencyObject element, bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Typography.SetKerning(System.Windows.DependencyObject,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">値を設定する対象の依存関係オブジェクト、<see cref="P:System.Windows.Documents.Typography.Kerning" />プロパティです。</param>
        <param name="value">プロパティを設定する新しい値。</param>
        <summary>値を設定、<see cref="P:System.Windows.Documents.Typography.Kerning" />添付プロパティを指定した依存関係オブジェクト。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">いつ発生する<paramref name="element" />は<see langword="null" />します。</exception>
      </Docs>
    </Member>
    <Member MemberName="SetMathematicalGreek">
      <MemberSignature Language="C#" Value="public static void SetMathematicalGreek (System.Windows.DependencyObject element, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetMathematicalGreek(class System.Windows.DependencyObject element, bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Typography.SetMathematicalGreek(System.Windows.DependencyObject,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">値を設定する対象の依存関係オブジェクト、<see cref="P:System.Windows.Documents.Typography.MathematicalGreek" />プロパティです。</param>
        <param name="value">プロパティを設定する新しい値。</param>
        <summary>値を設定、<see cref="P:System.Windows.Documents.Typography.MathematicalGreek" />添付プロパティを指定した依存関係オブジェクト。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">いつ発生する<paramref name="element" />は<see langword="null" />します。</exception>
      </Docs>
    </Member>
    <Member MemberName="SetNumeralAlignment">
      <MemberSignature Language="C#" Value="public static void SetNumeralAlignment (System.Windows.DependencyObject element, System.Windows.FontNumeralAlignment value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetNumeralAlignment(class System.Windows.DependencyObject element, valuetype System.Windows.FontNumeralAlignment value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Typography.SetNumeralAlignment(System.Windows.DependencyObject,System.Windows.FontNumeralAlignment)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Windows.FontNumeralAlignment" />
      </Parameters>
      <Docs>
        <param name="element">値を設定する対象の依存関係オブジェクト、<see cref="P:System.Windows.Documents.Typography.NumeralAlignment" />プロパティです。</param>
        <param name="value">プロパティを設定する新しい値。</param>
        <summary>値を設定、<see cref="P:System.Windows.Documents.Typography.NumeralAlignment" />添付プロパティを指定した依存関係オブジェクト。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">いつ発生する<paramref name="element" />は<see langword="null" />します。</exception>
      </Docs>
    </Member>
    <Member MemberName="SetNumeralStyle">
      <MemberSignature Language="C#" Value="public static void SetNumeralStyle (System.Windows.DependencyObject element, System.Windows.FontNumeralStyle value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetNumeralStyle(class System.Windows.DependencyObject element, valuetype System.Windows.FontNumeralStyle value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Typography.SetNumeralStyle(System.Windows.DependencyObject,System.Windows.FontNumeralStyle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Windows.FontNumeralStyle" />
      </Parameters>
      <Docs>
        <param name="element">値を設定する対象の依存関係オブジェクト、<see cref="P:System.Windows.Documents.Typography.NumeralStyle" />プロパティです。</param>
        <param name="value">プロパティを設定する新しい値。</param>
        <summary>値を設定、<see cref="P:System.Windows.Documents.Typography.NumeralStyle" />添付プロパティを指定した依存関係オブジェクト。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">いつ発生する<paramref name="element" />は<see langword="null" />します。</exception>
      </Docs>
    </Member>
    <Member MemberName="SetSlashedZero">
      <MemberSignature Language="C#" Value="public static void SetSlashedZero (System.Windows.DependencyObject element, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetSlashedZero(class System.Windows.DependencyObject element, bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Typography.SetSlashedZero(System.Windows.DependencyObject,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">値を設定する対象の依存関係オブジェクト、<see cref="P:System.Windows.Documents.Typography.SlashedZero" />プロパティです。</param>
        <param name="value">プロパティを設定する新しい値。</param>
        <summary>値を設定、<see cref="P:System.Windows.Documents.Typography.SlashedZero" />添付プロパティを指定した依存関係オブジェクト。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">いつ発生する<paramref name="element" />は<see langword="null" />します。</exception>
      </Docs>
    </Member>
    <Member MemberName="SetStandardLigatures">
      <MemberSignature Language="C#" Value="public static void SetStandardLigatures (System.Windows.DependencyObject element, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetStandardLigatures(class System.Windows.DependencyObject element, bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Typography.SetStandardLigatures(System.Windows.DependencyObject,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">値を設定する対象の依存関係オブジェクト、<see cref="P:System.Windows.Documents.Typography.StandardLigatures" />プロパティです。</param>
        <param name="value">プロパティを設定する新しい値。</param>
        <summary>値を設定、<see cref="P:System.Windows.Documents.Typography.StandardLigatures" />添付プロパティを指定した依存関係オブジェクト。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">いつ発生する<paramref name="element" />は<see langword="null" />します。</exception>
      </Docs>
    </Member>
    <Member MemberName="SetStandardSwashes">
      <MemberSignature Language="C#" Value="public static void SetStandardSwashes (System.Windows.DependencyObject element, int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetStandardSwashes(class System.Windows.DependencyObject element, int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Typography.SetStandardSwashes(System.Windows.DependencyObject,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="element">値を設定する対象の依存関係オブジェクト、<see cref="P:System.Windows.Documents.Typography.StandardSwashes" />プロパティです。</param>
        <param name="value">プロパティを設定する新しい値。</param>
        <summary>値を設定、<see cref="P:System.Windows.Documents.Typography.StandardSwashes" />添付プロパティを指定した依存関係オブジェクト。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">いつ発生する<paramref name="element" />は<see langword="null" />します。</exception>
      </Docs>
    </Member>
    <Member MemberName="SetStylisticAlternates">
      <MemberSignature Language="C#" Value="public static void SetStylisticAlternates (System.Windows.DependencyObject element, int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetStylisticAlternates(class System.Windows.DependencyObject element, int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Typography.SetStylisticAlternates(System.Windows.DependencyObject,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="element">値を設定する対象の依存関係オブジェクト、<see cref="P:System.Windows.Documents.Typography.StylisticAlternates" />プロパティです。</param>
        <param name="value">プロパティを設定する新しい値。</param>
        <summary>値を設定、<see cref="P:System.Windows.Documents.Typography.StylisticAlternates" />添付プロパティを指定した依存関係オブジェクト。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">いつ発生する<paramref name="element" />は<see langword="null" />します。</exception>
      </Docs>
    </Member>
    <Member MemberName="SetStylisticSet1">
      <MemberSignature Language="C#" Value="public static void SetStylisticSet1 (System.Windows.DependencyObject element, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetStylisticSet1(class System.Windows.DependencyObject element, bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Typography.SetStylisticSet1(System.Windows.DependencyObject,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">値を設定する対象の依存関係オブジェクト、<see cref="P:System.Windows.Documents.Typography.StylisticSet1" />プロパティです。</param>
        <param name="value">プロパティを設定する新しい値。</param>
        <summary>値を設定、<see cref="P:System.Windows.Documents.Typography.StylisticSet1" />添付プロパティを指定した依存関係オブジェクト。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">いつ発生する<paramref name="element" />は<see langword="null" />します。</exception>
      </Docs>
    </Member>
    <Member MemberName="SetStylisticSet10">
      <MemberSignature Language="C#" Value="public static void SetStylisticSet10 (System.Windows.DependencyObject element, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetStylisticSet10(class System.Windows.DependencyObject element, bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Typography.SetStylisticSet10(System.Windows.DependencyObject,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">値を設定する対象の依存関係オブジェクト、<see cref="P:System.Windows.Documents.Typography.StylisticSet10" />プロパティです。</param>
        <param name="value">プロパティを設定する新しい値。</param>
        <summary>値を設定、<see cref="P:System.Windows.Documents.Typography.StylisticSet10" />添付プロパティを指定した依存関係オブジェクト。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">いつ発生する<paramref name="element" />は<see langword="null" />します。</exception>
      </Docs>
    </Member>
    <Member MemberName="SetStylisticSet11">
      <MemberSignature Language="C#" Value="public static void SetStylisticSet11 (System.Windows.DependencyObject element, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetStylisticSet11(class System.Windows.DependencyObject element, bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Typography.SetStylisticSet11(System.Windows.DependencyObject,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">値を設定する対象の依存関係オブジェクト、<see cref="P:System.Windows.Documents.Typography.StylisticSet11" />プロパティです。</param>
        <param name="value">プロパティを設定する新しい値。</param>
        <summary>値を設定、<see cref="P:System.Windows.Documents.Typography.StylisticSet11" />添付プロパティを指定した依存関係オブジェクト。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">いつ発生する<paramref name="element" />は<see langword="null" />します。</exception>
      </Docs>
    </Member>
    <Member MemberName="SetStylisticSet12">
      <MemberSignature Language="C#" Value="public static void SetStylisticSet12 (System.Windows.DependencyObject element, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetStylisticSet12(class System.Windows.DependencyObject element, bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Typography.SetStylisticSet12(System.Windows.DependencyObject,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">値を設定する対象の依存関係オブジェクト、<see cref="P:System.Windows.Documents.Typography.StylisticSet12" />プロパティです。</param>
        <param name="value">プロパティを設定する新しい値。</param>
        <summary>値を設定、<see cref="P:System.Windows.Documents.Typography.StylisticSet12" />添付プロパティを指定した依存関係オブジェクト。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">いつ発生する<paramref name="element" />は<see langword="null" />します。</exception>
      </Docs>
    </Member>
    <Member MemberName="SetStylisticSet13">
      <MemberSignature Language="C#" Value="public static void SetStylisticSet13 (System.Windows.DependencyObject element, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetStylisticSet13(class System.Windows.DependencyObject element, bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Typography.SetStylisticSet13(System.Windows.DependencyObject,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">値を設定する対象の依存関係オブジェクト、<see cref="P:System.Windows.Documents.Typography.StylisticSet13" />プロパティです。</param>
        <param name="value">プロパティを設定する新しい値。</param>
        <summary>値を設定、<see cref="P:System.Windows.Documents.Typography.StylisticSet13" />添付プロパティを指定した依存関係オブジェクト。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">いつ発生する<paramref name="element" />は<see langword="null" />します。</exception>
      </Docs>
    </Member>
    <Member MemberName="SetStylisticSet14">
      <MemberSignature Language="C#" Value="public static void SetStylisticSet14 (System.Windows.DependencyObject element, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetStylisticSet14(class System.Windows.DependencyObject element, bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Typography.SetStylisticSet14(System.Windows.DependencyObject,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">値を設定する対象の依存関係オブジェクト、<see cref="P:System.Windows.Documents.Typography.StylisticSet14" />プロパティです。</param>
        <param name="value">プロパティを設定する新しい値。</param>
        <summary>値を設定、<see cref="P:System.Windows.Documents.Typography.StylisticSet14" />添付プロパティを指定した依存関係オブジェクト。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">いつ発生する<paramref name="element" />は<see langword="null" />します。</exception>
      </Docs>
    </Member>
    <Member MemberName="SetStylisticSet15">
      <MemberSignature Language="C#" Value="public static void SetStylisticSet15 (System.Windows.DependencyObject element, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetStylisticSet15(class System.Windows.DependencyObject element, bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Typography.SetStylisticSet15(System.Windows.DependencyObject,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">値を設定する対象の依存関係オブジェクト、<see cref="P:System.Windows.Documents.Typography.StylisticSet15" />プロパティです。</param>
        <param name="value">プロパティを設定する新しい値。</param>
        <summary>値を設定、<see cref="P:System.Windows.Documents.Typography.StylisticSet15" />添付プロパティを指定した依存関係オブジェクト。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">いつ発生する<paramref name="element" />は<see langword="null" />します。</exception>
      </Docs>
    </Member>
    <Member MemberName="SetStylisticSet16">
      <MemberSignature Language="C#" Value="public static void SetStylisticSet16 (System.Windows.DependencyObject element, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetStylisticSet16(class System.Windows.DependencyObject element, bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Typography.SetStylisticSet16(System.Windows.DependencyObject,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">値を設定する対象の依存関係オブジェクト、<see cref="P:System.Windows.Documents.Typography.StylisticSet16" />プロパティです。</param>
        <param name="value">プロパティを設定する新しい値。</param>
        <summary>値を設定、<see cref="P:System.Windows.Documents.Typography.StylisticSet16" />添付プロパティを指定した依存関係オブジェクト。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">いつ発生する<paramref name="element" />は<see langword="null" />します。</exception>
      </Docs>
    </Member>
    <Member MemberName="SetStylisticSet17">
      <MemberSignature Language="C#" Value="public static void SetStylisticSet17 (System.Windows.DependencyObject element, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetStylisticSet17(class System.Windows.DependencyObject element, bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Typography.SetStylisticSet17(System.Windows.DependencyObject,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">値を設定する対象の依存関係オブジェクト、<see cref="P:System.Windows.Documents.Typography.StylisticSet17" />プロパティです。</param>
        <param name="value">プロパティを設定する新しい値。</param>
        <summary>値を設定、<see cref="P:System.Windows.Documents.Typography.StylisticSet17" />添付プロパティを指定した依存関係オブジェクト。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">いつ発生する<paramref name="element" />は<see langword="null" />します。</exception>
      </Docs>
    </Member>
    <Member MemberName="SetStylisticSet18">
      <MemberSignature Language="C#" Value="public static void SetStylisticSet18 (System.Windows.DependencyObject element, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetStylisticSet18(class System.Windows.DependencyObject element, bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Typography.SetStylisticSet18(System.Windows.DependencyObject,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">値を設定する対象の依存関係オブジェクト、<see cref="P:System.Windows.Documents.Typography.StylisticSet18" />プロパティです。</param>
        <param name="value">プロパティを設定する新しい値。</param>
        <summary>値を設定、<see cref="P:System.Windows.Documents.Typography.StylisticSet18" />添付プロパティを指定した依存関係オブジェクト。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">いつ発生する<paramref name="element" />は<see langword="null" />します。</exception>
      </Docs>
    </Member>
    <Member MemberName="SetStylisticSet19">
      <MemberSignature Language="C#" Value="public static void SetStylisticSet19 (System.Windows.DependencyObject element, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetStylisticSet19(class System.Windows.DependencyObject element, bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Typography.SetStylisticSet19(System.Windows.DependencyObject,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">値を設定する対象の依存関係オブジェクト、<see cref="P:System.Windows.Documents.Typography.StylisticSet19" />プロパティです。</param>
        <param name="value">プロパティを設定する新しい値。</param>
        <summary>値を設定、<see cref="P:System.Windows.Documents.Typography.StylisticSet19" />添付プロパティを指定した依存関係オブジェクト。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">いつ発生する<paramref name="element" />は<see langword="null" />します。</exception>
      </Docs>
    </Member>
    <Member MemberName="SetStylisticSet2">
      <MemberSignature Language="C#" Value="public static void SetStylisticSet2 (System.Windows.DependencyObject element, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetStylisticSet2(class System.Windows.DependencyObject element, bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Typography.SetStylisticSet2(System.Windows.DependencyObject,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">値を設定する対象の依存関係オブジェクト、<see cref="P:System.Windows.Documents.Typography.StylisticSet2" />プロパティです。</param>
        <param name="value">プロパティを設定する新しい値。</param>
        <summary>値を設定、<see cref="P:System.Windows.Documents.Typography.StylisticSet2" />添付プロパティを指定した依存関係オブジェクト。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">いつ発生する<paramref name="element" />は<see langword="null" />します。</exception>
      </Docs>
    </Member>
    <Member MemberName="SetStylisticSet20">
      <MemberSignature Language="C#" Value="public static void SetStylisticSet20 (System.Windows.DependencyObject element, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetStylisticSet20(class System.Windows.DependencyObject element, bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Typography.SetStylisticSet20(System.Windows.DependencyObject,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">値を設定する対象の依存関係オブジェクト、<see cref="P:System.Windows.Documents.Typography.StylisticSet20" />プロパティです。</param>
        <param name="value">プロパティを設定する新しい値。</param>
        <summary>値を設定、<see cref="P:System.Windows.Documents.Typography.StylisticSet20" />添付プロパティを指定した依存関係オブジェクト。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">いつ発生する<paramref name="element" />は<see langword="null" />します。</exception>
      </Docs>
    </Member>
    <Member MemberName="SetStylisticSet3">
      <MemberSignature Language="C#" Value="public static void SetStylisticSet3 (System.Windows.DependencyObject element, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetStylisticSet3(class System.Windows.DependencyObject element, bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Typography.SetStylisticSet3(System.Windows.DependencyObject,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">値を設定する対象の依存関係オブジェクト、<see cref="P:System.Windows.Documents.Typography.StylisticSet3" />プロパティです。</param>
        <param name="value">プロパティを設定する新しい値。</param>
        <summary>値を設定、<see cref="P:System.Windows.Documents.Typography.StylisticSet3" />添付プロパティを指定した依存関係オブジェクト。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">いつ発生する<paramref name="element" />は<see langword="null" />します。</exception>
      </Docs>
    </Member>
    <Member MemberName="SetStylisticSet4">
      <MemberSignature Language="C#" Value="public static void SetStylisticSet4 (System.Windows.DependencyObject element, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetStylisticSet4(class System.Windows.DependencyObject element, bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Typography.SetStylisticSet4(System.Windows.DependencyObject,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">値を設定する対象の依存関係オブジェクト、<see cref="P:System.Windows.Documents.Typography.StylisticSet4" />プロパティです。</param>
        <param name="value">プロパティを設定する新しい値。</param>
        <summary>値を設定、<see cref="P:System.Windows.Documents.Typography.StylisticSet4" />添付プロパティを指定した依存関係オブジェクト。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">いつ発生する<paramref name="element" />は<see langword="null" />します。</exception>
      </Docs>
    </Member>
    <Member MemberName="SetStylisticSet5">
      <MemberSignature Language="C#" Value="public static void SetStylisticSet5 (System.Windows.DependencyObject element, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetStylisticSet5(class System.Windows.DependencyObject element, bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Typography.SetStylisticSet5(System.Windows.DependencyObject,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">値を設定する対象の依存関係オブジェクト、<see cref="P:System.Windows.Documents.Typography.StylisticSet5" />プロパティです。</param>
        <param name="value">プロパティを設定する新しい値。</param>
        <summary>値を設定、<see cref="P:System.Windows.Documents.Typography.StylisticSet5" />添付プロパティを指定した依存関係オブジェクト。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">いつ発生する<paramref name="element" />は<see langword="null" />します。</exception>
      </Docs>
    </Member>
    <Member MemberName="SetStylisticSet6">
      <MemberSignature Language="C#" Value="public static void SetStylisticSet6 (System.Windows.DependencyObject element, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetStylisticSet6(class System.Windows.DependencyObject element, bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Typography.SetStylisticSet6(System.Windows.DependencyObject,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">値を設定する対象の依存関係オブジェクト、<see cref="P:System.Windows.Documents.Typography.StylisticSet6" />プロパティです。</param>
        <param name="value">プロパティを設定する新しい値。</param>
        <summary>値を設定、<see cref="P:System.Windows.Documents.Typography.StylisticSet6" />添付プロパティを指定した依存関係オブジェクト。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">いつ発生する<paramref name="element" />は<see langword="null" />します。</exception>
      </Docs>
    </Member>
    <Member MemberName="SetStylisticSet7">
      <MemberSignature Language="C#" Value="public static void SetStylisticSet7 (System.Windows.DependencyObject element, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetStylisticSet7(class System.Windows.DependencyObject element, bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Typography.SetStylisticSet7(System.Windows.DependencyObject,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">値を設定する対象の依存関係オブジェクト、<see cref="P:System.Windows.Documents.Typography.StylisticSet7" />プロパティです。</param>
        <param name="value">プロパティを設定する新しい値。</param>
        <summary>値を設定、<see cref="P:System.Windows.Documents.Typography.StylisticSet7" />添付プロパティを指定した依存関係オブジェクト。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">いつ発生する<paramref name="element" />は<see langword="null" />します。</exception>
      </Docs>
    </Member>
    <Member MemberName="SetStylisticSet8">
      <MemberSignature Language="C#" Value="public static void SetStylisticSet8 (System.Windows.DependencyObject element, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetStylisticSet8(class System.Windows.DependencyObject element, bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Typography.SetStylisticSet8(System.Windows.DependencyObject,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">値を設定する対象の依存関係オブジェクト、<see cref="P:System.Windows.Documents.Typography.StylisticSet8" />プロパティです。</param>
        <param name="value">プロパティを設定する新しい値。</param>
        <summary>値を設定、<see cref="P:System.Windows.Documents.Typography.StylisticSet8" />添付プロパティを指定した依存関係オブジェクト。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">いつ発生する<paramref name="element" />は<see langword="null" />します。</exception>
      </Docs>
    </Member>
    <Member MemberName="SetStylisticSet9">
      <MemberSignature Language="C#" Value="public static void SetStylisticSet9 (System.Windows.DependencyObject element, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetStylisticSet9(class System.Windows.DependencyObject element, bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Typography.SetStylisticSet9(System.Windows.DependencyObject,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">値を設定する対象の依存関係オブジェクト、<see cref="P:System.Windows.Documents.Typography.StylisticSet9" />プロパティです。</param>
        <param name="value">プロパティを設定する新しい値。</param>
        <summary>値を設定、<see cref="P:System.Windows.Documents.Typography.StylisticSet9" />添付プロパティを指定した依存関係オブジェクト。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">いつ発生する<paramref name="element" />は<see langword="null" />します。</exception>
      </Docs>
    </Member>
    <Member MemberName="SetVariants">
      <MemberSignature Language="C#" Value="public static void SetVariants (System.Windows.DependencyObject element, System.Windows.FontVariants value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetVariants(class System.Windows.DependencyObject element, valuetype System.Windows.FontVariants value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Typography.SetVariants(System.Windows.DependencyObject,System.Windows.FontVariants)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Windows.FontVariants" />
      </Parameters>
      <Docs>
        <param name="element">値を設定する対象の依存関係オブジェクト、<see cref="P:System.Windows.Documents.Typography.Variants" />プロパティです。</param>
        <param name="value">プロパティを設定する新しい値。</param>
        <summary>値を設定、<see cref="P:System.Windows.Documents.Typography.Variants" />添付プロパティを指定した依存関係オブジェクト。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">いつ発生する<paramref name="element" />は<see langword="null" />します。</exception>
      </Docs>
    </Member>
    <Member MemberName="SlashedZero">
      <MemberSignature Language="C#" Value="public bool SlashedZero { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SlashedZero" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.Typography.SlashedZero" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>公称ゼロ フォント形式するかどうかを示す値を取得またはスラッシュ ゼロに置き換えられます。</summary>
        <value>
          <see langword="true" />スラッシュされる場合 0 形式が有効です。それ以外の場合、<see langword="false" />です。 既定値は <see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティを取得または所有しているオブジェクトの値を設定、`Typography`プロパティにアクセスする唯一の方法、<xref:System.Windows.Documents.Typography>クラスのインスタンス。 さらに、このオブジェクトにテキストを格納していることを設定できるように、添付プロパティの使用法プロパティがサポートする[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]です。  
  
 OpenType フォント サポート スラッシュ ゼロの数字形式を文字"O"と「0」の数字の違いを強調します。 スラッシュ付きゼロは、財務およびビジネス情報における ID によく使用されます。  
  
 次のテキストには、Miramonte フォントを使用して、サンプル注文識別子が表示されます。 最初の行は、標準の数字を使用します。 使用する 2 番目の線はスラッシュ ゼロ大文字の"O"により優れたコントラストを提供します。  
  
 ![OpenType を使用してテキストをスラッシュ ゼロ](~/add/media/opentypefont17.gif "OpenType を使用してテキストをスラッシュ ゼロ")  
例はスラッシュ ゼロ  
  
 次のコード例に示す方法を定義するのにはスラッシュ ゼロの Miramonte フォントを使用して、<xref:System.Windows.Documents.Typography.SlashedZero%2A>プロパティです。  
  
 [!code-xaml[OpenTypeFontSamples#OpenTypeFontSnippet15](~/samples/snippets/csharp/VS_Snippets_Wpf/OpenTypeFontSamples/CS/PageOne.xaml#opentypefontsnippet15)]   
  
 場合の値<xref:System.Windows.Documents.Typography.SlashedZero%2A>は`true`され、選択したフォントがいないサポート スラッシュ ゼロ、数字の既定のフォームが表示されます。  
  
<a name="xamlAttributeUsage_SlashedZero"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト* **Typography.SlashedZero**="*bool*"/>  
  
<a name="dependencyPropertyInfo_SlashedZero"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Documents.Typography.SlashedZeroProperty>|  
|メタデータ プロパティに設定します。`true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>、<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>、<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SlashedZeroProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SlashedZeroProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SlashedZeroProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.Typography.SlashedZeroProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Documents.Typography.SlashedZero" /> 添付プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StandardLigatures">
      <MemberSignature Language="C#" Value="public bool StandardLigatures { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StandardLigatures" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.Typography.StandardLigatures" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または標準合字が有効になっているかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" />標準合字が有効な場合それ以外の場合、<see langword="false" />です。 既定値は <see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティを取得または所有しているオブジェクトの値を設定、`Typography`プロパティにアクセスする唯一の方法、<xref:System.Windows.Documents.Typography>クラスのインスタンス。 さらに、このオブジェクトにテキストを格納していることを設定できるように、添付プロパティの使用法プロパティがサポートする[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]です。  
  
 次のテキストは、Pericles フォントの標準合字グリフを示したものです。  
  
 ![OpenType の標準合字を使用してテキストを](~/add/media/opentypefont04.gif "OpenType の標準合字を使用するテキスト")  
標準合字のセットの例  
  
 次のコード例に示します Pericles フォントの標準合字の記号を定義する方法を使用して、<xref:System.Windows.Documents.Typography.StandardLigatures%2A>プロパティです。  
  
 [!code-xaml[OpenTypeFontSamples#4](~/samples/snippets/csharp/VS_Snippets_Wpf/OpenTypeFontSamples/CS/PageOne.xaml#4)]   
  
 既定で OpenTypes フォント[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]標準合字を有効にします。 たとえば、Palatino Linotype フォントを使用する場合、標準合字 "fi"、"ff" および "fl" は組み合わせ文字グリフとして表示されます。 各標準合字の文字のペアが互いに接触することに注意してください。  
  
 ![OpenType の標準合字を使用してテキストを](~/add/media/opentypefont06.gif "OpenType の標準合字を使用するテキスト")  
既定で有効になっている標準合字の例  
  
 ただし、標準合字機能を無効にして、"ff" などの標準合字が、組み合わせ文字グリフとしてではなく、2 つの別々のグリフとして表示されるようにできます。  
  
 ![OpenType の標準合字を無効になっているテキストを使用して](~/add/media/opentypefont07.gif "OpenType の標準合字のテキストを使用して無効になっています")  
無効な標準合字の例  
  
 次のコード例に示します Palatino Linotype フォントの標準合字のグリフを無効にする方法を使用して、<xref:System.Windows.Documents.Typography.StandardLigatures%2A>プロパティです。  
  
 [!code-xaml[OpenTypeFontSamples#6](~/samples/snippets/csharp/VS_Snippets_Wpf/OpenTypeFontSamples/CS/PageOne.xaml#6)]   
  
 場合の値<xref:System.Windows.Documents.Typography.StandardLigatures%2A>は`true`と選択したフォントは標準合字をサポートしていません、文字の既定のフォームが表示されます。  
  
<a name="xamlAttributeUsage_StandardLigatures"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト* **Typography.StandardLigatures**="*bool*"/>  
  
<a name="dependencyPropertyInfo_StandardLigatures"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Documents.Typography.StandardLigaturesProperty>|  
|メタデータ プロパティに設定します。`true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>、<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>、<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StandardLigaturesProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty StandardLigaturesProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty StandardLigaturesProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.Typography.StandardLigaturesProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Documents.Typography.StandardLigatures" /> 添付プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StandardSwashes">
      <MemberSignature Language="C#" Value="public int StandardSwashes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 StandardSwashes" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.Typography.StandardSwashes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または標準の巻き髭形式のインデックスを指定する値を設定します。</summary>
        <value>標準の巻き髭形式のインデックス。 既定値は 0 (ゼロです)。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティを取得または所有しているオブジェクトの値を設定、`Typography`プロパティにアクセスする唯一の方法、<xref:System.Windows.Documents.Typography>クラスのインスタンス。 さらに、このオブジェクトにテキストを格納していることを設定できるように、添付プロパティの使用法プロパティがサポートする[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]です。  
  
 スワッシュは装飾的なグリフで、カリグラフィを連想させることがよくある、手の込んだ装飾が使用されます。 次のテキストには、Pescadero フォントの標準と飾り付きグリフが表示されます。  
  
 ![OpenType の標準と飾り付きグリフを使用するテキスト](~/add/media/opentypefont08.gif "OpenType の標準と飾り付きグリフを使用するテキスト")  
標準と飾り付きグリフの例  
  
 飾り付きは、季節のご挨拶などの短いフレーズで装飾的な要素としてよく使用されます。 次のテキストは、イベントの名前の大文字を強調するのに巻き髭を使用します。  
  
 ![OpenType の巻き髭を使用してテキストを](~/add/media/opentypefont09.gif "OpenType の巻き髭を使用するテキスト")  
大文字に使用される巻き髭の例  
  
 次のコード例は、フォントの巻き髭を定義する方法を示しますを使用して、<xref:System.Windows.Documents.Typography.StandardSwashes%2A>プロパティです。  
  
 [!code-xaml[OpenTypeFontSamples#7](~/samples/snippets/csharp/VS_Snippets_Wpf/OpenTypeFontSamples/CS/PageOne.xaml#7)]   
  
 場合の値<xref:System.Windows.Documents.Typography.StandardSwashes%2A>が 0 と、選択したよりも大きいフォントでは、指定されたインデックス値に標準の巻き髭フォームはサポートされていません、文字の既定のフォームが表示されます。  
  
<a name="xamlAttributeUsage_StandardSwashes"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト* **Typography.StandardSwashes**="*int*"/>  
  
<a name="dependencyPropertyInfo_StandardSwashes"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Documents.Typography.StandardSwashesProperty>|  
|メタデータ プロパティに設定します。`true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>、<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>、<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StandardSwashesProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty StandardSwashesProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty StandardSwashesProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.Typography.StandardSwashesProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Documents.Typography.StandardSwashes" /> 添付プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StylisticAlternates">
      <MemberSignature Language="C#" Value="public int StylisticAlternates { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 StylisticAlternates" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.Typography.StylisticAlternates" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはスタイル代替グリフの形式のインデックスを指定する値を設定します。</summary>
        <value>スタイル代替グリフのフォームのインデックス。 既定値は 0 (ゼロです)。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティを取得または所有しているオブジェクトの値を設定、`Typography`プロパティにアクセスする唯一の方法、<xref:System.Windows.Documents.Typography>クラスのインスタンス。 さらに、このオブジェクトにテキストを格納していることを設定できるように、添付プロパティの使用法プロパティがサポートする[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]です。  
  
 代替文字は、標準的なグリフの代わりに使用できるグリフです。 次の例で使用される Pericles フォントなどの OpenType フォントには、異なる外観のテキストを作成に使用できる代替グリフが含まれます。 次のテキストは、Pericles フォントの標準グリフを示したものです。  
  
 ![OpenType の標準グリフを使用してテキストを](~/add/media/opentypefont01.gif "OpenType の標準グリフを使用するテキスト")  
グリフの標準セットの例  
  
 Pericles OpenType フォントでは、標準的な一連のグリフにスタイル代替グリフを提供する追加のグリフを格納します。 次のテキストでは、スタイル代替グリフが表示されています。  
  
 ![OpenType のスタイル代替グリフを使用してテキストを](~/add/media/opentypefont02.gif "OpenType のスタイル代替グリフを使用するテキスト")  
スタイル代替グリフの例  
  
 次のコード例に示します Pericles フォントのスタイル代替グリフを定義する方法を使用して、<xref:System.Windows.Documents.Typography.StylisticAlternates%2A>プロパティです。  
  
 [!code-xaml[OpenTypeFontSamples#2](~/samples/snippets/csharp/VS_Snippets_Wpf/OpenTypeFontSamples/CS/PageOne.xaml#2)]   
  
 次のテキストは、いくつか他のスタイル代替グリフの Pericles フォントを表示します。  
  
 ![OpenType のスタイル代替グリフを使用してテキストを](~/add/media/opentypefont03.gif "OpenType のスタイル代替グリフを使用するテキスト")  
その他のスタイル代替グリフの例  
  
 次のコード例では、これらの他のスタイル代替グリフを定義する方法を示します。  
  
 [!code-xaml[OpenTypeFontSamples#3](~/samples/snippets/csharp/VS_Snippets_Wpf/OpenTypeFontSamples/CS/PageOne.xaml#3)]   
  
<a name="xamlAttributeUsage_StylisticAlternates"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト* **Typography.StylisticAlternates**="*int*"/>  
  
<a name="dependencyPropertyInfo_StylisticAlternates"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Documents.Typography.StylisticAlternatesProperty>|  
|メタデータ プロパティに設定します。`true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>、<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>、<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylisticAlternatesProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty StylisticAlternatesProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty StylisticAlternatesProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.Typography.StylisticAlternatesProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Documents.Typography.StylisticAlternates" /> 添付プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StylisticSet1">
      <MemberSignature Language="C#" Value="public bool StylisticSet1 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StylisticSet1" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.Typography.StylisticSet1" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはフォント形式のスタイル セットが有効になっているかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" />フォントの形式のスタイル セットが有効である場合それ以外の場合、<see langword="false" />です。 既定値は <see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティを取得または所有しているオブジェクトの値を設定、`Typography`プロパティにアクセスする唯一の方法、<xref:System.Windows.Documents.Typography>クラスのインスタンス。 さらに、このオブジェクトにテキストを格納していることを設定できるように、添付プロパティの使用法プロパティがサポートする[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]です。  
  
 一部のフォントには、文字セットの部分に対応する variant のスタイルのグリフが含まれます。 スタイル セットでのグリフは、視覚的に調和、特定の方法で操作または他の方法で連携を設計することがあります。  
  
<a name="xamlAttributeUsage_StylisticSet1"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト* **Typography.StylisticSet1**="*bool*"/>  
  
<a name="dependencyPropertyInfo_StylisticSet1"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Documents.Typography.StylisticSet1Property>|  
|メタデータ プロパティに設定します。`true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>、<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>、<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylisticSet10">
      <MemberSignature Language="C#" Value="public bool StylisticSet10 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StylisticSet10" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.Typography.StylisticSet10" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはフォント形式のスタイル セットが有効になっているかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" />フォントの形式のスタイル セットが有効である場合それ以外の場合、<see langword="false" />です。 既定値は <see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティを取得または所有しているオブジェクトの値を設定、`Typography`プロパティにアクセスする唯一の方法、<xref:System.Windows.Documents.Typography>クラスのインスタンス。 さらに、このオブジェクトにテキストを格納していることを設定できるように、添付プロパティの使用法プロパティがサポートする[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]です。  
  
 一部のフォントには、文字セットの部分に対応する variant のスタイルのグリフが含まれます。 スタイル セットでのグリフは、視覚的に調和、特定の方法で操作または他の方法で連携を設計することがあります。  
  
<a name="xamlAttributeUsage_StylisticSet10"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト* **Typography.StylisticSet10**="*bool*"/>  
  
<a name="dependencyPropertyInfo_StylisticSet10"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Documents.Typography.StylisticSet10Property>|  
|メタデータ プロパティに設定します。`true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>、<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>、<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylisticSet10Property">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty StylisticSet10Property;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty StylisticSet10Property" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.Typography.StylisticSet10Property" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Documents.Typography.StylisticSet10" /> 添付プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StylisticSet11">
      <MemberSignature Language="C#" Value="public bool StylisticSet11 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StylisticSet11" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.Typography.StylisticSet11" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはフォント形式のスタイル セットが有効になっているかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" />フォントの形式のスタイル セットが有効である場合それ以外の場合、<see langword="false" />です。 既定値は <see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティを取得または所有しているオブジェクトの値を設定、`Typography`プロパティにアクセスする唯一の方法、<xref:System.Windows.Documents.Typography>クラスのインスタンス。 さらに、このオブジェクトにテキストを格納していることを設定できるように、添付プロパティの使用法プロパティがサポートする[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]です。  
  
 一部のフォントには、文字セットの部分に対応する variant のスタイルのグリフが含まれます。 スタイル セットでのグリフは、視覚的に調和、特定の方法で操作または他の方法で連携を設計することがあります。  
  
<a name="xamlAttributeUsage_StylisticSet11"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト* **Typography.StylisticSet11**="*bool*"/>  
  
<a name="dependencyPropertyInfo_StylisticSet11"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Documents.Typography.StylisticSet11Property>|  
|メタデータ プロパティに設定します。`true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>、<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>、<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylisticSet11Property">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty StylisticSet11Property;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty StylisticSet11Property" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.Typography.StylisticSet11Property" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Documents.Typography.StylisticSet11" /> 添付プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StylisticSet12">
      <MemberSignature Language="C#" Value="public bool StylisticSet12 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StylisticSet12" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.Typography.StylisticSet12" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはフォント形式のスタイル セットが有効になっているかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" />フォントの形式のスタイル セットが有効である場合それ以外の場合、<see langword="false" />です。 既定値は <see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティを取得または所有しているオブジェクトの値を設定、`Typography`プロパティにアクセスする唯一の方法、<xref:System.Windows.Documents.Typography>クラスのインスタンス。 さらに、このオブジェクトにテキストを格納していることを設定できるように、添付プロパティの使用法プロパティがサポートする[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]です。  
  
 一部のフォントには、文字セットの部分に対応する variant のスタイルのグリフが含まれます。 スタイル セットでのグリフは、視覚的に調和、特定の方法で操作または他の方法で連携を設計することがあります。  
  
<a name="xamlAttributeUsage_StylisticSet12"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト* **Typography.StylisticSet12**="*bool*"/>  
  
<a name="dependencyPropertyInfo_StylisticSet12"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Documents.Typography.StylisticSet12Property>|  
|メタデータ プロパティに設定します。`true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>、<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>、<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylisticSet12Property">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty StylisticSet12Property;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty StylisticSet12Property" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.Typography.StylisticSet12Property" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Documents.Typography.StylisticSet12" /> 添付プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StylisticSet13">
      <MemberSignature Language="C#" Value="public bool StylisticSet13 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StylisticSet13" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.Typography.StylisticSet13" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはフォント形式のスタイル セットが有効になっているかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" />フォントの形式のスタイル セットが有効である場合それ以外の場合、<see langword="false" />です。 既定値は <see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティを取得または所有しているオブジェクトの値を設定、`Typography`プロパティにアクセスする唯一の方法、<xref:System.Windows.Documents.Typography>クラスのインスタンス。 さらに、このオブジェクトにテキストを格納していることを設定できるように、添付プロパティの使用法プロパティがサポートする[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]です。  
  
 一部のフォントには、文字セットの部分に対応する variant のスタイルのグリフが含まれます。 スタイル セットでのグリフは、視覚的に調和、特定の方法で操作または他の方法で連携を設計することがあります。  
  
<a name="xamlAttributeUsage_StylisticSet13"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト* **Typography.StylisticSet13**="*bool*"/>  
  
<a name="dependencyPropertyInfo_StylisticSet13"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Documents.Typography.StylisticSet13Property>|  
|メタデータ プロパティに設定します。`true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>、<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>、<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylisticSet13Property">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty StylisticSet13Property;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty StylisticSet13Property" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.Typography.StylisticSet13Property" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Documents.Typography.StylisticSet13" /> 添付プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StylisticSet14">
      <MemberSignature Language="C#" Value="public bool StylisticSet14 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StylisticSet14" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.Typography.StylisticSet14" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはフォント形式のスタイル セットが有効になっているかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" />フォントの形式のスタイル セットが有効である場合それ以外の場合、<see langword="false" />です。 既定値は <see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティを取得または所有しているオブジェクトの値を設定、`Typography`プロパティにアクセスする唯一の方法、<xref:System.Windows.Documents.Typography>クラスのインスタンス。 さらに、このオブジェクトにテキストを格納していることを設定できるように、添付プロパティの使用法プロパティがサポートする[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]です。  
  
 一部のフォントには、文字セットの部分に対応する variant のスタイルのグリフが含まれます。 スタイル セットでのグリフは、視覚的に調和、特定の方法で操作または他の方法で連携を設計することがあります。  
  
<a name="xamlAttributeUsage_StylisticSet14"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト* **Typography.StylisticSet14**="*bool*"/>  
  
<a name="dependencyPropertyInfo_StylisticSet14"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Documents.Typography.StylisticSet14Property>|  
|メタデータ プロパティに設定します。`true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>、<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>、<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylisticSet14Property">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty StylisticSet14Property;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty StylisticSet14Property" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.Typography.StylisticSet14Property" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Documents.Typography.StylisticSet14" /> 添付プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StylisticSet15">
      <MemberSignature Language="C#" Value="public bool StylisticSet15 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StylisticSet15" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.Typography.StylisticSet15" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはフォント形式のスタイル セットが有効になっているかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" />フォントの形式のスタイル セットが有効である場合それ以外の場合、<see langword="false" />です。 既定値は <see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティを取得または所有しているオブジェクトの値を設定、`Typography`プロパティにアクセスする唯一の方法、<xref:System.Windows.Documents.Typography>クラスのインスタンス。 さらに、このオブジェクトにテキストを格納していることを設定できるように、添付プロパティの使用法プロパティがサポートする[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]です。  
  
 一部のフォントには、文字セットの部分に対応する variant のスタイルのグリフが含まれます。 スタイル セットでのグリフは、視覚的に調和、特定の方法で操作または他の方法で連携を設計することがあります。  
  
<a name="xamlAttributeUsage_StylisticSet15"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト* **Typography.StylisticSet15**="*bool*"/>  
  
<a name="dependencyPropertyInfo_StylisticSet15"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Documents.Typography.StylisticSet15Property>|  
|メタデータ プロパティに設定します。`true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>、<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>、<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylisticSet15Property">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty StylisticSet15Property;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty StylisticSet15Property" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.Typography.StylisticSet15Property" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Documents.Typography.StylisticSet15" /> 添付プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StylisticSet16">
      <MemberSignature Language="C#" Value="public bool StylisticSet16 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StylisticSet16" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.Typography.StylisticSet16" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはフォント形式のスタイル セットが有効になっているかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" />フォントの形式のスタイル セットが有効である場合それ以外の場合、<see langword="false" />です。 既定値は <see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティを取得または所有しているオブジェクトの値を設定、`Typography`プロパティにアクセスする唯一の方法、<xref:System.Windows.Documents.Typography>クラスのインスタンス。 さらに、このオブジェクトにテキストを格納していることを設定できるように、添付プロパティの使用法プロパティがサポートする[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]です。  
  
 一部のフォントには、文字セットの部分に対応する variant のスタイルのグリフが含まれます。 スタイル セットでのグリフは、視覚的に調和、特定の方法で操作または他の方法で連携を設計することがあります。  
  
<a name="xamlAttributeUsage_StylisticSet16"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト* **Typography.StylisticSet16**="*bool*"/>  
  
<a name="dependencyPropertyInfo_StylisticSet16"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Documents.Typography.StylisticSet16Property>|  
|メタデータ プロパティに設定します。`true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>、<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>、<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylisticSet16Property">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty StylisticSet16Property;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty StylisticSet16Property" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.Typography.StylisticSet16Property" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Documents.Typography.StylisticSet16" /> 添付プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StylisticSet17">
      <MemberSignature Language="C#" Value="public bool StylisticSet17 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StylisticSet17" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.Typography.StylisticSet17" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはフォント形式のスタイル セットが有効になっているかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" />フォントの形式のスタイル セットが有効である場合それ以外の場合、<see langword="false" />です。 既定値は <see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティを取得または所有しているオブジェクトの値を設定、`Typography`プロパティにアクセスする唯一の方法、<xref:System.Windows.Documents.Typography>クラスのインスタンス。 さらに、このオブジェクトにテキストを格納していることを設定できるように、添付プロパティの使用法プロパティがサポートする[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]です。  
  
 一部のフォントには、文字セットの部分に対応する variant のスタイルのグリフが含まれます。 スタイル セットでのグリフは、視覚的に調和、特定の方法で操作または他の方法で連携を設計することがあります。  
  
<a name="xamlAttributeUsage_StylisticSet17"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト* **Typography.StylisticSet17**="*bool*"/>  
  
<a name="dependencyPropertyInfo_StylisticSet17"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Documents.Typography.StylisticSet17Property>|  
|メタデータ プロパティに設定します。`true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>、<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>、<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylisticSet17Property">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty StylisticSet17Property;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty StylisticSet17Property" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.Typography.StylisticSet17Property" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Documents.Typography.StylisticSet17" /> 添付プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StylisticSet18">
      <MemberSignature Language="C#" Value="public bool StylisticSet18 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StylisticSet18" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.Typography.StylisticSet18" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはフォント形式のスタイル セットが有効になっているかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" />フォントの形式のスタイル セットが有効である場合それ以外の場合、<see langword="false" />です。 既定値は <see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティを取得または所有しているオブジェクトの値を設定、`Typography`プロパティにアクセスする唯一の方法、<xref:System.Windows.Documents.Typography>クラスのインスタンス。 さらに、このオブジェクトにテキストを格納していることを設定できるように、添付プロパティの使用法プロパティがサポートする[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]です。  
  
 一部のフォントには、文字セットの部分に対応する variant のスタイルのグリフが含まれます。 スタイル セットでのグリフは、視覚的に調和、特定の方法で操作または他の方法で連携を設計することがあります。  
  
<a name="xamlAttributeUsage_StylisticSet18"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト* **Typography.StylisticSet18**="*bool*"/>  
  
<a name="dependencyPropertyInfo_StylisticSet18"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Documents.Typography.StylisticSet18Property>|  
|メタデータ プロパティに設定します。`true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>、<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>、<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylisticSet18Property">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty StylisticSet18Property;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty StylisticSet18Property" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.Typography.StylisticSet18Property" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Documents.Typography.StylisticSet18" /> 添付プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StylisticSet19">
      <MemberSignature Language="C#" Value="public bool StylisticSet19 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StylisticSet19" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.Typography.StylisticSet19" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはフォント形式のスタイル セットが有効になっているかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" />フォントの形式のスタイル セットが有効である場合それ以外の場合、<see langword="false" />です。 既定値は <see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティを取得または所有しているオブジェクトの値を設定、`Typography`プロパティにアクセスする唯一の方法、<xref:System.Windows.Documents.Typography>クラスのインスタンス。 さらに、このオブジェクトにテキストを格納していることを設定できるように、添付プロパティの使用法プロパティがサポートする[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]です。  
  
 一部のフォントには、文字セットの部分に対応する variant のスタイルのグリフが含まれます。 スタイル セットでのグリフは、視覚的に調和、特定の方法で操作または他の方法で連携を設計することがあります。  
  
<a name="xamlAttributeUsage_StylisticSet19"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト* **Typography.StylisticSet19**="*bool*"/>  
  
<a name="dependencyPropertyInfo_StylisticSet19"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Documents.Typography.StylisticSet19Property>|  
|メタデータ プロパティに設定します。`true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>、<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>、<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylisticSet19Property">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty StylisticSet19Property;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty StylisticSet19Property" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.Typography.StylisticSet19Property" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Documents.Typography.StylisticSet19" /> 添付プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StylisticSet1Property">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty StylisticSet1Property;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty StylisticSet1Property" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.Typography.StylisticSet1Property" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Documents.Typography.StylisticSet1" /> 添付プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StylisticSet2">
      <MemberSignature Language="C#" Value="public bool StylisticSet2 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StylisticSet2" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.Typography.StylisticSet2" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはフォント形式のスタイル セットが有効になっているかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" />フォントの形式のスタイル セットが有効である場合それ以外の場合、<see langword="false" />です。 既定値は <see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティを取得または所有しているオブジェクトの値を設定、`Typography`プロパティにアクセスする唯一の方法、<xref:System.Windows.Documents.Typography>クラスのインスタンス。 さらに、このオブジェクトにテキストを格納していることを設定できるように、添付プロパティの使用法プロパティがサポートする[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]です。  
  
 一部のフォントには、文字セットの部分に対応する variant のスタイルのグリフが含まれます。 スタイル セットでのグリフは、視覚的に調和、特定の方法で操作または他の方法で連携を設計することがあります。  
  
<a name="xamlAttributeUsage_StylisticSet2"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト* **Typography.StylisticSet2**="*bool*"/>  
  
<a name="dependencyPropertyInfo_StylisticSet2"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Documents.Typography.StylisticSet2Property>|  
|メタデータ プロパティに設定します。`true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>、<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>、<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylisticSet20">
      <MemberSignature Language="C#" Value="public bool StylisticSet20 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StylisticSet20" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.Typography.StylisticSet20" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはフォント形式のスタイル セットが有効になっているかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" />フォントの形式のスタイル セットが有効である場合それ以外の場合、<see langword="false" />です。 既定値は <see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティを取得または所有しているオブジェクトの値を設定、`Typography`プロパティにアクセスする唯一の方法、<xref:System.Windows.Documents.Typography>クラスのインスタンス。 さらに、このオブジェクトにテキストを格納していることを設定できるように、添付プロパティの使用法プロパティがサポートする[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]です。  
  
 一部のフォントには、文字セットの部分に対応する variant のスタイルのグリフが含まれます。 スタイル セットでのグリフは、視覚的に調和、特定の方法で操作または他の方法で連携を設計することがあります。  
  
<a name="xamlAttributeUsage_StylisticSet20"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト* **Typography.StylisticSet20**="*bool*"/>  
  
<a name="dependencyPropertyInfo_StylisticSet20"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Documents.Typography.StylisticSet20Property>|  
|メタデータ プロパティに設定します。`true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>、<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>、<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylisticSet20Property">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty StylisticSet20Property;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty StylisticSet20Property" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.Typography.StylisticSet20Property" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Documents.Typography.StylisticSet20" /> 添付プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StylisticSet2Property">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty StylisticSet2Property;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty StylisticSet2Property" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.Typography.StylisticSet2Property" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Documents.Typography.StylisticSet2" /> 添付プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StylisticSet3">
      <MemberSignature Language="C#" Value="public bool StylisticSet3 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StylisticSet3" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.Typography.StylisticSet3" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはフォント形式のスタイル セットが有効になっているかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" />フォントの形式のスタイル セットが有効である場合それ以外の場合、<see langword="false" />です。 既定値は <see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティを取得または所有しているオブジェクトの値を設定、`Typography`プロパティにアクセスする唯一の方法、<xref:System.Windows.Documents.Typography>クラスのインスタンス。 さらに、このオブジェクトにテキストを格納していることを設定できるように、添付プロパティの使用法プロパティがサポートする[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]です。  
  
 一部のフォントには、文字セットの部分に対応する variant のスタイルのグリフが含まれます。 スタイル セットでのグリフは、視覚的に調和、特定の方法で操作または他の方法で連携を設計することがあります。  
  
<a name="xamlAttributeUsage_StylisticSet3"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト* **Typography.StylisticSet3**="*bool*"/>  
  
<a name="dependencyPropertyInfo_StylisticSet3"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Documents.Typography.StylisticSet3Property>|  
|メタデータ プロパティに設定します。`true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>、<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>、<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylisticSet3Property">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty StylisticSet3Property;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty StylisticSet3Property" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.Typography.StylisticSet3Property" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Documents.Typography.StylisticSet3" /> 添付プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StylisticSet4">
      <MemberSignature Language="C#" Value="public bool StylisticSet4 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StylisticSet4" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.Typography.StylisticSet4" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはフォント形式のスタイル セットが有効になっているかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" />フォントの形式のスタイル セットが有効である場合それ以外の場合、<see langword="false" />です。 既定値は <see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティを取得または所有しているオブジェクトの値を設定、`Typography`プロパティにアクセスする唯一の方法、<xref:System.Windows.Documents.Typography>クラスのインスタンス。 さらに、このオブジェクトにテキストを格納していることを設定できるように、添付プロパティの使用法プロパティがサポートする[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]です。  
  
 一部のフォントには、文字セットの部分に対応する variant のスタイルのグリフが含まれます。 スタイル セットでのグリフは、視覚的に調和、特定の方法で操作または他の方法で連携を設計することがあります。  
  
<a name="xamlAttributeUsage_StylisticSet4"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト* **Typography.StylisticSet4**="*bool*"/>  
  
<a name="dependencyPropertyInfo_StylisticSet4"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Documents.Typography.StylisticSet4Property>|  
|メタデータ プロパティに設定します。`true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>、<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>、<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylisticSet4Property">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty StylisticSet4Property;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty StylisticSet4Property" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.Typography.StylisticSet4Property" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Documents.Typography.StylisticSet4" /> 添付プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StylisticSet5">
      <MemberSignature Language="C#" Value="public bool StylisticSet5 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StylisticSet5" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.Typography.StylisticSet5" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはフォント形式のスタイル セットが有効になっているかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" />フォントの形式のスタイル セットが有効である場合それ以外の場合、<see langword="false" />です。 既定値は <see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティを取得または所有しているオブジェクトの値を設定、`Typography`プロパティにアクセスする唯一の方法、<xref:System.Windows.Documents.Typography>クラスのインスタンス。 さらに、このオブジェクトにテキストを格納していることを設定できるように、添付プロパティの使用法プロパティがサポートする[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]です。  
  
 一部のフォントには、文字セットの部分に対応する variant のスタイルのグリフが含まれます。 スタイル セットでのグリフは、視覚的に調和、特定の方法で操作または他の方法で連携を設計することがあります。  
  
<a name="xamlAttributeUsage_StylisticSet5"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト* **Typography.StylisticSet5**="*bool*"/>  
  
<a name="dependencyPropertyInfo_StylisticSet5"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Documents.Typography.StylisticSet5Property>|  
|メタデータ プロパティに設定します。`true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>、<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>、<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylisticSet5Property">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty StylisticSet5Property;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty StylisticSet5Property" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.Typography.StylisticSet5Property" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Documents.Typography.StylisticSet5" /> 添付プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StylisticSet6">
      <MemberSignature Language="C#" Value="public bool StylisticSet6 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StylisticSet6" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.Typography.StylisticSet6" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはフォント形式のスタイル セットが有効になっているかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" />フォントの形式のスタイル セットが有効である場合それ以外の場合、<see langword="false" />です。 既定値は <see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティを取得または所有しているオブジェクトの値を設定、`Typography`プロパティにアクセスする唯一の方法、<xref:System.Windows.Documents.Typography>クラスのインスタンス。 さらに、このオブジェクトにテキストを格納していることを設定できるように、添付プロパティの使用法プロパティがサポートする[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]です。  
  
 一部のフォントには、文字セットの部分に対応する variant のスタイルのグリフが含まれます。 スタイル セットでのグリフは、視覚的に調和、特定の方法で操作または他の方法で連携を設計することがあります。  
  
<a name="xamlAttributeUsage_StylisticSet6"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト* **Typography.StylisticSet6**="*bool*"/>  
  
<a name="dependencyPropertyInfo_StylisticSet6"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Documents.Typography.StylisticSet6Property>|  
|メタデータ プロパティに設定します。`true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>、<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>、<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylisticSet6Property">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty StylisticSet6Property;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty StylisticSet6Property" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.Typography.StylisticSet6Property" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Documents.Typography.StylisticSet6" /> 添付プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StylisticSet7">
      <MemberSignature Language="C#" Value="public bool StylisticSet7 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StylisticSet7" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.Typography.StylisticSet7" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはフォント形式のスタイル セットが有効になっているかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" />フォントの形式のスタイル セットが有効である場合それ以外の場合、<see langword="false" />です。 既定値は <see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティを取得または所有しているオブジェクトの値を設定、`Typography`プロパティにアクセスする唯一の方法、<xref:System.Windows.Documents.Typography>クラスのインスタンス。 さらに、このオブジェクトにテキストを格納していることを設定できるように、添付プロパティの使用法プロパティがサポートする[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]です。  
  
 一部のフォントには、文字セットの部分に対応する variant のスタイルのグリフが含まれます。 スタイル セットでのグリフは、視覚的に調和、特定の方法で操作または他の方法で連携を設計することがあります。  
  
 \<*オブジェクト* **Typography.StylisticSet7**="*bool*"/>  
  
<a name="dependencyPropertyInfo_StylisticSet7"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Documents.Typography.StylisticSet7Property>|  
|メタデータ プロパティに設定します。`true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>、<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>、<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylisticSet7Property">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty StylisticSet7Property;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty StylisticSet7Property" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.Typography.StylisticSet7Property" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Documents.Typography.StylisticSet7" /> 添付プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StylisticSet8">
      <MemberSignature Language="C#" Value="public bool StylisticSet8 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StylisticSet8" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.Typography.StylisticSet8" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはフォント形式のスタイル セットが有効になっているかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" />フォントの形式のスタイル セットが有効である場合それ以外の場合、<see langword="false" />です。 既定値は <see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティを取得または所有しているオブジェクトの値を設定、`Typography`プロパティにアクセスする唯一の方法、<xref:System.Windows.Documents.Typography>クラスのインスタンス。 さらに、このオブジェクトにテキストを格納していることを設定できるように、添付プロパティの使用法プロパティがサポートする[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]です。  
  
 一部のフォントには、文字セットの部分に対応する variant のスタイルのグリフが含まれます。 スタイル セットでのグリフは、視覚的に調和、特定の方法で操作または他の方法で連携を設計することがあります。  
  
<a name="xamlAttributeUsage_StylisticSet8"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト* **Typography.StylisticSet8**="*bool*"/>  
  
<a name="dependencyPropertyInfo_StylisticSet8"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Documents.Typography.StylisticSet8Property>|  
|メタデータ プロパティに設定します。`true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>、<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>、<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylisticSet8Property">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty StylisticSet8Property;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty StylisticSet8Property" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.Typography.StylisticSet8Property" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Documents.Typography.StylisticSet8" /> 添付プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StylisticSet9">
      <MemberSignature Language="C#" Value="public bool StylisticSet9 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StylisticSet9" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.Typography.StylisticSet9" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはフォント形式のスタイル セットが有効になっているかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" />フォントの形式のスタイル セットが有効である場合それ以外の場合、<see langword="false" />です。 既定値は <see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティを取得または所有しているオブジェクトの値を設定、`Typography`プロパティにアクセスする唯一の方法、<xref:System.Windows.Documents.Typography>クラスのインスタンス。 さらに、このオブジェクトにテキストを格納していることを設定できるように、添付プロパティの使用法プロパティがサポートする[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]です。  
  
 一部のフォントには、文字セットの部分に対応する variant のスタイルのグリフが含まれます。 スタイル セットでのグリフは、視覚的に調和、特定の方法で操作または他の方法で連携を設計することがあります。  
  
<a name="xamlAttributeUsage_StylisticSet9"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト* **Typography.StylisticSet9**="*bool*"/>  
  
<a name="dependencyPropertyInfo_StylisticSet9"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Documents.Typography.StylisticSet9Property>|  
|メタデータ プロパティに設定します。`true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>、<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>、<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylisticSet9Property">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty StylisticSet9Property;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty StylisticSet9Property" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.Typography.StylisticSet9Property" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Documents.Typography.StylisticSet9" /> 添付プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Variants">
      <MemberSignature Language="C#" Value="public System.Windows.FontVariants Variants { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.FontVariants Variants" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.Typography.Variants" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.FontVariants</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定、<see cref="T:System.Windows.FontVariants" />を使用する標準の表記形式のバリエーションを示す値を列挙します。</summary>
        <value>A<see cref="T:System.Windows.FontVariants" />列挙値。 既定値は <see cref="F:System.Windows.FontVariants.Normal" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティを取得または所有しているオブジェクトの値を設定、`Typography`プロパティにアクセスする唯一の方法、<xref:System.Windows.Documents.Typography>クラスのインスタンス。 さらに、このオブジェクトにテキストを格納していることを設定できるように、添付プロパティの使用法プロパティがサポートする[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]です。  
  
 バリアントは、上付きのフォントの形式に似ています。 フォント形式上付き文字と、序数に基づくフォーム間、または添字と下位のフォーム間でのさまざまなグリフ セットを格納することができます。 <xref:System.Windows.Documents.Typography.Variants%2A>プロパティでは、OpenType フォントの上付き文字と下付き文字の値を設定することができます。  
  
 次のテキストは、Palatino Linotype フォントの上付き文字を示したものです。  
  
 ![OpenType の上付き文字を使用してテキストを](~/add/media/opentypefont14.gif "OpenType の上付き文字を使用するテキスト")  
上付き文字の例  
  
 次のコード例に示します Palatino Linotype フォントの上付き文字を定義する方法を使用して、<xref:System.Windows.Documents.Typography.Variants%2A>プロパティです。  
  
 [!code-xaml[OpenTypeFontSamples#12](~/samples/snippets/csharp/VS_Snippets_Wpf/OpenTypeFontSamples/CS/PageOne.xaml#12)]   
  
 次のテキストは、Palatino Linotype フォントの下付き文字を表示します。  
  
 ![OpenType の下付き文字を使用してテキストを](~/add/media/opentypefont15.gif "OpenType の下付き文字を使用するテキスト")  
添字の例  
  
 次のコード例に示します Palatino Linotype フォントの下付き文字を定義する方法を使用して、<xref:System.Windows.Documents.Typography.Variants%2A>プロパティです。  
  
 [!code-xaml[OpenTypeFontSamples#13](~/samples/snippets/csharp/VS_Snippets_Wpf/OpenTypeFontSamples/CS/PageOne.xaml#13)]   
  
 フォントのバリアントをサポートしないフォント フォームの近似アルゴリズムがない可能性があります。  
  
<a name="xamlAttributeUsage_Variants"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト* **Typography.Variants**="<xref:System.Windows.FontVariants>"/>  
  
<a name="dependencyPropertyInfo_Variants"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Documents.Typography.VariantsProperty>|  
|メタデータ プロパティに設定します。`true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>、<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>、<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VariantsProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty VariantsProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty VariantsProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.Typography.VariantsProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Documents.Typography.Variants" /> 添付プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
