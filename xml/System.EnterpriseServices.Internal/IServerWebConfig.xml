<Type Name="IServerWebConfig" FullName="System.EnterpriseServices.Internal.IServerWebConfig">
  <TypeSignature Language="C#" Value="public interface IServerWebConfig" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IServerWebConfig" />
  <TypeSignature Language="DocId" Value="T:System.EnterpriseServices.Internal.IServerWebConfig" />
  <AssemblyInfo>
    <AssemblyName>System.EnterpriseServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("6261e4b5-572a-4142-a2f9-1fe1a0c97097")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>SOAP 対応の COM + アプリケーションの Web.config ファイルを作成し、アプリケーションで発行されている COM インターフェイスのファイルにコンポーネントのエントリを追加します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.EnterpriseServices.Internal.IServerWebConfig>インターフェイスは、実装でのみ、<xref:System.EnterpriseServices.Internal.ServerWebConfig>クラスし、は、.NET Framework インフラストラクチャ内でのみ使用します。 このインターフェイスを実装するか、またはインスタンス化するのではなく、<xref:System.EnterpriseServices.Internal.IServerWebConfig>インターフェイス オブジェクトを使用して、<xref:System.EnterpriseServices.Internal.Publish>クラスを実装する、<xref:System.EnterpriseServices.Internal.IComSoapPublisher>インターフェイスです。  
  
 <xref:System.EnterpriseServices.Internal.IServerWebConfig>.NET Framework によって内部的に使用されます。 コード内で直接使用する必要はありません。  
  
 ]]></format>
    </remarks>
    <forInternalUseOnly />
  </Docs>
  <Members>
    <Member MemberName="AddElement">
      <MemberSignature Language="C#" Value="public void AddElement (string FilePath, string AssemblyName, string TypeName, string ProgId, string Mode, out string Error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddElement(string FilePath, string AssemblyName, string TypeName, string ProgId, string Mode, [out] string&amp; Error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.IServerWebConfig.AddElement(System.String,System.String,System.String,System.String,System.String,System.String@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FilePath" Type="System.String" />
        <Parameter Name="AssemblyName" Type="System.String" />
        <Parameter Name="TypeName" Type="System.String" />
        <Parameter Name="ProgId" Type="System.String" />
        <Parameter Name="Mode" Type="System.String" />
        <Parameter Name="Error" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="FilePath">既存の Web.config ファイルのパス。</param>
        <param name="AssemblyName">追加される型を含むアセンブリの名前。</param>
        <param name="TypeName">追加される型の名前。</param>
        <param name="ProgId">追加する種類のプログラム id。</param>
        <param name="Mode">メンバーの名前に対応する文字列定数、<see cref="T:System.Runtime.Remoting.WellKnownObjectMode" />列挙体は、既知のオブジェクトをアクティブにする方法を示します。</param>
        <param name="Error">エラー メッセージの書き込み先の文字列。</param>
        <summary>SOAP 対応の COM + アプリケーションで発行されている COM インターフェイスの Web.config ファイルに XML 要素を追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 参照してください、<xref:System.EnterpriseServices.Internal.ServerWebConfig.AddElement%2A>メソッド実装の詳細。 ただし、呼び出す必要はありません`AddElement`メソッドを直接です。  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public void Create (string FilePath, string FileRootName, out string Error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Create(string FilePath, string FileRootName, [out] string&amp; Error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.IServerWebConfig.Create(System.String,System.String,System.String@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FilePath" Type="System.String" />
        <Parameter Name="FileRootName" Type="System.String" />
        <Parameter Name="Error" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="FilePath">構成ファイルを作成するためのフォルダーです。</param>
        <param name="FileRootName">追加先となる構成の拡張ことができます (たとえば、Web.config の Web) 文字列値です。</param>
        <param name="Error">エラー メッセージの書き込み先の文字列。</param>
        <summary>ファイルが XML 要素が発行されている COM インターフェイスを追加する準備ができているので、SOAP 対応の COM + アプリケーションの Web.config ファイルを作成します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 参照してください、<xref:System.EnterpriseServices.Internal.ServerWebConfig.Create%2A>メソッド実装の詳細。 ただし、呼び出す必要はありません`Create`直接です。  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>
