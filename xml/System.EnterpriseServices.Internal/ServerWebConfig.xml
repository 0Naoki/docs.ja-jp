<Type Name="ServerWebConfig" FullName="System.EnterpriseServices.Internal.ServerWebConfig">
  <TypeSignature Language="C#" Value="public class ServerWebConfig : System.EnterpriseServices.Internal.IServerWebConfig" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ServerWebConfig extends System.Object implements class System.EnterpriseServices.Internal.IServerWebConfig" />
  <TypeSignature Language="DocId" Value="T:System.EnterpriseServices.Internal.ServerWebConfig" />
  <AssemblyInfo>
    <AssemblyName>System.EnterpriseServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.EnterpriseServices.Internal.IServerWebConfig</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>SOAP 対応の COM + アプリケーションの Web.config ファイルを作成します。 アプリケーションで発行されている COM インターフェイスのファイルにコンポーネントのエントリを追加することもできます。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.EnterpriseServices.Internal.ServerWebConfig>でインターネット インフォメーション サービス (IIS) 6.0 SOAP 対応の COM + アプリケーションの仮想ルートの作成時に、Web.config ファイルを作成するクラスを使用します。 XML 要素をアプリケーションに追加されるコンポーネント インターフェイスの Web.config ファイルに追加ことできますも。  
  
 <xref:System.EnterpriseServices.Internal.ServerWebConfig>.NET Framework によって内部的に使用されます。 コード内で直接使用する必要はありません。  
  
 ]]></format>
    </remarks>
    <forInternalUseOnly />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServerWebConfig ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.ServerWebConfig.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.EnterpriseServices.Internal.ServerWebConfig" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="AddElement">
      <MemberSignature Language="C#" Value="public void AddElement (string FilePath, string AssemblyName, string TypeName, string ProgId, string WkoMode, out string Error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddElement(string FilePath, string AssemblyName, string TypeName, string ProgId, string WkoMode, [out] string&amp; Error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.ServerWebConfig.AddElement(System.String,System.String,System.String,System.String,System.String,System.String@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FilePath" Type="System.String" />
        <Parameter Name="AssemblyName" Type="System.String" />
        <Parameter Name="TypeName" Type="System.String" />
        <Parameter Name="ProgId" Type="System.String" />
        <Parameter Name="WkoMode" Type="System.String" />
        <Parameter Name="Error" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="FilePath">既存の Web.config ファイルのパス。</param>
        <param name="AssemblyName">追加される型を含むアセンブリの名前。</param>
        <param name="TypeName">追加される型の名前。</param>
        <param name="ProgId">追加する種類のプログラム id。</param>
        <param name="WkoMode">メンバーの名前に対応する文字列定数、<see cref="T:System.Runtime.Remoting.WellKnownObjectMode" />列挙体は、既知のオブジェクトをアクティブにする方法を示します。</param>
        <param name="Error">エラー メッセージの書き込み先の文字列。</param>
        <summary>SOAP 対応の COM + アプリケーションで発行されている COM インターフェイスの Web.config ファイルに XML 要素を追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 指定した型の<xref:System.EnterpriseServices.Internal.ServerWebConfig.AddElement%2A>メソッドは、Web.config ファイルに追加、`<wellknown>`と`<activated>`の子要素として、`<service>`次の XPath を持つ要素。  
  
 `/configuration/system.runtime.remoting/application/service`  
  
 `AssemblyName`、 `TypeName`、 `ProgId`、および`WkoMode`パラメーターが追加された要素を 2 つの属性値に組み込まれます。  
  
 <xref:System.EnterpriseServices.Internal.ServerWebConfig.AddElement%2A>呼び出すことはできません直接です。 代わりを呼び出して、<xref:System.EnterpriseServices.Internal.Publish.ProcessServerTlb%2A>メソッドです。  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public void Create (string FilePath, string FilePrefix, out string Error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Create(string FilePath, string FilePrefix, [out] string&amp; Error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.ServerWebConfig.Create(System.String,System.String,System.String@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FilePath" Type="System.String" />
        <Parameter Name="FilePrefix" Type="System.String" />
        <Parameter Name="Error" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="FilePath">構成ファイルを作成するフォルダーです。</param>
        <param name="FilePrefix">文字列値"Web"、構成の拡張機能を追加します。</param>
        <param name="Error">エラー メッセージの書き込み先の文字列。</param>
        <summary>ファイルが XML 要素が発行されている COM インターフェイスを追加する準備ができているので、SOAP 対応の COM + アプリケーションの Web.config ファイルを作成します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.EnterpriseServices.Internal.ServerWebConfig.Create%2A>メソッドを次の XPath を持つ空要素の階層を含む Web.config ファイルを作成します。  
  
```  
/configuration/system.runtime.remoting/application/service  
```  
  
 インスタンス化ではなく、<xref:System.EnterpriseServices.Internal.ServerWebConfig>クラスのオブジェクトと呼び出し元<xref:System.EnterpriseServices.Internal.ServerWebConfig.Create%2A>を直接呼び出して、<xref:System.EnterpriseServices.Internal.Publish.CreateVirtualRoot%2A>メソッドです。  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>
