<Type Name="ComManagedImportUtil" FullName="System.EnterpriseServices.Internal.ComManagedImportUtil">
  <TypeSignature Language="C#" Value="public class ComManagedImportUtil : System.EnterpriseServices.Internal.IComManagedImportUtil" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ComManagedImportUtil extends System.Object implements class System.EnterpriseServices.Internal.IComManagedImportUtil" />
  <TypeSignature Language="DocId" Value="T:System.EnterpriseServices.Internal.ComManagedImportUtil" />
  <AssemblyInfo>
    <AssemblyName>System.EnterpriseServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.EnterpriseServices.Internal.IComManagedImportUtil</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("3b0398c9-7812-4007-85cb-18c771f2206f")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>識別し、COM + カタログでコンポーネントをインストールします。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.EnterpriseServices.Internal.ComManagedImportUtil>.NET Framework によって内部的に使用されます。 コード内で直接、クラスを使用する必要はありません。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ComManagedImportUtil ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.ComManagedImportUtil.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.EnterpriseServices.Internal.ComManagedImportUtil" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetComponentInfo">
      <MemberSignature Language="C#" Value="public void GetComponentInfo (string assemblyPath, out string numComponents, out string componentInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetComponentInfo(string assemblyPath, [out] string&amp; numComponents, [out] string&amp; componentInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.ComManagedImportUtil.GetComponentInfo(System.String,System.String@,System.String@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyPath" Type="System.String" />
        <Parameter Name="numComponents" Type="System.String&amp;" RefType="out" />
        <Parameter Name="componentInfo" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="assemblyPath">アセンブリへのパス。</param>
        <param name="numComponents">このメソッドが戻るとき、このパラメーターには、アセンブリ内のコンポーネントの数が含まれています。</param>
        <param name="componentInfo">このメソッドが戻るとき、このパラメーターには、コンポーネントに関する情報が含まれています。</param>
        <summary>アセンブリからコンポーネント情報を取得します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドはクラス id (Clsid) を識別するには、COM + カタログとは登録前に、DLL 内のコンポーネントの Progid。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="assemblyPath" />空の文字列は、空白のみが含まれていますかで定義されている 1 つまたは複数の無効な文字が含まれています<see cref="F:System.IO.Path.InvalidPathChars" />です。  
  
 または  
  
 システムは、絶対パスを取得できませんでした。</exception>
        <exception cref="T:System.Security.SecurityException">呼び出し元に、必要なアクセス許可がありません。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="assemblyPath" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.NotSupportedException">
          <paramref name="assemblyPath" /> にコロン (":") が含まれています。</exception>
        <exception cref="T:System.IO.PathTooLongException">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。 たとえば、Windows ベースのプラットフォームでは、パスは 248 文字未満、ファイル名は 260 文字未満にする必要があります。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">アンマネージ コードへのアクセスに必要なアクセス許可。 関連する列挙。<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="InstallAssembly">
      <MemberSignature Language="C#" Value="public void InstallAssembly (string asmpath, string parname, string appname);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InstallAssembly(string asmpath, string parname, string appname) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.ComManagedImportUtil.InstallAssembly(System.String,System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asmpath" Type="System.String" />
        <Parameter Name="parname" Type="System.String" />
        <Parameter Name="appname" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="asmpath">アセンブリのパス。</param>
        <param name="parname">COM + パーティション名。</param>
        <param name="appname">COM + アプリケーション名。</param>
        <summary>COM + アプリケーションにアセンブリをインストールします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.EnterpriseServices.Internal.ComManagedImportUtil.InstallAssembly%2A>呼び出し<xref:System.EnterpriseServices.RegistrationHelper.InstallAssembly%2A?displayProperty=nameWithType>、次の手順を実行します。  
  
1.  アセンブリの登録です。  
  
2.  タイプ ライブラリの生成。  
  
3.  タイプ ライブラリの登録です。  
  
4.  指定したアプリケーションの下にあるタイプ ライブラリのインストール。  
  
5.  タイプ ライブラリに含まれているコンポーネントの構成。  
  
 このメソッドでは、呼び出し元に、ローカル コンピューターで管理者特権が必要です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">呼び出しチェーン内の呼び出し元には、アンマネージ コードへのアクセス許可がありません。</exception>
        <exception cref="T:System.EnterpriseServices.RegistrationException">入力アセンブリに厳密な名前がありません。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">アンマネージ コードへのアクセスに必要なアクセス許可。 関連する列挙。<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <permission cref="T:System.Security.Permissions.RegistryPermission">レジストリにアクセスする権限です。 関連する列挙。<see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
      </Docs>
    </Member>
  </Members>
</Type>
