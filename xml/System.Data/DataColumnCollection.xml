<Type Name="DataColumnCollection" FullName="System.Data.DataColumnCollection">
  <TypeSignature Language="C#" Value="public sealed class DataColumnCollection : System.Data.InternalDataCollectionBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DataColumnCollection extends System.Data.InternalDataCollectionBase" />
  <TypeSignature Language="DocId" Value="T:System.Data.DataColumnCollection" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.InternalDataCollectionBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("CollectionChanged")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.ColumnsCollectionEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>コレクションを表します<see cref="T:System.Data.DataColumn" />オブジェクトに対する、<see cref="T:System.Data.DataTable" />です。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.DataColumnCollection>のスキーマを定義、 <xref:System.Data.DataTable>、各データの種類を決定し、<xref:System.Data.DataColumn>含めることができます。 アクセスすることができます、<xref:System.Data.DataColumnCollection>を通じて、<xref:System.Data.DataTable.Columns%2A>のプロパティ、<xref:System.Data.DataTable>オブジェクト。  
  
 <xref:System.Data.DataColumnCollection>を使用して、<xref:System.Data.DataColumnCollection.Add%2A>と<xref:System.Data.DataColumnCollection.Remove%2A>を挿入および削除メソッド<xref:System.Data.DataColumn>オブジェクト。 使用して、<xref:System.Data.InternalDataCollectionBase.Count%2A>を決定するプロパティ数<xref:System.Data.DataColumn>オブジェクトがコレクションに存在します。 使用して、<xref:System.Data.DataColumnCollection.Contains%2A>メソッドを指定したインデックスまたは列の名前がコレクション内に存在するかどうかを確認します。  
  
   
  
## Examples  
 次の例のコレクションを反復処理<xref:System.Data.DataColumn>オブジェクトし、コレクション内の各列のさまざまなプロパティを出力します。  
  
 [!code-csharp[Classic WebData DataColumnCollection Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumnCollection Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumnCollection Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumnCollection Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>この型は、マルチ スレッドの読み取り操作に対して安全です。 すべての書き込み操作を同期する必要があります。</threadsafe>
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public System.Data.DataColumn Add ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataColumn Add() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumnCollection.Add" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataColumn</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>作成し、追加、<see cref="T:System.Data.DataColumn" />オブジェクトを<see cref="T:System.Data.DataColumnCollection" />です。</summary>
        <returns>新しく作成された <see cref="T:System.Data.DataColumn" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 既定の名前 ("Column1"、"Column2") は、列に付与されます。  
  
 コレクションが追加または削除、列によって正常に変更された場合、<xref:System.Data.DataColumnCollection.CollectionChanged>イベントが発生します。  
  
   
  
## Examples  
 次の例を作成し、新しく追加<xref:System.Data.DataColumn>を<xref:System.Data.DataColumnCollection>の<xref:System.Data.DataTable>です。  
  
 [!code-vb[Classic WebData DataColumnCollection.Add5 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumnCollection.Add5 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Data.DataColumn column);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Data.DataColumn column) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumnCollection.Add(System.Data.DataColumn)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Data.DataColumn" />
      </Parameters>
      <Docs>
        <param name="column">追加する <see cref="T:System.Data.DataColumn" />。</param>
        <summary>作成し、指定した追加<see cref="T:System.Data.DataColumn" />オブジェクトを<see cref="T:System.Data.DataColumnCollection" />です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コレクションが追加または削除、列によって正常に変更された場合、<xref:System.Data.DataColumnCollection.CollectionChanged>イベントが発生します。  
  
   
  
## Examples  
 次の例では追加、<xref:System.Data.DataColumn>を<xref:System.Data.DataColumnCollection>です。  
  
 [!code-vb[Classic WebData DataColumnCollection.Add Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumnCollection.Add Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="column" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException">列は、このコレクションに、または別のコレクションに既に属しています。</exception>
        <exception cref="T:System.Data.DuplicateNameException">既にコレクションには、指定した名前の列があります。 (比較では、大文字と小文字を区別しません。)</exception>
        <exception cref="T:System.Data.InvalidExpressionException">式が正しくありません。 参照してください、<see cref="P:System.Data.DataColumn.Expression" />プロパティで式を作成する方法の詳細。</exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public System.Data.DataColumn Add (string columnName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataColumn Add(string columnName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumnCollection.Add(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataColumn</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="columnName">列の名前。</param>
        <summary>作成し、追加、<see cref="T:System.Data.DataColumn" />に指定した名前を持つオブジェクト、<see cref="T:System.Data.DataColumnCollection" />です。</summary>
        <returns>新しく作成された <see cref="T:System.Data.DataColumn" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 既定では、<xref:System.Data.DataColumn.DataType%2A>新しい列は`string`します。  
  
 場合`null`または空の文字列 ("") が渡されるで名前、既定の名前 ("Column1"、"Column2") は、特定の列にします。  
  
 使用して、<xref:System.Data.DataColumnCollection.Contains%2A>提案された名前の列がコレクションに既に存在するかどうかを調べます。  
  
 コレクションが追加または削除、列によって正常に変更された場合、<xref:System.Data.DataColumnCollection.CollectionChanged>イベントが発生します。  
  
   
  
## Examples  
 次の例を作成し、新しく追加<xref:System.Data.DataColumn>を<xref:System.Data.DataColumnCollection>の<xref:System.Data.DataTable>です。  
  
 [!code-vb[Classic WebData DataColumnCollection.Add4 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumnCollection.Add4 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.DuplicateNameException">既にコレクションには、指定した名前の列があります。 (比較では、大文字と小文字を区別しません。)</exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public System.Data.DataColumn Add (string columnName, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataColumn Add(string columnName, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumnCollection.Add(System.String,System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataColumn</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="columnName"><see cref="P:System.Data.DataColumn.ColumnName" />列を作成するときに使用します。</param>
        <param name="type"><see cref="P:System.Data.DataColumn.DataType" />新しい列の。</param>
        <summary>作成し、追加、<see cref="T:System.Data.DataColumn" />オブジェクトを指定した名前を指定し、型を持つ、<see cref="T:System.Data.DataColumnCollection" />です。</summary>
        <returns>新しく作成された <see cref="T:System.Data.DataColumn" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 場合`null`または空の文字列 ("") が渡されるで名前、既定の名前 ("Column1"、"Column2") は、特定の列にします。  
  
 使用して、<xref:System.Data.DataColumnCollection.Contains%2A>提案された名前の列がコレクションに既に存在するかどうかを調べます。  
  
 コレクションが追加または削除、列によって正常に変更された場合、<xref:System.Data.DataColumnCollection.CollectionChanged>イベントが発生します。  
  
   
  
## Examples  
 次の例を作成し、新しく追加<xref:System.Data.DataColumn>を<xref:System.Data.DataColumnCollection>の<xref:System.Data.DataTable>です。  
  
 [!code-vb[Classic WebData DataColumnCollection.Add2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumnCollection.Add2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.DuplicateNameException">既にコレクションには、指定した名前の列があります。 (比較では、大文字と小文字を区別しません。)</exception>
        <exception cref="T:System.Data.InvalidExpressionException">式が正しくありません。 参照してください、<see cref="P:System.Data.DataColumn.Expression" />プロパティで式を作成する方法の詳細。</exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public System.Data.DataColumn Add (string columnName, Type type, string expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataColumn Add(string columnName, class System.Type type, string expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumnCollection.Add(System.String,System.Type,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataColumn</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="expression" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="columnName">列を作成するときに使用する名前です。</param>
        <param name="type"><see cref="P:System.Data.DataColumn.DataType" />新しい列の。</param>
        <param name="expression">代入する式、<see cref="P:System.Data.DataColumn.Expression" />プロパティです。</param>
        <summary>作成し、追加、<see cref="T:System.Data.DataColumn" />オブジェクトを名前、型、および指定する式を持つ、<see cref="T:System.Data.DataColumnCollection" />です。</summary>
        <returns>新しく作成された <see cref="T:System.Data.DataColumn" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 場合`null`または空の文字列 ("") が渡されるで名前、既定の名前 ("Column1"、"Column2") は、特定の列にします。  
  
 使用して、<xref:System.Data.DataColumnCollection.Contains%2A>提案された名前の列がコレクションに既に存在するかどうかを調べます。  
  
 コレクションが追加または削除、列によって正常に変更された場合、<xref:System.Data.DataColumnCollection.CollectionChanged>イベントが発生します。  
  
   
  
## Examples  
 次の例を作成し、新しく追加<xref:System.Data.DataColumn>を<xref:System.Data.DataColumnCollection>の<xref:System.Data.DataTable>です。  
  
 [!code-vb[Classic WebData DataColumnCollection.Add1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumnCollection.Add1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.DuplicateNameException">既にコレクションには、指定した名前の列があります。 (比較では、大文字と小文字を区別しません。)</exception>
        <exception cref="T:System.Data.InvalidExpressionException">式が正しくありません。 参照してください、<see cref="P:System.Data.DataColumn.Expression" />プロパティで式を作成する方法の詳細。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.Data.DataColumn[] columns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.Data.DataColumn[] columns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumnCollection.AddRange(System.Data.DataColumn[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columns" Type="System.Data.DataColumn[]" />
      </Parameters>
      <Docs>
        <param name="columns">配列<see cref="T:System.Data.DataColumn" />コレクションに追加するオブジェクト。</param>
        <summary>指定した要素をコピー<see cref="T:System.Data.DataColumn" />コレクションの末尾までの配列。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRemove">
      <MemberSignature Language="C#" Value="public bool CanRemove (System.Data.DataColumn column);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanRemove(class System.Data.DataColumn column) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumnCollection.CanRemove(System.Data.DataColumn)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Data.DataColumn" />
      </Parameters>
      <Docs>
        <param name="column">A<see cref="T:System.Data.DataColumn" />コレクション内で。</param>
        <summary>特定の列をコレクションから削除できるかどうかを確認します。</summary>
        <returns>
          <see langword="true" />場合は、列を削除することができます。 <see langword="false" />もし  
  
-   <paramref name="column" /> パラメーターが <see langword="null" /> です。  
  
-   列は、このコレクションには属していません。  
  
-   列は、リレーションシップの一部です。  
  
-   別の列の式は、この列に依存します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.DataColumnCollection.CanRemove%2A>メソッドが戻る前にいくつかのチェックを実行、`true`または`false`結果。 これには、次が含まれます: かどうか、列が存在する、テーブルに属しているまたは制約またはリレーションシップに関与します。  
  
 使用して、<xref:System.Data.DataColumnCollection.CanRemove%2A>メソッドをコレクションからすべての列を削除しようとする前にします。 使用することも、<xref:System.Data.DataColumnCollection.Contains%2A>メソッドを削除しようとする前に、特定の列が存在するかどうかを確認します。  
  
   
  
## Examples  
 次の例を使用して、<xref:System.Data.DataColumnCollection.Contains%2A>特定の列がコレクションで見つかったかどうかを調べます。 場合、検出された、<xref:System.Data.DataColumnCollection.CanRemove%2A>メソッドは、列を削除できるかどうかをテストします。 その列を削除するため場合、<xref:System.Data.DataColumnCollection.Remove%2A>メソッドです。  
  
 [!code-csharp[Classic WebData DataColumnCollection.CanRemove Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumnCollection.CanRemove Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumnCollection.CanRemove Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumnCollection.CanRemove Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumnCollection.Clear" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>列のコレクションをクリアします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コレクションが追加または削除、列によって正常に変更された場合、<xref:System.Data.DataColumnCollection.CollectionChanged>イベントが発生します。  
  
   
  
## Examples  
 次の例では、列のコレクションをクリアします。  
  
 [!code-csharp[Classic WebData DataColumnCollection.Clear Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumnCollection.Clear Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumnCollection.Clear Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumnCollection.Clear Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CollectionChanged">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.CollectionChangeEventHandler CollectionChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.CollectionChangeEventHandler CollectionChanged" />
      <MemberSignature Language="DocId" Value="E:System.Data.DataColumnCollection.CollectionChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.CollectionChangeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>追加または列を削除して、列のコレクションが変更されたときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Data.DataColumnCollection.Contains%2A>と<xref:System.Data.DataColumnCollection.CanRemove%2A>列が存在し、削除できるかどうかを決定するメソッド。  
  
   
  
## Examples  
 次の例では、CollectionChanged イベントのイベント ハンドラーを追加します。  
  
 [!code-csharp[Classic WebData DataColumnCollection.CollectionChanged Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumnCollection.CollectionChanged Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumnCollection.CollectionChanged Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumnCollection.CollectionChanged Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumnCollection.Contains(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><see cref="P:System.Data.DataColumn.ColumnName" />検索する列の。</param>
        <summary>コレクションに指定した名前の列が含まれているかどうかを確認します。</summary>
        <returns>
          <see langword="true" />この名前の列が存在する場合それ以外の場合、<see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Data.DataColumnCollection.Contains%2A>列に対して追加の操作を実行する前に、列の存在を確認するメソッド。 このメソッドを返します`false`と同じ名前が異なる名前空間で 2 つ以上の列がある場合。 呼び出しは、1 つの列に列名を照合するときに、あいまいさがある場合に成功しません。  
  
   
  
## Examples  
 次の例では、<xref:System.Data.DataColumnCollection.Contains%2A>メソッドおよび<xref:System.Data.DataColumnCollection.CanRemove%2A>列を削除するかどうかを調べます。 場合は、列が削除されます。  
  
 [!code-csharp[Classic WebData DataColumnCollection.Contains Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumnCollection.Contains Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumnCollection.Contains Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumnCollection.Contains Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Data.DataColumn[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Data.DataColumn[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumnCollection.CopyTo(System.Data.DataColumn[],System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Data.DataColumn[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">配列<see cref="T:System.Data.DataColumn" />コレクションをコピーするオブジェクト。</param>
        <param name="index">コピーの開始位置を示すインデックス。</param>
        <summary>既存の配列、配列内の指定したインデックス位置にコレクション全体をコピーします。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Data.DataColumn column);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Data.DataColumn column) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumnCollection.IndexOf(System.Data.DataColumn)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Data.DataColumn" />
      </Parameters>
      <Docs>
        <param name="column">返される列の名前。</param>
        <summary>名前で指定された列のインデックスを取得します。</summary>
        <returns>指定された列のインデックス<paramref name="column" />は、それ以外の場合は-1。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.DataColumnCollection.IndexOf%2A>メソッドは、大文字小文字を区別することはありません。  
  
   
  
## Examples  
 次の例では、<xref:System.Data.DataColumnCollection.Contains%2A>で指定された列が存在するかどうかを判断するメソッド、<xref:System.Data.DataColumnCollection>です。 その場合、<xref:System.Data.DataColumnCollection.IndexOf%2A>メソッドは、列のインデックスを返します。  
  
 [!code-csharp[Classic WebData DataColumnCollection.IndexOf Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumnCollection.IndexOf Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumnCollection.IndexOf Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumnCollection.IndexOf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (string columnName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(string columnName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumnCollection.IndexOf(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="columnName">検索する列の名前。</param>
        <summary>指定された名前 (名前は大文字と小文字が区別されません) 列のインデックスを取得します。</summary>
        <returns>指定された名前、または列がコレクションに存在しない場合は-1 を持つ列の 0 から始まるインデックス。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Data.DataColumn this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.DataColumn Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumnCollection.Item(System.Int32)" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataColumn</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">返される列の 0 から始まるインデックス。</param>
        <summary>取得、<see cref="T:System.Data.DataColumn" />コレクション内の指定したインデックス位置からです。</summary>
        <value>指定されたインデックス位置にある <see cref="T:System.Data.DataColumn" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.DataColumnCollection.Contains%2A>メソッドは、列の存在テストを使用することができます。 これによりを使用しようとする前に<xref:System.Data.DataColumnCollection.Item%2A>です。  
  
   
  
## Examples  
 次の例では、<xref:System.Data.DataColumnCollection.Item%2A>を印刷する、<xref:System.Data.DataColumn.ColumnName%2A>の値、<xref:System.Data.DataColumn>インデックスによって指定されたオブジェクト。 この例では、 <xref:System.Data.DataTable> System.Windows.Forms.DataGrid コントロールが含まれています。  
  
 [!code-csharp[Classic WebData DataColumnCollection.this Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumnCollection.this Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumnCollection.this Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumnCollection.this Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">インデックス値は、コレクション内の項目の数を超えています。</exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Data.DataColumn this[string name] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.DataColumn Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumnCollection.Item(System.String)" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataColumn</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><see cref="P:System.Data.DataColumn.ColumnName" />返される列の。</param>
        <summary>取得、<see cref="T:System.Data.DataColumn" />コレクションから指定した名前を持つ。</summary>
        <value><see cref="T:System.Data.DataColumn" /> 、指定したコレクションで<see cref="P:System.Data.DataColumn.ColumnName" />です。 それ以外の場合、null の場合は値、<see cref="T:System.Data.DataColumn" />存在しません。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.DataColumnCollection.Item%2A>列名を検索するときは、条件付きで大文字小文字を区別します。 たとえば、1 つ<xref:System.Data.DataColumn>"mydatacolumn"の名前は"Mydatacolumn"という名前別、列のいずれかの検索に使用する文字列が大文字と見なされるとします。 ただし、"mydatacolumn"が存在する"Mydatacolumn"がない場合は、検索文字列が見なされるに大文字と小文字です。  
  
   
  
## Examples  
 次の例では、<xref:System.Data.DataColumnCollection.Item%2A>を印刷する、<xref:System.Data.DataColumn.DataType%2A>の値、<xref:System.Data.DataColumn>インデックスによって指定されたオブジェクト。  
  
 [!code-csharp[Classic WebData DataColumnCollection.this1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumnCollection.this1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumnCollection.this1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumnCollection.this1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="List">
      <MemberSignature Language="C#" Value="protected override System.Collections.ArrayList List { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ArrayList List" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumnCollection.List" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Data.DataColumn column);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Data.DataColumn column) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumnCollection.Remove(System.Data.DataColumn)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Data.DataColumn" />
      </Parameters>
      <Docs>
        <param name="column">削除する <see cref="T:System.Data.DataColumn" />。</param>
        <summary>指定した <see cref="T:System.Data.DataColumn" /> オブジェクトをコレクションから削除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コレクションが追加または削除、列によって正常に変更された場合、<xref:System.Data.DataColumnCollection.CollectionChanged>イベントが発生します。  
  
   
  
## Examples  
 次の例では、<xref:System.Data.DataColumnCollection.Contains%2A>メソッドの指定した列が存在するかどうかを確認します。 その場合、<xref:System.Data.DataColumnCollection.Item%2A>プロパティは、列を返します。 <xref:System.Data.DataColumnCollection.CanRemove%2A>メソッドし、チェック、列を削除できるかどうかがあれば、<xref:System.Data.DataColumnCollection.Remove%2A>メソッドでは、それを削除します。  
  
 [!code-csharp[Classic WebData DataColumnCollection.Remove Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumnCollection.Remove Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumnCollection.Remove Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumnCollection.Remove Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="column" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException">列は、このコレクションには属していません。  
  
 または  
  
 列は、リレーションシップの一部です。  
  
 または  
  
 別の列の式は、この列に依存します。</exception>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumnCollection.Remove(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">削除する列の名前。</param>
        <summary>削除、<see cref="T:System.Data.DataColumn" />をコレクションから指定した名前を持つオブジェクト。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コレクションが追加または削除、列によって正常に変更された場合、<xref:System.Data.DataColumnCollection.CollectionChanged>イベントが発生します。  
  
   
  
## Examples  
 次の例を使用して、<xref:System.Data.DataColumnCollection.Contains%2A>特定の列がコレクションで見つかったかどうかを調べます。 見つかった場合、<xref:System.Data.DataColumnCollection.CanRemove%2A>メソッドは、列を削除できるかどうかをテストします。 その列を削除するため場合、<xref:System.Data.DataColumnCollection.Remove%2A>メソッドです。  
  
 [!code-csharp[Classic WebData DataColumnCollection.Remove1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumnCollection.Remove1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumnCollection.Remove1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumnCollection.Remove1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">コレクションには、指定した名前の列はありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumnCollection.RemoveAt(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">削除する列のインデックス。</param>
        <summary>コレクションから指定したインデックス位置にある列を削除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コレクションが追加または削除、列によって正常に変更された場合、<xref:System.Data.DataColumnCollection.CollectionChanged>イベントが発生します。  
  
   
  
## Examples  
 次の例を使用して、<xref:System.Data.DataColumnCollection.Contains%2A>特定の列がコレクションで見つかったかどうかを調べます。 見つかった場合、<xref:System.Data.DataColumnCollection.CanRemove%2A>メソッドは、列を削除できるかどうかをテストします。 その列を削除するため場合、<xref:System.Data.DataColumnCollection.RemoveAt%2A>メソッドです。  
  
 [!code-vb[Classic WebData DataColumnCollection.RemoveAt Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumnCollection.RemoveAt Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">コレクションには、指定したインデックス位置の列がありません。</exception>
      </Docs>
    </Member>
  </Members>
</Type>
