<Type Name="ConfigurationProperty" FullName="System.Configuration.ConfigurationProperty">
  <TypeSignature Language="C#" Value="public sealed class ConfigurationProperty" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ConfigurationProperty extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.ConfigurationProperty" />
  <AssemblyInfo>
    <AssemblyName>System.Configuration</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>属性または構成要素の子を表します。 このクラスは継承できません。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 場合は、単純な<xref:System.Configuration.ConfigurationElement>、ように、`CustomSection`次の例に示すように、<xref:System.Configuration.ConfigurationProperty>オブジェクトなどの属性を表す`fileName`です。  
  
 サブセクションのインスタンスを含むセクションなどのより複雑な構成要素の場合`authentication`、<xref:System.Configuration.ConfigurationProperty>オブジェクトが表すことができる<xref:System.Configuration.ConfigurationElement>オブジェクトおよび属性です。  
  
 <xref:System.Configuration.ConfigurationPropertyCollection>クラスのコレクションを表す、<xref:System.Configuration.ConfigurationProperty>いずれかの属性を保持できるオブジェクトまたは<xref:System.Configuration.ConfigurationElement>構成要素のオブジェクト。  
  
 <xref:System.Configuration.ConfigurationProperty>クラスは、個々 の構成設定を表します。 このクラスを取得または名前、型、および特定の構成のエンティティ (属性または要素) の既定値を設定し、属性が必要し、要素のキーとしてまたは、既定要素のコレクションを表すかどうかを指定できます。  
  
   
  
## Examples  
  
1.  次のコード例を使用する方法を示しています、<xref:System.Configuration.ConfigurationProperty>カスタム セクションを作成する場合。  
  
 [!code-csharp[System.Configuration.ConfigurationProperty#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationProperty/CS/ConfigurationProperty.cs#1)]
 [!code-vb[System.Configuration.ConfigurationProperty#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationProperty/VB/ConfigurationProperty.vb#1)]  
  
 次は、前の例のコードで使用される構成ファイルの抜粋です。  
  
  
  
 次の例では、コードで、前のセクションを作成する方法を示します。  
  
 [!code-csharp[System.Configuration.ConfigurationProperty#30](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationProperty/CS/ConfigurationProperty.cs#30)]
 [!code-vb[System.Configuration.ConfigurationProperty#30](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationProperty/VB/ConfigurationProperty.vb#30)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>各<see cref="T:System.Configuration.ConfigurationElement" />オブジェクトを作成、内部<see cref="T:System.Configuration.ConfigurationPropertyCollection" />のコレクション<see cref="T:System.Configuration.ConfigurationProperty" />要素の属性または子要素のコレクションを表すオブジェクト。  
  
 カスタマイズが不可能な情報と機能に含まれる、<see cref="T:System.Configuration.ElementInformation" />オブジェクトによって提供される、<see cref="P:System.Configuration.ConfigurationElement.ElementInformation" />プロパティです。  
  
 カスタム構成要素を作成するのに、プログラムまたは宣言 (属性付き) のコーディング モデルを使用することができます。  
  
-   プログラムによるモデルです。 このモデルでは、各要素の属性を取得またはその値を設定し、基になる内部プロパティ バッグに追加のプロパティを作成することが必要な<see cref="T:System.Configuration.ConfigurationElement" />基本クラスです。  
  
-   宣言型モデル。 この単純なモデルとも呼ばれる属性付きのモデルでは、プロパティを使用して要素の属性を定義し、属性で装飾します。 これらの属性は、プロパティの型とその既定値は、ASP.NET 構成システムを指示します。 リフレクションでは、取得した、この情報では、ASP.NET 構成システムは、要素にするためのプロパティ オブジェクトを作成し、必要な初期化を実行します。</para>
    </block>
    <forInternalUseOnly />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConfigurationProperty (string name, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="name">構成のエンティティの名前。</param>
        <param name="type">構成のエンティティの型。</param>
        <summary><see cref="T:System.Configuration.ConfigurationProperty" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConfigurationProperty (string name, Type type, object default_value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, class System.Type type, object default_value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type,System.Object)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="defaultValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">構成のエンティティの名前。</param>
        <param name="type">構成のエンティティの型。</param>
        <param name="default_value">To be added.</param>
        <summary><see cref="T:System.Configuration.ConfigurationProperty" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 インスタンス化するときに、<xref:System.Configuration.ConfigurationProperty>オブジェクトこのコンス トラクターを使用して、<xref:System.Configuration.ConfigurationProperty.IsRequired%2A>と<xref:System.Configuration.ConfigurationProperty.IsKey%2A>プロパティに設定されます`false`です。 さらに、このコンス トラクターで作成されたインスタンスは、既定のコレクション キー プロパティとしては機能しません。  
  
   
  
## Examples  
 次のコード例を使用する方法を示しています、<xref:System.Configuration.ConfigurationProperty.%23ctor%28System.String%2CSystem.Type%2CSystem.Object%29?displayProperty=nameWithType>構成プロパティ オブジェクトをインスタンス化するコンス トラクターです。  
  
 [!code-csharp[System.Configuration.ConfigurationProperty#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationProperty/CS/ConfigurationProperty.cs#2)]
 [!code-vb[System.Configuration.ConfigurationProperty#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationProperty/VB/ConfigurationProperty.vb#2)]  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConfigurationProperty (string name, Type type, object default_value, System.Configuration.ConfigurationPropertyOptions flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, class System.Type type, object default_value, valuetype System.Configuration.ConfigurationPropertyOptions flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type,System.Object,System.Configuration.ConfigurationPropertyOptions)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="defaultValue" Type="System.Object" />
        <Parameter Name="options" Type="System.Configuration.ConfigurationPropertyOptions" />
      </Parameters>
      <Docs>
        <param name="name">構成のエンティティの名前。</param>
        <param name="type">構成のエンティティの型。</param>
        <param name="default_value">To be added.</param>
        <param name="flags">To be added.</param>
        <summary><see cref="T:System.Configuration.ConfigurationProperty" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例は、使用する方法を示しています。<xref:System.Configuration.ConfigurationProperty.%23ctor%28System.String%2CSystem.Type%2CSystem.Object%2CSystem.Configuration.ConfigurationPropertyOptions%29?displayProperty=nameWithType>構成プロパティ オブジェクトをインスタンス化するコンス トラクターです。  
  
 [!code-csharp[System.Configuration.ConfigurationProperty#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationProperty/CS/ConfigurationProperty.cs#3)]
 [!code-vb[System.Configuration.ConfigurationProperty#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationProperty/VB/ConfigurationProperty.vb#3)]  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConfigurationProperty (string name, Type type, object default_value, System.ComponentModel.TypeConverter converter, System.Configuration.ConfigurationValidatorBase validation, System.Configuration.ConfigurationPropertyOptions flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, class System.Type type, object default_value, class System.ComponentModel.TypeConverter converter, class System.Configuration.ConfigurationValidatorBase validation, valuetype System.Configuration.ConfigurationPropertyOptions flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type,System.Object,System.ComponentModel.TypeConverter,System.Configuration.ConfigurationValidatorBase,System.Configuration.ConfigurationPropertyOptions)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="defaultValue" Type="System.Object" />
        <Parameter Name="typeConverter" Type="System.ComponentModel.TypeConverter" />
        <Parameter Name="validator" Type="System.Configuration.ConfigurationValidatorBase" />
        <Parameter Name="options" Type="System.Configuration.ConfigurationPropertyOptions" />
      </Parameters>
      <Docs>
        <param name="name">構成のエンティティの名前。</param>
        <param name="type">構成のエンティティの型。</param>
        <param name="default_value">To be added.</param>
        <param name="converter">To be added.</param>
        <param name="validation">To be added.</param>
        <param name="flags">To be added.</param>
        <summary><see cref="T:System.Configuration.ConfigurationProperty" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例を呼び出すときに使用するパラメーターの種類を示しています、<xref:System.Configuration.ConfigurationProperty.%23ctor%28System.String%2CSystem.Type%2CSystem.Object%2CSystem.ComponentModel.TypeConverter%2CSystem.Configuration.ConfigurationValidatorBase%2CSystem.Configuration.ConfigurationPropertyOptions%29?displayProperty=nameWithType>コンス トラクターです。  
  
 [!code-csharp[System.Configuration.ConfigurationProperty#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationProperty/CS/ConfigurationProperty.cs#4)]
 [!code-vb[System.Configuration.ConfigurationProperty#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationProperty/VB/ConfigurationProperty.vb#4)]  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConfigurationProperty (string name, Type type, object default_value, System.ComponentModel.TypeConverter converter, System.Configuration.ConfigurationValidatorBase validation, System.Configuration.ConfigurationPropertyOptions flags, string description);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, class System.Type type, object default_value, class System.ComponentModel.TypeConverter converter, class System.Configuration.ConfigurationValidatorBase validation, valuetype System.Configuration.ConfigurationPropertyOptions flags, string description) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type,System.Object,System.ComponentModel.TypeConverter,System.Configuration.ConfigurationValidatorBase,System.Configuration.ConfigurationPropertyOptions,System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="defaultValue" Type="System.Object" />
        <Parameter Name="typeConverter" Type="System.ComponentModel.TypeConverter" />
        <Parameter Name="validator" Type="System.Configuration.ConfigurationValidatorBase" />
        <Parameter Name="options" Type="System.Configuration.ConfigurationPropertyOptions" />
        <Parameter Name="description" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">構成のエンティティの名前。</param>
        <param name="type">構成のエンティティの型。</param>
        <param name="default_value">To be added.</param>
        <param name="converter">To be added.</param>
        <param name="validation">To be added.</param>
        <param name="flags">To be added.</param>
        <param name="description">構成のエンティティの説明です。</param>
        <summary><see cref="T:System.Configuration.ConfigurationProperty" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例を使用する方法を示しています、<xref:System.Configuration.ConfigurationProperty.%23ctor%28System.String%2CSystem.Type%2CSystem.Object%2CSystem.ComponentModel.TypeConverter%2CSystem.Configuration.ConfigurationValidatorBase%2CSystem.Configuration.ConfigurationPropertyOptions%2CSystem.String%29?displayProperty=nameWithType>構成プロパティ オブジェクトをインスタンス化するコンス トラクターです。  
  
 [!code-csharp[System.Configuration.ConfigurationProperty#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationProperty/CS/ConfigurationProperty.cs#4)]
 [!code-vb[System.Configuration.ConfigurationProperty#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationProperty/VB/ConfigurationProperty.vb#4)]  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Converter">
      <MemberSignature Language="C#" Value="public System.ComponentModel.TypeConverter Converter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.TypeConverter Converter" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ConfigurationProperty.Converter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得、<see cref="T:System.ComponentModel.TypeConverter" />を使用してこの変換<see cref="T:System.Configuration.ConfigurationProperty" />構成ファイルに書き込むための XML 表現にします。</summary>
        <value>A<see cref="T:System.ComponentModel.TypeConverter" />を使用してこの変換<see cref="T:System.Configuration.ConfigurationProperty" />構成ファイルに書き込むための XML 表現にします。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例を使用する方法を示しています、<xref:System.Configuration.ConfigurationProperty.Converter%2A>を取得するプロパティ、<xref:System.ComponentModel.TypeConverter>構成プロパティの指定したオブジェクトの。  
  
 [!code-csharp[System.Configuration.ConfigurationProperty#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationProperty/CS/ConfigurationProperty.cs#5)]
 [!code-vb[System.Configuration.ConfigurationProperty#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationProperty/VB/ConfigurationProperty.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">これは、<see cref="T:System.Configuration.ConfigurationProperty" />変換することはできません。</exception>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="DefaultValue">
      <MemberSignature Language="C#" Value="public object DefaultValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DefaultValue" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ConfigurationProperty.DefaultValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この既定値を取得<see cref="T:System.Configuration.ConfigurationProperty" />プロパティです。</summary>
        <value><see cref="T:System.Object" />で指定された型にキャストできる、<see cref="P:System.Configuration.ConfigurationProperty.Type" />プロパティです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 既定値の新しい<xref:System.Configuration.ConfigurationProperty>オブジェクトは、コンス トラクターに渡されます。 同じオブジェクトによって返される、<xref:System.Configuration.ConfigurationProperty.DefaultValue%2A>プロパティです。  
  
   
  
## Examples  
 次のコード例は、取得する方法を示します、<xref:System.Configuration.ConfigurationProperty.DefaultValue%2A>指定したプロパティを設定します。  
  
 [!code-csharp[System.Configuration.ConfigurationProperty#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationProperty/CS/ConfigurationProperty.cs#6)]
 [!code-vb[System.Configuration.ConfigurationProperty#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationProperty/VB/ConfigurationProperty.vb#6)]  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public string Description { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ConfigurationProperty.Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>関連付けられている説明を取得、<see cref="T:System.Configuration.ConfigurationProperty" />です。</summary>
        <value>A<see langword="string" />プロパティを説明する値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例は、取得する方法を示します、<xref:System.Configuration.ConfigurationProperty.Description%2A>指定したプロパティを設定します。  
  
 [!code-csharp[System.Configuration.ConfigurationProperty#11](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationProperty/CS/ConfigurationProperty.cs#11)]
 [!code-vb[System.Configuration.ConfigurationProperty#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationProperty/VB/ConfigurationProperty.vb#11)]  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="IsAssemblyStringTransformationRequired">
      <MemberSignature Language="C#" Value="public bool IsAssemblyStringTransformationRequired { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAssemblyStringTransformationRequired" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ConfigurationProperty.IsAssemblyStringTransformationRequired" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>以前のバージョンのシリアル化されるときに、構成プロパティのアセンブリ名の変換が必要かどうかを示す、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]です。</summary>
        <value>
          <see langword="true" />アセンブリ名の変換が必要な場合それ以外の場合、<see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用する<xref:System.Configuration.ConfigurationPropertyOptions>を含むコンス トラクターを呼び出すときに、このプロパティを設定する、<xref:System.Configuration.ConfigurationPropertyOptions>パラメーター。 プロパティにはアセンブリ名の文字列が含まれていない場合、この値は無視されます。  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="IsDefaultCollection">
      <MemberSignature Language="C#" Value="public bool IsDefaultCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDefaultCollection" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ConfigurationProperty.IsDefaultCollection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>プロパティが要素の既定のコレクションであるかどうかを示す値を取得します。</summary>
        <value>
          <see langword="true" />プロパティが、要素の既定のコレクションである場合それ以外の場合、<see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 プロパティは、コレクションではない場合、この値は無視されます。  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="IsKey">
      <MemberSignature Language="C#" Value="public bool IsKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsKey" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ConfigurationProperty.IsKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>示す値を取得するかどうかこの<see cref="T:System.Configuration.ConfigurationProperty" />のキーを格納しているは<see cref="T:System.Configuration.ConfigurationElement" />オブジェクト。</summary>
        <value>
          <see langword="true" />この場合<see cref="T:System.Configuration.ConfigurationProperty" />オブジェクトを含む要素のキーは、それ以外の場合、<see langword="false" />です。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 新しいを定義する<xref:System.Configuration.ConfigurationProperty>オブジェクトを実装するときに含まれる要素のキーを<xref:System.Configuration.ConfigurationElement>要素。 このフラグを使用しない場合、<xref:System.Configuration.ConfigurationProperty.IsKey%2A>が返される`false`です。  
  
   
  
## Examples  
 次のコード例は、取得する方法を示します、<xref:System.Configuration.ConfigurationProperty.IsKey%2A>指定したプロパティのプロパティです。  
  
 [!code-csharp[System.Configuration.ConfigurationProperty#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationProperty/CS/ConfigurationProperty.cs#7)]
 [!code-vb[System.Configuration.ConfigurationProperty#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationProperty/VB/ConfigurationProperty.vb#7)]  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="IsRequired">
      <MemberSignature Language="C#" Value="public bool IsRequired { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRequired" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ConfigurationProperty.IsRequired" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>示す値を取得するかどうかこの<see cref="T:System.Configuration.ConfigurationProperty" />が必要です。</summary>
        <value>
          <see langword="true" />場合、<see cref="T:System.Configuration.ConfigurationProperty" />は必須です。 それ以外の場合、<see langword="false" />です。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例は、取得する方法を示します、<xref:System.Configuration.ConfigurationProperty.IsRequired%2A>構成プロパティの指定したオブジェクトのプロパティ値。  
  
 [!code-csharp[System.Configuration.ConfigurationProperty#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationProperty/CS/ConfigurationProperty.cs#8)]
 [!code-vb[System.Configuration.ConfigurationProperty#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationProperty/VB/ConfigurationProperty.vb#8)]  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="IsTypeStringTransformationRequired">
      <MemberSignature Language="C#" Value="public bool IsTypeStringTransformationRequired { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTypeStringTransformationRequired" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ConfigurationProperty.IsTypeStringTransformationRequired" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>以前のバージョンのシリアル化されるときに、構成プロパティの型名の変換が必要かどうかを示す、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]です。</summary>
        <value>
          <see langword="true" />型名の変換が必要な場合それ以外の場合、<see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用する<xref:System.Configuration.ConfigurationPropertyOptions>を含むコンス トラクターを呼び出すときに、このプロパティを設定する、<xref:System.Configuration.ConfigurationPropertyOptions>パラメーター。 プロパティに型名の文字列が含まれていない場合、この値は無視されます。  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="IsVersionCheckRequired">
      <MemberSignature Language="C#" Value="public bool IsVersionCheckRequired { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsVersionCheckRequired" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ConfigurationProperty.IsVersionCheckRequired" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>構成プロパティの親の構成セクションが構成プロパティを XML にシリアル化するかどうかを決定するシリアル化時にクエリを実行するかどうかを示します。</summary>
        <value>
          <see langword="true" />場合は親構成セクションのクエリを実行する必要があります。それ以外の場合、<see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 構成プロパティを作成する場合は、[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]以降のバージョンでは、プロパティの値は、framework の以前のバージョンが対象となる場合、XML にシリアル化する必要がありますできない場合、は、このプロパティを設定`true`です。  
  
 使用する<xref:System.Configuration.ConfigurationPropertyOptions>を含むコンス トラクターを呼び出すときに、このプロパティを設定する、<xref:System.Configuration.ConfigurationPropertyOptions>パラメーター。  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ConfigurationProperty.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.Configuration.ConfigurationProperty" /> の名前を取得します。</summary>
        <value><see cref="T:System.Configuration.ConfigurationProperty" /> の名前。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 インスタンス、<xref:System.Configuration.ConfigurationProperty>既定のコレクションは、その名前は空の文字列に自動的に定義されます。  
  
   
  
## Examples  
 次のコード例は、取得する方法を示します、<xref:System.Configuration.ConfigurationProperty.Name%2A>指定したプロパティを設定します。  
  
 [!code-csharp[System.Configuration.ConfigurationProperty#9](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationProperty/CS/ConfigurationProperty.cs#9)]
 [!code-vb[System.Configuration.ConfigurationProperty#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationProperty/VB/ConfigurationProperty.vb#9)]  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Type Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type Type" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ConfigurationProperty.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この型を取得<see cref="T:System.Configuration.ConfigurationProperty" />オブジェクト。</summary>
        <value>A<see cref="T:System.Type" />これの種類を表す<see cref="T:System.Configuration.ConfigurationProperty" />オブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して`Type`の派生インスタンスの完全修飾名前空間とクラス名を特定<xref:System.Configuration.ConfigurationProperty>です。  
  
   
  
## Examples  
 次の例は、取得する方法を示します、<xref:System.Configuration.ConfigurationProperty.Type%2A>構成プロパティの指定したオブジェクトのプロパティ値。  
  
 [!code-csharp[System.Configuration.ConfigurationProperty#10](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationProperty/CS/ConfigurationProperty.cs#10)]
 [!code-vb[System.Configuration.ConfigurationProperty#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationProperty/VB/ConfigurationProperty.vb#10)]  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Validator">
      <MemberSignature Language="C#" Value="public System.Configuration.ConfigurationValidatorBase Validator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationValidatorBase Validator" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ConfigurationProperty.Validator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationValidatorBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得、 <see cref="T:System.Configuration.ConfigurationValidatorAttribute" />、検証するために使用される<see cref="T:System.Configuration.ConfigurationProperty" />オブジェクト。</summary>
        <value><see cref="T:System.Configuration.ConfigurationValidatorBase" />検証コントロールを検証するために使用される<see cref="T:System.Configuration.ConfigurationProperty" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例は、取得する方法を示します、<xref:System.Configuration.ConfigurationProperty.Validator%2A>指定したプロパティを設定します。  
  
 [!code-csharp[System.Configuration.ConfigurationProperty#12](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationProperty/CS/ConfigurationProperty.cs#12)]
 [!code-vb[System.Configuration.ConfigurationProperty#12](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationProperty/VB/ConfigurationProperty.vb#12)]  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>
