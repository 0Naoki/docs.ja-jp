<Type Name="Bitmap" FullName="System.Drawing.Bitmap">
  <TypeSignature Language="C#" Value="public sealed class Bitmap : System.Drawing.Image" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit Bitmap extends System.Drawing.Image" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Bitmap" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Drawing.Image</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Editor("System.Drawing.Design.BitmapEditor, System.Drawing.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>グラフィック イメージとその属性のピクセルのデータで構成される GDI + ビットマップをカプセル化します。 A<see cref="T:System.Drawing.Bitmap" />ピクセル データによって定義されたイメージを操作するために使用するオブジェクトです。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ビットマップは、グラフィック イメージとその属性のピクセルのデータで構成されます。 ビットマップ ファイルに保存するさまざまな標準形式があります。 [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)]次のファイル形式をサポートしています: BMP、GIF、EXIF、JPG、PNG、TIFF です。 サポートされている形式の詳細については、次を参照してください。[型のビットマップ](~/docs/framework/winforms/advanced/types-of-bitmaps.md)です。  
  
 いずれかを使用して、ファイル、ストリーム、およびその他のソースからイメージを作成することができます、<xref:System.Drawing.Bitmap.%23ctor%2A>コンス トラクターまたは、ストリームやファイル システムに保存して、<xref:System.Drawing.Image.Save%2A>メソッドです。 イメージが描画される画面をまたはメモリを使用して、<xref:System.Drawing.Graphics.DrawImage%2A>のメソッド、<xref:System.Drawing.Graphics>オブジェクト。 イメージ ファイルの使用に関するトピックの一覧は、次を参照してください。[イメージ、ビットマップ、アイコン、およびメタファイルの操作](~/docs/framework/winforms/advanced/working-with-images-bitmaps-icons-and-metafiles.md)です。  
  
> [!NOTE]
>  <xref:System.Drawing.Bitmap>クラスは、アプリケーション ドメイン間ではアクセス可能ではありません。 たとえば、動的なを作成する<xref:System.AppDomain>とそのドメインをその後、メインのアプリケーション ドメインにこれらのオブジェクトがバックアップ パスでいくつかのブラシ、ペン、およびビットマップを作成、ブラシ、ペンを正常に使用することができます。 ただし、呼び出した場合、 <xref:System.Drawing.Graphics.DrawImage%2A> 、マーシャ リングを描画するメソッド<xref:System.Drawing.Bitmap>、次の例外が発生します。  
>   
>  リモート処理では、"System.Drawing.Image"の型にフィールド「ネイティブ イメージ」を見つけることができません。  
  
   
  
## Examples  
 次のコード例は、新しいを作成する方法を示します<xref:System.Drawing.Bitmap>ファイルを使用して、<xref:System.Drawing.Bitmap.GetPixel%2A>と<xref:System.Drawing.Bitmap.SetPixel%2A>イメージの色を変更する方法です。 また、使用、 <xref:System.Drawing.Image.PixelFormat%2A>、 <xref:System.Drawing.Image.Width%2A>、および<xref:System.Drawing.Image.Height%2A>プロパティです。  
  
 この例を含む Windows フォームで使用するように設計された、 <xref:System.Windows.Forms.Label>、 <xref:System.Windows.Forms.PictureBox>、および<xref:System.Windows.Forms.Button>という名前`Label1`、 `PictureBox1`、および`Button1`、それぞれします。 コードをフォームに貼り付け、`Button1_Click`ボタンのメソッド<xref:System.Windows.Forms.Control.Click>イベント。  
  
 [!code-cpp[System.Drawing.ImageExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ImageExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.ImageExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ImageExample/CS/form1.cs#1)]
 [!code-vb[System.Drawing.ImageExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ImageExample/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Bitmap (System.Drawing.Image original);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Image original) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.#ctor(System.Drawing.Image)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="original" Type="System.Drawing.Image" />
      </Parameters>
      <Docs>
        <param name="original">新しい <see cref="T:System.Drawing.Bitmap" /> の作成元の <see cref="T:System.Drawing.Image" />。</param>
        <summary>新しいインスタンスを初期化、<see cref="T:System.Drawing.Bitmap" />指定した既存のイメージからのクラスです。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Bitmap (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.#ctor(System.IO.Stream)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">イメージの読み込みに使用するデータ ストリーム。</param>
        <summary>指定したデータ ストリームで <see cref="T:System.Drawing.Bitmap" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 必要があります、ストリームを開いておくの有効期間、<xref:System.Drawing.Bitmap>です。  
  
 制限により、[!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)]デコーダー、 <xref:System.ArgumentException?displayProperty=nameWithType> 65,535 ピクセルよりも大きい値の 1 つのディメンションを持つ .png 画像ファイルからビットマップを作成している場合にスローされます。  
  
   
  
## Examples  
 次のコード例では、ストリームからビットマップを読み込む方法を示します。  
  
 この例は、Windows フォームで使用するよう設計されています。 含むフォームを作成、<xref:System.Windows.Forms.PictureBox>という`PictureBox1`です。 フォームと呼び出しにコードを貼り付けます、`InitializeStreamBitmap`フォームのコンス トラクターからのメソッドまたは<xref:System.Windows.Forms.Form.Load>イベント処理メソッドです。  
  
 [!code-cpp[System.Drawing.BitmapMembers#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.BitmapMembers/CPP/form1.cpp#2)]
 [!code-csharp[System.Drawing.BitmapMembers#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.BitmapMembers/CS/form1.cs#2)]
 [!code-vb[System.Drawing.BitmapMembers#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.BitmapMembers/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="stream" />画像データが含まれていないか、<see langword="null" />です。  
  
 または  
  
 <paramref name="stream" />65,535 ピクセルよりも大きい値の 1 つのディメンションの PNG イメージ ファイルが含まれています。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Bitmap (string filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string filename) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.#ctor(System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename">ビットマップ ファイルの名前とパス。</param>
        <summary>指定したファイルで <see cref="T:System.Drawing.Bitmap" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 アプリケーション パスまたは絶対パスに対する相対パスとファイル名を指定できます。 次のファイル形式でイメージを開いてこのコンス トラクターを使用: BMP、GIF、EXIF、JPG、PNG、TIFF です。 サポートされている形式の詳細については、次を参照してください。[型のビットマップ](~/docs/framework/winforms/advanced/types-of-bitmaps.md)です。 ファイルがまでロックされたまま、<xref:System.Drawing.Bitmap>が破棄されています。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.FileNotFoundException">指定したファイルが見つかりませんでした。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Bitmap (System.Drawing.Image original, System.Drawing.Size newSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Image original, valuetype System.Drawing.Size newSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.#ctor(System.Drawing.Image,System.Drawing.Size)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="original" Type="System.Drawing.Image" />
        <Parameter Name="newSize" Type="System.Drawing.Size" />
      </Parameters>
      <Docs>
        <param name="original">新しい <see cref="T:System.Drawing.Bitmap" /> の作成元の <see cref="T:System.Drawing.Image" />。</param>
        <param name="newSize"><see cref="T:System.Drawing.Size" />構造体の新しいサイズを表す<see cref="T:System.Drawing.Bitmap" />です。</param>
        <summary>新しいインスタンスを初期化、<see cref="T:System.Drawing.Bitmap" />クラスから、指定した既存のイメージを指定されたサイズに拡大縮小します。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Exception">操作に失敗しました。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Bitmap (int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.#ctor(System.Int32,System.Int32)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="width">幅 (ピクセル単位)、新しい<see cref="T:System.Drawing.Bitmap" />です。</param>
        <param name="height">高さ (ピクセル単位)、新しい<see cref="T:System.Drawing.Bitmap" />です。</param>
        <summary>新しいインスタンスを初期化、<see cref="T:System.Drawing.Bitmap" />指定されたサイズのクラスです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このコンス トラクターを作成、<xref:System.Drawing.Bitmap>で、<xref:System.Drawing.Imaging.PixelFormat>の列挙値<xref:System.Drawing.Imaging.PixelFormat.Format32bppArgb>です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">操作に失敗しました。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Bitmap (System.IO.Stream stream, bool useIcm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, bool useIcm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.#ctor(System.IO.Stream,System.Boolean)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="useIcm" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="stream">イメージの読み込みに使用するデータ ストリーム。</param>
        <param name="useIcm">
          <see langword="true" />この色補正を使用する<see cref="T:System.Drawing.Bitmap" />、それ以外の<see langword="false" />します。</param>
        <summary>指定したデータ ストリームで <see cref="T:System.Drawing.Bitmap" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 必要があります、ストリームを開いておくの有効期間、<xref:System.Drawing.Bitmap>です。  
  
 制限により、[!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)]デコーダー、 <xref:System.ArgumentException?displayProperty=nameWithType> 65,535 ピクセルよりも大きい値の 1 つのディメンションを持つ .png 画像ファイルからビットマップを作成している場合にスローされます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="stream" />画像データが含まれていないか、<see langword="null" />です。  
  
 または  
  
 <paramref name="stream" />65,535 ピクセルよりも大きい値の 1 つのディメンションの PNG イメージ ファイルが含まれています。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Bitmap (string filename, bool useIcm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string filename, bool useIcm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.#ctor(System.String,System.Boolean)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="useIcm" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="filename">ビットマップ ファイルの名前。</param>
        <param name="useIcm">
          <see langword="true" />この色補正を使用する<see cref="T:System.Drawing.Bitmap" />、それ以外の<see langword="false" />します。</param>
        <summary>指定したファイルで <see cref="T:System.Drawing.Bitmap" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 次のファイル形式でイメージを開いてこのコンス トラクターを使用: BMP、GIF、EXIF、JPG、PNG、TIFF です。 サポートされている形式の詳細については、次を参照してください。[型のビットマップ](~/docs/framework/winforms/advanced/types-of-bitmaps.md)です。 ファイルがまでロックされたまま、<xref:System.Drawing.Bitmap>が破棄されています。  
  
   
  
## Examples  
 次のコード例では、ファイルから新しいビットマップを作成する方法を示します。 この例では、<xref:System.Drawing.Bitmap.GetPixel%2A>と<xref:System.Drawing.Bitmap.SetPixel%2A>イメージの色を変更する方法です。 また、使用、<xref:System.Drawing.Image.PixelFormat%2A>プロパティです。  
  
 この例を含む Windows フォームで使用するように設計された、 <xref:System.Windows.Forms.Label>、<xref:System.Windows.Forms.PictureBox>と<xref:System.Windows.Forms.Button>という名前`Label1`、`PictureBox1`と`Button1`、それぞれします。 コードをフォームに貼り付け、`Button1_Click`ボタンのメソッド<xref:System.Windows.Forms.Control.Click>イベント。  
  
 [!code-cpp[System.Drawing.ImageExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ImageExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.ImageExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ImageExample/CS/form1.cs#1)]
 [!code-vb[System.Drawing.ImageExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ImageExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">アンマネージ コードを呼び出します。 関連する列挙。<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Bitmap (Type type, string resource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, string resource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.#ctor(System.Type,System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="resource" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">リソースの抽出に使用されるクラス。</param>
        <param name="resource">リソースの名前。</param>
        <summary>新しいインスタンスを初期化、<see cref="T:System.Drawing.Bitmap" />指定されたリソースからクラスです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このコンス トラクターは、リソースの文字列名に指定された型の名前空間を結合し、アセンブリ マニフェスト内の一致を検索します。 たとえばに渡すことができます、<xref:System.Windows.Forms.Button>型および`Button.bmp`をこのコンス トラクターとそれが表示という名前のリソースの`System.Windows.Forms.Button.bmp`します。  
  
   
  
## Examples  
 次のコード例は、型からビットマップを作成する方法と使用方法を示しています、<xref:System.Drawing.Image.Save%2A>メソッドです。 この例を実行するには、Windows フォームにコードを貼り付けます。 フォームの処理<xref:System.Windows.Forms.Control.Paint>イベントと呼び出し、`ConstructFromResourceSaveAsGif`渡してメソッド`e`として<xref:System.Windows.Forms.PaintEventArgs>  
  
 [!code-cpp[System.Drawing.BmpCtorAndSave#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.BmpCtorAndSave/cpp/form1.cpp#1)]
 [!code-csharp[System.Drawing.BmpCtorAndSave#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.BmpCtorAndSave/CS/form1.cs#1)]
 [!code-vb[System.Drawing.BmpCtorAndSave#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.BmpCtorAndSave/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Bitmap (System.Drawing.Image original, int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Image original, int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.#ctor(System.Drawing.Image,System.Int32,System.Int32)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="original" Type="System.Drawing.Image" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="original">新しい <see cref="T:System.Drawing.Bitmap" /> の作成元の <see cref="T:System.Drawing.Image" />。</param>
        <param name="width">幅 (ピクセル単位)、新しい<see cref="T:System.Drawing.Bitmap" />です。</param>
        <param name="height">高さ (ピクセル単位)、新しい<see cref="T:System.Drawing.Bitmap" />です。</param>
        <summary>新しいインスタンスを初期化、<see cref="T:System.Drawing.Bitmap" />クラスから、指定した既存のイメージを指定されたサイズに拡大縮小します。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Exception">操作に失敗しました。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Bitmap (int width, int height, System.Drawing.Graphics g);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 width, int32 height, class System.Drawing.Graphics g) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.#ctor(System.Int32,System.Int32,System.Drawing.Graphics)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="g" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="width">幅 (ピクセル単位)、新しい<see cref="T:System.Drawing.Bitmap" />です。</param>
        <param name="height">高さ (ピクセル単位)、新しい<see cref="T:System.Drawing.Bitmap" />です。</param>
        <param name="g"><see cref="T:System.Drawing.Graphics" />オブジェクトを新しい解像度を指定する<see cref="T:System.Drawing.Bitmap" />です。</param>
        <summary>新しいインスタンスを初期化、<see cref="T:System.Drawing.Bitmap" />クラス、指定されたサイズと、指定の解像度<see cref="T:System.Drawing.Graphics" />オブジェクト。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 新しい<xref:System.Drawing.Bitmap>からの水平方向および垂直方向の解像度は、このメソッドが作成される、<xref:System.Drawing.Graphics.DpiX%2A>と<xref:System.Drawing.Graphics.DpiY%2A>プロパティの`g`、それぞれします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="g" /> は <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Bitmap (int width, int height, System.Drawing.Imaging.PixelFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 width, int32 height, valuetype System.Drawing.Imaging.PixelFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.#ctor(System.Int32,System.Int32,System.Drawing.Imaging.PixelFormat)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="format" Type="System.Drawing.Imaging.PixelFormat" />
      </Parameters>
      <Docs>
        <param name="width">幅 (ピクセル単位)、新しい<see cref="T:System.Drawing.Bitmap" />です。</param>
        <param name="height">高さ (ピクセル単位)、新しい<see cref="T:System.Drawing.Bitmap" />です。</param>
        <param name="format">新しいのピクセル形式<see cref="T:System.Drawing.Bitmap" />です。 これで始まる値を指定する必要があります<c>形式</c>です。</param>
        <summary>新しいインスタンスを初期化、<see cref="T:System.Drawing.Bitmap" />指定したサイズと形式を持つクラス。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">A<see cref="T:System.Drawing.Imaging.PixelFormat" />で始まらない名前を持つ値が指定されて*形式*です。 などを指定する<see cref="F:System.Drawing.Imaging.PixelFormat.Gdi" />により、<see cref="T:System.ArgumentException" />が<see cref="F:System.Drawing.Imaging.PixelFormat.Format48bppRgb" />は表示されません。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Bitmap (int width, int height, int stride, System.Drawing.Imaging.PixelFormat format, IntPtr scan0);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 width, int32 height, int32 stride, valuetype System.Drawing.Imaging.PixelFormat format, native int scan0) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.#ctor(System.Int32,System.Int32,System.Int32,System.Drawing.Imaging.PixelFormat,System.IntPtr)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="stride" Type="System.Int32" />
        <Parameter Name="format" Type="System.Drawing.Imaging.PixelFormat" />
        <Parameter Name="scan0" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="width">幅 (ピクセル単位)、新しい<see cref="T:System.Drawing.Bitmap" />です。</param>
        <param name="height">高さ (ピクセル単位)、新しい<see cref="T:System.Drawing.Bitmap" />です。</param>
        <param name="stride">スキャンの 1 つの行の先頭と次の間のバイト オフセットを指定する整数。 これは、通常 (必ずしも)、ピクセル形式 (たとえば、16 ビット/ピクセルの 2) のバイト数を掛けたビットマップの幅。 このパラメーターに渡される値は、4 の倍数である必要があります.</param>
        <param name="format">新しいのピクセル形式<see cref="T:System.Drawing.Bitmap" />です。 これで始まる値を指定する必要があります<c>形式</c>です。</param>
        <param name="scan0">ピクセル データを格納するバイト配列へのポインター。</param>
        <summary>新しいインスタンスを初期化、<see cref="T:System.Drawing.Bitmap" />ピクセル データの指定したサイズ、およびピクセル形式を持つクラス。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 指定されたメモリのブロックを解放したり、呼び出し元が、`scan0`パラメーター。 ただし、メモリ解放しないで、関連するまで<xref:System.Drawing.Bitmap>を解放します。  
  
   
  
## Examples  
 次のコード例を使用する方法を示しています、<xref:System.Drawing.Bitmap.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Drawing.Imaging.PixelFormat%2CSystem.IntPtr%29>コンス トラクターです。 この例は、Windows フォームで使用するよう設計されていて、必要があります、<xref:System.Windows.Forms.PaintEventArgs>パラメーターであるパラメーターの<xref:System.Windows.Forms.Control.Paint>イベント。  
  
 [!code-csharp[System.Drawing.MiscExamples#Constructor](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.MiscExamples/CS/form1.cs#constructor)]
 [!code-vb[System.Drawing.MiscExamples#Constructor](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.MiscExamples/VB/form1.vb#constructor)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">A<see cref="T:System.Drawing.Imaging.PixelFormat" />で始まらない名前を持つ値が指定されて*形式*です。 などを指定する<see cref="F:System.Drawing.Imaging.PixelFormat.Gdi" />により、<see cref="T:System.ArgumentException" />が<see cref="F:System.Drawing.Imaging.PixelFormat.Format48bppRgb" />は表示されません。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">アンマネージ コードを呼び出します。 関連する列挙。<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Drawing.Bitmap Clone (System.Drawing.Rectangle rect, System.Drawing.Imaging.PixelFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Bitmap Clone(valuetype System.Drawing.Rectangle rect, valuetype System.Drawing.Imaging.PixelFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.Clone(System.Drawing.Rectangle,System.Drawing.Imaging.PixelFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Bitmap</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
        <Parameter Name="format" Type="System.Drawing.Imaging.PixelFormat" />
      </Parameters>
      <Docs>
        <param name="rect">この部分を定義<see cref="T:System.Drawing.Bitmap" />をコピーします。 座標はこの<see cref="T:System.Drawing.Bitmap" />です。</param>
        <param name="format">新しいのピクセル形式<see cref="T:System.Drawing.Bitmap" />です。 これで始まる値を指定する必要があります<c>形式</c>です。</param>
        <summary>このセクションのコピーを作成<see cref="T:System.Drawing.Bitmap" />によって定義された<see cref="T:System.Drawing.Rectangle" />構造と指定した<see cref="T:System.Drawing.Imaging.PixelFormat" />列挙します。</summary>
        <returns>このメソッドが作成する新しい <see cref="T:System.Drawing.Bitmap" /> オブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例は Windows フォームで使用するために設計され、必要があります<xref:System.Windows.Forms.PaintEventArgs>`e`はのパラメーターである、<xref:System.Windows.Forms.Control.Paint>イベント ハンドラー。 コードは、次のアクションを実行します。  
  
-   作成、<xref:System.Drawing.Bitmap>ファイルからです。  
  
-   一部を複製<xref:System.Drawing.Bitmap>です。  
  
-   複製された部分を画面に描画します。  
  
 [!code-cpp[System.Drawing.ClassicBitmapExamples#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.ClassicBitmapExamples#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CS/form1.cs#1)]
 [!code-vb[System.Drawing.ClassicBitmapExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException">
          <paramref name="rect" />ソース ビットマップ境界外です。</exception>
        <exception cref="T:System.ArgumentException">高さまたは幅<paramref name="rect" />は 0 です。  
  
 または  
  
 A<see cref="T:System.Drawing.Imaging.PixelFormat" />で始まらない名前を持つ値が指定されて*形式*です。 などを指定する<see cref="F:System.Drawing.Imaging.PixelFormat.Gdi" />により、<see cref="T:System.ArgumentException" />が<see cref="F:System.Drawing.Imaging.PixelFormat.Format48bppRgb" />は表示されません。</exception>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Drawing.Bitmap Clone (System.Drawing.RectangleF rect, System.Drawing.Imaging.PixelFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Bitmap Clone(valuetype System.Drawing.RectangleF rect, valuetype System.Drawing.Imaging.PixelFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.Clone(System.Drawing.RectangleF,System.Drawing.Imaging.PixelFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Bitmap</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
        <Parameter Name="format" Type="System.Drawing.Imaging.PixelFormat" />
      </Parameters>
      <Docs>
        <param name="rect">この部分を定義<see cref="T:System.Drawing.Bitmap" />をコピーします。</param>
        <param name="format">指定します、 <see cref="T:System.Drawing.Imaging.PixelFormat" /> 、変換先の種類の列挙<see cref="T:System.Drawing.Bitmap" />です。</param>
        <summary>このセクションのコピーを作成<see cref="T:System.Drawing.Bitmap" />と指定した定義<see cref="T:System.Drawing.Imaging.PixelFormat" />列挙します。</summary>
        <returns>このメソッドが作成する <see cref="T:System.Drawing.Bitmap" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例は Windows フォームで使用するために設計され、必要があります<xref:System.Windows.Forms.PaintEventArgs>`e`はのパラメーターである、<xref:System.Windows.Forms.Control.Paint>イベント ハンドラー。 コードは、次のアクションを実行します。  
  
-   作成、<xref:System.Drawing.Bitmap>ファイルからです。  
  
-   一部を複製<xref:System.Drawing.Bitmap>です。  
  
-   複製された部分を画面に描画します。  
  
 [!code-cpp[System.Drawing.ClassicBitmapExamples#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CPP/form1.cpp#2)]
 [!code-csharp[System.Drawing.ClassicBitmapExamples#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CS/form1.cs#2)]
 [!code-vb[System.Drawing.ClassicBitmapExamples#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException">
          <paramref name="rect" />ソース ビットマップ境界外です。</exception>
        <exception cref="T:System.ArgumentException">高さまたは幅<paramref name="rect" />は 0 です。</exception>
      </Docs>
    </Member>
    <Member MemberName="FromHicon">
      <MemberSignature Language="C#" Value="public static System.Drawing.Bitmap FromHicon (IntPtr hicon);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Drawing.Bitmap FromHicon(native int hicon) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.FromHicon(System.IntPtr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Bitmap</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hicon" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="hicon">アイコンへのハンドル。</param>
        <summary>作成、<see cref="T:System.Drawing.Bitmap" />アイコンへの Windows ハンドルからです。</summary>
        <returns>このメソッドが作成する <see cref="T:System.Drawing.Bitmap" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例は Windows フォームで使用するために設計され、必要があります<xref:System.Windows.Forms.PaintEventArgs>`e`はのパラメーターである、<xref:System.Windows.Forms.Control.Paint>イベント ハンドラー。 コードは、次のアクションを実行します。  
  
-   既存のアイコン イメージを識別するハンドルを取得します。  
  
-   作成、<xref:System.Drawing.Bitmap>ハンドルからです。  
  
-   描画、<xref:System.Drawing.Bitmap>画面にします。  
  
 [!code-cpp[System.Drawing.ClassicBitmapExamples#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CPP/form1.cpp#3)]
 [!code-csharp[System.Drawing.ClassicBitmapExamples#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CS/form1.cs#3)]
 [!code-vb[System.Drawing.ClassicBitmapExamples#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">アンマネージ コードを呼び出します。 関連する列挙。<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="FromResource">
      <MemberSignature Language="C#" Value="public static System.Drawing.Bitmap FromResource (IntPtr hinstance, string bitmapName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Drawing.Bitmap FromResource(native int hinstance, string bitmapName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.FromResource(System.IntPtr,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Bitmap</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hinstance" Type="System.IntPtr" />
        <Parameter Name="bitmapName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hinstance">リソースを格納している実行可能ファイルのインスタンスへのハンドル。</param>
        <param name="bitmapName">リソースのビットマップの名前を表す文字列。</param>
        <summary>作成、 <see cref="T:System.Drawing.Bitmap" /> 、指定された Windows リソースからです。</summary>
        <returns>このメソッドが作成する <see cref="T:System.Drawing.Bitmap" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Bitmap.FromResource%2A>アンマネージ コードを呼び出すためのセキュリティ アクセス許可が必要です。 埋め込みリソースからビットマップを作成するためのマネージの代替を参照してください。<xref:System.Drawing.Bitmap.%23ctor%28System.Type%2CSystem.String%29?displayProperty=nameWithType>です。 <xref:System.Drawing.Bitmap.FromResource%2A>DLL 内のリソースの名前はビットマップでのみ動作します。  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">アンマネージ コードを呼び出します。 関連する列挙。<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="GetHbitmap">
      <MemberSignature Language="C#" Value="public IntPtr GetHbitmap ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance native int GetHbitmap() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.GetHbitmap" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>作成、[!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)]ビットマップ オブジェクトからこの<see cref="T:System.Drawing.Bitmap" />です。</summary>
        <returns>ハンドル、 [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] bitmap オブジェクトをこのメソッドを作成します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 通話を担当する場合、 [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] `DeleteObject`によって使用されるメモリを解放するメソッド、[!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)]ビットマップ オブジェクト。 GDI ビットマップの詳細については、次を参照してください。[ビットマップ](http://go.microsoft.com/fwlink/?LinkId=205685)、Windows GDI マニュアルを参照します。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Drawing.Bitmap.GetHbitmap%2A> メソッドの使用方法を示します。  
  
 [!code-cpp[System.Drawing.ClassicBitmapExamples#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CPP/form1.cpp#4)]
 [!code-csharp[System.Drawing.ClassicBitmapExamples#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CS/form1.cs#4)]
 [!code-vb[System.Drawing.ClassicBitmapExamples#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">ビットマップの幅または高さがより大きい<see cref="F:System.Int16.MaxValue" />です。</exception>
        <exception cref="T:System.Exception">操作に失敗しました。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">アンマネージ コードを呼び出します。 関連する列挙。<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="GetHbitmap">
      <MemberSignature Language="C#" Value="public IntPtr GetHbitmap (System.Drawing.Color background);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance native int GetHbitmap(valuetype System.Drawing.Color background) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.GetHbitmap(System.Drawing.Color)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="background" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="background">A<see cref="T:System.Drawing.Color" />を背景色を指定します。 このパラメーターには、ビットマップが完全に不透明な場合は無視されます。</param>
        <summary>作成、[!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)]ビットマップ オブジェクトからこの<see cref="T:System.Drawing.Bitmap" />です。</summary>
        <returns>ハンドル、 [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] bitmap オブジェクトをこのメソッドを作成します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 通話を担当する場合、 [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] `DeleteObject`によって使用されるメモリを解放するメソッド、[!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)]ビットマップ オブジェクト。 GDI ビットマップの詳細については、次を参照してください。[ビットマップ](http://go.microsoft.com/fwlink/?LinkId=205685)、Windows GDI マニュアルを参照します。  
  
   
  
## Examples  
 次のコード例を使用する方法を示しています、 <xref:System.Drawing.Bitmap.GetHbitmap%2A>.method です。  
  
 [!code-cpp[System.Drawing.ClassicBitmapExamples#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CPP/form1.cpp#5)]
 [!code-csharp[System.Drawing.ClassicBitmapExamples#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CS/form1.cs#5)]
 [!code-vb[System.Drawing.ClassicBitmapExamples#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">ビットマップの幅または高さがより大きい<see cref="F:System.Int16.MaxValue" />です。</exception>
        <exception cref="T:System.Exception">操作に失敗しました。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">アンマネージ コードを呼び出します。 関連する列挙。<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="GetHicon">
      <MemberSignature Language="C#" Value="public IntPtr GetHicon ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance native int GetHicon() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.GetHicon" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>アイコンのハンドルを返します。</summary>
        <returns>同じイメージのアイコンへの Windows ハンドル、<see cref="T:System.Drawing.Bitmap" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 最初に、ハンドルから作成されるアイコンは、元のビットマップと同じサイズになります。  
  
   
  
## Examples  
 次のコード例は Windows フォームで使用するために設計され、必要があります<xref:System.Windows.Forms.PaintEventArgs>`e`はのパラメーターである、<xref:System.Windows.Forms.Control.Paint>イベント ハンドラー。 コードは、次のアクションを実行します。  
  
-   <xref:System.Drawing.Bitmap> を作成します。  
  
-   画面にそのオブジェクトを描画します。  
  
-   アイコンのハンドルを取得、<xref:System.Drawing.Bitmap>です。  
  
-   セット、<xref:System.Windows.Forms.Form.Icon%2A?displayProperty=nameWithType>ハンドルから作成されたアイコンをフォームの属性です。  
  
 [!code-cpp[System.Drawing.ClassicBitmapExamples#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CPP/form1.cpp#6)]
 [!code-csharp[System.Drawing.ClassicBitmapExamples#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CS/form1.cs#6)]
 [!code-vb[System.Drawing.ClassicBitmapExamples#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">操作に失敗しました。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">アンマネージ コードを呼び出します。 関連する列挙。<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="GetPixel">
      <MemberSignature Language="C#" Value="public System.Drawing.Color GetPixel (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Color GetPixel(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.GetPixel(System.Int32,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">取得するピクセルの x 座標。</param>
        <param name="y">取得するピクセルの y 座標。</param>
        <summary>これで、指定されたピクセルの色を取得<see cref="T:System.Drawing.Bitmap" />です。</summary>
        <returns>A<see cref="T:System.Drawing.Color" />指定されたピクセルの色を表す構造です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例は Windows フォームで使用するために設計され、必要があります<xref:System.Windows.Forms.PaintEventArgs>`e`はのパラメーターである、<xref:System.Windows.Forms.Control.Paint>イベント ハンドラー。 このコードは、ビットマップのピクセルの色を取得し、その色の四角形を塗りつぶします。  
  
 [!code-cpp[System.Drawing.ClassicBitmapExamples#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CPP/form1.cpp#7)]
 [!code-csharp[System.Drawing.ClassicBitmapExamples#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CS/form1.cs#7)]
 [!code-vb[System.Drawing.ClassicBitmapExamples#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="x" />小さい 0 の場合、またはより大きいか等しい<see cref="P:System.Drawing.Image.Width" />です。  
  
 または  
  
 <paramref name="y" />小さい 0 の場合、またはより大きいか等しい<see cref="P:System.Drawing.Image.Height" />です。</exception>
        <exception cref="T:System.Exception">操作に失敗しました。</exception>
      </Docs>
    </Member>
    <Member MemberName="LockBits">
      <MemberSignature Language="C#" Value="public System.Drawing.Imaging.BitmapData LockBits (System.Drawing.Rectangle rect, System.Drawing.Imaging.ImageLockMode flags, System.Drawing.Imaging.PixelFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Imaging.BitmapData LockBits(valuetype System.Drawing.Rectangle rect, valuetype System.Drawing.Imaging.ImageLockMode flags, valuetype System.Drawing.Imaging.PixelFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.LockBits(System.Drawing.Rectangle,System.Drawing.Imaging.ImageLockMode,System.Drawing.Imaging.PixelFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Imaging.BitmapData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
        <Parameter Name="flags" Type="System.Drawing.Imaging.ImageLockMode" />
        <Parameter Name="format" Type="System.Drawing.Imaging.PixelFormat" />
      </Parameters>
      <Docs>
        <param name="rect">A<see cref="T:System.Drawing.Rectangle" />の部分を指定する構造体、<see cref="T:System.Drawing.Bitmap" />をロックします。</param>
        <param name="flags"><see cref="T:System.Drawing.Imaging.ImageLockMode" />のアクセス レベル (読み取り/書き込み) を指定する列挙体、<see cref="T:System.Drawing.Bitmap" />です。</param>
        <param name="format">A<see cref="T:System.Drawing.Imaging.PixelFormat" />このデータ形式を指定する列挙体<see cref="T:System.Drawing.Bitmap" />です。</param>
        <summary>ロック、<see cref="T:System.Drawing.Bitmap" />システム メモリにします。</summary>
        <returns>A<see cref="T:System.Drawing.Imaging.BitmapData" />このロック操作に関する情報を格納します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Drawing.Bitmap.LockBits%2A>プログラムで変更できるようにすることは、システム メモリ内で既存のビットマップをロックします。 イメージの色を変更することができます、<xref:System.Drawing.Bitmap.SetPixel%2A>メソッドが、<xref:System.Drawing.Bitmap.LockBits%2A>メソッドは、大規模な変更のパフォーマンスが向上します。  
  
 <xref:System.Drawing.Imaging.BitmapData>の属性を指定、<xref:System.Drawing.Bitmap>サイズ、ピクセル形式、メモリ内のピクセルのデータの開始アドレスと各スキャン ライン (stride) の長さなどです。  
  
 このメソッドを呼び出したときにのメンバーを使用する必要があります、<xref:System.Drawing.Imaging.PixelFormat?displayProperty=nameWithType>特定ビット/ピクセル (BPP) 値を含む列挙です。 使用して<xref:System.Drawing.Imaging.PixelFormat?displayProperty=nameWithType>など値<xref:System.Drawing.Imaging.PixelFormat.Indexed>と<xref:System.Drawing.Imaging.PixelFormat.Gdi>がスローされます、<xref:System.ArgumentException?displayProperty=nameWithType>です。 また、ビットマップの不適切なピクセル形式を渡すことがスローされます、<xref:System.ArgumentException?displayProperty=nameWithType>です。  
  
   
  
## Examples  
 次のコード例を使用する方法を示しています、 <xref:System.Drawing.Image.PixelFormat%2A>、 <xref:System.Drawing.Image.Height%2A>、 <xref:System.Drawing.Image.Width%2A>、および<xref:System.Drawing.Imaging.BitmapData.Scan0%2A>プロパティ以外の場合は、<xref:System.Drawing.Bitmap.LockBits%2A>と<xref:System.Drawing.Bitmap.UnlockBits%2A>メソッドおよび<xref:System.Drawing.Imaging.ImageLockMode>列挙します。 この例は、Windows フォームで使用するよう設計されています。 この例を使用する方法の例を提供するが、すべてのピクセル形式では正しく動作するに設計されていません、<xref:System.Drawing.Bitmap.LockBits%2A>メソッドです。 この例を実行するフォームに貼り付けるし、フォームの処理<xref:System.Windows.Forms.Control.Paint>イベントを呼び出すことによって、`LockUnlockBitsExample`渡してメソッド`e`として<xref:System.Windows.Forms.PaintEventArgs>です。  
  
 [!code-cpp[System.Drawing.BitmapMembers#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.BitmapMembers/CPP/form1.cpp#5)]
 [!code-csharp[System.Drawing.BitmapMembers#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.BitmapMembers/CS/form1.cs#5)]
 [!code-vb[System.Drawing.BitmapMembers#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.BitmapMembers/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><see cref="T:System.Drawing.Imaging.PixelFormat" />特定のピクセルごとのビット値ではありません。  
  
 または  
  
 無効な<see cref="T:System.Drawing.Imaging.PixelFormat" />はビットマップで渡されます。</exception>
        <exception cref="T:System.Exception">操作に失敗しました。</exception>
      </Docs>
    </Member>
    <Member MemberName="LockBits">
      <MemberSignature Language="C#" Value="public System.Drawing.Imaging.BitmapData LockBits (System.Drawing.Rectangle rect, System.Drawing.Imaging.ImageLockMode flags, System.Drawing.Imaging.PixelFormat format, System.Drawing.Imaging.BitmapData bitmapData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Imaging.BitmapData LockBits(valuetype System.Drawing.Rectangle rect, valuetype System.Drawing.Imaging.ImageLockMode flags, valuetype System.Drawing.Imaging.PixelFormat format, class System.Drawing.Imaging.BitmapData bitmapData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.LockBits(System.Drawing.Rectangle,System.Drawing.Imaging.ImageLockMode,System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.BitmapData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Imaging.BitmapData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
        <Parameter Name="flags" Type="System.Drawing.Imaging.ImageLockMode" />
        <Parameter Name="format" Type="System.Drawing.Imaging.PixelFormat" />
        <Parameter Name="bitmapData" Type="System.Drawing.Imaging.BitmapData" />
      </Parameters>
      <Docs>
        <param name="rect">四角形の構造の部分を指定する、<see cref="T:System.Drawing.Bitmap" />をロックします。</param>
        <param name="flags">1 つ、<see cref="T:System.Drawing.Imaging.ImageLockMode" />のアクセス レベル (読み取り/書き込み) を指定する値、<see cref="T:System.Drawing.Bitmap" />です。</param>
        <param name="format">1 つ、<see cref="T:System.Drawing.Imaging.PixelFormat" />のデータの形式を指定する値、<see cref="T:System.Drawing.Bitmap" />です。</param>
        <param name="bitmapData">A<see cref="T:System.Drawing.Imaging.BitmapData" />ロック操作に関する情報を格納します。</param>
        <summary>ロック、<see cref="T:System.Drawing.Bitmap" />をシステム メモリ</summary>
        <returns>A<see cref="T:System.Drawing.Imaging.BitmapData" />ロック操作に関する情報を格納します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Drawing.Bitmap.LockBits%2A>プログラムで変更できるようにすることは、システム メモリ内で既存のビットマップをロックします。 イメージの色を変更することができます、<xref:System.Drawing.Bitmap.SetPixel%2A>メソッドが、<xref:System.Drawing.Bitmap.LockBits%2A>メソッドは、大規模な変更のパフォーマンスが向上します。  
  
 このメソッドを呼び出したときにのメンバーを使用する必要があります、<xref:System.Drawing.Imaging.PixelFormat?displayProperty=nameWithType>特定ビット/ピクセル (BPP) 値を含む列挙です。 使用して<xref:System.Drawing.Imaging.PixelFormat?displayProperty=nameWithType>などの値<xref:System.Drawing.Imaging.PixelFormat.Indexed>と<xref:System.Drawing.Imaging.PixelFormat.Gdi>がスローされます、<xref:System.ArgumentException?displayProperty=nameWithType>です。 また、ビットマップの不適切なピクセル形式を渡すことがスローされます、<xref:System.ArgumentException?displayProperty=nameWithType>です。  
  
 このバージョンの<xref:System.Drawing.Bitmap.LockBits%2A>メソッドと共に使用するためのものが、`flags`値<xref:System.Drawing.Imaging.ImageLockMode?displayProperty=nameWithType>です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <see cref="T:System.Drawing.Imaging.PixelFormat" />値は、特定のピクセルごとのビット値ではありません。  
  
 または  
  
 無効な<see cref="T:System.Drawing.Imaging.PixelFormat" />はビットマップで渡されます。</exception>
        <exception cref="T:System.Exception">操作に失敗しました。</exception>
      </Docs>
    </Member>
    <Member MemberName="MakeTransparent">
      <MemberSignature Language="C#" Value="public void MakeTransparent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MakeTransparent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.MakeTransparent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>既定の透明色をこの <see cref="T:System.Drawing.Bitmap" /> で透明します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 システム パレットは、透明アルファ、またはの既定の色として 1 つの色を定義します。 このメソッドは、この既定の透明色を透明<xref:System.Drawing.Bitmap>です。 透明色を指定しない場合、システムによって<xref:System.Drawing.Color.LightGray%2A>は、透明色。  
  
 呼び出すと<xref:System.Drawing.Bitmap.MakeTransparent%2A>、ビットマップに変換されます、<xref:System.Drawing.Imaging.PixelFormat.Format32bppArgb>書式を設定するようにこの形式はアルファ チャネルをサポートします。  
  
   
  
## Examples  
 次のコード例は Windows フォームで使用するために設計され、必要があります<xref:System.Windows.Forms.PaintEventArgs>`e`はのパラメーターである、<xref:System.Windows.Forms.Control.Paint>イベント ハンドラー。 コードは、システム既定透明色の`myBitmap`、しを描画し、<xref:System.Drawing.Bitmap>画面にします。  
  
 [!code-cpp[System.Drawing.ClassicBitmapExamples#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CPP/form1.cpp#8)]
 [!code-csharp[System.Drawing.ClassicBitmapExamples#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CS/form1.cs#8)]
 [!code-vb[System.Drawing.ClassicBitmapExamples#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/VB/form1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Drawing.Bitmap" /> のイメージ形式はアイコン形式です。</exception>
        <exception cref="T:System.Exception">操作に失敗しました。</exception>
      </Docs>
    </Member>
    <Member MemberName="MakeTransparent">
      <MemberSignature Language="C#" Value="public void MakeTransparent (System.Drawing.Color transparentColor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MakeTransparent(valuetype System.Drawing.Color transparentColor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.MakeTransparent(System.Drawing.Color)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transparentColor" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="transparentColor"><see cref="T:System.Drawing.Color" />を透明色を表す構造体。</param>
        <summary>指定された色の透明なこの<see cref="T:System.Drawing.Bitmap" />です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 呼び出すと<xref:System.Drawing.Bitmap.MakeTransparent%2A>、ビットマップに変換されます、<xref:System.Drawing.Imaging.PixelFormat.Format32bppArgb>書式を設定するようにこの形式はアルファ チャネルをサポートします。  
  
   
  
## Examples  
 次のコード例は Windows フォームで使用するために設計され、必要があります<xref:System.Windows.Forms.PaintEventArgs>`e`はのパラメーターである、<xref:System.Windows.Forms.Control.Paint>イベント ハンドラー。 コードは、次のアクションを実行します。  
  
-   内のピクセルの色を取得、<xref:System.Drawing.Bitmap>です。  
  
-   その色を透明のビットマップ。  
  
-   描画、<xref:System.Drawing.Bitmap>画面にします。  
  
 [!code-cpp[System.Drawing.ClassicBitmapExamples#9](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CPP/form1.cpp#9)]
 [!code-csharp[System.Drawing.ClassicBitmapExamples#9](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CS/form1.cs#9)]
 [!code-vb[System.Drawing.ClassicBitmapExamples#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/VB/form1.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Drawing.Bitmap" /> のイメージ形式はアイコン形式です。</exception>
        <exception cref="T:System.Exception">操作に失敗しました。</exception>
      </Docs>
    </Member>
    <Member MemberName="SetPixel">
      <MemberSignature Language="C#" Value="public void SetPixel (int x, int y, System.Drawing.Color color);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetPixel(int32 x, int32 y, valuetype System.Drawing.Color color) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.SetPixel(System.Int32,System.Int32,System.Drawing.Color)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="color" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="x">設定するピクセルの x 座標。</param>
        <param name="y">設定するピクセルの y 座標。</param>
        <param name="color">A<see cref="T:System.Drawing.Color" />指定されたピクセルに代入する色を表す構造体。</param>
        <summary>指定したピクセルの色を <see cref="T:System.Drawing.Bitmap" /> で指定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して<xref:System.Drawing.Bitmap.SetPixel%2A>イメージ内の個々 のピクセルの色をコードから設定するメソッド。 プログラムでは使用しても、イメージを変更することができます、<xref:System.Drawing.Bitmap.LockBits%2A>メソッドです。 大規模な変更は、通常、<xref:System.Drawing.Bitmap.LockBits%2A>メソッドは、パフォーマンスが向上します。  
  
   
  
## Examples  
 次のコード例は Windows フォームで使用するために設計され、必要があります<xref:System.Windows.Forms.PaintEventArgs>`e`はのパラメーターである、<xref:System.Windows.Forms.Control.Paint>イベント ハンドラー。 コードは、次のアクションを実行します。  
  
-   <xref:System.Drawing.Bitmap> を作成します。  
  
-   黒に、ビットマップ内の各ピクセルの色を設定します。  
  
-   ビットマップを描画します。  
  
 [!code-cpp[System.Drawing.ClassicBitmapExamples#10](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CPP/form1.cpp#10)]
 [!code-csharp[System.Drawing.ClassicBitmapExamples#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CS/form1.cs#10)]
 [!code-vb[System.Drawing.ClassicBitmapExamples#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/VB/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">操作に失敗しました。</exception>
      </Docs>
    </Member>
    <Member MemberName="SetResolution">
      <MemberSignature Language="C#" Value="public void SetResolution (float xDpi, float yDpi);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetResolution(float32 xDpi, float32 yDpi) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.SetResolution(System.Single,System.Single)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xDpi" Type="System.Single" />
        <Parameter Name="yDpi" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="xDpi">ドット/インチで水平方向の解像度の<see cref="T:System.Drawing.Bitmap" />です。</param>
        <param name="yDpi">垂直方向の解像度、ドット/インチの<see cref="T:System.Drawing.Bitmap" />です。</param>
        <summary>この解像度を設定<see cref="T:System.Drawing.Bitmap" />です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 新しく作成されたビットマップに目的の解像度を設定するのにには、このメソッドを使用します。 画像の解像度を変更しても、物理サイズは変わりません。  
  
   
  
## Examples  
 次のコード例は、使用する方法を示します、<xref:System.Drawing.Bitmap.SetResolution%2A>メソッドです。  
  
 [!code-csharp[System.Drawing.Misc3#SetResolution](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Misc3/CS/Form1.cs#setresolution)]
 [!code-vb[System.Drawing.Misc3#SetResolution](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Misc3/VB/Form1.vb#setresolution)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">操作に失敗しました。</exception>
      </Docs>
    </Member>
    <Member MemberName="UnlockBits">
      <MemberSignature Language="C#" Value="public void UnlockBits (System.Drawing.Imaging.BitmapData bitmapdata);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UnlockBits(class System.Drawing.Imaging.BitmapData bitmapdata) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.UnlockBits(System.Drawing.Imaging.BitmapData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bitmapdata" Type="System.Drawing.Imaging.BitmapData" />
      </Parameters>
      <Docs>
        <param name="bitmapdata">A<see cref="T:System.Drawing.Imaging.BitmapData" />ロック操作に関する情報を指定します。</param>
        <summary>このロックを解除<see cref="T:System.Drawing.Bitmap" />システム メモリからです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.BitmapData>の属性を指定、<xref:System.Drawing.Bitmap>サイズ、ピクセル形式、メモリ内のピクセルのデータの開始アドレスと各スキャン ライン (stride) の長さなどです。  
  
   
  
## Examples  
 次のコード例を使用する方法を示しています、 <xref:System.Drawing.Image.PixelFormat%2A>、 <xref:System.Drawing.Image.Height%2A>、 <xref:System.Drawing.Image.Width%2A>、および<xref:System.Drawing.Imaging.BitmapData.Scan0%2A>プロパティ以外の場合は、<xref:System.Drawing.Bitmap.LockBits%2A>と<xref:System.Drawing.Bitmap.UnlockBits%2A>メソッドおよび<xref:System.Drawing.Imaging.ImageLockMode>列挙します。 この例を使用する方法の例を提供するが、すべてのピクセル形式では正しく動作するに設計されていません、<xref:System.Drawing.Bitmap.LockBits%2A>メソッドです。 この例は、Windows フォームで使用するよう設計されています。 この例を実行するフォームに貼り付けるし、フォームの処理<xref:System.Windows.Forms.Control.Paint>イベントを呼び出すことによって、`LockUnlockBitsExample`渡してメソッド`e`として<xref:System.Windows.Forms.PaintEventArgs>です。  
  
 [!code-cpp[System.Drawing.BitmapMembers#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.BitmapMembers/CPP/form1.cpp#5)]
 [!code-csharp[System.Drawing.BitmapMembers#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.BitmapMembers/CS/form1.cs#5)]
 [!code-vb[System.Drawing.BitmapMembers#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.BitmapMembers/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">操作に失敗しました。</exception>
      </Docs>
    </Member>
  </Members>
</Type>
