<Type Name="CharacterRange" FullName="System.Drawing.CharacterRange">
  <TypeSignature Language="C#" Value="public struct CharacterRange" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit CharacterRange extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.CharacterRange" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>文字列内の文字位置の範囲を指定します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例を作成する方法を示しています、<xref:System.Drawing.CharacterRange>および文字列の一部を強調表示に使用します。 この例は、Windows フォームで使用するよう設計されています。 フォームに、呼び出しの例をコピーして貼り付けて、`HighlightACharacterRange`メソッドは、フォームの処理と<xref:System.Windows.Forms.Control.Paint>イベントを渡す`e`として<xref:System.Windows.Forms.PaintEventArgs>です。  
  
 [!code-cpp[System.Drawing.CharacterRangeExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.CharacterRangeExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.CharacterRangeExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.CharacterRangeExample/CS/form1.cs#1)]
 [!code-vb[System.Drawing.CharacterRangeExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.CharacterRangeExample/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CharacterRange (int First, int Length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 First, int32 Length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.CharacterRange.#ctor(System.Int32,System.Int32)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="First" Type="System.Int32" />
        <Parameter Name="Length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="First">最初の文字の範囲内の位置。 たとえば場合、<c>最初</c>設定されている範囲の最初の位置は、文字列内の位置 0 を 0 にします。</param>
        <param name="Length">範囲内の位置の数。</param>
        <summary>新しいインスタンスを初期化、<see cref="T:System.Drawing.CharacterRange" />構造体、文字列内の文字位置の範囲を指定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例を作成する方法を示しています、<xref:System.Drawing.CharacterRange>および文字列の一部を強調表示に使用します。 この例は、Windows フォームで使用するよう設計されています。 フォームに、呼び出しの例をコピーして貼り付けて、`HighlightACharacterRange`メソッドは、フォームの処理と<xref:System.Windows.Forms.Control.Paint>イベントを渡す`e`として<xref:System.Windows.Forms.PaintEventArgs>です。  
  
 [!code-cpp[System.Drawing.CharacterRangeExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.CharacterRangeExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.CharacterRangeExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.CharacterRangeExample/CS/form1.cs#1)]
 [!code-vb[System.Drawing.CharacterRangeExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.CharacterRangeExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.CharacterRange.Equals(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">等しいかどうかを比較するオブジェクト。</param>
        <summary>このオブジェクトは、指定したオブジェクトに等しいかどうかを示す値を取得します。</summary>
        <returns>
          <see langword="true" />指定したオブジェクトが同じインスタンスであることを示す<see cref="P:System.Drawing.CharacterRange.First" />と<see cref="P:System.Drawing.CharacterRange.Length" />; このインスタンスの値とそれ以外の場合、<see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用することも<xref:System.Drawing.CharacterRange.op_Equality%2A>等価性をテストします。  
  
   
  
## Examples  
 <xref:System.Drawing.CharacterRange.Equals%2A> メソッドの使用方法を次の例に示します。 この例を実行するには、Windows フォームに貼り付けます。 フォームの処理<xref:System.Windows.Forms.Control.Paint>イベントと呼び出し、`CharacterRangeEquality2`メソッドから、<xref:System.Windows.Forms.Control.Paint>イベント処理メソッドを渡す`e`として<xref:System.Windows.Forms.PaintEventArgs>です。  
  
 [!code-csharp[System.Drawing.MiscWhidbeySnippets#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.MiscWhidbeySnippets/CS/Form1.cs#2)]
 [!code-vb[System.Drawing.MiscWhidbeySnippets#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.MiscWhidbeySnippets/VB/Form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="First">
      <MemberSignature Language="C#" Value="public int First { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 First" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.CharacterRange.First" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この最初の文字の文字列内の位置を取得または<see cref="T:System.Drawing.CharacterRange" />です。</summary>
        <value>この最初の位置<see cref="T:System.Drawing.CharacterRange" />です。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.CharacterRange.GetHashCode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>このインスタンスのハッシュ コードを返します。</summary>
        <returns>このインスタンスのハッシュ コードである 32 ビット符号付き整数。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public int Length { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Length" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.CharacterRange.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この位置の数を取得または<see cref="T:System.Drawing.CharacterRange" />です。</summary>
        <value>この位置の数<see cref="T:System.Drawing.CharacterRange" />です。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Drawing.CharacterRange cr1, System.Drawing.CharacterRange cr2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Drawing.CharacterRange cr1, valuetype System.Drawing.CharacterRange cr2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.CharacterRange.op_Equality(System.Drawing.CharacterRange,System.Drawing.CharacterRange)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cr1" Type="System.Drawing.CharacterRange" />
        <Parameter Name="cr2" Type="System.Drawing.CharacterRange" />
      </Parameters>
      <Docs>
        <param name="cr1">A<see cref="T:System.Drawing.CharacterRange" />等しいかどうかを比較します。</param>
        <param name="cr2">A<see cref="T:System.Drawing.CharacterRange" />等しいかどうかを比較します。</param>
        <summary>2 つの <see cref="T:System.Drawing.CharacterRange" /> オブジェクトを比較します。 示す値を取得するかどうか、<see cref="P:System.Drawing.CharacterRange.First" />と<see cref="P:System.Drawing.CharacterRange.Length" />、2 つの値<see cref="T:System.Drawing.CharacterRange" />オブジェクトが等しい。</summary>
        <returns>
          <see langword="true" />2 つを示すために<see cref="T:System.Drawing.CharacterRange" />オブジェクトが同じである<see cref="P:System.Drawing.CharacterRange.First" />と<see cref="P:System.Drawing.CharacterRange.Length" />値です。 それ以外の場合、<see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 等しいかどうかを使用してテストすることも、<xref:System.Drawing.CharacterRange.Equals%2A>メソッドです。  
  
 この演算子を同等の方法は、します。<xref:System.Drawing.CharacterRange.Equals%28System.Object%29?displayProperty=nameWithType>  
  
## Examples  
 次の例で使用する方法、<xref:System.Drawing.CharacterRange.op_Equality%2A>演算子。 この例を実行するには、Windows フォームに貼り付けます。 フォームの処理<xref:System.Windows.Forms.Control.Paint>イベントと呼び出し、`CharacterRangeEquality1`メソッドから、<xref:System.Windows.Forms.Control.Paint>イベント処理メソッドを渡す`e`として<xref:System.Windows.Forms.PaintEventArgs>です。  
  
 [!code-csharp[System.Drawing.MiscWhidbeySnippets#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.MiscWhidbeySnippets/CS/Form1.cs#1)]
 [!code-vb[System.Drawing.MiscWhidbeySnippets#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.MiscWhidbeySnippets/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Drawing.CharacterRange cr1, System.Drawing.CharacterRange cr2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Drawing.CharacterRange cr1, valuetype System.Drawing.CharacterRange cr2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.CharacterRange.op_Inequality(System.Drawing.CharacterRange,System.Drawing.CharacterRange)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cr1" Type="System.Drawing.CharacterRange" />
        <Parameter Name="cr2" Type="System.Drawing.CharacterRange" />
      </Parameters>
      <Docs>
        <param name="cr1">A<see cref="T:System.Drawing.CharacterRange" />非等値を比較します。</param>
        <param name="cr2">A<see cref="T:System.Drawing.CharacterRange" />非等値を比較します。</param>
        <summary>2 つの <see cref="T:System.Drawing.CharacterRange" /> オブジェクトを比較します。 示す値を取得するかどうか、<see cref="P:System.Drawing.CharacterRange.First" />または<see cref="P:System.Drawing.CharacterRange.Length" />、2 つの値<see cref="T:System.Drawing.CharacterRange" />オブジェクトが等しくないです。</summary>
        <returns>
          <see langword="true" />いずれかを示すために、<see cref="P:System.Drawing.CharacterRange.First" />または<see cref="P:System.Drawing.CharacterRange.Length" />、2 つの値<see cref="T:System.Drawing.CharacterRange" />異なるオブジェクト。 それ以外の場合、<see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.CharacterRange.op_Inequality%2A>と逆の働きを返します、<xref:System.Drawing.CharacterRange.op_Equality%2A>メソッドです。  
  
 この演算子を同等の方法は、します。<xref:System.Drawing.CharacterRange.Equals%28System.Object%29?displayProperty=nameWithType>  
  
## Examples  
 <xref:System.Drawing.CharacterRange.op_Inequality%2A> メソッドの使用方法を次の例に示します。 この例を実行するには、Windows フォームに貼り付けます。 フォームの処理<xref:System.Windows.Forms.Control.Paint>イベントと呼び出し、`CharacterRangeInequality`メソッドから、<xref:System.Windows.Forms.Control.Paint>イベント処理メソッドを渡す`e`として<xref:System.Windows.Forms.PaintEventArgs>です。  
  
 [!code-csharp[System.Drawing.MiscWhidbeySnippets#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.MiscWhidbeySnippets/CS/Form1.cs#3)]
 [!code-vb[System.Drawing.MiscWhidbeySnippets#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.MiscWhidbeySnippets/VB/Form1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
