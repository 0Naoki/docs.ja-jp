<Type Name="ImageFormatConverter" FullName="System.Drawing.ImageFormatConverter">
  <TypeSignature Language="C#" Value="public class ImageFormatConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ImageFormatConverter extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.ImageFormatConverter" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <see cref="T:System.Drawing.ImageFormatConverter" />変換に使用できるクラスは、<see cref="T:System.Drawing.Imaging.ImageFormat" />を別の種類を 1 つのデータからのオブジェクト。 このクラスにアクセス、<see cref="T:System.ComponentModel.TypeDescriptor" />オブジェクト。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 実行する型コンバーターを使用して、値のデータ型を変換できます。 実行する型コンバーターには、テキストから値への変換またはユーザーがから選択できる値の一覧を提供することによってデザイン時にプロパティの構成もサポートしています。 アクセス、<xref:System.Drawing.ImageFormatConverter>クラスを通じて、<xref:System.ComponentModel.TypeDescriptor>クラスを呼び出して、<xref:System.ComponentModel.TypeDescriptor.GetConverter%2A>メソッドです。  
  
 <xref:System.Drawing.ImageFormatConverter>で指定されている、既知のイメージ形式の変換を<xref:System.Drawing.Imaging.ImageFormat>クラスです。  
  
> [!NOTE]
>  BMP、JPEG、間の変換などのイメージ形式間で変換する場合のいずれかを使用、<xref:System.Drawing.Image.Save%2A?displayProperty=nameWithType>を受け取るメソッド、<xref:System.Drawing.Imaging.ImageFormat>オブジェクトをパラメーターとして。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImageFormatConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.ImageFormatConverter.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Drawing.ImageFormatConverter" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 作成しない、<xref:System.Drawing.ImageFormatConverter>オブジェクトに直接できます。 アクセス、<xref:System.Drawing.ImageFormatConverter>クラスを通じて、<xref:System.ComponentModel.TypeDescriptor>クラスを呼び出して、<xref:System.ComponentModel.TypeDescriptor.GetConverter%2A>メソッドです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.ImageFormatConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">フォーマッタ コンテキスト。 このオブジェクトは、このコンバーターはから呼び出される環境に関する詳細情報を使用できます。 可能性があります<see langword="null" />ので、常に確認する必要があります。 また、コンテキスト オブジェクトのプロパティを返すことがあります<see langword="null" />です。</param>
        <param name="sourceType">変換する型。</param>
        <summary>このコンバーターが、指定したソースの種類のオブジェクトをコンバーターのネイティブ型に変換できるかどうかを示します。</summary>
        <returns>このメソッドが戻る<see langword="true" />場合、このオブジェクトが変換を実行できます。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.ImageFormatConverter>で指定されている、既知のイメージ形式の変換を<xref:System.Drawing.Imaging.ImageFormat>クラスです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.ImageFormatConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><see cref="T:System.ComponentModel.ITypeDescriptorContext" />この型変換のコンテキストを指定します。</param>
        <param name="destinationType"><see cref="T:System.Type" />これを変換する型を表す<see cref="T:System.Drawing.Imaging.ImageFormat" />オブジェクト。</param>
        <summary>このコンバーターが、オブジェクトをコンテキストを使用して指定した型に変換できるかどうかを示す値を取得します。</summary>
        <returns>このメソッドが戻る<see langword="true" />場合、このオブジェクトが変換を実行できます。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.ImageFormatConverter>で指定されている、既知のイメージ形式の変換を<xref:System.Drawing.Imaging.ImageFormat>クラスです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.ImageFormatConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">フォーマッタ コンテキスト。 このオブジェクトは、このコンバーターはから呼び出される環境に関する詳細情報を使用できます。 可能性があります<see langword="null" />ので、常に確認する必要があります。 また、コンテキスト オブジェクトのプロパティを返すことがあります<see langword="null" />です。</param>
        <param name="culture">A<see cref="T:System.Globalization.CultureInfo" />特定のカルチャの書式指定規則を指定するオブジェクト。</param>
        <param name="value">変換対象のオブジェクト。</param>
        <summary>指定したオブジェクトを<see cref="T:System.Drawing.Imaging.ImageFormat" />オブジェクト。</summary>
        <returns>変換後のオブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.ImageFormatConverter>で指定されている、既知のイメージ形式の変換を<xref:System.Drawing.Imaging.ImageFormat>クラスです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">変換を完了できません。</exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.ImageFormatConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">フォーマッタ コンテキスト。 このオブジェクトは、このコンバーターはから呼び出される環境に関する詳細情報を使用できます。 可能性があります<see langword="null" />ので、常に確認する必要があります。 また、コンテキスト オブジェクトのプロパティを返すことがあります<see langword="null" />です。</param>
        <param name="culture">A<see cref="T:System.Globalization.CultureInfo" />特定のカルチャの書式指定規則を指定するオブジェクト。</param>
        <param name="value">変換対象のオブジェクト。</param>
        <param name="destinationType">オブジェクトの変換後の型。</param>
        <summary>指定したオブジェクトを指定した型に変換します。</summary>
        <returns>変換後のオブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.ImageFormatConverter>で指定されている、既知のイメージ形式の変換を<xref:System.Drawing.Imaging.ImageFormat>クラスです。  
  
 最も一般的な型変換とは、文字列型との間です。 既定の実装、<xref:System.Object.ToString%2A>オブジェクトのメソッド、オブジェクトが有効な場合、および変換先の型が`string`です。 このメソッドは、指定したオブジェクトを指定した型に変換できません、スロー、<xref:System.NotSupportedException>例外。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">変換を完了できません。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="destinationType" /> は <see langword="null." /> です</exception>
      </Docs>
    </Member>
    <Member MemberName="GetStandardValues">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.TypeConverter.StandardValuesCollection GetStandardValues (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ComponentModel.TypeConverter/StandardValuesCollection GetStandardValues(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.ImageFormatConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverter+StandardValuesCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">フォーマッタ コンテキスト。 このオブジェクトは、このコンバーターはから呼び出される環境に関する詳細情報を使用できます。 可能性があります<see langword="null" />ので、常に確認する必要があります。 また、コンテキスト オブジェクトのプロパティを返すことがあります<see langword="null" />です。</param>
        <summary>この検証コントロールが用に設計されたデータ型の標準値のセットを含むコレクションを取得します。 返します<see langword="null" />データ型が標準値セットをサポートしていない場合。</summary>
        <returns>有効な値の標準セットを含むコレクションまたは<see langword="null" />です。 既定の実装を常に返します<see langword="null" />です。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStandardValuesSupported">
      <MemberSignature Language="C#" Value="public override bool GetStandardValuesSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetStandardValuesSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.ImageFormatConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">追加のコンテキストの指定された、型記述子。</param>
        <summary>このオブジェクトが、一覧から選択できる値の標準セットをサポートするかどうかを示します。</summary>
        <returns>このメソッドが戻る<see langword="true" />場合、<see cref="Overload:System.Drawing.ImageFormatConverter.GetStandardValues" />オブジェクトをサポートしている値の共通セットを検索するメソッドを呼び出す必要があります。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
