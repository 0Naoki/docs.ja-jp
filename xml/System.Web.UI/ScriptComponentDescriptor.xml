<Type Name="ScriptComponentDescriptor" FullName="System.Web.UI.ScriptComponentDescriptor">
  <TypeSignature Language="C#" Value="public class ScriptComponentDescriptor : System.Web.UI.ScriptDescriptor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ScriptComponentDescriptor extends System.Web.UI.ScriptDescriptor" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.ScriptComponentDescriptor" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.ScriptDescriptor</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>サーバー コンポーネントをクライアント スクリプトに変換するには、ラッパーを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このクラスは、コンポーネント、要素、プロパティ、およびイベントへの参照を保持するために内部辞書を使用します。 このディクショナリを設定するを使用して、 <xref:System.Web.UI.ScriptComponentDescriptor.AddComponentProperty%2A>、 <xref:System.Web.UI.ScriptComponentDescriptor.AddElementProperty%2A>、 <xref:System.Web.UI.ScriptComponentDescriptor.AddProperty%2A>、および<xref:System.Web.UI.ScriptComponentDescriptor.AddEvent%2A>メソッドです。 完了したらを呼び出す、<xref:System.Web.UI.ScriptComponentDescriptor.GetScript%2A>クライアント スクリプトを生成する方法です。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ScriptComponentDescriptor (string type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptComponentDescriptor.#ctor(System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">対象のクライアント コンポーネントの型。</param>
        <summary>
          <see cref="T:System.Web.UI.ScriptComponentDescriptor" /> クラスのインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="type" /> は <see langword="null" /> または空の文字列 ("") です。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddComponentProperty">
      <MemberSignature Language="C#" Value="public void AddComponentProperty (string name, string componentID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddComponentProperty(string name, string componentID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptComponentDescriptor.AddComponentProperty(System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="componentID" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">プロパティの名前。</param>
        <param name="componentID">対象コンポーネントの ID。</param>
        <summary>指定したプロパティを追加し、そのプロパティを指定した要素に関連付けます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、コントロールで使用され、クライアント スクリプトに変換されるプロパティの内部ディクショナリに指定したプロパティを追加、<xref:System.Web.UI.ScriptComponentDescriptor.GetScript%2A>メソッドです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" />または<paramref name="componentID" />は<see langword="null" />または空の文字列 ("") です。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddElementProperty">
      <MemberSignature Language="C#" Value="public void AddElementProperty (string name, string elementID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddElementProperty(string name, string elementID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptComponentDescriptor.AddElementProperty(System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="elementID" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">プロパティの名前。</param>
        <param name="elementID">対象となる要素の ID。</param>
        <summary>指定したプロパティを追加し、そのプロパティを指定されたコンポーネントに関連付けます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドでは、指定されたプロパティを追加でクライアント スクリプトに変換されるプロパティの内部ディクショナリに、<xref:System.Web.UI.ScriptComponentDescriptor.GetScript%2A>メソッドです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" />または<paramref name="component" />は<see langword="null" />または空の文字列 ("") です。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddEvent">
      <MemberSignature Language="C#" Value="public void AddEvent (string name, string handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddEvent(string name, string handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptComponentDescriptor.AddEvent(System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="handler" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">イベントの名前です。</param>
        <param name="handler">指定したイベントのハンドラー関数の名前。</param>
        <summary>指定されたイベントとハンドラーを追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドでクライアント スクリプトに変換されるイベントの内部ディクショナリに、イベントとハンドラーを追加、<xref:System.Web.UI.ScriptComponentDescriptor.GetScript%2A>メソッドです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" />または<paramref name="handler" />は<see langword="null" />または空の文字列 ("") です。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddProperty">
      <MemberSignature Language="C#" Value="public void AddProperty (string name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddProperty(string name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptComponentDescriptor.AddProperty(System.String,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">プロパティの名前。</param>
        <param name="value">プロパティの値。</param>
        <summary>指定されたプロパティと値を追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドによってクライアント スクリプトに変換されるプロパティの内部ディクショナリにプロパティと値を追加、<xref:System.Web.UI.ScriptComponentDescriptor.GetScript%2A>メソッドです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> は <see langword="null" /> または空の文字列 ("") です。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddScriptProperty">
      <MemberSignature Language="C#" Value="public void AddScriptProperty (string name, string script);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddScriptProperty(string name, string script) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptComponentDescriptor.AddScriptProperty(System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="script" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">プロパティの名前。</param>
        <param name="script">ブラウザーにレンダリングするスクリプトです。</param>
        <summary>指定したプロパティを追加し、プロパティを指定したスクリプトに関連付けます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.ScriptComponentDescriptor.AddScriptProperty%2A>ブラウザーにシリアル化されていないスクリプトを表示するメソッド。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="script" /> は <see langword="null" /> または空の文字列 ("") です。</exception>
      </Docs>
    </Member>
    <Member MemberName="ClientID">
      <MemberSignature Language="C#" Value="public virtual string ClientID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClientID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptComponentDescriptor.ClientID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>派生クラスでオーバーライドされると、クライアント コンポーネントの識別子を取得します。</summary>
        <value>クライアント コンポーネントの ID。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetScript">
      <MemberSignature Language="C#" Value="protected override string GetScript ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance string GetScript() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptComponentDescriptor.GetScript" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ページでターゲット コントロールを実装しているクライアント スクリプトを取得します。</summary>
        <returns>ページでターゲット コントロールを実装しているクライアント スクリプトです。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ID">
      <MemberSignature Language="C#" Value="public virtual string ID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptComponentDescriptor.ID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在の ID を取得または<see cref="T:System.Web.UI.ScriptComponentDescriptor" />インスタンス。</summary>
        <value>現在の ID<see cref="T:System.Web.UI.ScriptComponentDescriptor" />インスタンス、設定、それ以外の場合、空の文字列 ("") です。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public string Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Type" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptComponentDescriptor.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または対象のクライアント コンポーネントの種類を設定します。</summary>
        <value>対象のクライアント コンポーネントの型。</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">プロパティを設定しようとしましたが<see langword="null" />です。</exception>
      </Docs>
    </Member>
  </Members>
</Type>
