<Type Name="HtmlTableCell" FullName="System.Web.UI.HtmlControls.HtmlTableCell">
  <TypeSignature Language="C#" Value="public class HtmlTableCell : System.Web.UI.HtmlControls.HtmlContainerControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HtmlTableCell extends System.Web.UI.HtmlControls.HtmlContainerControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.HtmlControls.HtmlTableCell" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.HtmlControls.HtmlContainerControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Web.UI.ConstructorNeedsTag(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>表す、<see langword="&lt;td&gt;" />と<see langword="&lt;th&gt;" />で HTML 要素、<see cref="T:System.Web.UI.HtmlControls.HtmlTableRow" />オブジェクト。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `<td>`要素は、テーブル内のデータ セルを表すときに、`<th>`要素は、テーブルのヘッダー セルを表します。 使用して、<xref:System.Web.UI.HtmlControls.HtmlTableCell>をプログラムから制御クラス、`<td>`と`<th>`で HTML 要素、<xref:System.Web.UI.HtmlControls.HtmlTableRow>オブジェクト。  
  
 <xref:System.Web.UI.HtmlControls.HtmlTableCell>クラスでは、背景色、罫線の色、高さおよび幅を指定することによって、テーブル内のセルの外観をカスタマイズすることができます。 使用してこれらの属性が設定された、 <xref:System.Web.UI.HtmlControls.HtmlTableCell.BgColor%2A>、 <xref:System.Web.UI.HtmlControls.HtmlTableCell.BorderColor%2A>、 <xref:System.Web.UI.HtmlControls.HtmlTableCell.Height%2A>、および<xref:System.Web.UI.HtmlControls.HtmlTableCell.Width%2A>プロパティです。  
  
 内容の垂直および水平方向の配置を指定することによって、セルのコンテンツを表示する方法を制御できます。 セルの末尾に達したときに、次の行にコンテンツを継続に自動的にかどうかを指定することもできます。 水平方向の配置はによって制御されます、<xref:System.Web.UI.HtmlControls.HtmlTableCell.Align%2A>プロパティの中に、<xref:System.Web.UI.HtmlControls.HtmlTableCell.VAlign%2A>プロパティは縦方向の配置を制御します。 <xref:System.Web.UI.HtmlControls.HtmlTableCell.NoWrap%2A>プロパティは、テキストの折り返しが無効になっているかどうかを示します。  
  
 使用して、<xref:System.Web.UI.HtmlControls.HtmlTableCell.ColSpan%2A>または<xref:System.Web.UI.HtmlControls.HtmlTableCell.RowSpan%2A>プロパティ、列またはセルを占有する行の数を制御することができます。 たとえばを設定して、テーブル内の 2 つの列を占有するセルを作成することができます、<xref:System.Web.UI.HtmlControls.HtmlTableCell.ColSpan%2A>プロパティを`2`です。  
  
 インスタンスの初期プロパティ値の一覧については<xref:System.Web.UI.HtmlControls.HtmlTableCell>を参照してください、<xref:System.Web.UI.HtmlControls.HtmlTableCell.%23ctor%2A>コンス トラクターです。  
  
> [!CAUTION]
>  このコントロールは、悪意のあるクライアント スクリプトが含まれる可能性があります、ユーザー入力を表示する使用できます。 スクリプトの実行可能ファイル、SQL ステートメント、またはその他のコードをアプリケーションに表示する前に、クライアントから送信される情報を確認します。 ASP.NET は、入力要求の検証機能があり、ユーザー入力の中のスクリプトのブロックと HTML を提供します。 検証サーバー コントロールは、ユーザー入力を評価するも提供されます。 詳細については、次を参照してください。[検証サーバー コントロール構文](http://msdn.microsoft.com/en-us/96d2c59e-693c-4079-9b53-b3ff0d9e9133)です。  
  
   
  
## Examples  
 次のコード例を使用する方法を示しています、<xref:System.Web.UI.HtmlControls.HtmlTableCell>テーブル内のセルの内容を変更します。 注意してください、<xref:System.Web.UI.HtmlControls.HtmlTable.Rows%2A>のコレクション、<xref:System.Web.UI.HtmlControls.HtmlTable>コントロールには、行のコレクションが含まれています (<xref:System.Web.UI.HtmlControls.HtmlTableRow>オブジェクト) の表にします。 <xref:System.Web.UI.HtmlControls.HtmlTableRow.Cells%2A>のコレクション、<xref:System.Web.UI.HtmlControls.HtmlTableRow>オブジェクトは、セルのコレクション (<xref:System.Web.UI.HtmlControls.HtmlTableCell>オブジェクト)、行にします。  
  
 [!code-aspx-csharp[HtmlTblCell#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTblCell/CS/htmltablecellcs.aspx#1)]
 [!code-aspx-vb[HtmlTblCell#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTblCell/VB/htmltablecellvb.aspx#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HtmlTableCell ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlTableCell.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>既定値を使用して <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このコンス トラクターを使用して作成しの新しいインスタンスを初期化、<xref:System.Web.UI.HtmlControls.HtmlTableCell>クラスです。 このコンス トラクターを使用して作成する、<xref:System.Web.UI.HtmlControls.HtmlTableCell>を表すオブジェクト、`<td>`テーブル セルのデータ要素です。  
  
 次の表は、のインスタンスの初期プロパティ値を示しています。<xref:System.Web.UI.HtmlControls.HtmlTableCell>です。  
  
|プロパティ|初期値|  
|--------------|-------------------|  
|<xref:System.Web.UI.HtmlControls.HtmlControl.TagName%2A>|"Td"リテラル文字列です。|  
  
   
  
## Examples  
 次のコード例は、のインスタンスを作成する方法を示します、<xref:System.Web.UI.HtmlControls.HtmlTable>で制御<xref:System.Web.UI.HtmlControls.HtmlTableCell>を制御し、Web ページで、テーブルに配置します。 注方法、<xref:System.Web.UI.HtmlControls.HtmlTableCell>コントロールの既定のコンス トラクターを使用して作成する、`<td>`要素、文字列パラメーターを受け取るオーバー ロードされたコンス トラクターが使用されますが、リテラル文字列"th"で作成する、`<th>`要素。  
  
 [!code-aspx-csharp[HtmlTableCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTableCtor/CS/htmltablectorcs.aspx#1)]
 [!code-aspx-vb[HtmlTableCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTableCtor/VB/htmltablectorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HtmlTableCell (string tagName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string tagName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlTableCell.#ctor(System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="tagName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tagName">タグの要素名。</param>
        <summary>新しいインスタンスを初期化、<see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" />クラス、指定されたタグ名を使用します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このコンス トラクターを使用して作成しの新しいインスタンスを初期化、<xref:System.Web.UI.HtmlControls.HtmlTableCell>クラスです。 作成することができます、<xref:System.Web.UI.HtmlControls.HtmlTableCell>内のセルを表すオブジェクト、<xref:System.Web.UI.HtmlControls.HtmlTable>コントロール。 作成によく使用する<xref:System.Web.UI.HtmlControls.HtmlTableCell>を表すオブジェクト、`<th>`テーブル セルの見出し要素。 このコンス トラクターを使用して作成することができますが、`<td>`要素を表のデータ セルでは、通常使用する既定のコンス トラクターです。  
  
> [!NOTE]
>  このコンス トラクターでは、作成、セルの要素を指定することができますが、`<th>`要素は、唯一 cell 要素をサポートします。 このコンス トラクターでは、将来の互換性のため、使用可能になる可能性があるその他の HTML セル要素を作成できます。  
  
 次の表は、のインスタンスの初期プロパティ値を示しています。<xref:System.Web.UI.HtmlControls.HtmlTableCell>です。  
  
|プロパティ|初期値|  
|--------------|-------------------|  
|<xref:System.Web.UI.HtmlControls.HtmlControl.TagName%2A>|`tagName` パラメーターの値。|  
  
   
  
## Examples  
 次のコード例は、のインスタンスを作成する方法を示します、<xref:System.Web.UI.HtmlControls.HtmlTable>で制御<xref:System.Web.UI.HtmlControls.HtmlTableCell>を制御し、Web ページで、テーブルに配置します。 注方法、<xref:System.Web.UI.HtmlControls.HtmlTableCell>コントロールの既定のコンス トラクターを使用して作成する、`<td>`要素、文字列パラメーターを受け取るオーバー ロードされたコンス トラクターは、リテラル"th"と作成に使用中に、`<th>`要素。  
  
 [!code-aspx-csharp[HtmlTableCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTableCtor/CS/htmltablectorcs.aspx#1)]
 [!code-aspx-vb[HtmlTableCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTableCtor/VB/htmltablectorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Align">
      <MemberSignature Language="C#" Value="public string Align { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Align" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlTableCell.Align" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはのインスタンスによって表されるセルの内容の水平方向の配置を設定、<see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" />クラスです。</summary>
        <value>インスタンスで表されるセルの内容の水平方向の配置<see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" />です。 既定値は<see cref="F:System.String.Empty" />、このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.HtmlControls.HtmlTableCell.Align%2A>のインスタンスで表されるセルの内容の水平方向の配置を指定するプロパティ、<xref:System.Web.UI.HtmlControls.HtmlTableCell>クラスです。  
  
> [!NOTE]
>  このプロパティの設定のインスタンスで表されるセルのみに影響を与える、<xref:System.Web.UI.HtmlControls.HtmlTableCell>クラスです。 テーブルの行全体のセルに同一の配置を適用するには、設定、<xref:System.Web.UI.HtmlControls.HtmlTableRow.Align%2A>のインスタンスによって表される行のプロパティ、<xref:System.Web.UI.HtmlControls.HtmlTableRow>クラスです。  
  
 次の表に、このプロパティの使用できる値を示します。  
  
|値|説明|  
|-----------|-----------------|  
|`Left`|セルの左端とセルの内容を配置します。|  
|`Center`|セルの中央のセルの内容を配置します。|  
|`Right`|セルの右端とセルの内容を配置します。|  
  
> [!NOTE]
>  使用することも`Justify`と`Char`このプロパティの値としてです。 ただし、すべてのブラウザーがこれらの機能をサポートします。  
  
   
  
## Examples  
 次のコード例を使用する方法を示しています、<xref:System.Web.UI.HtmlControls.HtmlTableCell.Align%2A>プロパティ内のセルの内容の配置をプログラムで制御する、<xref:System.Web.UI.HtmlControls.HtmlTable>コントロール。  
  
 [!code-aspx-csharp[HtmlTblCellBehavior#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTblCellBehavior/CS/htmltablecellbehaviorcs.aspx#1)]
 [!code-aspx-vb[HtmlTblCellBehavior#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTblCellBehavior/VB/htmltablecellbehaviorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BgColor">
      <MemberSignature Language="C#" Value="public string BgColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BgColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlTableCell.BgColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定のインスタンスで表されるセルの背景色、<see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" />クラスです。</summary>
        <value>インスタンスで表されるセルの背景色<see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.HtmlControls.HtmlTableCell.BgColor%2A>プロパティのインスタンスで表されるセルの背景色を指定する、<xref:System.Web.UI.HtmlControls.HtmlTableCell>クラスです。 名前またはにシャープ記号の前に、16 進数の値を使用して、色を指定できます (#)、#RRGGBB の形式でします。 RR、GG、および BB、255 の範囲をそれぞれ、色の赤、緑、および青の要素を示す 0 から 16 進数の値を表します。 たとえば、値 # 0000ff 青の色。 青の要素に最大値 (FF) を指定する際に、最小値 (00) を赤と緑の要素を指定します。  
  
 次の表は、16 個の定義済み HTML 色の名前および対応する 16 進値を使用できる、<xref:System.Web.UI.HtmlControls.HtmlTableCell.BgColor%2A>プロパティです。 HTML 色の詳細については、次を参照してください。、 [World Wide Web コンソーシアム (W3C) の Web サイト](http://go.microsoft.com/fwlink/?linkid=37125)です。  
  
|色の名前|16 進値|  
|----------------|-----------------------|  
|アクア|# 00FFFF|  
|黒|#000000|  
|青|#0000FF|  
|ピンク|# FF00FF|  
|灰色|#808080|  
|緑|#008000|  
|ライム|#00FF00|  
|栗色|#800000|  
|ネイビー カラー|#000080|  
|オリーブ|#808000|  
|紫色|#800080|  
|赤|#FF0000|  
|Silver|# C0C0C0|  
|青緑|#008080|  
|白|#FFFFFF|  
|黄|#FFFF00|  
  
 使用するため利用可能な色、<xref:System.Web.UI.HtmlControls.HtmlTableCell.BgColor%2A>からプロパティを決定できます、<xref:System.Drawing.KnownColor>列挙します。  
  
 色の名前は区別されません。  
  
   
  
## Examples  
 次のコード例を使用する方法を示しています、<xref:System.Web.UI.HtmlControls.HtmlTableCell.BgColor%2A>プロパティ内のセルの背景色をプログラムで制御する、<xref:System.Web.UI.HtmlControls.HtmlTable>コントロール。  
  
 [!code-aspx-csharp[HtmlTblCellAppearance#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTblCellAppearance/CS/htmltablecellappearancecs.aspx#1)]
 [!code-aspx-vb[HtmlTblCellAppearance#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTblCellAppearance/VB/htmltablecellappearancevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderColor">
      <MemberSignature Language="C#" Value="public string BorderColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BorderColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlTableCell.BorderColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定のインスタンスで表されるセルの境界線の色、<see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" />クラスです。</summary>
        <value>インスタンスで表されるセルの境界線の色<see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.HtmlControls.HtmlTableCell.BorderColor%2A>プロパティのインスタンスで表されるセルの境界線の色を指定する、<xref:System.Web.UI.HtmlControls.HtmlTableCell>クラスです。 名前またはにシャープ記号の前に、16 進数の値を使用して、色を指定できます (#)、#RRGGBB の形式でします。 RR、GG、および BB、255 の範囲をそれぞれ、色の赤、緑、および青の要素を示す 0 から 16 進数の値を表します。 たとえば、値 # 0000ff 青の色。 青の要素に最大値 (FF) を指定する際に、最小値 (00) を赤と緑の要素を指定します。  
  
 次の表は、16 個の定義済み HTML 色の名前および対応する 16 進値を使用できる、<xref:System.Web.UI.HtmlControls.HtmlTableCell.BorderColor%2A>プロパティです。 HTML 色の詳細については、次を参照してください。、 [World Wide Web コンソーシアム (W3C) の Web](http://go.microsoft.com/fwlink/?linkid=37125)サイトです。  
  
|色の名前|16 進値|  
|----------------|-----------------------|  
|アクア|# 00FFFF|  
|黒|#000000|  
|青|#0000FF|  
|ピンク|# FF00FF|  
|灰色|#808080|  
|緑|#008000|  
|ライム|#00FF00|  
|栗色|#800000|  
|ネイビー カラー|#000080|  
|オリーブ|#808000|  
|紫色|#800080|  
|赤|#FF0000|  
|Silver|# C0C0C0|  
|青緑|#008080|  
|白|#FFFFFF|  
|黄|#FFFF00|  
  
 使用するため利用可能な色、<xref:System.Web.UI.HtmlControls.HtmlTableCell.BorderColor%2A>からプロパティを決定できます、<xref:System.Drawing.KnownColor>列挙します。  
  
 色の名前は区別されません。  
  
   
  
## Examples  
 次のコード例を使用する方法を示しています、<xref:System.Web.UI.HtmlControls.HtmlTableCell.BorderColor%2A>プロパティ内のセルの境界線の色をプログラムで制御する、<xref:System.Web.UI.HtmlControls.HtmlTable>コントロール。  
  
 [!code-aspx-csharp[HtmlTblCellAppearance#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTblCellAppearance/CS/htmltablecellappearancecs.aspx#1)]
 [!code-aspx-vb[HtmlTblCellAppearance#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTblCellAppearance/VB/htmltablecellappearancevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ColSpan">
      <MemberSignature Language="C#" Value="public int ColSpan { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ColSpan" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlTableCell.ColSpan" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定のインスタンスで表されるセルによって占有されている列の数、<see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" />クラスです。</summary>
        <value>インスタンスで表されるセルによって占有されている列の数<see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" />です。 既定値は<see langword="-1" />、このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 インスタンスで表されるセルで、<xref:System.Web.UI.HtmlControls.HtmlTableCell>クラスを使用して、<xref:System.Web.UI.HtmlControls.HtmlTableCell.ColSpan%2A>プロパティ セルが使用する列の数を指定します。 これにより、1 つ以上の列を使用するテーブルのセルを作成できます。 たとえば、2 つの列と 2 つの行を含むテーブルがあるとします。 両方の列にまたがるテーブルの見出しセルを作成することができます。 設定、<xref:System.Web.UI.HtmlControls.HtmlTableCell.ColSpan%2A>する最初の行の左端のセルのプロパティ`2`をこのセルでは、テーブル内の 2 つの列のことを示します。  
  
> [!CAUTION]
>  列にまたがって、場合は、各列に対して、行のセルを 1 つ少なくを定義してください。 たとえば、次の 2 つの列にまたがって表示する場合は、現在の行に 1 つのセルを少なくを定義します。 それ以外の場合、その行がテーブル内の列数よりも長くなり、テーブルは表示されません。  
  
   
  
## Examples  
 次のコード例を使用する方法を示しています、<xref:System.Web.UI.HtmlControls.HtmlTableCell.ColSpan%2A>ことを指定するプロパティの最初の行のセル、<xref:System.Web.UI.HtmlControls.HtmlTable>コントロールが 2 つの列を占有します。  
  
 [!code-aspx-csharp[HtmlTblCellColSpan#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTblCellColSpan/CS/htmltablecellcolspancs.aspx#1)]
 [!code-aspx-vb[HtmlTblCellColSpan#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTblCellColSpan/VB/htmltablecellcolspanvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public string Height { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Height" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlTableCell.Height" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定のインスタンスで表されるセルの高さ (ピクセル単位) で、<see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" />クラスです。</summary>
        <value>インスタンスで表されるセルの高さ (ピクセル単位) で<see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" />です。 既定値は<see cref="F:System.String.Empty" />、このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.HtmlControls.HtmlTableCell.Height%2A>プロパティのインスタンスで表されるセルの高さをピクセル単位で指定する、<xref:System.Web.UI.HtmlControls.HtmlTableCell>クラスです。 セルの高さを指定すると、同じ行のすべてのセルが自動的に同じ高さにします。  
  
> [!NOTE]
>  セルの内容を表示するために必要なよりも小さな高さを指定すると、このプロパティは無視されます。  
  
   
  
## Examples  
 次のコード例を使用する方法を示しています、<xref:System.Web.UI.HtmlControls.HtmlTableCell.Height%2A>プロパティ内のセルの高さをプログラムで制御する、<xref:System.Web.UI.HtmlControls.HtmlTable>コントロール。  
  
 [!code-aspx-csharp[HtmlTblCellAppearance#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTblCellAppearance/CS/htmltablecellappearancecs.aspx#1)]
 [!code-aspx-vb[HtmlTblCellAppearance#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTblCellAppearance/VB/htmltablecellappearancevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NoWrap">
      <MemberSignature Language="C#" Value="public bool NoWrap { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NoWrap" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlTableCell.NoWrap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.MinimizableAttributeTypeConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはセル内のテキストがのインスタンスによって表されるかどうかを示す値を設定、<see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" />セルの末尾に達すると、このクラスは、自動的に次の行に続行されます。</summary>
        <value>
          <see langword="true" />セルに、テキストが自動的に折り返されない場合それ以外の場合、<see langword="false" />です。 既定値は <see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.HtmlControls.HtmlTableCell.NoWrap%2A>を指定するか、セル内のテキストがのインスタンスによって表されるかどうかを決定するプロパティ、<xref:System.Web.UI.HtmlControls.HtmlTableCell>セルの末尾に達すると、このクラスは、自動的に次の行に続行されます。  
  
   
  
## Examples  
 次のコード例を使用する方法を示しています、<xref:System.Web.UI.HtmlControls.HtmlTableCell.NoWrap%2A>プロパティのセルにテキストを折り返すかどうかをプログラムで制御する、<xref:System.Web.UI.HtmlControls.HtmlTable>コントロール。  
  
 [!code-aspx-csharp[HtmlTblCellBehavior#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTblCellBehavior/CS/htmltablecellbehaviorcs.aspx#1)]
 [!code-aspx-vb[HtmlTblCellBehavior#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTblCellBehavior/VB/htmltablecellbehaviorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderEndTag">
      <MemberSignature Language="C#" Value="protected override void RenderEndTag (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RenderEndTag(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlTableCell.RenderEndTag(System.Web.UI.HtmlTextWriter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">表示されたコンテンツを受け取る <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary><see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> コントロールの終了タグを表示します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlTableCell.RenderEndTag%2A>メソッドは、基本クラスの呼び出し後に追加の書式設定を提供<xref:System.Web.UI.HtmlControls.HtmlContainerControl.RenderEndTag%2A>メソッドです。 により、追加の書式設定、<xref:System.Web.UI.HtmlControls.HtmlTableCell>コントロール レンダリングされる HTML 終了タグの後に戻り値の行を追加して読みやすくします。  
  
 <xref:System.Web.UI.HtmlControls.HtmlTableCell.RenderEndTag%2A>メソッドが、主の機能を拡張するコントロールの開発者によって使用される、<xref:System.Web.UI.HtmlControls.HtmlTableCell>コントロール。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RowSpan">
      <MemberSignature Language="C#" Value="public int RowSpan { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RowSpan" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlTableCell.RowSpan" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定のインスタンスで表されるセルによって占有されている行の数、<see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" />クラスです。</summary>
        <value>インスタンスで表されるセルによって占有されている行の数、<see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" />クラスです。 既定値は<see langword="-1" />、このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 インスタンスで表されるセルで、<xref:System.Web.UI.HtmlControls.HtmlTableCell>クラスを使用して、<xref:System.Web.UI.HtmlControls.HtmlTableCell.RowSpan%2A>プロパティ、セルの位置の行の数を指定します。 これにより、複数の行を占有するテーブルのセルを作成できます。 たとえば、2 つの列と 2 つの行を含むテーブルがあるとします。 両方の行を重複する列を作成することができます。 設定、<xref:System.Web.UI.HtmlControls.HtmlTableCell.RowSpan%2A>する最初の列の左端のセルのプロパティ`2`をこのセルでは、テーブル内の 2 つの行のことを示します。  
  
> [!CAUTION]
>  行のまたがりメモリ割り当て、場合、各の行の列にセルを 1 つ少なくを定義することを確認します。 たとえば、次の 2 つの行にまたがって表示する場合は、その列のセルを 1 つ少なくを定義します。 それ以外の場合、その列がテーブル内の行の数よりも長くなり、テーブルは表示されません。  
  
   
  
## Examples  
 次のコード例を使用する方法を示しています、<xref:System.Web.UI.HtmlControls.HtmlTableCell.RowSpan%2A>ことを指定するプロパティの最初の列のセル、<xref:System.Web.UI.HtmlControls.HtmlTable>コントロールが 2 つの行にまたがっています。  
  
 [!code-aspx-csharp[HtmlTblCellRowSpan#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTblCellRowSpan/CS/htmltablecellrowspancs.aspx#1)]
 [!code-aspx-vb[HtmlTblCellRowSpan#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTblCellRowSpan/VB/htmltablecellrowspanvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VAlign">
      <MemberSignature Language="C#" Value="public string VAlign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string VAlign" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlTableCell.VAlign" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定のインスタンスで表されるセルのコンテンツの縦方向の配置、<see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" />クラスです。</summary>
        <value>インスタンスで表されるセルのコンテンツの縦方向の配置<see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" />です。 既定値は<see cref="F:System.String.Empty" />、このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.HtmlControls.HtmlTableCell.VAlign%2A>のインスタンスで表されるセルのコンテンツの縦方向の配置を指定するプロパティ、<xref:System.Web.UI.HtmlControls.HtmlTableCell>クラスです。  
  
> [!NOTE]
>  このプロパティの設定のインスタンスで表されるセルのみに影響を与える、<xref:System.Web.UI.HtmlControls.HtmlTableCell>クラスです。 テーブルの行全体のセルに同一の垂直方向の配置を適用するには、設定、<xref:System.Web.UI.HtmlControls.HtmlTableRow.VAlign%2A>のインスタンスによって表される行のプロパティ、<xref:System.Web.UI.HtmlControls.HtmlTableRow>クラスです。  
  
 次の表に、このプロパティの使用できる値を示します。  
  
|値|説明|  
|-----------|-----------------|  
|`Top`|セルの上端とセルの内容を配置します。|  
|`Middle`|セルの中央のセルの内容を配置します。|  
|`Bottom`|セルの下端とセルの内容を配置します。|  
  
> [!NOTE]
>  使用することも`BaseLine`としてこのプロパティの値。 ただし、一部のブラウザーは、この機能をサポートします。  
  
   
  
## Examples  
 次のコード例を使用する方法を示しています、<xref:System.Web.UI.HtmlControls.HtmlTableCell.VAlign%2A>プロパティ内のセルの内容の垂直方向の配置をプログラムで制御する、<xref:System.Web.UI.HtmlControls.HtmlTable>コントロール。  
  
 [!code-aspx-csharp[HtmlTblCellBehavior#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTblCellBehavior/CS/htmltablecellbehaviorcs.aspx#1)]
 [!code-aspx-vb[HtmlTblCellBehavior#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTblCellBehavior/VB/htmltablecellbehaviorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public string Width { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Width" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlTableCell.Width" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定のインスタンスで表されるセルの幅 (ピクセル単位) で、<see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" />クラスです。</summary>
        <value>インスタンスで表されるセルの幅 (ピクセル単位) で<see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" />です。 既定値は<see cref="F:System.String.Empty" />、このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.HtmlControls.HtmlTableCell.Width%2A>プロパティを幅 (ピクセル単位) のインスタンスによって表されるセルを指定する、<xref:System.Web.UI.HtmlControls.HtmlTableCell>クラスです。 セルの幅を指定すると、同じ列のすべてのセルが自動的に同じ幅にします。  
  
> [!NOTE]
>  セルの内容を表示するために必要なよりも小さな幅を指定すると、このプロパティは無視されます。  
  
   
  
## Examples  
 次のコード例を使用する方法を示しています、<xref:System.Web.UI.HtmlControls.HtmlTableCell.Width%2A>プロパティ内のセルの幅をプログラムで制御する、<xref:System.Web.UI.HtmlControls.HtmlTable>コントロール。  
  
 [!code-aspx-csharp[HtmlTblCellAppearance#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTblCellAppearance/CS/htmltablecellappearancecs.aspx#1)]
 [!code-aspx-vb[HtmlTblCellAppearance#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTblCellAppearance/VB/htmltablecellappearancevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
