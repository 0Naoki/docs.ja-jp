<Type Name="FileNameEditor" FullName="System.Windows.Forms.Design.FileNameEditor">
  <TypeSignature Language="C#" Value="public class FileNameEditor : System.Drawing.Design.UITypeEditor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FileNameEditor extends System.Drawing.Design.UITypeEditor" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.Design.FileNameEditor" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Drawing.Design.UITypeEditor</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>ファイル名を選択するためには、ユーザー インターフェイスを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.Design.FileNameEditor>ファイル名の選択および編集するためには、ファイルの選択 ダイアログ ボックスを提供します。  
  
   
  
## Examples  
 次のコード例では、<xref:System.ComponentModel.EditorAttribute>に関連付けるには、<xref:System.Windows.Forms.Design.FileNameEditor>プロパティを設定します。  
  
 [!code-cpp[EditorAttributesExample#5](~/samples/snippets/cpp/VS_Snippets_Winforms/EditorAttributesExample/CPP/class1.cpp#5)]
 [!code-csharp[EditorAttributesExample#5](~/samples/snippets/csharp/VS_Snippets_Winforms/EditorAttributesExample/CS/class1.cs#5)]
 [!code-vb[EditorAttributesExample#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/EditorAttributesExample/VB/class1.vb#5)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>ダイアログ ボックスと、独自のファイル リスト フィルター拡張機能を独自のタイトルを提供するには、このクラスから継承することがあります。</para>
    </block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileNameEditor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.FileNameEditor.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.Forms.Design.FileNameEditor" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EditValue">
      <MemberSignature Language="C#" Value="public override object EditValue (System.ComponentModel.ITypeDescriptorContext context, IServiceProvider provider, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object EditValue(class System.ComponentModel.ITypeDescriptorContext context, class System.IServiceProvider provider, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.FileNameEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="provider" Type="System.IServiceProvider" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">追加のコンテキスト情報を取得するために使用できる <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
        <param name="provider">使用するサービスを編集取得できるサービス プロバイダー オブジェクト。</param>
        <param name="value">編集中の値のインスタンス。</param>
        <summary>提供するエディター スタイルを使用して、指定したオブジェクトを編集、<see cref="M:System.Windows.Forms.Design.FileNameEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" />メソッドです。</summary>
        <returns>オブジェクトの新しい値。 オブジェクトの値が変更されていない場合は、このメソッドは渡された同じオブジェクトを返します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 サービス プロバイダーが提供するは、任意の必要な編集サービスを取得できるようにします。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEditStyle">
      <MemberSignature Language="C#" Value="public override System.Drawing.Design.UITypeEditorEditStyle GetEditStyle (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Drawing.Design.UITypeEditorEditStyle GetEditStyle(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.FileNameEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Design.UITypeEditorEditStyle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">追加のコンテキスト情報を取得するために使用できる <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
        <summary>によって使用される編集スタイルを取得、<see cref="M:System.Windows.Forms.Design.FileNameEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" />メソッドです。</summary>
        <returns>1 つ、<see cref="T:System.Drawing.Design.UITypeEditorEditStyle" />スタイル指定の編集を示す値を設定します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 場合、<xref:System.Windows.Forms.Design.FileNameEditor.EditValue%2A>メソッドがサポートされていません、このメソッドは<xref:System.Drawing.Design.UITypeEditorEditStyle.None>します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeDialog">
      <MemberSignature Language="C#" Value="protected virtual void InitializeDialog (System.Windows.Forms.OpenFileDialog openFileDialog);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InitializeDialog(class System.Windows.Forms.OpenFileDialog openFileDialog) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.FileNameEditor.InitializeDialog(System.Windows.Forms.OpenFileDialog)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="openFileDialog" Type="System.Windows.Forms.OpenFileDialog" />
      </Parameters>
      <Docs>
        <param name="openFileDialog"><see cref="T:System.Windows.Forms.OpenFileDialog" />を使用して、ファイル名を選択します。</param>
        <summary>作成時に、ファイルを開く ダイアログを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、汎用のファイル フィルターとタイトルを使用 ダイアログ ボックスを構成します。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>ダイアログの初期化をカスタマイズするには、このメソッドをオーバーライドすることができます。</para>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>
