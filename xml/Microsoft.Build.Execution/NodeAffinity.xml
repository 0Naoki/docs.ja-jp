<Type Name="NodeAffinity" FullName="Microsoft.Build.Execution.NodeAffinity">
  <TypeSignature Language="C#" Value="public enum NodeAffinity" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed NodeAffinity extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Execution.NodeAffinity" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>ビルドされたプロジェクトを決定する列挙型。</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Any">
      <MemberSignature Language="C#" Value="Any" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.Build.Execution.NodeAffinity Any = int32(2)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Build.Execution.NodeAffinity.Any" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.NodeAffinity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>プロジェクトは、任意の場所スケジュールする可能性があります。</summary>
      </Docs>
    </Member>
    <Member MemberName="InProc">
      <MemberSignature Language="C#" Value="InProc" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.Build.Execution.NodeAffinity InProc = int32(0)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Build.Execution.NodeAffinity.InProc" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.NodeAffinity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>プロジェクトは、インプロセス ノードでのみスケジュールできます。 ホスト オブジェクトがある場合、または、ProjectInstance が指定されていた場合に自動的に発生します。 ホストは、タスクがわかっている場合依存明示的に静的データを共有またはその他のホストから提供されたオブジェクトを指定する必要があります。</summary>
      </Docs>
    </Member>
    <Member MemberName="OutOfProc">
      <MemberSignature Language="C#" Value="OutOfProc" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.Build.Execution.NodeAffinity OutOfProc = int32(1)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Build.Execution.NodeAffinity.OutOfProc" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.NodeAffinity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>プロジェクトは、アウト オブ ノードでのみスケジュールできます。 ホストは認識されているホスト環境に悪影響がビルド中のプロジェクト (または、ビルドの実行中に、ホストが、環境を汚染)。 場合を指定することが</summary>
      </Docs>
    </Member>
  </Members>
</Type>
