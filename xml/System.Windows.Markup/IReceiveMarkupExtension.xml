<Type Name="IReceiveMarkupExtension" FullName="System.Windows.Markup.IReceiveMarkupExtension">
  <TypeSignature Language="C#" Value="public interface IReceiveMarkupExtension" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IReceiveMarkupExtension" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.IReceiveMarkupExtension" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("IReceiveMarkupExtension has been deprecated. This interface is no longer in use.")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>出力が、ターゲット プロパティよりも、別のプロパティ型であるマークアップ拡張機能からそれにより、式 (または別のクラス) を受信できる型が宣言のメカニズムを提供します。 .NET Framework 4 の実装では使用しないでください。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[net_v30_short](~/includes/net-v30-short-md.md)]、<xref:System.Windows.Markup.IReceiveMarkupExtension>が XAML の解析中にマークアップ拡張機能として設定されている XAML からアクセス可能なメンバーのいずれかの異なる codepath の入力の種類を許可するための WPF 固有の手法です。 [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]型は、マークアップ拡張機能の特定の set アクセス操作子のロジックを呼び出すことができます、またはこのインターフェイスは、廃止されておりはマークアップ拡張機能がサービスを受信する方法の .NET Framework XAML サービス実装に置き換えられます。  
  
 [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]実装では、型が他の方法ではなく、マークアップ拡張機能では、プロパティを設定するときに、特別な処理を実行する場合は型必要がありますを定義すると<xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute>属性を適用します。 属性では、通常、型のプライベート メンバーとして定義されるコールバックを指定します。  
  
 WPF クラスのインフラストラクチャの導入、ほとんどの場合、where<xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute>は参照を適用、`ReceiveMarkupExtension`以前、このインターフェイスが代わりに実装されているメソッドは、コールバックを通じてコンテキストを使用します。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ReceiveMarkupExtension">
      <MemberSignature Language="C#" Value="public void ReceiveMarkupExtension (string property, System.Windows.Markup.MarkupExtension markupExtension, IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReceiveMarkupExtension(string property, class System.Windows.Markup.MarkupExtension markupExtension, class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.IReceiveMarkupExtension.ReceiveMarkupExtension(System.String,System.Windows.Markup.MarkupExtension,System.IServiceProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.String" />
        <Parameter Name="markupExtension" Type="System.Windows.Markup.MarkupExtension" />
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="property">ターゲット プロパティの名前です。</param>
        <param name="markupExtension">受信データのマークアップ拡張機能のインスタンス。</param>
        <param name="serviceProvider">プロパティの値のマークアップ拡張データを処理するときに実行される追加のサービスを提供できます。</param>
        <summary>プロパティの値を提供するマークアップ拡張機能の処理を提供します。 使用しない[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]実装; 参照してください<see cref="T:System.Windows.Markup.IReceiveMarkupExtension" />です。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
