<Type Name="DynamicResourceExtensionConverter" FullName="System.Windows.DynamicResourceExtensionConverter">
  <TypeSignature Language="C#" Value="public class DynamicResourceExtensionConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DynamicResourceExtensionConverter extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.Windows.DynamicResourceExtensionConverter" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>解析された XAML を変換<see cref="T:System.Windows.DynamicResourceExtension" />XAML から行われます。 動的リソース参照をサポートしているとします。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 型コンバーターの参照では、XAML またはコードからリソース参照を作成する場合などの一般的なシナリオの通常必要ありません。 この型コンバーターをサポートするマークアップ拡張機能の詳細については、次を参照してください。 [DynamicResource マークアップ拡張機能](~/docs/framework/wpf/advanced/dynamicresource-markup-extension.md)します。  
  
<a name="XAMLTextUsage_DynamicResourceExtensionConverter"></a>   
## <a name="xaml-text-usage"></a>XAML テキストの使用方法  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DynamicResourceExtensionConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DynamicResourceExtensionConverter.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.DynamicResourceExtensionConverter" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DynamicResourceExtensionConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">コンテキストの指定された型を評価する必要があります。</param>
        <param name="destinationType">変換の変換先/出力の型。</param>
        <summary>このコンバーターが、オブジェクトをコンテキストを使用して目的の型に変換できるかどうかを示す値を返します。</summary>
        <returns>
          <see langword="true" />場合<paramref name="destinationType" />の種類を<see cref="T:System.ComponentModel.Design.Serialization.InstanceDescriptor" />、それ以外の<see langword="false" />します。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DynamicResourceExtensionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><see cref="T:System.ComponentModel.ITypeDescriptorContext" />書式指定コンテキストを提供するオブジェクト。</param>
        <param name="culture">A<see cref="T:System.Globalization.CultureInfo" />数を表すカルチャを指定するオブジェクト。</param>
        <param name="value">変換する値。 これは型であることを予期<see cref="T:System.Windows.DynamicResourceExtension" />です。</param>
        <param name="destinationType">型に変換する必要があります。</param>
        <summary>指定したオブジェクトを別の型に変換します。</summary>
        <returns>返される変換後のオブジェクト。 これを要求された型にキャストします。 通常これにキャストしなければならない<see cref="T:System.ComponentModel.Design.Serialization.InstanceDescriptor" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `destinationType`型にすると想定されます<xref:System.ComponentModel.Design.Serialization.InstanceDescriptor>以外の場合は、し、実装では、フォール スルーの基に (<xref:System.ComponentModel.TypeConverter.ConvertTo%2A>例外をスローする可能性があります)。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="value" />として割り当てられませんでした<see cref="T:System.Windows.DynamicResourceExtension" />です。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> は <see langword="null" /> です。</exception>
      </Docs>
    </Member>
  </Members>
</Type>
