<Type Name="SystemParameters" FullName="System.Windows.SystemParameters">
  <TypeSignature Language="C#" Value="public static class SystemParameters" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit SystemParameters extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.SystemParameters" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>システム設定を照会するために使用できるプロパティが含まれます。</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Border">
      <MemberSignature Language="C#" Value="public static int Border { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 Border" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.Border" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ウィンドウのサイズ変更境界の幅を決定する、境界の乗数係数を取得します。</summary>
        <value>乗数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SPI_GETBORDER にマップされます。 参照してください[次](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/systemparametersinfo.asp)です。  
  
<a name="xamlAttributeUsage_Border"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*オブジェクト プロパティ*="{SystemParameters.Border`}`"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey BorderKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey BorderKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.BorderKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.SystemParameters.Border" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
        <value>リソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_BorderKey"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト プロパティ*="{{SystemParameters.BorderKey}}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderWidth">
      <MemberSignature Language="C#" Value="public static double BorderWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 BorderWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.BorderWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>最小化されていないウィンドウの非クライアント領域の境界線幅を決定するメトリックを取得します。</summary>
        <value>境界線の幅。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 メトリックは、SPI_GETNONCLIENTMETRICS から取得されます。 参照してください[次](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/systemparametersinfo.asp)です。  
  
<a name="xamlAttributeUsage_BorderWidth"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*オブジェクト プロパティ*="{SystemParameters.BorderWidth`}`"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderWidthKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey BorderWidthKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey BorderWidthKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.BorderWidthKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.SystemParameters.BorderWidth" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
        <value>リソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_BorderWidthKey"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト プロパティ*="{{SystemParameters.BorderWidthKey}}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CaptionHeight">
      <MemberSignature Language="C#" Value="public static double CaptionHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 CaptionHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.CaptionHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>最小化されていないウィンドウの非クライアント領域のキャプションの高さを決定するメトリックを取得します。</summary>
        <value>キャプションの高さ。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SPI_GETNONCLIENTMETRICS からメトリックを取得します。 参照してください[次](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/systemparametersinfo.asp)です。  
  
<a name="xamlAttributeUsage_CaptionHeight"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*オブジェクト プロパティ*="{SystemParameters.CaptionHeight`}`"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CaptionHeightKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey CaptionHeightKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey CaptionHeightKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.CaptionHeightKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.SystemParameters.CaptionHeight" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
        <value>リソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_CaptionHeightKey"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト プロパティ*="{{SystemParameters.CaptionHeightKey}}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CaptionWidth">
      <MemberSignature Language="C#" Value="public static double CaptionWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 CaptionWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.CaptionWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>最小化されていないウィンドウの非クライアント領域のキャプションの幅を決定するメトリックを取得します。</summary>
        <value>キャプションの幅。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SPI_GETNONCLIENTMETRICS からメトリックを取得します。 参照してください[次](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/systemparametersinfo.asp)です。  
  
<a name="xamlAttributeUsage_CaptionWidth"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*オブジェクト プロパティ*="{SystemParameters.CaptionWidth`}`"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CaptionWidthKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey CaptionWidthKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey CaptionWidthKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.CaptionWidthKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.SystemParameters.CaptionWidth" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
        <value>リソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_CaptionWidthKey"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト プロパティ*="{{SystemParameters.CaptionWidthKey}}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CaretWidth">
      <MemberSignature Language="C#" Value="public static double CaretWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 CaretWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.CaretWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ピクセル単位で表されたエディット コントロールのキャレットの幅を取得します。</summary>
        <value>キャレットの幅。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SPI_GETCARETWIDTH にマップされます。 参照してください[次](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/systemparametersinfo.asp)です。  
  
<a name="xamlAttributeUsage_CaretWidth"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*オブジェクト プロパティ*="{SystemParameters.CaretWidth`}`"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CaretWidthKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey CaretWidthKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey CaretWidthKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.CaretWidthKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.SystemParameters.CaretWidth" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
        <value>リソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_CaretWidthKey"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト プロパティ*="{{SystemParameters.CaretWidthKey}}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientAreaAnimation">
      <MemberSignature Language="C#" Value="public static bool ClientAreaAnimation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool ClientAreaAnimation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.ClientAreaAnimation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>クライアント領域のアニメーション機能が有効かどうかを示す値を取得します。</summary>
        <value>ブール値です。**true**クライアント領域のアニメーションが有効になっている場合**false**それ以外の場合。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_ControlAnimation"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*オブジェクト プロパティ*="{SystemParameters.ClientAreaAnimation`}`"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientAreaAnimationKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey ClientAreaAnimationKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey ClientAreaAnimationKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.ClientAreaAnimationKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.SystemParameters.ClientAreaAnimation" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
        <value>リソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_ControlAnimationKey"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト プロパティ*="{{SystemParameters.ClientAreaAnimationKey}}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ComboBoxAnimation">
      <MemberSignature Language="C#" Value="public static bool ComboBoxAnimation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool ComboBoxAnimation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.ComboBoxAnimation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コンボ ボックスのスライドオープン効果が有効かどうかを示す値を取得します。</summary>
        <value>
          有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SPI_GETCOMBOBOXANIMATION にマップされます。 参照してください[次](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/systemparametersinfo.asp)です。  
  
<a name="xamlAttributeUsage_ComboBoxAnimation"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*オブジェクト プロパティ*="{SystemParameters.ComboBoxAnimation`}`"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ComboBoxAnimationKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey ComboBoxAnimationKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey ComboBoxAnimationKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.ComboBoxAnimationKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.SystemParameters.ComboBoxAnimation" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
        <value>リソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_ComboBoxAnimationKey"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト プロパティ*="{{SystemParameters.ComboBoxAnimationKey}}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ComboBoxPopupAnimation">
      <MemberSignature Language="C#" Value="public static System.Windows.Controls.Primitives.PopupAnimation ComboBoxPopupAnimation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Windows.Controls.Primitives.PopupAnimation ComboBoxPopupAnimation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.ComboBoxPopupAnimation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.Primitives.PopupAnimation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コンボ ボックスの <see cref="P:System.Windows.Controls.Primitives.Popup.PopupAnimation" /> プロパティのシステム値を取得します。</summary>
        <value>ポップアップ アニメーションの値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_ComboBoxPopupAnimation"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*オブジェクト プロパティ*="{SystemParameters.ComboBoxPopupAnimation`}`"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ComboBoxPopupAnimationKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey ComboBoxPopupAnimationKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey ComboBoxPopupAnimationKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.ComboBoxPopupAnimationKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.SystemParameters.ComboBoxPopupAnimation" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
        <value>リソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_ComboBoxPopupAnimationKey"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト プロパティ*="{{SystemParameters.ComboBoxPopupAnimationKey}}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CursorHeight">
      <MemberSignature Language="C#" Value="public static double CursorHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 CursorHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.CursorHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>カーソルの高さ (ピクセル単位) を取得します。</summary>
        <value>カーソルの高さ。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SM_CYCURSOR にマップされます。 参照してください[問題](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp)です。  
  
<a name="xamlAttributeUsage_CursorHeight"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*オブジェクト プロパティ*="{SystemParameters.CursorHeight`}`"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CursorHeightKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey CursorHeightKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey CursorHeightKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.CursorHeightKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.SystemParameters.CursorHeight" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
        <value>リソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_CursorHeightKey"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト プロパティ*="{{SystemParameters.CursorHeightKey}}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CursorShadow">
      <MemberSignature Language="C#" Value="public static bool CursorShadow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool CursorShadow" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.CursorShadow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>カーソルの周りに影があるかどうかを示す値を取得します。</summary>
        <value>
          影が有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SPI_GETCURSORSHADOW にマップされます。 参照してください[次](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/systemparametersinfo.asp)です。  
  
<a name="xamlAttributeUsage_CursorShadow"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*オブジェクト プロパティ*="{SystemParameters.CursorShadow`}`"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CursorShadowKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey CursorShadowKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey CursorShadowKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.CursorShadowKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.SystemParameters.CursorShadow" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
        <value>リソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_CursorShadowKey"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト プロパティ*="{{SystemParameters.CursorShadowKey}}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CursorWidth">
      <MemberSignature Language="C#" Value="public static double CursorWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 CursorWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.CursorWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>カーソルの幅 (ピクセル単位) を取得します。</summary>
        <value>カーソルの幅。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SM_CXCURSOR にマップされます。 参照してください[問題](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp)です。  
  
<a name="xamlAttributeUsage_CursorWidth"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*オブジェクト プロパティ*="{SystemParameters.CursorWidth`}`"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CursorWidthKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey CursorWidthKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey CursorWidthKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.CursorWidthKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.SystemParameters.CursorWidth" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
        <value>リソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_CursorWidthKey"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト プロパティ*="{{SystemParameters.CursorWidthKey}}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DragFullWindows">
      <MemberSignature Language="C#" Value="public static bool DragFullWindows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool DragFullWindows" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.DragFullWindows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>完全なウィンドウのドラッグが有効かどうかを示す値を取得します。</summary>
        <value>
          完全なウィンドウのドラッグが有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SPI_GETDRAGFULLWINDOWS にマップされます。 参照してください[次](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/systemparametersinfo.asp)です。  
  
<a name="xamlAttributeUsage_DragFullWindows"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*オブジェクト プロパティ*="{SystemParameters.DragFullWindows`}`"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DragFullWindowsKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey DragFullWindowsKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey DragFullWindowsKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.DragFullWindowsKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.SystemParameters.DragFullWindows" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
        <value>リソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_DragFullWindowsKey"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト プロパティ*="{{SystemParameters.DragFullWindowsKey}}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DropShadow">
      <MemberSignature Language="C#" Value="public static bool DropShadow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool DropShadow" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.DropShadow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ドロップ シャドウ効果が有効かどうかを示す値を取得します。</summary>
        <value>
          ドロップ シャドウ効果が有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SPI_GETDROPSHADOW にマップされます。 参照してください[次](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/systemparametersinfo.asp)です。  
  
<a name="xamlAttributeUsage_DropShadow"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*オブジェクト プロパティ*="{SystemParameters.DropShadow`}`"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DropShadowKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey DropShadowKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey DropShadowKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.DropShadowKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.SystemParameters.DropShadow" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
        <value>リソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_DropShadowKey"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト プロパティ*="{{SystemParameters.DropShadowKey}}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FixedFrameHorizontalBorderHeight">
      <MemberSignature Language="C#" Value="public static double FixedFrameHorizontalBorderHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 FixedFrameHorizontalBorderHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.FixedFrameHorizontalBorderHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ウィンドウを囲む枠の水平方向の境界線の高さを取得します。</summary>
        <value>境界線の高さ。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SM_CXFIXEDFRAME にマップされます。 参照してください[問題](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp)です。  
  
<a name="xamlAttributeUsage_FixedFrameHorizontalBorderHeight"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*オブジェクト プロパティ*="{SystemParameters.FixedFrameHorizontalBorderHeight`}`"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FixedFrameHorizontalBorderHeightKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey FixedFrameHorizontalBorderHeightKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey FixedFrameHorizontalBorderHeightKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.FixedFrameHorizontalBorderHeightKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.SystemParameters.FixedFrameHorizontalBorderHeight" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
        <value>リソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_FixedFrameHorizontalBorderHeightKey"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト プロパティ*="{{SystemParameters.FixedFrameHorizontalBorderHeightKey}}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FixedFrameVerticalBorderWidth">
      <MemberSignature Language="C#" Value="public static double FixedFrameVerticalBorderWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 FixedFrameVerticalBorderWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.FixedFrameVerticalBorderWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ウィンドウを囲む枠の垂直方向の境界線の幅を取得します。</summary>
        <value>境界線の幅。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SM_CYFIXEDFRAME にマップされます。 参照してください[問題](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp)です。  
  
<a name="xamlAttributeUsage_FixedFrameVerticalBorderWidth"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*オブジェクト プロパティ*="{SystemParameters.FixedFrameVerticalBorderWidth`}`"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FixedFrameVerticalBorderWidthKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey FixedFrameVerticalBorderWidthKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey FixedFrameVerticalBorderWidthKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.FixedFrameVerticalBorderWidthKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.SystemParameters.FixedFrameVerticalBorderWidth" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
        <value>リソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_FixedFrameVerticalBorderWidthKey"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト プロパティ*="{{SystemParameters.FixedFrameVerticalBorderWidthKey}}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FlatMenu">
      <MemberSignature Language="C#" Value="public static bool FlatMenu { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool FlatMenu" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.FlatMenu" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ネイティブなメニューがフラットなメニューとして表示されるかどうかを示す値を取得します。</summary>
        <value>
          フラットなメニュー表示形式が設定されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SPI_GETFLATMENU にマップされます。 参照してください[次](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/systemparametersinfo.asp)です。  
  
<a name="xamlAttributeUsage_FlatMenu"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*オブジェクト プロパティ*="{SystemParameters.FlatMenu`}`"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FlatMenuKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey FlatMenuKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey FlatMenuKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.FlatMenuKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.SystemParameters.FlatMenu" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
        <value>リソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_FlatMenuKey"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト プロパティ*="{{SystemParameters.FlatMenuKey}}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FocusBorderHeight">
      <MemberSignature Language="C#" Value="public static double FocusBorderHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 FocusBorderHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.FocusBorderHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>フォーカスを示す四角形の上端および下端の高さ (ピクセル単位) を取得します。</summary>
        <value>端の高さ。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SPI_GETFOCUSBORDERHEIGHT にマップされます。 参照してください[次](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/systemparametersinfo.asp)です。  
  
<a name="xamlAttributeUsage_FocusBorderHeight"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*オブジェクト プロパティ*="{SystemParameters.FocusBorderHeight`}`"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FocusBorderHeightKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey FocusBorderHeightKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey FocusBorderHeightKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.FocusBorderHeightKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.SystemParameters.FocusBorderHeight" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
        <value>リソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_FocusBorderHeightKey"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト プロパティ*="{{SystemParameters.FocusBorderHeightKey}}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FocusBorderWidth">
      <MemberSignature Language="C#" Value="public static double FocusBorderWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 FocusBorderWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.FocusBorderWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>フォーカスを示す四角形の左端および右端の幅 (ピクセル単位) を取得します。</summary>
        <value>端の幅。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SPI_GETFOCUSBORDERWIDTH にマップされます。 参照してください[次](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/systemparametersinfo.asp)です。  
  
<a name="xamlAttributeUsage_FocusBorderWidth"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*オブジェクト プロパティ*="{SystemParameters.FocusBorderWidth`}`"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FocusBorderWidthKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey FocusBorderWidthKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey FocusBorderWidthKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.FocusBorderWidthKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.SystemParameters.FocusBorderWidth" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
        <value>リソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_FocusBorderWidthKey"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト プロパティ*="{{SystemParameters.FocusBorderWidthKey}}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FocusHorizontalBorderHeight">
      <MemberSignature Language="C#" Value="public static double FocusHorizontalBorderHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 FocusHorizontalBorderHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.FocusHorizontalBorderHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>フォーカスを示す四角形の上端および下端の高さを取得します。</summary>
        <value>端の高さ。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sm_cxfocusborder ですにマップされます。 参照してください[問題](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp)です。  
  
<a name="xamlAttributeUsage_FocusHorizontalBorderHeight"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*オブジェクト プロパティ*="{SystemParameters.FocusHorizontalBorderHeight`}`"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FocusHorizontalBorderHeightKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey FocusHorizontalBorderHeightKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey FocusHorizontalBorderHeightKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.FocusHorizontalBorderHeightKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.SystemParameters.FocusHorizontalBorderHeight" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
        <value>リソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_FocusHorizontalBorderHeightKey"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト プロパティ*="{{SystemParameters.FocusHorizontalBorderHeightKey}}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FocusVerticalBorderWidth">
      <MemberSignature Language="C#" Value="public static double FocusVerticalBorderWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 FocusVerticalBorderWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.FocusVerticalBorderWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>フォーカスを示す四角形の左端および右端の幅を取得します。</summary>
        <value>端の幅。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sm_cyfocusborder ですにマップされます。 参照してください[問題](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp)です。  
  
<a name="xamlAttributeUsage_FocusVerticalBorderWidth"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*オブジェクト プロパティ*="{SystemParameters.FocusVerticalBorderWidth`}`"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FocusVerticalBorderWidthKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey FocusVerticalBorderWidthKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey FocusVerticalBorderWidthKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.FocusVerticalBorderWidthKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.SystemParameters.FocusVerticalBorderWidth" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
        <value>リソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_FocusVerticalBorderWidthKey"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト プロパティ*="{{SystemParameters.FocusVerticalBorderWidthKey}}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FocusVisualStyleKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey FocusVisualStyleKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey FocusVisualStyleKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.FocusVisualStyleKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see langword="FocusVisualStyle" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
        <value>リソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_FocusVisualStyleKey"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト プロパティ*="{{SystemParameters.FocusVisualStyleKey}}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForegroundFlashCount">
      <MemberSignature Language="C#" Value="public static int ForegroundFlashCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 ForegroundFlashCount" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.ForegroundFlashCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>[前面のウィンドウの設定] によって、前面切り替え要求を拒否する際にタスクバー ボタンが点滅する回数を取得します。</summary>
        <value>点滅の回数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SPI_GETFOREGROUNDFLASHCOUNT にマップされます。 参照してください[次](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/systemparametersinfo.asp)です。  
  
<a name="xamlAttributeUsage_ForegroundFlashCount"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*オブジェクト プロパティ*="{SystemParameters.ForegroundFlashCount`}`"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForegroundFlashCountKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey ForegroundFlashCountKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey ForegroundFlashCountKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.ForegroundFlashCountKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.SystemParameters.ForegroundFlashCount" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
        <value>リソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_ForegroundFlashCountKey"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト プロパティ*="{{SystemParameters.ForegroundFlashCountKey}}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FullPrimaryScreenHeight">
      <MemberSignature Language="C#" Value="public static double FullPrimaryScreenHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 FullPrimaryScreenHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.FullPrimaryScreenHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>プライマリ ディスプレイ モニター上の全画面表示ウィンドウのクライアント領域の高さ (ピクセル単位) を取得します。</summary>
        <value>クライアント領域の高さ。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SM_CYFULLSCREEN にマップされます。 参照してください[問題](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp)です。  
  
<a name="xamlAttributeUsage_FullPrimaryScreenHeight"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*オブジェクト プロパティ*="{SystemParameters.FullPrimaryScreenHeight`}`"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FullPrimaryScreenHeightKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey FullPrimaryScreenHeightKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey FullPrimaryScreenHeightKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.FullPrimaryScreenHeightKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.SystemParameters.FullPrimaryScreenHeight" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
        <value>リソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_FullPrimaryScreenHeightKey"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト プロパティ*="{{SystemParameters.FullPrimaryScreenHeightKey}}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FullPrimaryScreenWidth">
      <MemberSignature Language="C#" Value="public static double FullPrimaryScreenWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 FullPrimaryScreenWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.FullPrimaryScreenWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>プライマリ ディスプレイ モニター上の全画面表示ウィンドウのクライアント領域の幅 (ピクセル単位) を取得します。</summary>
        <value>クライアント領域の幅。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SM_CXFULLSCREEN にマップされます。 参照してください[問題](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp)です。  
  
<a name="xamlAttributeUsage_FullPrimaryScreenWidth"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*オブジェクト プロパティ*="{SystemParameters.FullPrimaryScreenWidth`}`"/>  
  
 ]]></format>
        </remarks>
        <permission cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode">このメソッドを呼び出す、安全でないネイティブ メソッドを呼び出すためです。 関連する列挙。  
  
 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="FullPrimaryScreenWidthKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey FullPrimaryScreenWidthKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey FullPrimaryScreenWidthKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.FullPrimaryScreenWidthKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.SystemParameters.FullPrimaryScreenWidth" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
        <value>リソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_FullPrimaryScreenWidthKey"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト プロパティ*="{{SystemParameters.FullPrimaryScreenWidthKey}}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GradientCaptions">
      <MemberSignature Language="C#" Value="public static bool GradientCaptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool GradientCaptions" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.GradientCaptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ウィンドウのタイトル バーのグラデーション効果が有効かどうかを示す値を取得します。</summary>
        <value>
          グラデーション効果が有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SPI_GETGRADIENTCAPTIONS にマップされます。 参照してください[次](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/systemparametersinfo.asp)です。  
  
<a name="xamlAttributeUsage_GradientCaptions"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*オブジェクト プロパティ*="{SystemParameters.GradientCaptions`}`"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GradientCaptionsKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey GradientCaptionsKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey GradientCaptionsKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.GradientCaptionsKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.SystemParameters.GradientCaptions" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
        <value>リソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_GradientCaptionsKey"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト プロパティ*="{{SystemParameters.GradientCaptionsKey}}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HighContrast">
      <MemberSignature Language="C#" Value="public static bool HighContrast { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool HighContrast" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.HighContrast" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ハイ コントラスト ユーザー補助機能に関する情報を取得します。</summary>
        <value>
          <see langword="true" />HIGHCONTRASTON オプションがオンの場合それ以外の場合、<see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 HCF_HIGHCONTRASTON を参照している SPI_GETHIGHCONTRAST にマップされます。 参照してください[次](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/systemparametersinfo.asp)と[ハイコントラスト](http://msdn.microsoft.com/library/default.asp?url=/library/msaa/access_1wqa.asp)です。  
  
<a name="xamlAttributeUsage_HighContrast"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*オブジェクト プロパティ*="{SystemParameters.HighContrast`}`"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HighContrastKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey HighContrastKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey HighContrastKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.HighContrastKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.SystemParameters.HighContrast" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
        <value>リソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_HighContrastKey"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト プロパティ*="{{SystemParameters.HighContrastKey}}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HorizontalScrollBarButtonWidth">
      <MemberSignature Language="C#" Value="public static double HorizontalScrollBarButtonWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 HorizontalScrollBarButtonWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.HorizontalScrollBarButtonWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>水平スクロール バーの矢印ビットマップの幅 (ピクセル単位) を取得します。</summary>
        <value>矢印ビットマップの幅。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SM_CXHSCROLL にマップされます。 参照してください[問題](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp)です。  
  
<a name="xamlAttributeUsage_HorizontalScrollBarButtonWidth"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*オブジェクト プロパティ*="{SystemParameters.HorizontalScrollBarButtonWidth`}`"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HorizontalScrollBarButtonWidthKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey HorizontalScrollBarButtonWidthKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey HorizontalScrollBarButtonWidthKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.HorizontalScrollBarButtonWidthKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.SystemParameters.HorizontalScrollBarButtonWidth" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
        <value>リソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_HorizontalScrollBarButtonWidthKey"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト プロパティ*="{{SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HorizontalScrollBarHeight">
      <MemberSignature Language="C#" Value="public static double HorizontalScrollBarHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 HorizontalScrollBarHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.HorizontalScrollBarHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>水平スクロール バーの高さ (ピクセル単位) を取得します。</summary>
        <value>スクロール バーの高さ。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SM_CYHSCROLL にマップされます。 参照してください[問題](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp)です。  
  
<a name="xamlAttributeUsage_HorizontalScrollBarHeight"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*オブジェクト プロパティ*="{SystemParameters.HorizontalScrollBarHeight`}`"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HorizontalScrollBarHeightKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey HorizontalScrollBarHeightKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey HorizontalScrollBarHeightKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.HorizontalScrollBarHeightKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.SystemParameters.HorizontalScrollBarHeight" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
        <value>リソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_HorizontalScrollBarHeightKey"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト プロパティ*="{{SystemParameters.HorizontalScrollBarHeightKey}}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HorizontalScrollBarThumbWidth">
      <MemberSignature Language="C#" Value="public static double HorizontalScrollBarThumbWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 HorizontalScrollBarThumbWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.HorizontalScrollBarThumbWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>水平スクロール バーの <see cref="T:System.Windows.Controls.Primitives.Thumb" /> の幅 (ピクセル単位) を取得します。</summary>
        <value>つまみの幅。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SM_CXHTHUMB にマップされます。 参照してください[問題](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp)です。  
  
<a name="xamlAttributeUsage_HorizontalScrollBarThumbWidth"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*オブジェクト プロパティ*="{SystemParameters.HorizontalScrollBarThumbWidth`}`"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HorizontalScrollBarThumbWidthKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey HorizontalScrollBarThumbWidthKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey HorizontalScrollBarThumbWidthKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.HorizontalScrollBarThumbWidthKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.SystemParameters.HorizontalScrollBarThumbWidth" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
        <value>リソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_HorizontalScrollBarThumbWidthKey"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト プロパティ*="{{SystemParameters.HorizontalScrollBarThumbWidthKey}}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HotTracking">
      <MemberSignature Language="C#" Value="public static bool HotTracking { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool HotTracking" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.HotTracking" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>メニュー バーにあるメニュー名のようなユーザー インターフェイス要素のホット トラッキングが有効かどうかを示す値を取得します。</summary>
        <value>
          ホット トラッキングが有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SPI_GETHOTTRACKING にマップされます。 参照してください[次](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/systemparametersinfo.asp)です。  
  
<a name="xamlAttributeUsage_HotTracking"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*オブジェクト プロパティ*="{SystemParameters.HotTracking`}`"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HotTrackingKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey HotTrackingKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey HotTrackingKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.HotTrackingKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.SystemParameters.HotTracking" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
        <value>リソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_HotTrackingKey"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト プロパティ*="{{SystemParameters.HotTrackingKey}}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IconGridHeight">
      <MemberSignature Language="C#" Value="public static double IconGridHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 IconGridHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.IconGridHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>大きいアイコンが収まるグリッドの高さを取得します。</summary>
        <value>グリッドの高さ。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SM_CYICONSPACING にマップされます。 参照してください[問題](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp)です。  
  
<a name="xamlAttributeUsage_IconGridHeight"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*オブジェクト プロパティ*="{SystemParameters.IconGridHeight`}`"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IconGridHeightKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey IconGridHeightKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey IconGridHeightKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.IconGridHeightKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.SystemParameters.IconGridHeight" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
        <value>リソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_IconGridHeightKey"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト プロパティ*="{{SystemParameters.IconGridHeightKey}}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IconGridWidth">
      <MemberSignature Language="C#" Value="public static double IconGridWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 IconGridWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.IconGridWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>大きいアイコンが収まるグリッドの幅を取得します。</summary>
        <value>グリッドの幅。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SM_CXICONSPACING にマップされます。 参照してください[問題](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp)です。  
  
<a name="xamlAttributeUsage_IconGridWidth"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*オブジェクト プロパティ*="{SystemParameters.IconGridWidth`}`"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IconGridWidthKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey IconGridWidthKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey IconGridWidthKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.IconGridWidthKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.SystemParameters.IconGridWidth" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
        <value>リソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_IconGridWidthKey"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト プロパティ*="{{SystemParameters.IconGridWidthKey}}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IconHeight">
      <MemberSignature Language="C#" Value="public static double IconHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 IconHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.IconHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>アイコンの既定の高さを取得します。</summary>
        <value>アイコンの高さ。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SM_CYICON にマップされます。 参照してください[問題](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp)です。  
  
<a name="xamlAttributeUsage_IconHeight"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*オブジェクト プロパティ*="{SystemParameters.IconHeight`}`"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IconHeightKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey IconHeightKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey IconHeightKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.IconHeightKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.SystemParameters.IconHeight" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
        <value>リソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_IconHeightKey"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト プロパティ*="{{SystemParameters.IconHeightKey}}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IconHorizontalSpacing">
      <MemberSignature Language="C#" Value="public static double IconHorizontalSpacing { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 IconHorizontalSpacing" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.IconHorizontalSpacing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>アイコン セルの幅 (ピクセル単位) を取得します。 大きいアイコン表示では、この四角形を使用してアイコンを整列します。</summary>
        <value>アイコン セルの幅。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SPI_ICONHORIZONTALSPACING を参照している SPI_GETICONMETRICS にマップされます。 参照してください[次](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/systemparametersinfo.asp)です。  
  
<a name="xamlAttributeUsage_IconHorizontalSpacing"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*オブジェクト プロパティ*="{SystemParameters.IconHorizontalSpacing`}`"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IconHorizontalSpacingKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey IconHorizontalSpacingKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey IconHorizontalSpacingKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.IconHorizontalSpacingKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.SystemParameters.IconHorizontalSpacing" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
        <value>リソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_IconHorizontalSpacingKey"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト プロパティ*="{{SystemParameters.IconHorizontalSpacingKey}}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IconTitleWrap">
      <MemberSignature Language="C#" Value="public static bool IconTitleWrap { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IconTitleWrap" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.IconTitleWrap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>アイコンタイトルの折り返しが有効かどうかを示す値を取得します。</summary>
        <value>
          アイコンタイトルの折り返しが有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SPI_GETICONTITLEWRAP を参照している SPI_GETICONMETRICS にマップされます。 参照してください[次](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/systemparametersinfo.asp)です。  
  
<a name="xamlAttributeUsage_IconTitleWrap"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*オブジェクト プロパティ*="{SystemParameters.IconTitleWrap`}`"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IconTitleWrapKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey IconTitleWrapKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey IconTitleWrapKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.IconTitleWrapKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.SystemParameters.IconTitleWrap" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
        <value>リソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_IconTitleWrapKey"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト プロパティ*="{{SystemParameters.IconTitleWrapKey}}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IconVerticalSpacing">
      <MemberSignature Language="C#" Value="public static double IconVerticalSpacing { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 IconVerticalSpacing" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.IconVerticalSpacing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>アイコン セルの高さ (ピクセル単位) を取得します。 大きいアイコン表示では、この四角形を使用してアイコンを整列します。</summary>
        <value>アイコン セルの高さ。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SPI_ICONVERTICALSPACING を参照している SPI_GETICONMETRICS にマップされます。 参照してください[次](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/systemparametersinfo.asp)です。  
  
<a name="xamlAttributeUsage_IconVerticalSpacing"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*オブジェクト プロパティ*="{SystemParameters.IconVerticalSpacing`}`"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IconVerticalSpacingKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey IconVerticalSpacingKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey IconVerticalSpacingKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.IconVerticalSpacingKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.SystemParameters.IconVerticalSpacing" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
        <value>リソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_IconVerticalSpacingKey"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト プロパティ*="{{SystemParameters.IconVerticalSpacingKey}}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IconWidth">
      <MemberSignature Language="C#" Value="public static double IconWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 IconWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.IconWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>アイコンの既定の幅を取得します。</summary>
        <value>アイコンの幅。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SM_CXICON にマップされます。 参照してください[問題](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp)です。  
  
<a name="xamlAttributeUsage_IconWidth"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*オブジェクト プロパティ*="{SystemParameters.IconWidth`}`"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IconWidthKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey IconWidthKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey IconWidthKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.IconWidthKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.SystemParameters.IconWidth" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
        <value>リソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_IconWidthKey"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト プロパティ*="{{SystemParameters.IconWidthKey}}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsGlassEnabled">
      <MemberSignature Language="C#" Value="public static bool IsGlassEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsGlassEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.IsGlassEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>グラス風のウィンドウ フレームが使用されているかどうかを示す値を取得します。</summary>
        <value>
          グラス風のウィンドウ フレームが使用されている場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsImmEnabled">
      <MemberSignature Language="C#" Value="public static bool IsImmEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsImmEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.IsImmEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Unicode アプリケーションで Unicode ベースの [!INCLUDE[TLA#tla_ime](~/includes/tlasharptla-ime-md.md)] を使用できる状態かどうかを示す値を取得します。</summary>
        <value>
          <see langword="true" />入力方式マネージャーまたは入力方式エディター機能が有効な場合それ以外の場合、<see langword="false" />です。<see langword="" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SM_IMMENABLED にマップされます。 参照してください[問題](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp)です。  
  
<a name="xamlAttributeUsage_IsImmEnabled"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*オブジェクト プロパティ*="{SystemParameters.IsImmEnabled`}`"/>  
  
 ]]></format>
        </remarks>
        <permission cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode">このメソッドを呼び出す、安全でないネイティブ メソッドを呼び出すためです。 関連する列挙。  
  
 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="IsImmEnabledKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey IsImmEnabledKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey IsImmEnabledKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.IsImmEnabledKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.SystemParameters.IsImmEnabled" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
        <value>リソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_IsImmEnabledKey"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト プロパティ*="{{SystemParameters.IsImmEnabledKey}}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMediaCenter">
      <MemberSignature Language="C#" Value="public static bool IsMediaCenter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsMediaCenter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.IsMediaCenter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在のオペレーティング システムが [!INCLUDE[TLA#tla_whistler2](~/includes/tlasharptla-whistler2-md.md)] Media Center Edition かどうかを示す値を取得します。</summary>
        <value>
          現在のオペレーティング システムが [!INCLUDE[TLA2#tla_whistler2](~/includes/tla2sharptla-whistler2-md.md)] Media Center Edition である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SM_MEDIACENTER にマップされます。 参照してください[問題](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp)です。  
  
<a name="xamlAttributeUsage_IsMediaCenter"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*オブジェクト プロパティ*="{SystemParameters.IsMediaCenter`}`"/>  
  
 ]]></format>
        </remarks>
        <permission cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode">このメソッドを呼び出す、安全でないネイティブ メソッドを呼び出すためです。 関連する列挙。  
  
 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="IsMediaCenterKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey IsMediaCenterKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey IsMediaCenterKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.IsMediaCenterKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.SystemParameters.IsMediaCenter" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
        <value>リソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_IsMediaCenterKey"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト プロパティ*="{{SystemParameters.IsMediaCenterKey}}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMenuDropRightAligned">
      <MemberSignature Language="C#" Value="public static bool IsMenuDropRightAligned { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsMenuDropRightAligned" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.IsMenuDropRightAligned" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ドロップダウン メニューが、対応するメニュー項目に対して右揃えに配置されているかどうかを示す値を取得します。</summary>
        <value>
          ドロップダウン メニューが右揃えの場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SM_MENUDROPALIGNMENT にマップされます。 参照してください[問題](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp)です。  
  
<a name="xamlAttributeUsage_IsMenuDropRightAligned"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*オブジェクト プロパティ*="{SystemParameters.IsMenuDropRightAligned`}`"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMenuDropRightAlignedKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey IsMenuDropRightAlignedKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey IsMenuDropRightAlignedKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.IsMenuDropRightAlignedKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.SystemParameters.IsMenuDropRightAligned" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
        <value>リソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_IsMenuDropRightAlignedKey"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト プロパティ*="{{SystemParameters.IsMenuDropRightAlignedKey}}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMiddleEastEnabled">
      <MemberSignature Language="C#" Value="public static bool IsMiddleEastEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsMiddleEastEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.IsMiddleEastEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>システムがヘブライ語やアラビア語に対応しているかどうかを示す値を取得します。</summary>
        <value>
          システムがヘブライ語およびアラビア語に対応している場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SM_MIDEASTENABLED にマップされます。 参照してください[問題](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp)です。  
  
<a name="xamlAttributeUsage_IsMiddleEastEnabled"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*オブジェクト プロパティ*="{SystemParameters.IsMiddleEastEnabled`}`"/>  
  
 ]]></format>
        </remarks>
        <permission cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode">このメソッドを呼び出す、安全でないネイティブ メソッドを呼び出すためです。 関連する列挙。  
  
 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="IsMiddleEastEnabledKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey IsMiddleEastEnabledKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey IsMiddleEastEnabledKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.IsMiddleEastEnabledKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.SystemParameters.IsMiddleEastEnabled" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
        <value>リソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_IsMiddleEastEnabledKey"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト プロパティ*="{{SystemParameters.IsMiddleEastEnabledKey}}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMousePresent">
      <MemberSignature Language="C#" Value="public static bool IsMousePresent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsMousePresent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.IsMousePresent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>マウスが取り付けられているかどうかを示す値を取得します。</summary>
        <value>
          マウスが取り付けられている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この値は、ほとんど`false`仮想 mice はサポートされているため、一部のシステムは、マウスの代わりに、ポートの存在を検出するためです。  
  
 SM_MOUSEPRESENT にマップされます。 参照してください[問題](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp)です。  
  
<a name="xamlAttributeUsage_IsMousePresent"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*オブジェクト プロパティ*="{SystemParameters.IsMousePresent`}`"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMousePresentKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey IsMousePresentKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey IsMousePresentKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.IsMousePresentKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.SystemParameters.IsMousePresent" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
        <value>リソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_IsMousePresentKey"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト プロパティ*="{{SystemParameters.IsMousePresentKey}}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseWheelPresent">
      <MemberSignature Language="C#" Value="public static bool IsMouseWheelPresent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsMouseWheelPresent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.IsMouseWheelPresent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取り付けられているマウスに垂直スクロール ホイールがあるかどうかを示す値を取得します。</summary>
        <value>
          取り付けられているマウスに垂直スクロール ホイールがある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SM_MOUSEWHEELPRESENT にマップされます。 参照してください[問題](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp)です。  
  
<a name="xamlAttributeUsage_IsMouseWheelPresent"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*オブジェクト プロパティ*="{SystemParameters.IsMouseWheelPresent`}`"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseWheelPresentKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey IsMouseWheelPresentKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey IsMouseWheelPresentKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.IsMouseWheelPresentKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.SystemParameters.IsMouseWheelPresent" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
        <value>リソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_IsMouseWheelPresentKey"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト プロパティ*="{{SystemParameters.IsMouseWheelPresentKey}}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPenWindows">
      <MemberSignature Language="C#" Value="public static bool IsPenWindows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsPenWindows" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.IsPenWindows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>[!INCLUDE[TLA#tla_win](~/includes/tlasharptla-win-md.md)] for Pen Computing 拡張機能がインストールされているかどうかを示す値を取得します。</summary>
        <value>
          Pen Computing 拡張機能がインストールされている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SM_PENWINDOWS にマップされます。 参照してください[問題](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp)です。  
  
<a name="xamlAttributeUsage_IsPenWindows"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*オブジェクト プロパティ*="{SystemParameters.IsPenWindows`}`"/>  
  
 ]]></format>
        </remarks>
        <permission cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode">このメソッドを呼び出す、安全でないネイティブ メソッドを呼び出すためです。 関連する列挙。  
  
 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="IsPenWindowsKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey IsPenWindowsKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey IsPenWindowsKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.IsPenWindowsKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.SystemParameters.IsPenWindows" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
        <value>リソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_IsPenWindowsKey"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト プロパティ*="{{SystemParameters.IsPenWindowsKey}}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRemotelyControlled">
      <MemberSignature Language="C#" Value="public static bool IsRemotelyControlled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsRemotelyControlled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.IsRemotelyControlled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在のセッションがリモート制御されているかどうかを示す値を取得します。</summary>
        <value>
          現在のセッションがリモート制御されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このシステム メトリックは、ターミナル サービス環境で使用されます。  
  
 SM_REMOTECONTROL にマップされます。 参照してください[問題](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp)です。  
  
<a name="xamlAttributeUsage_IsRemotelyControlled"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*オブジェクト プロパティ*="{SystemParameters.IsRemotelyControlled`}`"/>  
  
 ]]></format>
        </remarks>
        <permission cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode">このメソッドを呼び出す、安全でないネイティブ メソッドを呼び出すためです。 関連する列挙。  
  
 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="IsRemotelyControlledKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey IsRemotelyControlledKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey IsRemotelyControlledKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.IsRemotelyControlledKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.SystemParameters.IsRemotelyControlled" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
        <value>リソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_IsRemotelyControlledKey"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト プロパティ*="{{SystemParameters.IsRemotelyControlledKey}}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRemoteSession">
      <MemberSignature Language="C#" Value="public static bool IsRemoteSession { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsRemoteSession" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.IsRemoteSession" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>呼び出し元のプロセスがターミナル サービスのクライアント セッションに関連付けられているかどうかを示す値を取得します。</summary>
        <value>
          呼び出し元のプロセスがターミナル サービスのクライアント セッションに関連付けられている場合は <see langword="true" />。呼び出し元のプロセスがターミナル サーバーのコンソール セッションに関連付けられている場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このシステム メトリックは、ターミナル サービス環境で使用されます。  
  
 SM_REMOTESESSION にマップされます。 参照してください[問題](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp)です。  
  
<a name="xamlAttributeUsage_IsRemoteSession"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*オブジェクト プロパティ*="{SystemParameters.IsRemoteSession`}`"/>  
  
 ]]></format>
        </remarks>
        <permission cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode">このメソッドを呼び出す、安全でないネイティブ メソッドを呼び出すためです。 関連する列挙。  
  
 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="IsRemoteSessionKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey IsRemoteSessionKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey IsRemoteSessionKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.IsRemoteSessionKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.SystemParameters.IsRemoteSession" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
        <value>リソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_IsRemoteSessionKey"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト プロパティ*="{{SystemParameters.IsRemoteSessionKey}}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSlowMachine">
      <MemberSignature Language="C#" Value="public static bool IsSlowMachine { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsSlowMachine" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.IsSlowMachine" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コンピューターがローエンドの (低速な) プロセッサを搭載しているかどうかを示す値を取得します。</summary>
        <value>
          コンピューターがローエンドの (低速な) プロセッサを搭載している場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SM_SLOWMACHINE にマップされます。 参照してください[問題](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp)です。  
  
<a name="xamlAttributeUsage_IsSlowMachine"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*オブジェクト プロパティ*="{SystemParameters.IsSlowMachine`}`"/>  
  
 ]]></format>
        </remarks>
        <permission cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode">このメソッドを呼び出す、安全でないネイティブ メソッドを呼び出すためです。 関連する列挙。  
  
 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="IsSlowMachineKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey IsSlowMachineKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey IsSlowMachineKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.IsSlowMachineKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.SystemParameters.IsSlowMachine" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
        <value>リソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_IsSlowMachineKey"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト プロパティ*="{{SystemParameters.IsSlowMachineKey}}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTabletPC">
      <MemberSignature Language="C#" Value="public static bool IsTabletPC { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsTabletPC" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.IsTabletPC" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在のオペレーティング システムがあるかどうかを示す値を取得[!INCLUDE[TLA#tla_whistler](~/includes/tlasharptla-whistler-md.md)][!INCLUDE[TLA#tla_tpc](~/includes/tlasharptla-tpc-md.md)]エディションです。</summary>
        <value>
          <see langword="true" />現在のオペレーティング システムが場合[!INCLUDE[TLA2#tla_whistler](~/includes/tla2sharptla-whistler-md.md)] [!INCLUDE[TLA2#tla_tpc](~/includes/tla2sharptla-tpc-md.md)] Edition 以外の場合、<see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SM_TABLETPC にマップされます。 参照してください[問題](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp)です。  
  
<a name="xamlAttributeUsage_IsTabletPC"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*オブジェクト プロパティ*="{SystemParameters.IsTabletPC`}`"/>  
  
 ]]></format>
        </remarks>
        <permission cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode">このメソッドを呼び出す、安全でないネイティブ メソッドを呼び出すためです。 関連する列挙。  
  
 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="IsTabletPCKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey IsTabletPCKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey IsTabletPCKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.IsTabletPCKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.SystemParameters.IsTabletPC" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
        <value>リソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_IsTabletPCKey"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト プロパティ*="{{SystemParameters.IsTabletPCKey}}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KanjiWindowHeight">
      <MemberSignature Language="C#" Value="public static double KanjiWindowHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 KanjiWindowHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.KanjiWindowHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>2 バイト文字を使用するシステムの画面下部にある漢字ウィンドウの高さ (ピクセル単位) を示す値を取得します。</summary>
        <value>ウィンドウの高さ。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SM_CYKANJIWINDOW にマップされます。 参照してください[問題](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp)です。  
  
<a name="xamlAttributeUsage_KanjiWindowHeight"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*オブジェクト プロパティ*="{SystemParameters.KanjiWindowHeight`}`"/>  
  
 ]]></format>
        </remarks>
        <permission cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode">このメソッドを呼び出す、安全でないネイティブ メソッドを呼び出すためです。 関連する列挙。  
  
 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="KanjiWindowHeightKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey KanjiWindowHeightKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey KanjiWindowHeightKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.KanjiWindowHeightKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.SystemParameters.KanjiWindowHeight" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
        <value>リソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_KanjiWindowHeightKey"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト プロパティ*="{{SystemParameters.KanjiWindowHeightKey}}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyboardCues">
      <MemberSignature Language="C#" Value="public static bool KeyboardCues { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool KeyboardCues" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.KeyboardCues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>メニュー アクセス キーに常に下線を付けるかどうかを示す値を取得します。</summary>
        <value>
          メニュー アクセス キーに常に下線を付ける場合は <see langword="true" />。メニューがキーボードによってアクティブにされた場合にのみ下線を付ける場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SPI_GETKEYBOARDCUES にマップされます。 参照してください[次](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/systemparametersinfo.asp)です。  
  
<a name="xamlAttributeUsage_KeyboardCues"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*オブジェクト プロパティ*="{SystemParameters.KeyboardCues`}`"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyboardCuesKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey KeyboardCuesKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey KeyboardCuesKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.KeyboardCuesKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.SystemParameters.KeyboardCues" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
        <value>リソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_KeyboardCuesKey"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト プロパティ*="{{SystemParameters.KeyboardCuesKey}}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyboardDelay">
      <MemberSignature Language="C#" Value="public static int KeyboardDelay { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 KeyboardDelay" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.KeyboardDelay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>キーボードの繰り返し遅延設定を取得します。値の範囲は、0 (約 250 ミリ秒の遅延) ～ 3 (約 1 秒の遅延) になります。</summary>
        <value>キーボードの繰り返し遅延設定。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SPI_GETKEYBOARDDELAY にマップされます。 参照してください[次](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/systemparametersinfo.asp)です。  
  
<a name="xamlAttributeUsage_KeyboardDelay"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*オブジェクト プロパティ*="{SystemParameters.KeyboardDelay`}`"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyboardDelayKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey KeyboardDelayKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey KeyboardDelayKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.KeyboardDelayKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.SystemParameters.KeyboardDelay" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
        <value>リソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_KeyboardDelayKey"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト プロパティ*="{{SystemParameters.KeyboardDelayKey}}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyboardPreference">
      <MemberSignature Language="C#" Value="public static bool KeyboardPreference { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool KeyboardPreference" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.KeyboardPreference" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザーがマウス操作よりもキーボード操作を優先するかどうか、および、通常は非表示のキーボード インターフェイスをアプリケーションに表示するのかどうかを示す値を取得します。</summary>
        <value>
          <see langword="true" />ユーザーがキーボードに依存する場合それ以外の場合、<see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SPI_GETKEYBOARDPREF にマップされます。 参照してください[次](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/systemparametersinfo.asp)です。  
  
<a name="xamlAttributeUsage_KeyboardPreference"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*オブジェクト プロパティ*="{SystemParameters.KeyboardPreference`}`"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyboardPreferenceKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey KeyboardPreferenceKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey KeyboardPreferenceKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.KeyboardPreferenceKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.SystemParameters.KeyboardPreference" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
        <value>リソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_KeyboardPreferenceKey"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト プロパティ*="{{SystemParameters.KeyboardPreferenceKey}}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyboardSpeed">
      <MemberSignature Language="C#" Value="public static int KeyboardSpeed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 KeyboardSpeed" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.KeyboardSpeed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>キーボードの繰り返し速度設定を取得します。値の範囲は、0 (1 秒に約 2.5 回の繰り返し) ～ 31 (1 秒に約 30 回の繰り返し) になります。</summary>
        <value>キーボードの繰り返し速度設定。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SPI_GETKEYBOARDSPEED にマップされます。 参照してください[次](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/systemparametersinfo.asp)です。  
  
<a name="xamlAttributeUsage_KeyboardSpeed"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*オブジェクト プロパティ*="{SystemParameters.KeyboardSpeed`}`"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyboardSpeedKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey KeyboardSpeedKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey KeyboardSpeedKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.KeyboardSpeedKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.SystemParameters.KeyboardSpeed" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
        <value>リソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_KeyboardSpeedKey"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト プロパティ*="{{SystemParameters.KeyboardSpeedKey}}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ListBoxSmoothScrolling">
      <MemberSignature Language="C#" Value="public static bool ListBoxSmoothScrolling { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool ListBoxSmoothScrolling" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.ListBoxSmoothScrolling" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>リスト ボックスのスムーズ スクロール効果が有効かどうかを示す値を取得します。</summary>
        <value>
          スムーズ スクロール効果が有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SPI_GETLISTBOXSMOOTHSCROLLING にマップされます。 参照してください[次](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/systemparametersinfo.asp)です。  
  
<a name="xamlAttributeUsage_ListBoxSmoothScrolling"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*オブジェクト プロパティ*="{SystemParameters.ListBoxSmoothScrolling`}`"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ListBoxSmoothScrollingKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey ListBoxSmoothScrollingKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey ListBoxSmoothScrollingKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.ListBoxSmoothScrollingKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.SystemParameters.ListBoxSmoothScrolling" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
        <value>リソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_ListBoxSmoothScrollingKey"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト プロパティ*="{{SystemParameters.ListBoxSmoothScrollingKey}}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximizedPrimaryScreenHeight">
      <MemberSignature Language="C#" Value="public static double MaximizedPrimaryScreenHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 MaximizedPrimaryScreenHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.MaximizedPrimaryScreenHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>プライマリ ディスプレイ モニター上の最大化されたトップレベル ウィンドウの高さ (ピクセル単位) を示す値を取得します。</summary>
        <value>ウィンドウの高さ。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SM_CYMAXIMIZED にマップされます。 参照してください[問題](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp)です。  
  
<a name="xamlAttributeUsage_MaximizedPrimaryScreenHeight"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*オブジェクト プロパティ*="{SystemParameters.MaximizedPrimaryScreenHeight`}`"/>  
  
 ]]></format>
        </remarks>
        <permission cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode">このメソッドを呼び出す、安全でないネイティブ メソッドを呼び出すためです。 関連する列挙。  
  
 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="MaximizedPrimaryScreenHeightKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey MaximizedPrimaryScreenHeightKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey MaximizedPrimaryScreenHeightKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.MaximizedPrimaryScreenHeightKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.SystemParameters.MaximizedPrimaryScreenHeight" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
        <value>リソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_MaximizedPrimaryScreenHeightKey"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト プロパティ*="{{SystemParameters.MaximizedPrimaryScreenHeightKey}}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximizedPrimaryScreenWidth">
      <MemberSignature Language="C#" Value="public static double MaximizedPrimaryScreenWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 MaximizedPrimaryScreenWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.MaximizedPrimaryScreenWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>プライマリ ディスプレイ モニター上の最大化されたトップレベル ウィンドウの幅 (ピクセル単位) を示す値を取得します。</summary>
        <value>ウィンドウの幅。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SM_CXMAXIMIZED にマップされます。 参照してください[問題](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp)です。  
  
<a name="xamlAttributeUsage_MaximizedPrimaryScreenWidth"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*オブジェクト プロパティ*="{SystemParameters.MaximizedPrimaryScreenWidth`}`"/>  
  
 ]]></format>
        </remarks>
        <permission cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode">このメソッドを呼び出す、安全でないネイティブ メソッドを呼び出すためです。 関連する列挙。  
  
 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="MaximizedPrimaryScreenWidthKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey MaximizedPrimaryScreenWidthKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey MaximizedPrimaryScreenWidthKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.MaximizedPrimaryScreenWidthKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.SystemParameters.MaximizedPrimaryScreenWidth" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
        <value>リソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_MaximizedPrimaryScreenWidthKey"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト プロパティ*="{{SystemParameters.MaximizedPrimaryScreenWidthKey}}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximumWindowTrackHeight">
      <MemberSignature Language="C#" Value="public static double MaximumWindowTrackHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 MaximumWindowTrackHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.MaximumWindowTrackHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>キャプションとサイズ変更境界があるウィンドウの最大の高さ (ピクセル単位) を示す値を取得します。</summary>
        <value>ウィンドウの最大の高さ。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメトリックは、デスクトップ全体を指します。 ユーザーは、このサイズよりも大きい高さにするウィンドウの枠をドラッグすることはできません。  
  
 SM_CYMAXTRACK にマップされます。 参照してください[問題](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp)です。  
  
<a name="xamlAttributeUsage_MaximumWindowTrackHeight"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*オブジェクト プロパティ*="{SystemParameters.MaximumWindowTrackHeight`}`"/>  
  
 ]]></format>
        </remarks>
        <permission cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode">このメソッドを呼び出す、安全でないネイティブ メソッドを呼び出すためです。 関連する列挙。  
  
 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="MaximumWindowTrackHeightKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey MaximumWindowTrackHeightKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey MaximumWindowTrackHeightKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.MaximumWindowTrackHeightKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.SystemParameters.MaximumWindowTrackHeight" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
        <value>リソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_MaximumWindowTrackHeightKey"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト プロパティ*="{{SystemParameters.MaximumWindowTrackHeightKey}}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximumWindowTrackWidth">
      <MemberSignature Language="C#" Value="public static double MaximumWindowTrackWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 MaximumWindowTrackWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.MaximumWindowTrackWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>キャプションとサイズ変更境界があるウィンドウの最大の幅 (ピクセル単位) を示す値を取得します。</summary>
        <value>ウィンドウの最大の幅。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメトリックは、デスクトップ全体を指します。 ユーザーは、このサイズよりも大きい、幅をウィンドウの枠をドラッグすることはできません。  
  
 SM_CXMAXTRACK にマップされます。 参照してください[問題](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp)です。  
  
<a name="xamlAttributeUsage_MaximumWindowTrackWidth"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*オブジェクト プロパティ*="{SystemParameters.MaximumWindowTrackWidth`}`"/>  
  
 ]]></format>
        </remarks>
        <permission cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode">このメソッドを呼び出す、安全でないネイティブ メソッドを呼び出すためです。 関連する列挙。  
  
 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="MaximumWindowTrackWidthKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey MaximumWindowTrackWidthKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey MaximumWindowTrackWidthKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.MaximumWindowTrackWidthKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.SystemParameters.MaximumWindowTrackWidth" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
        <value>リソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_MaximumWindowTrackWidthKey"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト プロパティ*="{{SystemParameters.MaximumWindowTrackWidthKey}}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MenuAnimation">
      <MemberSignature Language="C#" Value="public static bool MenuAnimation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool MenuAnimation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.MenuAnimation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>メニューのアニメーション機能が有効かどうかを示す値を取得します。</summary>
        <value>
          メニューのアニメーションが有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SPI_GETMENUANIMATION にマップされます。 参照してください[次](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/systemparametersinfo.asp)です。  
  
<a name="xamlAttributeUsage_MenuAnimation"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*オブジェクト プロパティ*="{SystemParameters.MenuAnimation`}`"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MenuAnimationKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey MenuAnimationKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey MenuAnimationKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.MenuAnimationKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.SystemParameters.MenuAnimation" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
        <value>リソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_MenuAnimationKey"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト プロパティ*="{{SystemParameters.MenuAnimationKey}}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MenuBarHeight">
      <MemberSignature Language="C#" Value="public static double MenuBarHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 MenuBarHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.MenuBarHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>単一行のメニュー バーの高さ (ピクセル単位) を示す値を取得します。</summary>
        <value>メニュー バーの高さ。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SM_CYMENU にマップされます。 参照してください[問題](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp)です。  
  
<a name="xamlAttributeUsage_MenuBarHeight"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*オブジェクト プロパティ*="{SystemParameters.MenuBarHeight`}`"/>  
  
 ]]></format>
        </remarks>
        <permission cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode">このメソッドを呼び出す、安全でないネイティブ メソッドを呼び出すためです。 関連する列挙。  
  
 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="MenuBarHeightKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey MenuBarHeightKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey MenuBarHeightKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.MenuBarHeightKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.SystemParameters.MenuBarHeight" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
        <value>リソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_MenuBarHeightKey"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト プロパティ*="{{SystemParameters.MenuBarHeightKey}}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MenuButtonHeight">
      <MemberSignature Language="C#" Value="public static double MenuButtonHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 MenuButtonHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.MenuButtonHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>メニュー バー ボタンの高さ (ピクセル単位) を示す値を取得します。</summary>
        <value>メニュー バー ボタンの高さ。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SM_CYMENUSIZE にマップされます。 参照してください[問題](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp)です。  
  
<a name="xamlAttributeUsage_MenuButtonHeight"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*オブジェクト プロパティ*="{SystemParameters.MenuButtonHeight`}`"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MenuButtonHeightKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey MenuButtonHeightKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey MenuButtonHeightKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.MenuButtonHeightKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.SystemParameters.MenuButtonHeight" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
        <value>リソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_MenuButtonHeightKey"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト プロパティ*="{{SystemParameters.MenuButtonHeightKey}}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MenuButtonWidth">
      <MemberSignature Language="C#" Value="public static double MenuButtonWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 MenuButtonWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.MenuButtonWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>メニュー バー ボタンの幅 (ピクセル単位) を示す値を取得します。</summary>
        <value>メニュー バー ボタンの幅。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SM_CXMENUSIZE にマップされます。 参照してください[問題](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp)です。  
  
<a name="xamlAttributeUsage_MenuButtonWidth"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*オブジェクト プロパティ*="{SystemParameters.MenuButtonWidth`}`"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MenuButtonWidthKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey MenuButtonWidthKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey MenuButtonWidthKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.MenuButtonWidthKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.SystemParameters.MenuButtonWidth" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
        <value>リソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_MenuButtonWidthKey"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト プロパティ*="{{SystemParameters.MenuButtonWidthKey}}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MenuCheckmarkHeight">
      <MemberSignature Language="C#" Value="public static double MenuCheckmarkHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 MenuCheckmarkHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.MenuCheckmarkHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>メニューの既定のチェック マークのビットマップの高さ (ピクセル単位) を示す値を取得します。</summary>
        <value>ビットマップの高さ。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SM_CYMENUCHECK にマップされます。 参照してください[問題](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp)です。  
  
<a name="xamlAttributeUsage_MenuCheckmarkHeight"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*オブジェクト プロパティ*="{SystemParameters.MenuCheckmarkHeight`}`"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MenuCheckmarkHeightKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey MenuCheckmarkHeightKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey MenuCheckmarkHeightKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.MenuCheckmarkHeightKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.SystemParameters.MenuCheckmarkHeight" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
        <value>リソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_MenuCheckmarkHeightKey"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト プロパティ*="{{SystemParameters.MenuCheckmarkHeightKey}}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MenuCheckmarkWidth">
      <MemberSignature Language="C#" Value="public static double MenuCheckmarkWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 MenuCheckmarkWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.MenuCheckmarkWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>メニューの既定のチェック マークのビットマップの幅 (ピクセル単位) を示す値を取得します。</summary>
        <value>ビットマップの幅。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SM_CXMENUCHECK にマップされます。 参照してください[問題](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp)です。  
  
<a name="xamlAttributeUsage_MenuCheckmarkWidth"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*オブジェクト プロパティ*="{SystemParameters.MenuCheckmarkWidth`}`"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MenuCheckmarkWidthKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey MenuCheckmarkWidthKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey MenuCheckmarkWidthKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.MenuCheckmarkWidthKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.SystemParameters.MenuCheckmarkWidth" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
        <value>リソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_MenuCheckmarkWidthKey"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト プロパティ*="{{SystemParameters.MenuCheckmarkWidthKey}}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MenuDropAlignment">
      <MemberSignature Language="C#" Value="public static bool MenuDropAlignment { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool MenuDropAlignment" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.MenuDropAlignment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ポップアップ メニューを、対応するメニュー項目の左側に配置するか、右側に配置するかを示す値を取得します。</summary>
        <value>
          左側に配置する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SPI_GETMENUDROPALIGNMENT にマップされます。 参照してください[次](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/systemparametersinfo.asp)です。  
  
<a name="xamlAttributeUsage_MenuDropAlignment"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*オブジェクト プロパティ*="{SystemParameters.MenuDropAlignment`}`"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MenuDropAlignmentKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey MenuDropAlignmentKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey MenuDropAlignmentKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.MenuDropAlignmentKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.SystemParameters.MenuDropAlignment" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
        <value>リソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_MenuDropAlignmentKey"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト プロパティ*="{{SystemParameters.MenuDropAlignmentKey}}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MenuFade">
      <MemberSignature Language="C#" Value="public static bool MenuFade { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool MenuFade" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.MenuFade" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>メニュー フェード アニメーションが有効かどうかを示す値を取得します。</summary>
        <value>
          フェード アニメーションが有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 場合フェード アニメーションが無効で、メニュー スライド アニメーションを使用します。 メニューのアニメーションが有効にしない限り、このフラグは無視されます。  
  
 SPI_GETMENUFADE にマップされます。 参照してください[次](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/systemparametersinfo.asp)です。  
  
<a name="xamlAttributeUsage_MenuFade"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*オブジェクト プロパティ*="{SystemParameters.MenuFade`}`"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MenuFadeKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey MenuFadeKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey MenuFadeKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.MenuFadeKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.SystemParameters.MenuFade" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
        <value>リソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_MenuFadeKey"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト プロパティ*="{{SystemParameters.MenuFadeKey}}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MenuHeight">
      <MemberSignature Language="C#" Value="public static double MenuHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 MenuHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.MenuHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>メニューの高さを決定するメトリックを取得します。</summary>
        <value>メニューの高さ。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SPI_GETNONCLIENTMETRICS からメトリックを取得します。 参照してください[次](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/systemparametersinfo.asp)です。  
  
<a name="xamlAttributeUsage_MenuHeight"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*オブジェクト プロパティ*="{SystemParameters.MenuHeight`}`"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MenuHeightKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey MenuHeightKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey MenuHeightKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.MenuHeightKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.SystemParameters.MenuHeight" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
        <value>リソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_MenuHeightKey"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト プロパティ*="{{SystemParameters.MenuHeightKey}}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MenuPopupAnimation">
      <MemberSignature Language="C#" Value="public static System.Windows.Controls.Primitives.PopupAnimation MenuPopupAnimation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Windows.Controls.Primitives.PopupAnimation MenuPopupAnimation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.MenuPopupAnimation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.Primitives.PopupAnimation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>メニューの <see cref="P:System.Windows.Controls.Primitives.Popup.PopupAnimation" /> プロパティのシステム値を取得します。</summary>
        <value>ポップアップ アニメーションのプロパティ。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_MenuPopupAnimation"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*オブジェクト プロパティ*="{SystemParameters.MenuPopupAnimation`}`"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MenuPopupAnimationKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey MenuPopupAnimationKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey MenuPopupAnimationKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.MenuPopupAnimationKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.SystemParameters.MenuPopupAnimation" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
        <value>リソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_MenuPopupAnimationKey"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト プロパティ*="{{SystemParameters.MenuPopupAnimationKey}}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MenuShowDelay">
      <MemberSignature Language="C#" Value="public static int MenuShowDelay { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 MenuShowDelay" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.MenuShowDelay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>マウスのカーソルがサブメニュー項目の上に置かれてから、ショートカット メニューが表示されるまでの待ち時間 (ミリ秒単位) を取得します。</summary>
        <value>遅延時間。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SPI_GETMENUSHOWDELAY にマップされます。 参照してください[次](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/systemparametersinfo.asp)です。  
  
<a name="xamlAttributeUsage_MenuShowDelay"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*オブジェクト プロパティ*="{SystemParameters.MenuShowDelay`}`"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MenuShowDelayKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey MenuShowDelayKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey MenuShowDelayKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.MenuShowDelayKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.SystemParameters.MenuShowDelay" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
        <value>リソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_MenuShowDelayKey"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト プロパティ*="{{SystemParameters.MenuShowDelayKey}}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MenuWidth">
      <MemberSignature Language="C#" Value="public static double MenuWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 MenuWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.MenuWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>メニューの幅を決定するメトリックを取得します。</summary>
        <value>メニューの幅 (ピクセル単位)。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SPI_GETNONCLIENTMETRICS からメトリックを取得します。 参照してください[次](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/systemparametersinfo.asp)です。  
  
<a name="xamlAttributeUsage_MenuWidth"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*オブジェクト プロパティ*="{SystemParameters.MenuWidth`}`"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MenuWidthKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey MenuWidthKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey MenuWidthKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.MenuWidthKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.SystemParameters.MenuWidth" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
        <value>リソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_MenuWidthKey"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト プロパティ*="{{SystemParameters.MenuWidthKey}}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinimizeAnimation">
      <MemberSignature Language="C#" Value="public static bool MinimizeAnimation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool MinimizeAnimation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.MinimizeAnimation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザー操作に関連付けられているアニメーション効果を取得します。</summary>
        <value>
          <see langword="true" />最小化ウィンドウのアニメーション機能が有効である場合それ以外の場合、<see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SPI_GETANIMATION システム パラメーターを取得、 [ANIMATIONINFO](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/animationinfo_str.asp)構造体。 場合、 *iMinAnimate*構造体のメンバーは 0 でない最小アニメーション効果が有効にします。  
  
 SPI_GETANIMATION にマップされます。 参照してください[次](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/systemparametersinfo.asp)です。  
  
<a name="xamlAttributeUsage_MinimizeAnimation"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*オブジェクト プロパティ*="{SystemParameters.MinimizeAnimation`}`"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinimizeAnimationKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey MinimizeAnimationKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey MinimizeAnimationKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.MinimizeAnimationKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.SystemParameters.MinimizeAnimation" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
        <value>リソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_MinimizeAnimationKey"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト プロパティ*="{{SystemParameters.MinimizeAnimationKey}}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinimizedGridHeight">
      <MemberSignature Language="C#" Value="public static double MinimizedGridHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 MinimizedGridHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.MinimizedGridHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>最小化されたウィンドウのグリッド セルの高さ (ピクセル単位) を示す値を取得します。</summary>
        <value>最小化されたウィンドウのグリッド セルの高さ。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 最小化された各ウィンドウは、この高さを含む四角形に適合します。 値は、常に以上<xref:System.Windows.SystemParameters.MinimizedWindowHeight%2A>です。  
  
 SM_CYMINSPACING にマップされます。 参照してください[問題](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp)です。  
  
<a name="xamlAttributeUsage_MinimizedGridHeight"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*オブジェクト プロパティ*="{SystemParameters.MinimizedGridHeight`}`"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinimizedGridHeightKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey MinimizedGridHeightKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey MinimizedGridHeightKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.MinimizedGridHeightKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.SystemParameters.MinimizedGridHeight" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
        <value>リソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_MinimizedGridHeightKey"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト プロパティ*="{{SystemParameters.MinimizedGridHeightKey}}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinimizedGridWidth">
      <MemberSignature Language="C#" Value="public static double MinimizedGridWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 MinimizedGridWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.MinimizedGridWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>最小化されたウィンドウのグリッド セルの幅 (ピクセル単位) を示す値を取得します。</summary>
        <value>最小化されたウィンドウのグリッド セルの幅。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 最小化された各ウィンドウは、この幅を含む四角形に適合します。 値は、常に以上<xref:System.Windows.SystemParameters.MinimizedWindowWidth%2A>です。  
  
 SM_CXMINSPACING にマップされます。 参照してください[問題](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp)です。  
  
<a name="xamlAttributeUsage_MinimizedGridWidth"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*オブジェクト プロパティ*="{SystemParameters.MinimizedGridWidth`}`"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinimizedGridWidthKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey MinimizedGridWidthKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey MinimizedGridWidthKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.MinimizedGridWidthKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.SystemParameters.MinimizedGridWidth" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
        <value>リソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_MinimizedGridWidthKey"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト プロパティ*="{{SystemParameters.MinimizedGridWidthKey}}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinimizedWindowHeight">
      <MemberSignature Language="C#" Value="public static double MinimizedWindowHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 MinimizedWindowHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.MinimizedWindowHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>最小化されたウィンドウの高さ (ピクセル単位) を示す値を取得します。</summary>
        <value>最小化されたウィンドウの高さ。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SM_CYMINIMIZED にマップされます。 参照してください[問題](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp)です。  
  
<a name="xamlAttributeUsage_MinimizedWindowHeight"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*オブジェクト プロパティ*="{SystemParameters.MinimizedWindowHeight`}`"/>  
  
 ]]></format>
        </remarks>
        <permission cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode">このメソッドを呼び出す、安全でないネイティブ メソッドを呼び出すためです。 関連する列挙。  
  
 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="MinimizedWindowHeightKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey MinimizedWindowHeightKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey MinimizedWindowHeightKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.MinimizedWindowHeightKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.SystemParameters.MinimizedWindowHeight" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
        <value>リソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_MinimizedWindowHeightKey"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト プロパティ*="{{SystemParameters.MinimizedWindowHeightKey}}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinimizedWindowWidth">
      <MemberSignature Language="C#" Value="public static double MinimizedWindowWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 MinimizedWindowWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.MinimizedWindowWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>最小化されたウィンドウの幅 (ピクセル単位) を示す値を取得します。</summary>
        <value>最小化されたウィンドウの幅。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SM_CXMINIMIZED にマップされます。 参照してください[問題](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp)です。  
  
<a name="xamlAttributeUsage_MinimizedWindowWidth"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*オブジェクト プロパティ*="{SystemParameters.MinimizedWindowWidth`}`"/>  
  
 ]]></format>
        </remarks>
        <permission cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode">このメソッドを呼び出す、安全でないネイティブ メソッドを呼び出すためです。 関連する列挙。  
  
 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="MinimizedWindowWidthKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey MinimizedWindowWidthKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey MinimizedWindowWidthKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.MinimizedWindowWidthKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.SystemParameters.MinimizedWindowWidth" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
        <value>リソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_MinimizedWindowWidthKey"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト プロパティ*="{{SystemParameters.MinimizedWindowWidthKey}}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinimumHorizontalDragDistance">
      <MemberSignature Language="C#" Value="public static double MinimumHorizontalDragDistance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 MinimumHorizontalDragDistance" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.MinimumHorizontalDragDistance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ドラッグ操作の開始前にマウス ポインターの一定範囲の移動を許容するための、ドラッグ ポイントを中心とする四角形の幅を取得します。</summary>
        <value>四角形の幅 (ピクセル単位)。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SM_CXDRAG にマップされます。 参照してください[問題](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp)です。  
  
<a name="xamlAttributeUsage_MinimumHorizontalDragDistance"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*オブジェクト プロパティ*="{SystemParameters.MinimumHorizontalDragDistance`}`"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinimumVerticalDragDistance">
      <MemberSignature Language="C#" Value="public static double MinimumVerticalDragDistance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 MinimumVerticalDragDistance" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.MinimumVerticalDragDistance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ドラッグ操作の開始前にマウス ポインターの一定範囲の移動を許容するための、ドラッグ ポイントを中心とする四角形の高さを取得します。</summary>
        <value>四角形の高さ (ピクセル単位)。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SM_CXDRAG にマップされます。 参照してください[問題](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp)です。  
  
<a name="xamlAttributeUsage_MinimumVerticalDragDistance"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*オブジェクト プロパティ*="{SystemParameters.MinimumVerticalDragDistance`}`"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinimumWindowHeight">
      <MemberSignature Language="C#" Value="public static double MinimumWindowHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 MinimumWindowHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.MinimumWindowHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ウィンドウの最小の高さ (ピクセル単位) を示す値を取得します。</summary>
        <value>ウィンドウの最小の高さ。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SM_CYMIN にマップされます。 参照してください[問題](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp)です。  
  
<a name="xamlAttributeUsage_MinimumWindowHeight"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*オブジェクト プロパティ*="{SystemParameters.MinimumWindowHeight`}`"/>  
  
 ]]></format>
        </remarks>
        <permission cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode">このメソッドを呼び出す、安全でないネイティブ メソッドを呼び出すためです。 関連する列挙。  
  
 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="MinimumWindowHeightKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey MinimumWindowHeightKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey MinimumWindowHeightKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.MinimumWindowHeightKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.SystemParameters.MinimumWindowHeight" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
        <value>リソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_MinimumWindowHeightKey"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト プロパティ*="{{SystemParameters.MinimumWindowHeightKey}}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinimumWindowTrackHeight">
      <MemberSignature Language="C#" Value="public static double MinimumWindowTrackHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 MinimumWindowTrackHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.MinimumWindowTrackHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ウィンドウの最小のトラッキングの高さ (ピクセル単位) を示す値を取得します。</summary>
        <value>ウィンドウの最小のトラッキングの高さ。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ユーザーは、ウィンドウの枠をドラッグして、このサイズよりも小さい高さにことはできません。  
  
 SM_CYMINTRACK にマップされます。 参照してください[問題](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp)です。  
  
<a name="xamlAttributeUsage_MinimumWindowTrackHeight"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*オブジェクト プロパティ*="{SystemParameters.MinimumWindowTrackHeight`}`"/>  
  
 ]]></format>
        </remarks>
        <permission cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode">このメソッドを呼び出す、安全でないネイティブ メソッドを呼び出すためです。 関連する列挙。  
  
 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="MinimumWindowTrackHeightKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey MinimumWindowTrackHeightKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey MinimumWindowTrackHeightKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.MinimumWindowTrackHeightKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.SystemParameters.MinimumWindowTrackHeight" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
        <value>リソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_MinimumWindowTrackHeightKey"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト プロパティ*="{{SystemParameters.MinimumWindowTrackHeightKey}}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinimumWindowTrackWidth">
      <MemberSignature Language="C#" Value="public static double MinimumWindowTrackWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 MinimumWindowTrackWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.MinimumWindowTrackWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ウィンドウの最小のトラッキングの幅 (ピクセル単位) を示す値を取得します。</summary>
        <value>ウィンドウの最小のトラッキングの幅。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ユーザーは、ウィンドウの枠をドラッグして、このサイズよりも小さい、幅をことはできません。  
  
 SM_CXMINTRACK にマップされます。 参照してください[問題](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp)です。  
  
<a name="xamlAttributeUsage_MinimumWindowTrackWidth"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*オブジェクト プロパティ*="{SystemParameters.MinimumWindowTrackWidth`}`"/>  
  
 ]]></format>
        </remarks>
        <permission cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode">このメソッドを呼び出す、安全でないネイティブ メソッドを呼び出すためです。 関連する列挙。  
  
 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="MinimumWindowTrackWidthKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey MinimumWindowTrackWidthKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey MinimumWindowTrackWidthKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.MinimumWindowTrackWidthKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.SystemParameters.MinimumWindowTrackWidth" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
        <value>リソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_MinimumWindowTrackWidthKey"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト プロパティ*="{{SystemParameters.MinimumWindowTrackWidthKey}}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinimumWindowWidth">
      <MemberSignature Language="C#" Value="public static double MinimumWindowWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 MinimumWindowWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.MinimumWindowWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ウィンドウの最小の幅 (ピクセル単位) を示す値を取得します。</summary>
        <value>ウィンドウの最小の幅。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SM_CXMIN にマップされます。 参照してください[問題](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp)です。  
  
<a name="xamlAttributeUsage_MinimumWindowWidth"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*オブジェクト プロパティ*="{SystemParameters.MinimumWindowWidth`}`"/>  
  
 ]]></format>
        </remarks>
        <permission cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode">このメソッドを呼び出す、安全でないネイティブ メソッドを呼び出すためです。 関連する列挙。  
  
 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="MinimumWindowWidthKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey MinimumWindowWidthKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey MinimumWindowWidthKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.MinimumWindowWidthKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.SystemParameters.MinimumWindowWidth" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
        <value>リソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_MinimumWindowWidthKey"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト プロパティ*="{{SystemParameters.MinimumWindowWidthKey}}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseHoverHeight">
      <MemberSignature Language="C#" Value="public static double MouseHoverHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 MouseHoverHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.MouseHoverHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>マウスのポイント イベントを生成するために、マウス ポインターが収まっている必要のある四角形の高さ (ピクセル単位) を取得します。</summary>
        <value>マウスのポイント イベントに使用される四角形の高さ。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SPI_GETMOUSEHOVERHEIGHT にマップされます。 参照してください[次](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/systemparametersinfo.asp)です。  
  
<a name="xamlAttributeUsage_MouseHoverHeight"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*オブジェクト プロパティ*="{SystemParameters.MouseHoverHeight`}`"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseHoverHeightKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey MouseHoverHeightKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey MouseHoverHeightKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.MouseHoverHeightKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.SystemParameters.MouseHoverHeight" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
        <value>リソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_MouseHoverHeightKey"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト プロパティ*="{{SystemParameters.MouseHoverHeightKey}}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseHoverTime">
      <MemberSignature Language="C#" Value="public static TimeSpan MouseHoverTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.TimeSpan MouseHoverTime" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.MouseHoverTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>マウスのポイント イベントを生成するために、静止領域内にマウス ポインターがとどまっている必要がある時間 (ミリ秒単位) を取得します。</summary>
        <value>マウスのポイント イベントを生成するために、静止領域内にマウスがとどまっている必要がある時間 (ミリ秒単位)。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SPI_GETMOUSEHOVERTIME にマップされます。 参照してください[次](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/systemparametersinfo.asp)です。  
  
<a name="xamlAttributeUsage_MouseHoverTime"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*オブジェクト プロパティ*="{SystemParameters.MouseHoverTime`}`"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseHoverTimeKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey MouseHoverTimeKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey MouseHoverTimeKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.MouseHoverTimeKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.SystemParameters.MouseHoverTime" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
        <value>リソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_MouseHoverTimeKey"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト プロパティ*="{{SystemParameters.MouseHoverTimeKey}}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseHoverWidth">
      <MemberSignature Language="C#" Value="public static double MouseHoverWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 MouseHoverWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.MouseHoverWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>マウスのポイント イベントを生成するために、マウス ポインターが収まっている必要のある四角形の幅 (ピクセル単位) を取得します。</summary>
        <value>マウスのポイント イベントに使用される四角形の幅。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SPI_GETMOUSEHOVERWIDTH にマップされます。 参照してください[次](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/systemparametersinfo.asp)です。  
  
<a name="xamlAttributeUsage_MouseHoverWidth"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*オブジェクト プロパティ*="{SystemParameters.MouseHoverWidth`}`"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseHoverWidthKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey MouseHoverWidthKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey MouseHoverWidthKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.MouseHoverWidthKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.SystemParameters.MouseHoverWidth" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
        <value>リソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_MouseHoverWidthKey"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト プロパティ*="{{SystemParameters.MouseHoverWidthKey}}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NavigationChromeDownLevelStyleKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey NavigationChromeDownLevelStyleKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey NavigationChromeDownLevelStyleKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.NavigationChromeDownLevelStyleKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.SystemParameters.NavigationChromeDownLevelStyleKey" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
        <value>リソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_NavigationChromeDownLevelStyleKey"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*オブジェクト プロパティ*="{SystemParameters.NavigationChromeDownLevelStyleKey`}`"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NavigationChromeStyleKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey NavigationChromeStyleKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey NavigationChromeStyleKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.NavigationChromeStyleKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.SystemParameters.NavigationChromeStyleKey" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
        <value>リソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_NavigationChromeStyleKey"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト プロパティ*="{{SystemParameters.NavigationChromeStyleKey}}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PowerLineStatus">
      <MemberSignature Language="C#" Value="public static System.Windows.PowerLineStatus PowerLineStatus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Windows.PowerLineStatus PowerLineStatus" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.PowerLineStatus" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.PowerLineStatus</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>システム電源が接続されているか、システム電源のステータスが不明であるかを示す値を取得します。</summary>
        <value>列挙体の値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_PowerLine"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*オブジェクト プロパティ*="{SystemParameters.PowerLine`}`"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PowerLineStatusKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey PowerLineStatusKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey PowerLineStatusKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.PowerLineStatusKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.SystemParameters.PowerLineStatus" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
        <value>リソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_PowerLineKey"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト プロパティ*="{{SystemParameters.PowerLineKey}}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrimaryScreenHeight">
      <MemberSignature Language="C#" Value="public static double PrimaryScreenHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 PrimaryScreenHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.PrimaryScreenHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>プライマリ ディスプレイ モニターの画面の高さ (ピクセル単位) を示す値を取得します。</summary>
        <value>画面の高さ。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SM_CYSCREEN にマップされます。 参照してください[問題](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp)です。  
  
<a name="xamlAttributeUsage_PrimaryScreenHeight"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*オブジェクト プロパティ*="{SystemParameters.PrimaryScreenHeight`}`"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrimaryScreenHeightKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey PrimaryScreenHeightKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey PrimaryScreenHeightKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.PrimaryScreenHeightKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.SystemParameters.PrimaryScreenHeight" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
        <value>リソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_PrimaryScreenHeightKey"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト プロパティ*="{{SystemParameters.PrimaryScreenHeightKey}}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrimaryScreenWidth">
      <MemberSignature Language="C#" Value="public static double PrimaryScreenWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 PrimaryScreenWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.PrimaryScreenWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>プライマリ ディスプレイ モニターの画面の幅 (ピクセル単位) を示す値を取得します。</summary>
        <value>画面の幅。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SM_CXSCREEN にマップされます。 参照してください[問題](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp)です。  
  
<a name="xamlAttributeUsage_PrimaryScreenWidth"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*オブジェクト プロパティ*="{SystemParameters.PrimaryScreenWidth`}`"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrimaryScreenWidthKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey PrimaryScreenWidthKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey PrimaryScreenWidthKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.PrimaryScreenWidthKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.SystemParameters.PrimaryScreenWidth" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
        <value>リソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_PrimaryScreenWidthKey"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト プロパティ*="{{SystemParameters.PrimaryScreenWidthKey}}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResizeFrameHorizontalBorderHeight">
      <MemberSignature Language="C#" Value="public static double ResizeFrameHorizontalBorderHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 ResizeFrameHorizontalBorderHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.ResizeFrameHorizontalBorderHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>サイズを変更できるウィンドウの周囲にある水平サイズ変更境界の高さ (太さ) をピクセル単位で示す値を取得します。</summary>
        <value>境界の高さ。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SM_CXSIZEFRAME にマップされます。 参照してください[問題](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp)です。  
  
<a name="xamlAttributeUsage_ResizeFrameHorizontalBorderHeight"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*オブジェクト プロパティ*="{SystemParameters.ResizeFrameHorizontalBorderHeight`}`"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResizeFrameHorizontalBorderHeightKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey ResizeFrameHorizontalBorderHeightKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey ResizeFrameHorizontalBorderHeightKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.ResizeFrameHorizontalBorderHeightKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.SystemParameters.ResizeFrameHorizontalBorderHeight" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
        <value>リソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_ResizeFrameHorizontalBorderHeightKey"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト プロパティ*="{{SystemParameters.ResizeFrameHorizontalBorderHeightKey}}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResizeFrameVerticalBorderWidth">
      <MemberSignature Language="C#" Value="public static double ResizeFrameVerticalBorderWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 ResizeFrameVerticalBorderWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.ResizeFrameVerticalBorderWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>サイズを変更できるウィンドウの周囲にある垂直サイズ変更境界の幅 (太さ) をピクセル単位で示す値を取得します。</summary>
        <value>境界の幅。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SM_CYSIZEFRAME にマップされます。 参照してください[問題](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp)です。  
  
<a name="xamlAttributeUsage_ResizeFrameVerticalBorderWidth"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*オブジェクト プロパティ*="{SystemParameters.ResizeFrameVerticalBorderWidth`}`"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResizeFrameVerticalBorderWidthKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey ResizeFrameVerticalBorderWidthKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey ResizeFrameVerticalBorderWidthKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.ResizeFrameVerticalBorderWidthKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.SystemParameters.ResizeFrameVerticalBorderWidth" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
        <value>リソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_ResizeFrameVerticalBorderWidthKey"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト プロパティ*="{{SystemParameters.ResizeFrameVerticalBorderWidthKey}}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScrollHeight">
      <MemberSignature Language="C#" Value="public static double ScrollHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 ScrollHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.ScrollHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>最小化されていないウィンドウの非クライアント領域のスクロールの高さを決定するメトリックを取得します。</summary>
        <value>スクロールの高さ (ピクセル単位)。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 メトリックは、SPI_GETNONCLIENTMETRICS から取得されます。 参照してください[次](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/systemparametersinfo.asp)です。  
  
<a name="xamlAttributeUsage_ScrollHeight"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*オブジェクト プロパティ*="{SystemParameters.ScrollHeight`}`"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScrollHeightKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey ScrollHeightKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey ScrollHeightKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.ScrollHeightKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.SystemParameters.ScrollHeight" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
        <value>リソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_ScrollHeightKey"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト プロパティ*="{{SystemParameters.ScrollHeightKey}}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScrollWidth">
      <MemberSignature Language="C#" Value="public static double ScrollWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 ScrollWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.ScrollWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>最小化されていないウィンドウの非クライアント領域のスクロールの幅を決定するメトリックを取得します。</summary>
        <value>スクロールの幅 (ピクセル単位)。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 メトリックは、SPI_GETNONCLIENTMETRICS から取得されます。 参照してください[次](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/systemparametersinfo.asp)です。  
  
<a name="xamlAttributeUsage_ScrollWidth"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*オブジェクト プロパティ*="{SystemParameters.ScrollWidth`}`"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScrollWidthKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey ScrollWidthKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey ScrollWidthKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.ScrollWidthKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.SystemParameters.ScrollWidth" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
        <value>リソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_ScrollWidthKey"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト プロパティ*="{{SystemParameters.ScrollWidthKey}}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionFade">
      <MemberSignature Language="C#" Value="public static bool SelectionFade { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool SelectionFade" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.SelectionFade" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>選択フェード効果が有効かどうかを示す値を取得します。</summary>
        <value>
          フェード効果が有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 選択フェード効果は、メニューが閉じられた後にフェードアウト中に簡単に画面のままにして、ユーザーが選択したメニュー項目です。  
  
 SPI_GETSELECTIONFADE にマップされます。 参照してください[次](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/systemparametersinfo.asp)です。  
  
<a name="xamlAttributeUsage_SelectionFade"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*オブジェクト プロパティ*="{SystemParameters.SelectionFade`}`"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionFadeKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey SelectionFadeKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey SelectionFadeKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.SelectionFadeKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.SystemParameters.SelectionFade" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
        <value>リソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_SelectionFadeKey"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト プロパティ*="{{SystemParameters.SelectionFadeKey}}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowSounds">
      <MemberSignature Language="C#" Value="public static bool ShowSounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool ShowSounds" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.ShowSounds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザーが情報を視覚的形式で要求しているかどうかを示す値を取得します。</summary>
        <value>
          ユーザーが、通常はオーディオ形式のみで情報を提示しているアプリケーションに対して、視覚的に情報を提示するように要求する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SM_SHOWSOUNDS にマップされます。 参照してください[問題](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp)です。  
  
<a name="xamlAttributeUsage_ShowSounds"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*オブジェクト プロパティ*="{SystemParameters.ShowSounds`}`"/>  
  
 ]]></format>
        </remarks>
        <permission cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode">このメソッドを呼び出す、安全でないネイティブ メソッドを呼び出すためです。 関連する列挙。  
  
 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="ShowSoundsKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey ShowSoundsKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey ShowSoundsKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.ShowSoundsKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.SystemParameters.ShowSounds" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
        <value>リソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_ShowSoundsKey"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト プロパティ*="{{SystemParameters.ShowSoundsKey}}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SmallCaptionHeight">
      <MemberSignature Language="C#" Value="public static double SmallCaptionHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 SmallCaptionHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.SmallCaptionHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>最小化されていないウィンドウの非クライアント領域の小さいキャプションの高さを決定するメトリックを取得します。</summary>
        <value>キャプションの高さ (ピクセル単位)。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SPI_GETNONCLIENTMETRICS からメトリックを取得します。 参照してください[次](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/systemparametersinfo.asp)です。  
  
<a name="xamlAttributeUsage_SmallCaptionHeight"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*オブジェクト プロパティ*="{SystemParameters.SmallCaptionHeight`}`"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SmallCaptionHeightKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey SmallCaptionHeightKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey SmallCaptionHeightKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.SmallCaptionHeightKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.SystemParameters.SmallCaptionHeight" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
        <value>リソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_SmallCaptionHeightKey"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト プロパティ*="{{SystemParameters.SmallCaptionHeightKey}}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SmallCaptionWidth">
      <MemberSignature Language="C#" Value="public static double SmallCaptionWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 SmallCaptionWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.SmallCaptionWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>最小化されていないウィンドウの非クライアント領域の小さいキャプションの幅を決定するメトリックを取得します。</summary>
        <value>キャプションの幅 (ピクセル単位)。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SPI_GETNONCLIENTMETRICS からメトリックを取得します。 参照してください[次](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/systemparametersinfo.asp)です。  
  
<a name="xamlAttributeUsage_SmallCaptionWidth"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*オブジェクト プロパティ*="{SystemParameters.SmallCaptionWidth`}`"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SmallCaptionWidthKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey SmallCaptionWidthKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey SmallCaptionWidthKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.SmallCaptionWidthKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.SystemParameters.SmallCaptionWidth" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
        <value>リソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_SmallCaptionWidthKey"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト プロパティ*="{{SystemParameters.SmallCaptionWidthKey}}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SmallIconHeight">
      <MemberSignature Language="C#" Value="public static double SmallIconHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 SmallIconHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.SmallIconHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>小さいアイコンの推奨される高さ (ピクセル単位) を示す値を取得します。</summary>
        <value>アイコンの高さ。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 小さいアイコンは、通常、ウィンドウのキャプションと小さなアイコン表示で表示されます。  
  
 SM_CYSMICON にマップされます。 参照してください[問題](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp)です。  
  
<a name="xamlAttributeUsage_SmallIconHeight"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*オブジェクト プロパティ*="{SystemParameters.SmallIconHeight`}`"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SmallIconHeightKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey SmallIconHeightKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey SmallIconHeightKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.SmallIconHeightKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.SystemParameters.SmallIconHeight" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
        <value>リソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_SmallIconHeightKey"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト プロパティ*="{{SystemParameters.SmallIconHeightKey}}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SmallIconWidth">
      <MemberSignature Language="C#" Value="public static double SmallIconWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 SmallIconWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.SmallIconWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>小さいアイコンの推奨される幅 (ピクセル単位) を示す値を取得します。</summary>
        <value>アイコンの幅。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 小さいアイコンは、通常、ウィンドウのキャプションと小さなアイコン表示で表示されます。  
  
 SM_CXSMICON にマップされます。 参照してください[問題](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp)です。  
  
<a name="xamlAttributeUsage_SmallIconWidth"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*オブジェクト プロパティ*="{SystemParameters.SmallIconWidth`}`"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SmallIconWidthKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey SmallIconWidthKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey SmallIconWidthKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.SmallIconWidthKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.SystemParameters.SmallIconWidth" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
        <value>リソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_SmallIconWidthKey"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト プロパティ*="{{SystemParameters.SmallIconWidthKey}}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SmallWindowCaptionButtonHeight">
      <MemberSignature Language="C#" Value="public static double SmallWindowCaptionButtonHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 SmallWindowCaptionButtonHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.SmallWindowCaptionButtonHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>小さいキャプション ボタンの高さ (ピクセル単位) を示す値を取得します。</summary>
        <value>キャプション ボタンの高さ。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SM_CYSMSIZE にマップされます。 参照してください[問題](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp)です。  
  
<a name="xamlAttributeUsage_SmallWindowCaptionButtonHeight"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*オブジェクト プロパティ*="{SystemParameters.SmallWindowCaptionButtonHeight`}`"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SmallWindowCaptionButtonHeightKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey SmallWindowCaptionButtonHeightKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey SmallWindowCaptionButtonHeightKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.SmallWindowCaptionButtonHeightKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.SystemParameters.SmallWindowCaptionButtonHeight" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
        <value>リソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_SmallWindowCaptionButtonHeightKey"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト プロパティ*="{{SystemParameters.SmallWindowCaptionButtonHeightKey}}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SmallWindowCaptionButtonWidth">
      <MemberSignature Language="C#" Value="public static double SmallWindowCaptionButtonWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 SmallWindowCaptionButtonWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.SmallWindowCaptionButtonWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>小さいキャプション ボタンの幅 (ピクセル単位) を示す値を取得します。</summary>
        <value>キャプション ボタンの幅。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SM_CXSMSIZE にマップされます。 参照してください[問題](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp)です。  
  
<a name="xamlAttributeUsage_SmallWindowCaptionButtonWidth"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*オブジェクト プロパティ*="{SystemParameters.SmallWindowCaptionButtonWidth`}`"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SmallWindowCaptionButtonWidthKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey SmallWindowCaptionButtonWidthKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey SmallWindowCaptionButtonWidthKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.SmallWindowCaptionButtonWidthKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.SystemParameters.SmallWindowCaptionButtonWidth" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
        <value>リソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_SmallWindowCaptionButtonWidthKey"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト プロパティ*="{{SystemParameters.SmallWindowCaptionButtonWidthKey}}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SnapToDefaultButton">
      <MemberSignature Language="C#" Value="public static bool SnapToDefaultButton { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool SnapToDefaultButton" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.SnapToDefaultButton" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>既定値にスナップ ボタンが有効かどうかを示す値を取得します。 有効な場合、マウスのカーソルに自動的に移動 ダイアログ ボックスの既定のボタンなど**OK**または**適用**です。</summary>
        <value>
          この機能が有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SPI_GETSNAPTODEFBUTTON からこのメトリックを取得します。 参照してください[次](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/systemparametersinfo.asp)です。  
  
<a name="xamlAttributeUsage_SnapToDefaultButton"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*オブジェクト プロパティ*="{SystemParameters.SnapToDefaultButton`}`"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SnapToDefaultButtonKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey SnapToDefaultButtonKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey SnapToDefaultButtonKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.SnapToDefaultButtonKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.SystemParameters.SnapToDefaultButton" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
        <value>リソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_SnapToDefaultButtonKey"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト プロパティ*="{{SystemParameters.SnapToDefaultButtonKey}}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StaticPropertyChanged">
      <MemberSignature Language="C#" Value="public static event System.ComponentModel.PropertyChangedEventHandler StaticPropertyChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.PropertyChangedEventHandler StaticPropertyChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.SystemParameters.StaticPropertyChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>プロパティの 1 つが変更されたときに発生します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusHotTracking">
      <MemberSignature Language="C#" Value="public static bool StylusHotTracking { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool StylusHotTracking" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.StylusHotTracking" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>スタイラスのホット トラッキングが有効かどうかを示す値を取得します。</summary>
        <value>
          スタイラスのホット トラッキングが有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SPI_GETSTYLUSHOTTRACKING にマップされます。 参照してください[次](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/systemparametersinfo.asp)です。  
  
<a name="xamlAttributeUsage_StylusHotTracking"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*オブジェクト プロパティ*="{SystemParameters.StylusHotTracking`}`"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusHotTrackingKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey StylusHotTrackingKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey StylusHotTrackingKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.StylusHotTrackingKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.SystemParameters.StylusHotTracking" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
        <value>リソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_StylusHotTrackingKey"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト プロパティ*="{{SystemParameters.StylusHotTrackingKey}}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SwapButtons">
      <MemberSignature Language="C#" Value="public static bool SwapButtons { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool SwapButtons" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.SwapButtons" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>左右のマウス ボタンの機能が入れ替わっているかどうかを示す値を取得します。</summary>
        <value>
          左右のマウス ボタンの機能が入れ替わっている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SM_SWAPBUTTON にマップされます。 参照してください[問題](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp)です。  
  
<a name="xamlAttributeUsage_SwapButtons"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*オブジェクト プロパティ*="{SystemParameters.SwapButtons`}`"/>  
  
 ]]></format>
        </remarks>
        <permission cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode">このメソッドを呼び出す、安全でないネイティブ メソッドを呼び出すためです。 関連する列挙。  
  
 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="SwapButtonsKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey SwapButtonsKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey SwapButtonsKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.SwapButtonsKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.SystemParameters.SwapButtons" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
        <value>リソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_SwapButtonsKey"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト プロパティ*="{{SystemParameters.SwapButtonsKey}}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThickHorizontalBorderHeight">
      <MemberSignature Language="C#" Value="public static double ThickHorizontalBorderHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 ThickHorizontalBorderHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.ThickHorizontalBorderHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>[!INCLUDE[TLA#tla_3d](~/includes/tlasharptla-3d-md.md)] 境界線の高さ (ピクセル単位) を示す値を取得します。</summary>
        <value>境界の高さ。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SM_CXEDGE にマップされます。 参照してください[問題](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp)です。  
  
<a name="xamlAttributeUsage_ThickHorizontalBorderHeight"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*オブジェクト プロパティ*="{SystemParameters.ThickHorizontalBorderHeight`}`"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThickHorizontalBorderHeightKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey ThickHorizontalBorderHeightKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey ThickHorizontalBorderHeightKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.ThickHorizontalBorderHeightKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.SystemParameters.ThickHorizontalBorderHeight" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
        <value>リソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_ThickHorizontalBorderHeightKey"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト プロパティ*="{{SystemParameters.ThickHorizontalBorderHeightKey}}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThickVerticalBorderWidth">
      <MemberSignature Language="C#" Value="public static double ThickVerticalBorderWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 ThickVerticalBorderWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.ThickVerticalBorderWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>[!INCLUDE[TLA#tla_3d](~/includes/tlasharptla-3d-md.md)] 境界線の幅 (ピクセル単位) を示す値を取得します。</summary>
        <value>境界の幅。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SM_CYEDGE にマップされます。 参照してください[問題](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp)です。  
  
<a name="xamlAttributeUsage_ThickVerticalBorderWidth"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*オブジェクト プロパティ*="{SystemParameters.ThickVerticalBorderWidth`}`"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThickVerticalBorderWidthKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey ThickVerticalBorderWidthKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey ThickVerticalBorderWidthKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.ThickVerticalBorderWidthKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.SystemParameters.ThickVerticalBorderWidth" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
        <value>リソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_ThickVerticalBorderWidthKey"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト プロパティ*="{{SystemParameters.ThickVerticalBorderWidthKey}}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThinHorizontalBorderHeight">
      <MemberSignature Language="C#" Value="public static double ThinHorizontalBorderHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 ThinHorizontalBorderHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.ThinHorizontalBorderHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ウィンドウの水平方向の境界線の高さ (ピクセル単位) を示す値を取得します。</summary>
        <value>境界の高さ。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SM_CXBORDER にマップされます。 参照してください[問題](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp)です。  
  
<a name="xamlAttributeUsage_ThinHorizontalBorderHeight"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*オブジェクト プロパティ*="{SystemParameters.ThinHorizontalBorderHeight`}`"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThinHorizontalBorderHeightKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey ThinHorizontalBorderHeightKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey ThinHorizontalBorderHeightKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.ThinHorizontalBorderHeightKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.SystemParameters.ThinHorizontalBorderHeight" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
        <value>リソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_ThinHorizontalBorderHeightKey"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト プロパティ*="{{SystemParameters.ThinHorizontalBorderHeightKey}}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThinVerticalBorderWidth">
      <MemberSignature Language="C#" Value="public static double ThinVerticalBorderWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 ThinVerticalBorderWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.ThinVerticalBorderWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ウィンドウの垂直方向の境界線の幅 (ピクセル単位) を示す値を取得します。</summary>
        <value>境界の幅。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SM_CYBORDER にマップされます。 参照してください[問題](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp)です。  
  
<a name="xamlAttributeUsage_ThinVerticalBorderWidth"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*オブジェクト プロパティ*="{SystemParameters.ThinVerticalBorderWidth`}`"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThinVerticalBorderWidthKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey ThinVerticalBorderWidthKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey ThinVerticalBorderWidthKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.ThinVerticalBorderWidthKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.SystemParameters.ThinVerticalBorderWidth" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
        <value>リソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_ThinVerticalBorderWidthKey"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト プロパティ*="{{SystemParameters.ThinVerticalBorderWidthKey}}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToolTipAnimation">
      <MemberSignature Language="C#" Value="public static bool ToolTipAnimation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool ToolTipAnimation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.ToolTipAnimation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Controls.ToolTip" /> アニメーションが有効かどうかを示す値を取得します。</summary>
        <value>
          ツールヒント アニメーションが有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SPI_GETTOOLTIPANIMATION にマップされます。 参照してください[次](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/systemparametersinfo.asp)です。  
  
<a name="xamlAttributeUsage_ToolTipAnimation"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*オブジェクト プロパティ*="{SystemParameters.ToolTipAnimation`}`"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToolTipAnimationKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey ToolTipAnimationKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey ToolTipAnimationKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.ToolTipAnimationKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.SystemParameters.ToolTipAnimation" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
        <value>リソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_ToolTipAnimationKey"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト プロパティ*="{{SystemParameters.ToolTipAnimationKey}}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToolTipFade">
      <MemberSignature Language="C#" Value="public static bool ToolTipFade { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool ToolTipFade" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.ToolTipFade" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ツールヒント アニメーションで、フェード効果とスライド効果のどちらが使用されるかを示す値を取得します。</summary>
        <value>
          フェード効果が使用される場合は <see langword="true" />。スライド効果が使用される場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.SystemParameters.ToolTipAnimation%2A>有効にする必要があります。  
  
 SPI_GETTOOLTIPFADE にマップされます。 参照してください[次](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/systemparametersinfo.asp)です。  
  
<a name="xamlAttributeUsage_ToolTipFade"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*オブジェクト プロパティ*="{SystemParameters.ToolTipFade`}`"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToolTipFadeKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey ToolTipFadeKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey ToolTipFadeKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.ToolTipFadeKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.SystemParameters.ToolTipFade" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
        <value>リソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_ToolTipFadeKey"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト プロパティ*="{{SystemParameters.ToolTipFadeKey}}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToolTipPopupAnimation">
      <MemberSignature Language="C#" Value="public static System.Windows.Controls.Primitives.PopupAnimation ToolTipPopupAnimation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Windows.Controls.Primitives.PopupAnimation ToolTipPopupAnimation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.ToolTipPopupAnimation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.Primitives.PopupAnimation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ツールヒントの <see cref="P:System.Windows.Controls.Primitives.Popup.PopupAnimation" /> プロパティのシステム値を取得します。</summary>
        <value>ポップアップ アニメーションのプロパティのシステム値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_ToolTipPopupAnimation"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*オブジェクト プロパティ*="{SystemParameters.ToolTipPopupAnimation`}`"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToolTipPopupAnimationKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey ToolTipPopupAnimationKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey ToolTipPopupAnimationKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.ToolTipPopupAnimationKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.SystemParameters.ToolTipPopupAnimation" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
        <value>リソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_ToolTipPopupAnimationKey"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト プロパティ*="{{SystemParameters.ToolTipPopupAnimationKey}}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UIEffects">
      <MemberSignature Language="C#" Value="public static bool UIEffects { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool UIEffects" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.UIEffects" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>すべての [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] 効果が有効かどうかを示す値を取得します。</summary>
        <value>
          すべての [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] 効果が有効な場合は <see langword="true" />。無効な場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SPI_GETUIEFFECTS にマップされます。 参照してください[次](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/systemparametersinfo.asp)です。  
  
<a name="xamlAttributeUsage_UIEffects"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*オブジェクト プロパティ*="{SystemParameters.UIEffects`}`"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UIEffectsKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey UIEffectsKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey UIEffectsKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.UIEffectsKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.SystemParameters.UIEffects" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
        <value>リソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_UIEffectsKey"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト プロパティ*="{{SystemParameters.UIEffectsKey}}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UxThemeColor">
      <MemberSignature Language="C#" Value="public static string UxThemeColor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string UxThemeColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.UxThemeColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>色のテーマ名を取得します。</summary>
        <value>色のテーマの名前。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UxThemeName">
      <MemberSignature Language="C#" Value="public static string UxThemeName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string UxThemeName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.UxThemeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>テーマ名を取得します。</summary>
        <value>テーマ名。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VerticalScrollBarButtonHeight">
      <MemberSignature Language="C#" Value="public static double VerticalScrollBarButtonHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 VerticalScrollBarButtonHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.VerticalScrollBarButtonHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>垂直スクロール バーの矢印ビットマップの高さ (ピクセル単位) を示す値を取得します。</summary>
        <value>ビットマップの高さ。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SM_CYVSCROLL にマップされます。 参照してください[問題](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp)です。  
  
<a name="xamlAttributeUsage_VerticalScrollBarButtonHeight"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*オブジェクト プロパティ*="{SystemParameters.VerticalScrollBarButtonHeight`}`"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VerticalScrollBarButtonHeightKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey VerticalScrollBarButtonHeightKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey VerticalScrollBarButtonHeightKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.VerticalScrollBarButtonHeightKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.SystemParameters.VerticalScrollBarButtonHeight" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
        <value>リソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_VerticalScrollBarButtonHeightKey"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト プロパティ*="{{SystemParameters.VerticalScrollBarButtonHeightKey}}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VerticalScrollBarThumbHeight">
      <MemberSignature Language="C#" Value="public static double VerticalScrollBarThumbHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 VerticalScrollBarThumbHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.VerticalScrollBarThumbHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>垂直スクロール バーのつまみの高さ (ピクセル単位) を示す値を取得します。</summary>
        <value>つまみの高さ。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SM_CYVTHUMB にマップされます。 参照してください[問題](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp)です。  
  
<a name="xamlAttributeUsage_VerticalScrollBarThumbHeight"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*オブジェクト プロパティ*="{SystemParameters.VerticalScrollBarThumbHeight`}`"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VerticalScrollBarThumbHeightKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey VerticalScrollBarThumbHeightKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey VerticalScrollBarThumbHeightKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.VerticalScrollBarThumbHeightKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.SystemParameters.VerticalScrollBarThumbHeight" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
        <value>リソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_VerticalScrollBarThumbHeightKey"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト プロパティ*="{{SystemParameters.VerticalScrollBarThumbHeightKey}}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VerticalScrollBarWidth">
      <MemberSignature Language="C#" Value="public static double VerticalScrollBarWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 VerticalScrollBarWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.VerticalScrollBarWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>垂直スクロール バーの幅 (ピクセル単位) を示す値を取得します。</summary>
        <value>スクロール バーの幅。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SM_CXVSCROLL にマップされます。 参照してください[問題](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp)です。  
  
<a name="xamlAttributeUsage_VerticalScrollBarWidth"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*オブジェクト プロパティ*="{SystemParameters.VerticalScrollBarWidth`}`"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VerticalScrollBarWidthKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey VerticalScrollBarWidthKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey VerticalScrollBarWidthKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.VerticalScrollBarWidthKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.SystemParameters.VerticalScrollBarWidth" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
        <value>リソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_VerticalScrollBarWidthKey"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト プロパティ*="{{SystemParameters.VerticalScrollBarWidthKey}}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VirtualScreenHeight">
      <MemberSignature Language="C#" Value="public static double VirtualScreenHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 VirtualScreenHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.VirtualScreenHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>仮想画面の高さ (ピクセル単位) を示す値を取得します。</summary>
        <value>仮想画面の高さ。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 仮想画面は、すべてのディスプレイ モニターの外接する四角形です。 <xref:System.Windows.SystemParameters.VirtualScreenTop%2A>と<xref:System.Windows.SystemParameters.VirtualScreenLeft%2A>メトリックは、仮想画面の左上隅の座標。  
  
 SM_CYVIRTUALSCREEN にマップされます。 参照してください[問題](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp)です。  
  
<a name="xamlAttributeUsage_VirtualScreenHeight"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*オブジェクト プロパティ*="{SystemParameters.VirtualScreenHeight`}`"/>  
  
 ]]></format>
        </remarks>
        <permission cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode">このメソッドを呼び出す、安全でないネイティブ メソッドを呼び出すためです。 関連する列挙。  
  
 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="VirtualScreenHeightKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey VirtualScreenHeightKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey VirtualScreenHeightKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.VirtualScreenHeightKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.SystemParameters.VirtualScreenHeight" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
        <value>リソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_VirtualScreenHeightKey"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト プロパティ*="{{SystemParameters.VirtualScreenHeightKey}}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VirtualScreenLeft">
      <MemberSignature Language="C#" Value="public static double VirtualScreenLeft { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 VirtualScreenLeft" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.VirtualScreenLeft" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>仮想画面の左側の座標を示す値を取得します。</summary>
        <value>画面座標 (ピクセル単位)。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 仮想画面は、すべてのディスプレイ モニターの外接する四角形です。 <xref:System.Windows.SystemParameters.VirtualScreenWidth%2A>と<xref:System.Windows.SystemParameters.VirtualScreenHeight%2A>メトリックは、幅と仮想画面の高さ。  
  
 SM_XVIRTUALSCREEN にマップされます。 参照してください[問題](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp)です。  
  
<a name="xamlAttributeUsage_VirtualScreenLeft"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*オブジェクト プロパティ*="{SystemParameters.VirtualScreenLeft`}`"/>  
  
 ]]></format>
        </remarks>
        <permission cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode">このメソッドを呼び出す、安全でないネイティブ メソッドを呼び出すためです。 関連する列挙。  
  
 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="VirtualScreenLeftKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey VirtualScreenLeftKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey VirtualScreenLeftKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.VirtualScreenLeftKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.SystemParameters.VirtualScreenLeft" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
        <value>リソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_VirtualScreenLeftKey"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト プロパティ*="{{SystemParameters.VirtualScreenLeftKey}}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VirtualScreenTop">
      <MemberSignature Language="C#" Value="public static double VirtualScreenTop { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 VirtualScreenTop" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.VirtualScreenTop" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>仮想画面の上部の座標を示す値を取得します。</summary>
        <value>画面座標 (ピクセル単位)。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 仮想画面は、すべてのディスプレイ モニターの外接する四角形です。 <xref:System.Windows.SystemParameters.VirtualScreenWidth%2A>と<xref:System.Windows.SystemParameters.VirtualScreenHeight%2A>メトリックは、幅と仮想画面の高さ。  
  
 SM_YVIRTUALSCREEN にマップされます。 参照してください[問題](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp)です。  
  
<a name="xamlAttributeUsage_VirtualScreenTop"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*オブジェクト プロパティ*="{SystemParameters.VirtualScreenTop`}`"/>  
  
 ]]></format>
        </remarks>
        <permission cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode">このメソッドを呼び出す、安全でないネイティブ メソッドを呼び出すためです。 関連する列挙。  
  
 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="VirtualScreenTopKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey VirtualScreenTopKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey VirtualScreenTopKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.VirtualScreenTopKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.SystemParameters.VirtualScreenTop" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
        <value>リソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_VirtualScreenTopKey"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト プロパティ*="{{SystemParameters.VirtualScreenTopKey}}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VirtualScreenWidth">
      <MemberSignature Language="C#" Value="public static double VirtualScreenWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 VirtualScreenWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.VirtualScreenWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>仮想画面の幅 (ピクセル単位) を示す値を取得します。</summary>
        <value>仮想画面の幅。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 仮想画面は、すべてのディスプレイ モニターの外接する四角形です。 <xref:System.Windows.SystemParameters.VirtualScreenTop%2A>と<xref:System.Windows.SystemParameters.VirtualScreenLeft%2A>メトリックは、仮想画面の左上隅の座標。  
  
 SM_CXVIRTUALSCREEN にマップされます。 参照してください[問題](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp)です。  
  
<a name="xamlAttributeUsage_VirtualScreenWidth"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*オブジェクト プロパティ*="{SystemParameters.VirtualScreenWidth`}`"/>  
  
 ]]></format>
        </remarks>
        <permission cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode">このメソッドを呼び出す、安全でないネイティブ メソッドを呼び出すためです。 関連する列挙。  
  
 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="VirtualScreenWidthKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey VirtualScreenWidthKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey VirtualScreenWidthKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.VirtualScreenWidthKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.SystemParameters.VirtualScreenWidth" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
        <value>リソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_VirtualScreenWidthKey"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト プロパティ*="{{SystemParameters.VirtualScreenWidthKey}}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WheelScrollLines">
      <MemberSignature Language="C#" Value="public static int WheelScrollLines { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 WheelScrollLines" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.WheelScrollLines" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>マウス ホイールを回転したときにスクロールする行数を示す値を取得します。</summary>
        <value>行数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SPI_GETWHEELSCROLLLINES にマップされます。 参照してください[次](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/systemparametersinfo.asp)です。  
  
<a name="xamlAttributeUsage_WheelScrollLines"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*オブジェクト プロパティ*="{SystemParameters.WheelScrollLines`}`"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WheelScrollLinesKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey WheelScrollLinesKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey WheelScrollLinesKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.WheelScrollLinesKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.SystemParameters.WheelScrollLines" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
        <value>リソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_WheelScrollLinesKey"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト プロパティ*="{{SystemParameters.WheelScrollLinesKey}}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowCaptionButtonHeight">
      <MemberSignature Language="C#" Value="public static double WindowCaptionButtonHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 WindowCaptionButtonHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.WindowCaptionButtonHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ウィンドウのタイトル バーのボタンの高さ (ピクセル単位) を示す値を取得します。</summary>
        <value>キャプション ボタンの高さ。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SM_CYSIZE にマップされます。 参照してください[問題](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp)です。  
  
<a name="xamlAttributeUsage_WindowCaptionButtonHeight"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*オブジェクト プロパティ*="{SystemParameters.WindowCaptionButtonHeight`}`"/>  
  
 ]]></format>
        </remarks>
        <permission cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode">このメソッドを呼び出す、安全でないネイティブ メソッドを呼び出すためです。 関連する列挙。  
  
 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="WindowCaptionButtonHeightKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey WindowCaptionButtonHeightKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey WindowCaptionButtonHeightKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.WindowCaptionButtonHeightKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.SystemParameters.WindowCaptionButtonHeight" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
        <value>リソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_WindowCaptionButtonHeightKey"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト プロパティ*="{{SystemParameters.WindowCaptionButtonHeightKey}}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowCaptionButtonWidth">
      <MemberSignature Language="C#" Value="public static double WindowCaptionButtonWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 WindowCaptionButtonWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.WindowCaptionButtonWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ウィンドウのタイトル バーのボタンの幅 (ピクセル単位) を示す値を取得します。</summary>
        <value>キャプション ボタンの幅。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SM_CXSIZE にマップされます。 参照してください[問題](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp)です。  
  
<a name="xamlAttributeUsage_WindowCaptionButtonWidth"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*オブジェクト プロパティ*="{SystemParameters.WindowCaptionButtonWidth`}`"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowCaptionButtonWidthKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey WindowCaptionButtonWidthKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey WindowCaptionButtonWidthKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.WindowCaptionButtonWidthKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.SystemParameters.WindowCaptionButtonWidth" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
        <value>リソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_WindowCaptionButtonWidthKey"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト プロパティ*="{{SystemParameters.WindowCaptionButtonWidthKey}}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowCaptionHeight">
      <MemberSignature Language="C#" Value="public static double WindowCaptionHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 WindowCaptionHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.WindowCaptionHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>キャプション領域の高さ (ピクセル単位) を示す値を取得します。</summary>
        <value>キャプション領域の高さ。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SM_CYCAPTION にマップされます。 参照してください[問題](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp)です。  
  
<a name="xamlAttributeUsage_WindowCaptionHeight"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*オブジェクト プロパティ*="{SystemParameters.WindowCaptionHeight`}`"/>  
  
 ]]></format>
        </remarks>
        <permission cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode">このメソッドを呼び出す、安全でないネイティブ メソッドを呼び出すためです。 関連する列挙。  
  
 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="WindowCaptionHeightKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey WindowCaptionHeightKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey WindowCaptionHeightKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.WindowCaptionHeightKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.SystemParameters.WindowCaptionHeight" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
        <value>リソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_WindowCaptionHeightKey"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト プロパティ*="{{SystemParameters.WindowCaptionHeightKey}}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowCornerRadius">
      <MemberSignature Language="C#" Value="public static System.Windows.CornerRadius WindowCornerRadius { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Windows.CornerRadius WindowCornerRadius" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.WindowCornerRadius" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.CornerRadius</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ウィンドウの角の半径を取得します。</summary>
        <value>ウィンドウの角の丸みの程度。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowGlassBrush">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.Brush WindowGlassBrush { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Media.Brush WindowGlassBrush" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.WindowGlassBrush" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Brush</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>グラス風のウィンドウ フレームを描画するブラシを取得します。</summary>
        <value>グラス風のウィンドウ フレームを描画するブラシ。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowGlassColor">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.Color WindowGlassColor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Windows.Media.Color WindowGlassColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.WindowGlassColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>グラス風のウィンドウ フレームの描画に使用されている色を取得します。</summary>
        <value>グラス風のウィンドウ フレームを描画する際に使用される色。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowNonClientFrameThickness">
      <MemberSignature Language="C#" Value="public static System.Windows.Thickness WindowNonClientFrameThickness { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Windows.Thickness WindowNonClientFrameThickness" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.WindowNonClientFrameThickness" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Thickness</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ウィンドウの非クライアント領域のサイズを取得します。</summary>
        <value>ウィンドウの非クライアント領域のサイズ。デバイス非依存単位 (1/96 インチ)。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowResizeBorderThickness">
      <MemberSignature Language="C#" Value="public static System.Windows.Thickness WindowResizeBorderThickness { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Windows.Thickness WindowResizeBorderThickness" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.WindowResizeBorderThickness" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Thickness</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ウィンドウ周囲のサイズ変更境界線のサイズを取得します。</summary>
        <value>ウィンドウ周囲のサイズ変更境界線のサイズ。デバイス非依存単位 (1/96 インチ)。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WorkArea">
      <MemberSignature Language="C#" Value="public static System.Windows.Rect WorkArea { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Windows.Rect WorkArea" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.WorkArea" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>プライマリ ディスプレイ モニター上の作業領域のサイズを取得します。</summary>
        <value>仮想画面の座標として示された作業領域の座標を受け取る <see langword="RECT" /> 構造体。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 作業領域は、システムのタスク バーまたはアプリケーションのデスクトップ ツールバーがわかりにくくなっていない、画面の部分です。  
  
 SPI_GETWORKAREA にマップされます。 参照してください[次](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/systemparametersinfo.asp)です。  
  
<a name="xamlAttributeUsage_WorkArea"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*オブジェクト プロパティ*="{SystemParameters.WorkArea`}`"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WorkAreaKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey WorkAreaKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey WorkAreaKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemParameters.WorkAreaKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.SystemParameters.WorkArea" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
        <value>リソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_WorkAreaKey"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<*オブジェクト プロパティ*="{{SystemParameters.WorkAreaKey}}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
