<Type Name="RoutedPropertyChangedEventArgs&lt;T&gt;" FullName="System.Windows.RoutedPropertyChangedEventArgs&lt;T&gt;">
  <TypeSignature Language="C#" Value="public class RoutedPropertyChangedEventArgs&lt;T&gt; : System.Windows.RoutedEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RoutedPropertyChangedEventArgs`1&lt;T&gt; extends System.Windows.RoutedEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.RoutedPropertyChangedEventArgs`1" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Windows.RoutedEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="T">変更された依存関係プロパティの型。</typeparam>
    <summary>特定のルーティング イベントからの報告に従って、変更されたプロパティの前の値と現在の値を含む、値の変更に関するデータを依存関係プロパティに提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 これは、さまざまなイベントのイベント データのクラスが使用されているジェネリック クラスです。 別のルーティング イベントの種類に固有のイベント データ クラスを生成するために、ジェネリック型の制約を指定できます。 クラスが制約されていると、<xref:System.Windows.RoutedPropertyChangedEventArgs%601.OldValue%2A>と<xref:System.Windows.RoutedPropertyChangedEventArgs%601.NewValue%2A>プロパティにもこれらの型制約が反映; 可能なプロパティの種類ごとに個別のデリゲートを必要とせず、さまざまなプロパティ変更イベントに共通のイベント データ クラスを使用するためです。  
  
 デリゲートにこのイベント データ クラスが組み込まれており、プロパティの変更を報告するルーティング イベントには、<xref:System.Windows.Controls.Primitives.RangeBase.ValueChanged>型の制約 (と型引数で渡される新旧の値) は、 <xref:System.Double>、および<xref:System.Windows.Controls.TreeView.SelectedItemChanged>ここで、型の制約は<xref:System.Object>します。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RoutedPropertyChangedEventArgs (T oldValue, T newValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(!T oldValue, !T newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.RoutedPropertyChangedEventArgs`1.#ctor(`0,`0)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="oldValue" Type="T" />
        <Parameter Name="newValue" Type="T" />
      </Parameters>
      <Docs>
        <param name="oldValue">イベントが発生する前に、プロパティの前の値。</param>
        <param name="newValue">イベントの発生時のプロパティの現在の値。</param>
        <summary>新しいインスタンスを初期化、<see cref="T:System.Windows.RoutedPropertyChangedEventArgs`1" />クラス、新旧の値を指定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 渡される型は、特定のジェネリックの宣言の制約に一致する必要があります。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RoutedPropertyChangedEventArgs (T oldValue, T newValue, System.Windows.RoutedEvent routedEvent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(!T oldValue, !T newValue, class System.Windows.RoutedEvent routedEvent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.RoutedPropertyChangedEventArgs`1.#ctor(`0,`0,System.Windows.RoutedEvent)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="oldValue" Type="T" />
        <Parameter Name="newValue" Type="T" />
        <Parameter Name="routedEvent" Type="System.Windows.RoutedEvent" />
      </Parameters>
      <Docs>
        <param name="oldValue">イベントが発生する前に、プロパティの前の値。</param>
        <param name="newValue">イベントの発生時のプロパティの現在の値。</param>
        <param name="routedEvent">この引数のクラスは、の情報を保持するルーティング イベントの識別子。</param>
        <summary>新しいインスタンスを初期化、<see cref="T:System.Windows.RoutedPropertyChangedEventArgs`1" />クラスに提供された古い値と新しい値、およびイベント識別子。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 渡される型`oldValue`と`newValue`の特定のジェネリック宣言の制約に一致する必要があります。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeEventHandler">
      <MemberSignature Language="C#" Value="protected override void InvokeEventHandler (Delegate genericHandler, object genericTarget);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InvokeEventHandler(class System.Delegate genericHandler, object genericTarget) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.RoutedPropertyChangedEventArgs`1.InvokeEventHandler(System.Delegate,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="genericHandler" Type="System.Delegate" />
        <Parameter Name="genericTarget" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="genericHandler">型固有の方法で呼び出すジェネリック ハンドラー。</param>
        <param name="genericTarget">ハンドラーを呼び出すターゲット。</param>
        <summary>イベントのシステムの効率を高めることができます、型固有の方法でイベント ハンドラーを呼び出します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この実装は、ジェネリック ハンドラーをキャスト、<xref:System.Windows.RoutedPropertyChangedEventHandler%601>してそれを呼び出します。 この実装パターンとその理由の詳細については、次を参照してください。<xref:System.Windows.RoutedEventArgs.InvokeEventHandler%2A>と[ルーティング イベントの概要](~/docs/framework/wpf/advanced/routed-events-overview.md)です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NewValue">
      <MemberSignature Language="C#" Value="public T NewValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T NewValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.RoutedPropertyChangedEventArgs`1.NewValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>プロパティ変更イベントによって報告された、プロパティの新しい値を取得します。</summary>
        <value>汎用的な値です。 実際の実装で、 <see cref="T:System.Windows.RoutedPropertyChangedEventArgs`1" />、このプロパティのジェネリック型は、実装の制約付きの型に置き換えられます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティの値と型制約は、コンス トラクターによって確立されます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OldValue">
      <MemberSignature Language="C#" Value="public T OldValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T OldValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.RoutedPropertyChangedEventArgs`1.OldValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>プロパティ変更イベントによって報告された、プロパティの前の値を取得します。</summary>
        <value>汎用的な値です。 実際の実装で、 <see cref="T:System.Windows.RoutedPropertyChangedEventArgs`1" />、このプロパティのジェネリック型は、実装の制約付きの型に置き換えられます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティの値と型制約を確立する、<xref:System.Windows.RoutedPropertyChangedEventArgs%601>コンス トラクターの型引数。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
