<Type Name="EndpointIdentity" FullName="System.ServiceModel.EndpointIdentity">
  <TypeSignature Language="C#" Value="public abstract class EndpointIdentity" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit EndpointIdentity extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.EndpointIdentity" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>実装された場合、エンドポイントとメッセージを交換するクライアントによるエンドポイントの認証を可能にする ID を提供する抽象クラス。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 エンドポイントの ID の値は、<xref:System.ServiceModel.EndpointAddress> のコンストラクターを使用して設定でき、その値は、読み取り専用の <xref:System.ServiceModel.EndpointAddress.Identity%2A> プロパティとしてアクセスすることもできます。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EndpointIdentity ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.EndpointIdentity.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>空の <see cref="T:System.ServiceModel.EndpointIdentity" /> インスタンスを作成します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDnsIdentity">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.EndpointIdentity CreateDnsIdentity (string dnsName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.EndpointIdentity CreateDnsIdentity(string dnsName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.EndpointIdentity.CreateDnsIdentity(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.EndpointIdentity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dnsName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dnsName">DNS ID の名前。</param>
        <summary>指定した DNS 名を持つ DNS ID を作成します。</summary>
        <returns>指定した <see cref="T:System.ServiceModel.EndpointIdentity" /> に関連付けられた DNS <paramref name="dnsName" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この ID を持つエンドポイントに接続するセキュリティで保護された [!INCLUDE[indigo2](~/includes/indigo2-md.md)] クライアントは、サーバーによって提示されるクレームに、この ID を表す DNS クレームが含まれていることを検証します。  
  
 この静的メソッドは、コンストラクター <xref:System.ServiceModel.DnsEndpointIdentity> を呼び出すことにより <xref:System.ServiceModel.DnsEndpointIdentity.%23ctor%2A> のインスタンスを作成します。  
  
   
  
## Examples  
 このメソッドを呼び出す方法を次のコードに示します。  
  
 [!code-csharp[S_UEEndpointIdentity#41](~/samples/snippets/csharp/VS_Snippets_CFX/s_ueendpointidentity/cs/source.cs#41)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dnsName" /> は <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateIdentity">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.EndpointIdentity CreateIdentity (System.IdentityModel.Claims.Claim identity);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.EndpointIdentity CreateIdentity(class System.IdentityModel.Claims.Claim identity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.EndpointIdentity.CreateIdentity(System.IdentityModel.Claims.Claim)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.EndpointIdentity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identity" Type="System.IdentityModel.Claims.Claim" />
      </Parameters>
      <Docs>
        <param name="identity">新しい ID を作成するために使用される <see cref="T:System.IdentityModel.Claims.Claim" />。</param>
        <summary>指定したクレームを持つ ID を作成します。</summary>
        <returns>指定した <see cref="T:System.ServiceModel.EndpointIdentity" /> に関連付けられた <paramref name="identity" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この ID を持つエンドポイントに接続するセキュリティで保護された [!INCLUDE[indigo2](~/includes/indigo2-md.md)] クライアントは、サーバーによって提示されるクレームに、この ID を構築するために使用された ID クレームが含まれていることを検証します。  
  
 このメソッドは、<xref:System.ServiceModel.DnsEndpointIdentity> 型、<xref:System.ServiceModel.SpnEndpointIdentity> 型、<xref:System.ServiceModel.UpnEndpointIdentity> 型、または <xref:System.ServiceModel.RsaEndpointIdentity> 型の ID を作成できます。  
  
   
  
## Examples  
 このメソッドを呼び出す方法を次のコードに示します。  
  
 [!code-csharp[S_UEEndpointIdentity#42](~/samples/snippets/csharp/VS_Snippets_CFX/s_ueendpointidentity/cs/source.cs#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="identity" /> は <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateRsaIdentity">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>RSA ID を作成します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この ID を持つエンドポイントに接続するセキュリティで保護された [!INCLUDE[indigo2](~/includes/indigo2-md.md)] クライアントは、サーバーによって提示されるクレームに、この ID を構築するために使用された RSA 公開キーを含むクレームが含まれていることを検証します。  
  
 これらの静的メソッドのいずれかが、コンストラクター <xref:System.ServiceModel.RsaEndpointIdentity> を呼び出すことにより <xref:System.ServiceModel.RsaEndpointIdentity.%23ctor%2A> のインスタンスを作成します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateRsaIdentity">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.EndpointIdentity CreateRsaIdentity (System.Security.Cryptography.X509Certificates.X509Certificate2 certificate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.EndpointIdentity CreateRsaIdentity(class System.Security.Cryptography.X509Certificates.X509Certificate2 certificate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.EndpointIdentity.CreateRsaIdentity(System.Security.Cryptography.X509Certificates.X509Certificate2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.EndpointIdentity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate2" />
      </Parameters>
      <Docs>
        <param name="certificate"><see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> RSA id 用の証明書を格納しています。</param>
        <summary>指定した X.509 証明書を持つ RSA ID を作成します。</summary>
        <returns>指定した <see cref="T:System.ServiceModel.EndpointIdentity" /> に関連付けられた RSA <paramref name="certificate" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この ID を持つエンドポイントに接続するセキュリティで保護された [!INCLUDE[indigo2](~/includes/indigo2-md.md)] クライアントは、サーバーによって提示されるクレームに、この ID を構築するために使用された証明書から取得された RSA 公開キーを含むクレームが含まれていることを検証します。  
  
 この静的メソッドは、コンストラクター <xref:System.ServiceModel.RsaEndpointIdentity> を呼び出すことにより <xref:System.ServiceModel.RsaEndpointIdentity.%23ctor%2A> のインスタンスを作成します。  
  
   
  
## Examples  
 このメソッドを呼び出す方法を次のコードに示します。  
  
 [!code-csharp[S_UEEndpointIdentity#41](~/samples/snippets/csharp/VS_Snippets_CFX/s_ueendpointidentity/cs/source.cs#41)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="certificate" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.NotSupportedException">
          <paramref name="certificate" /> が RSA 証明書ではありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateRsaIdentity">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.EndpointIdentity CreateRsaIdentity (string publicKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.EndpointIdentity CreateRsaIdentity(string publicKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.EndpointIdentity.CreateRsaIdentity(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.EndpointIdentity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="publicKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="publicKey">RSA ID の公開キー。</param>
        <summary>指定した公開キーを持つ RSA ID を作成します。</summary>
        <returns>指定した <see cref="T:System.ServiceModel.EndpointIdentity" /> に関連付けられた RSA <paramref name="publicKey" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この ID を持つエンドポイントに接続するセキュリティで保護された [!INCLUDE[indigo2](~/includes/indigo2-md.md)] クライアントは、サーバーによって提示されるクレームに、この ID を構築するために使用された RSA 公開キーを含むクレームが含まれていることを検証します。  
  
 この静的メソッドは、コンストラクター <xref:System.ServiceModel.RsaEndpointIdentity> を呼び出すことにより <xref:System.ServiceModel.RsaEndpointIdentity.%23ctor%2A> のインスタンスを作成します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="publicKey" /> は <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateSpnIdentity">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.EndpointIdentity CreateSpnIdentity (string spnName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.EndpointIdentity CreateSpnIdentity(string spnName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.EndpointIdentity.CreateSpnIdentity(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.EndpointIdentity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="spnName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="spnName">SPN ID の名前。</param>
        <summary>指定した名前を持つサーバー プリンシパル名 (SPN) ID を作成します。</summary>
        <returns>指定した <see cref="T:System.ServiceModel.EndpointIdentity" /> に関連付けられた SPN <paramref name="spnName" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この ID を持つエンドポイントに接続するセキュリティで保護された [!INCLUDE[indigo2](~/includes/indigo2-md.md)] クライアントは、エンドポイントの SSPI 認証を実行するときに SPN を使用します。  
  
 この静的メソッドは、コンストラクター <xref:System.ServiceModel.SpnEndpointIdentity> を呼び出し、<xref:System.ServiceModel.SpnEndpointIdentity.%23ctor%2A> を入力パラメーターとして使用することで、`spnName` のインスタンスを作成します。  
  
 `spnName` が空の文字列で指定される場合、認証は、可能であれば Kerberos の代わりに NTLM を使用します。 <xref:System.ServiceModel.Security.WindowsClientCredential.AllowNtlm%2A> が `false` である場合、アサーションは失敗します。  
  
   
  
## Examples  
 このメソッドを呼び出す方法を次のコードに示します。  
  
 [!code-csharp[S_UEEndpointIdentity#12](~/samples/snippets/csharp/VS_Snippets_CFX/s_ueendpointidentity/cs/source.cs#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="spnName" /> は <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateUpnIdentity">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.EndpointIdentity CreateUpnIdentity (string upnName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.EndpointIdentity CreateUpnIdentity(string upnName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.EndpointIdentity.CreateUpnIdentity(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.EndpointIdentity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="upnName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="upnName">UPN ID の名前。</param>
        <summary>指定した名前を持つユーザー プリンシパル名 (UPN) ID を作成します。</summary>
        <returns>指定した <see cref="T:System.ServiceModel.EndpointIdentity" /> に関連付けられた UPN <paramref name="upnName" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この ID を持つエンドポイントに接続する、セキュリティで保護された [!INCLUDE[indigo2](~/includes/indigo2-md.md)] クライアントは、エンドポイントの SSPI 認証を実行するときに UPN を使用します。  
  
 この静的メソッドは、コンストラクター <xref:System.ServiceModel.UpnEndpointIdentity> を呼び出し、<xref:System.ServiceModel.UpnEndpointIdentity.%23ctor%2A> を入力パラメーターとして使用することで、`upnName` のインスタンスを作成します。  
  
 `upnName` が空の文字列で指定される場合、認証は、可能であれば Kerberos の代わりに NTLM を使用します。 <xref:System.ServiceModel.Security.WindowsClientCredential.AllowNtlm%2A> が `false` の場合、[!INCLUDE[indigo2](~/includes/indigo2-md.md)] はベスト エフォートで例外をスローします。 ただし、このプロパティを `false` に設定しても、ネットワーク経由で NTLM 資格情報が送信されなくなるとは限りません。  
  
   
  
## Examples  
 このメソッドを呼び出す方法を次のコードに示します。  
  
 [!code-csharp[S_UEEndpointIdentity#30](~/samples/snippets/csharp/VS_Snippets_CFX/s_ueendpointidentity/cs/source.cs#30)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="upnName" /> は <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateX509CertificateIdentity">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>X509Certificate ID を作成します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 証明書をサポートしているかどうかに基づいて、2 つのコンストラクターのいずれかを選択します。  
  
 この ID を持つエンドポイントに接続する、セキュリティで保護された [!INCLUDE[indigo2](~/includes/indigo2-md.md)] クライアントは、サーバーによって提示されるクレームに、この ID を構築するために使用された証明書のサムプリントを含むクレームが含まれていることを検証します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateX509CertificateIdentity">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.EndpointIdentity CreateX509CertificateIdentity (System.Security.Cryptography.X509Certificates.X509Certificate2 certificate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.EndpointIdentity CreateX509CertificateIdentity(class System.Security.Cryptography.X509Certificates.X509Certificate2 certificate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.EndpointIdentity.CreateX509CertificateIdentity(System.Security.Cryptography.X509Certificates.X509Certificate2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.EndpointIdentity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate2" />
      </Parameters>
      <Docs>
        <param name="certificate"><see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> Id の証明書を含むです。</param>
        <summary>指定した証明書を持つ X509Certificate ID を作成します。</summary>
        <returns>指定した <see cref="T:System.ServiceModel.EndpointIdentity" /> に関連付けられた X509Certificate <paramref name="certificate" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この ID を持つエンドポイントに接続する、セキュリティで保護された [!INCLUDE[indigo2](~/includes/indigo2-md.md)] クライアントは、サーバーによって提示されるクレームに、この ID を構築するために使用された証明書のサムプリントを含むクレームが含まれていることを検証します。  
  
 この `static` メソッドは、コンストラクター <xref:System.ServiceModel.X509CertificateEndpointIdentity> を呼び出し、<xref:System.ServiceModel.X509CertificateEndpointIdentity.%23ctor%2A> を入力パラメーターとして使用することで、`certificate` のインスタンスを作成します。  
  
   
  
## Examples  
 このメソッドを呼び出す方法を次のコードに示します。  
  
 [!code-csharp[S_UEEndpointIdentity#40](~/samples/snippets/csharp/VS_Snippets_CFX/s_ueendpointidentity/cs/source.cs#40)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="certificate" /> は <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateX509CertificateIdentity">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.EndpointIdentity CreateX509CertificateIdentity (System.Security.Cryptography.X509Certificates.X509Certificate2 primaryCertificate, System.Security.Cryptography.X509Certificates.X509Certificate2Collection supportingCertificates);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.EndpointIdentity CreateX509CertificateIdentity(class System.Security.Cryptography.X509Certificates.X509Certificate2 primaryCertificate, class System.Security.Cryptography.X509Certificates.X509Certificate2Collection supportingCertificates) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.EndpointIdentity.CreateX509CertificateIdentity(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.X509Certificates.X509Certificate2Collection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.EndpointIdentity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="primaryCertificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate2" />
        <Parameter Name="supportingCertificates" Type="System.Security.Cryptography.X509Certificates.X509Certificate2Collection" />
      </Parameters>
      <Docs>
        <param name="primaryCertificate">ID 用のプライマリ証明書を含む <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" />。</param>
        <param name="supportingCertificates">ID 用のサポート証明書を含む <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" />。</param>
        <summary>指定したプライマリ証明書とサポート証明書を持つ X509Certificate ID を作成します。</summary>
        <returns>この ID を持つエンドポイントに接続する、セキュリティで保護された [!INCLUDE[indigo2](~/includes/indigo2-md.md)] クライアントは、サーバーによって提示されるクレームに、この ID を構築するために使用された証明書のサムプリントを含むクレームが含まれていることを検証します。  
  
 X509Certificate<see cref="T:System.ServiceModel.EndpointIdentity" />に指定された関連付けられている<paramref name="primaryCertificate" />と<paramref name="supportingCertificates." /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この静的メソッドは、コンストラクター <xref:System.ServiceModel.X509CertificateEndpointIdentity> を呼び出し、<xref:System.ServiceModel.X509CertificateEndpointIdentity.%23ctor%2A> と `primaryCertificate` を入力パラメーターとして使用することで、`supportingCertificates` のインスタンスを作成します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="primaryCertificate" /> または <paramref name="supportingCertificates" /> が <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.EndpointIdentity.Equals(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="other">To be added.</param>
        <summary>指定したオブジェクトが現在の ID オブジェクトと等しいかどうか、またはそれらのセキュリティ プロパティが等しいかどうかを決定する値を返します。</summary>
        <returns>
          指定された <see langword="true" /> オブジェクトが現在の ID と等しい場合、または同一のセキュリティ プロパティが含まれている場合は <paramref name="other" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.EndpointIdentity.GetHashCode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ID の現在のインスタンスのハッシュ コードを用意します。</summary>
        <returns>現在の ID のハッシュ コード。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IdentityClaim">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Claims.Claim IdentityClaim { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Claims.Claim IdentityClaim" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.EndpointIdentity.IdentityClaim" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Claims.Claim</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ID に対応する ID クレームを取得します。</summary>
        <value>ID クレームを表す <see cref="T:System.IdentityModel.Claims.Claim" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 サーバーを認証するクライアントは、サーバーを表すクレームの中に、`EndpointIdentity` によって提供された ID クレームが含まれていることを検証する必要があります。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="protected void Initialize (System.IdentityModel.Claims.Claim claim);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void Initialize(class System.IdentityModel.Claims.Claim claim) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.EndpointIdentity.Initialize(System.IdentityModel.Claims.Claim)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identityClaim" Type="System.IdentityModel.Claims.Claim" />
      </Parameters>
      <Docs>
        <param name="claim">To be added.</param>
        <summary>指定したクレームを使用して、<see cref="T:System.ServiceModel.EndpointIdentity" /> を初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、<xref:System.ServiceModel.EndpointIdentity.Initialize%2A> から派生するすべてのクラスのコンストラクターによって呼び出されます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="protected void Initialize (System.IdentityModel.Claims.Claim claim, System.Collections.Generic.IEqualityComparer&lt;System.IdentityModel.Claims.Claim&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void Initialize(class System.IdentityModel.Claims.Claim claim, class System.Collections.Generic.IEqualityComparer`1&lt;class System.IdentityModel.Claims.Claim&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.EndpointIdentity.Initialize(System.IdentityModel.Claims.Claim,System.Collections.Generic.IEqualityComparer{System.IdentityModel.Claims.Claim})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identityClaim" Type="System.IdentityModel.Claims.Claim" />
        <Parameter Name="claimComparer" Type="System.Collections.Generic.IEqualityComparer&lt;System.IdentityModel.Claims.Claim&gt;" />
      </Parameters>
      <Docs>
        <param name="claim">To be added.</param>
        <param name="comparer">To be added.</param>
        <summary>指定したクレームとインターフェイスを使用して <see cref="T:System.ServiceModel.EndpointIdentity" /> を初期化し、同等性を比較します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.EndpointIdentity.ToString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ID を返します。</summary>
        <returns>"identity(string)" 形式の <see cref="T:System.String" />。string = <see cref="P:System.ServiceModel.EndpointIdentity.IdentityClaim" /> です。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
