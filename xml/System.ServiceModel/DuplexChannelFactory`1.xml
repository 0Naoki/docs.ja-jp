<Type Name="DuplexChannelFactory&lt;TChannel&gt;" FullName="System.ServiceModel.DuplexChannelFactory&lt;TChannel&gt;">
  <TypeSignature Language="C#" Value="public class DuplexChannelFactory&lt;TChannel&gt; : System.ServiceModel.ChannelFactory&lt;TChannel&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DuplexChannelFactory`1&lt;TChannel&gt; extends System.ServiceModel.ChannelFactory`1&lt;!TChannel&gt;" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.DuplexChannelFactory`1" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Duplex</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TChannel" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.ServiceModel.ChannelFactory&lt;TChannel&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="TChannel">TChannel</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="TChannel">チャネル ファクトリにより作成されたチャネルの型。</typeparam>
    <summary>クライアントがサービス エンドポイントとの間でメッセージを送受信するために使用する、さまざまな種類の双方向チャネルを作成したり、管理したりする手段を提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 双方向チャネルでは、クライアントとサーバーが互いに独立して通信できるため、どちらからでも相手の呼び出しを開始できます。 双方向サービスは、クライアントのエンドポイントにメッセージを返信し、イベントのような動作を実現できます。 双方向通信は、クライアントがサービスとのセッションを確立し、サービスからクライアントにメッセージを返信できるチャネルをサービスに提供すると発生します。 さまざまな <xref:System.ServiceModel.DuplexChannelFactory%601.CreateChannel%2A> メソッドを使用して、これらの双方向チャネルを作成します。 双方向メッセージ パターンは、[!INCLUDE[indigo1](~/includes/indigo1-md.md)] サービスが使用できる 3 つのメッセージ パターンのうちの 1 つです。 他の 2 つのメッセージ パターンは、一方向および要求/応答です。  
  
 クライアントがサービスに接続できるようにする双方向サービスの概要については、次を参照してください。[双方向サービス](~/docs/framework/wcf/feature-details/duplex-services.md)です。 アウトラインおよび手順の説明を記述する、 [!INCLUDE[indigo1](~/includes/indigo1-md.md)] 、チャネル ファクトリを使用してクライアント アプリケーションを参照してください[する方法: ChannelFactory を使用して](~/docs/framework/wcf/feature-details/how-to-use-the-channelfactory.md)です。 作成する方法を説明する手順については、[!INCLUDE[indigo1](~/includes/indigo1-md.md)]双方向のメッセージング パターンを使用してサービスにアクセスするコールバック インターフェイスを実装するクライアント クラス内のクライアントを参照してください[する方法: 双方向コントラクトでサービスをアクセス](~/docs/framework/wcf/feature-details/how-to-access-services-with-a-duplex-contract.md)です。  
  
   
  
## Examples  
 次の例では、チャネル ファクトリを作成する方法、およびそれを使用してチャネルを作成および管理する方法を示しています。  
  
 [!code-csharp[S_CustomAuthentication#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_customauthentication/cs/instance.cs#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DuplexChannelFactory (object callbackInstance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object callbackInstance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Object)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="callbackObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callbackInstance">To be added.</param>
        <summary>コールバック コントラクトを実装するオブジェクトを使用して、<see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このコンストラクターを使用して、ターゲット サービス用のコールバック コントラクトを実装するオブジェクトを、アプリケーション構成ファイルを使用せずにプログラムによって渡します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="callbackInstance" /> は <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DuplexChannelFactory (System.ServiceModel.InstanceContext callbackInstance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.InstanceContext callbackInstance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="callbackInstance" Type="System.ServiceModel.InstanceContext" />
      </Parameters>
      <Docs>
        <param name="callbackInstance">接続サービスからのメッセージをリッスンするためにクライアントが使用する <see cref="T:System.ServiceModel.InstanceContext" />。</param>
        <summary>指定したインスタンス コンテキストを使用して、<see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="callbackInstance" /> は <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DuplexChannelFactory (Type callbackInstanceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type callbackInstanceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="callbackInstanceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="callbackInstanceType">接続サービスからのメッセージをリッスンするためにクライアントが使用するコールバック インスタンスを提供する <see cref="T:System.Type" />。</param>
        <summary>指定したコールバック インスタンスの型を使用して、<see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="callbackInstanceType" /> は <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DuplexChannelFactory (object callbackInstance, System.ServiceModel.Channels.Binding binding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object callbackInstance, class System.ServiceModel.Channels.Binding binding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Object,System.ServiceModel.Channels.Binding)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="callbackObject" Type="System.Object" />
        <Parameter Name="binding" Type="System.ServiceModel.Channels.Binding" />
      </Parameters>
      <Docs>
        <param name="callbackInstance">To be added.</param>
        <param name="binding">ファクトリにより作成されたチャネルを通じてサービスに接続するために使用される <see cref="T:System.ServiceModel.Channels.Binding" />。</param>
        <summary>コールバック コントラクトを実装するオブジェクトと指定したバインドを使用して、<see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このコンストラクターを使用して、ターゲット サービスのコールバック コントラクトを実装するインスタンス コンテキスト オブジェクトを渡し、アプリケーション構成ファイルを使用せずにバインディング情報をプログラムにより渡します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="callbackObject" /> または <paramref name="binding" /> が <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DuplexChannelFactory (object callbackInstance, System.ServiceModel.Description.ServiceEndpoint endpoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object callbackInstance, class System.ServiceModel.Description.ServiceEndpoint endpoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Object,System.ServiceModel.Description.ServiceEndpoint)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="callbackObject" Type="System.Object" />
        <Parameter Name="endpoint" Type="System.ServiceModel.Description.ServiceEndpoint" />
      </Parameters>
      <Docs>
        <param name="callbackInstance">To be added.</param>
        <param name="endpoint">ファクトリにより作成されたチャネルが接続する対象の <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />。</param>
        <summary>コールバック コントラクトを実装するオブジェクトと指定したエンドポイントを使用して、<see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このコンストラクターを使用して、ターゲット サービス用のコールバック コントラクトを実装するサービス オブジェクトとサービス エンドポイント情報を、アプリケーション構成ファイルを使用せずにプログラムによって渡します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="callbackObject" /> は <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DuplexChannelFactory (object callbackInstance, string endpointConfigurationName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object callbackInstance, string endpointConfigurationName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Object,System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="callbackObject" Type="System.Object" />
        <Parameter Name="endpointConfigurationName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="callbackInstance">To be added.</param>
        <param name="endpointConfigurationName">エンドポイントで使用される構成名。</param>
        <summary>コールバック コントラクトを実装するオブジェクトと指定した構成を使用して、<see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このコンストラクターを使用して、ターゲットのサービスのコールバック コントラクトを実装するサービス オブジェクトを渡し、クライアント アプリケーション構成ファイルからのターゲット エンドポイント情報を特定します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="callbackObject" /> または <paramref name="endpointConfigurationName" /> が <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DuplexChannelFactory (System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.InstanceContext callbackInstance, class System.ServiceModel.Channels.Binding binding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Duplex</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="callbackInstance" Type="System.ServiceModel.InstanceContext" />
        <Parameter Name="binding" Type="System.ServiceModel.Channels.Binding" />
      </Parameters>
      <Docs>
        <param name="callbackInstance">接続サービスからのメッセージをリッスンするためにクライアントが使用する <see cref="T:System.ServiceModel.InstanceContext" />。</param>
        <param name="binding">ファクトリにより作成されたチャネルを通じてサービスに接続するために使用される <see cref="T:System.ServiceModel.Channels.Binding" />。</param>
        <summary>コールバック コントラクトを実装するコンテキストと指定したバインドを使用して、<see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このコンストラクターを使用して、ターゲット サービスのコールバック コントラクトを実装するインスタンス コンテキスト オブジェクトを渡し、アプリケーション構成ファイルを使用せずにバインディング情報をプログラムにより渡します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="callbackInstance" /> または <paramref name="binding" /> が <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DuplexChannelFactory (System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Description.ServiceEndpoint endpoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.InstanceContext callbackInstance, class System.ServiceModel.Description.ServiceEndpoint endpoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Description.ServiceEndpoint)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="callbackInstance" Type="System.ServiceModel.InstanceContext" />
        <Parameter Name="endpoint" Type="System.ServiceModel.Description.ServiceEndpoint" />
      </Parameters>
      <Docs>
        <param name="callbackInstance">接続サービスからのメッセージをリッスンするためにクライアントが使用する <see cref="T:System.ServiceModel.InstanceContext" />。</param>
        <param name="endpoint">ファクトリにより作成されたチャネルが接続する対象の <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />。</param>
        <summary>コールバック コントラクトを実装するオブジェクトと指定したエンドポイントを使用して、<see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このコンストラクターを使用して、ターゲット サービスのコールバック コントラクトを実装するインスタンス コンテキスト オブジェクトを渡し、アプリケーション構成ファイルを使用せずにエンドポイント情報をプログラムにより渡します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="callbackInstance" /> は <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DuplexChannelFactory (System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Duplex</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="callbackInstance" Type="System.ServiceModel.InstanceContext" />
        <Parameter Name="endpointConfigurationName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="callbackInstance">接続サービスからのメッセージをリッスンするためにクライアントが使用する <see cref="T:System.ServiceModel.InstanceContext" />。</param>
        <param name="endpointConfigurationName">エンドポイント構成で使用される名前。</param>
        <summary>コールバック コントラクトを実装するオブジェクトと指定した構成を使用して、<see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このコンストラクターを使用して、ターゲット サービス用のコールバック コントラクトを実装するインスタンス コンテキスト オブジェクトを渡し、クライアント アプリケーション構成ファイルからターゲット エンドポイント情報を決定します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="callbackInstance" /> または <paramref name="endpointConfigurationName" /> が <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DuplexChannelFactory (Type callbackInstanceType, System.ServiceModel.Channels.Binding binding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type callbackInstanceType, class System.ServiceModel.Channels.Binding binding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Type,System.ServiceModel.Channels.Binding)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="callbackInstanceType" Type="System.Type" />
        <Parameter Name="binding" Type="System.ServiceModel.Channels.Binding" />
      </Parameters>
      <Docs>
        <param name="callbackInstanceType">接続サービスからのメッセージをリッスンするためにクライアントが使用するコールバック インスタンスを提供する <see cref="T:System.Type" />。</param>
        <param name="binding">ファクトリにより作成されたチャネルを通じてサービスに接続するために使用される <see cref="T:System.ServiceModel.Channels.Binding" />。</param>
        <summary>指定したコールバック インスタンスの型とバインディングを使用して、<see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="callbackInstanceType" /> または <paramref name="binding" /> が <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DuplexChannelFactory (Type callbackInstanceType, System.ServiceModel.Description.ServiceEndpoint endpoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type callbackInstanceType, class System.ServiceModel.Description.ServiceEndpoint endpoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Type,System.ServiceModel.Description.ServiceEndpoint)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="callbackInstanceType" Type="System.Type" />
        <Parameter Name="endpoint" Type="System.ServiceModel.Description.ServiceEndpoint" />
      </Parameters>
      <Docs>
        <param name="callbackInstanceType">接続サービスからのメッセージをリッスンするためにクライアントが使用するコールバック インスタンスを提供する <see cref="T:System.Type" />。</param>
        <param name="endpoint">サービスの <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />。</param>
        <summary>指定したコールバック インスタンスの型とサービス エンドポイントを使用して、<see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="callbackInstanceType" /> は <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DuplexChannelFactory (Type callbackInstanceType, string endpointConfigurationName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type callbackInstanceType, string endpointConfigurationName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Type,System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="callbackInstanceType" Type="System.Type" />
        <Parameter Name="endpointConfigurationName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="callbackInstanceType">接続サービスからのメッセージをリッスンするためにクライアントが使用するコールバック インスタンスを提供する <see cref="T:System.Type" />。</param>
        <param name="endpointConfigurationName">エンドポイント構成で使用される名前。</param>
        <summary>指定したコールバック インスタンスの型と構成を使用して、<see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="callbackInstanceType" /> または <paramref name="endpointConfigurationName" /> が <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DuplexChannelFactory (object callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object callbackInstance, class System.ServiceModel.Channels.Binding binding, class System.ServiceModel.EndpointAddress remoteAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Object,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="callbackObject" Type="System.Object" />
        <Parameter Name="binding" Type="System.ServiceModel.Channels.Binding" />
        <Parameter Name="remoteAddress" Type="System.ServiceModel.EndpointAddress" />
      </Parameters>
      <Docs>
        <param name="callbackInstance">To be added.</param>
        <param name="binding">ファクトリにより作成されたチャネルを通じてサービスに接続するために使用される <see cref="T:System.ServiceModel.Channels.Binding" />。</param>
        <param name="remoteAddress">サービスの場所を提供する <see cref="T:System.ServiceModel.EndpointAddress" />。</param>
        <summary>コールバック コントラクトを実装するオブジェクトと、指定したバインドとエンドポイント アドレスを使用して、<see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このコンストラクターを使用して、ターゲット サービス用のコールバック コントラクトを実装するサービス オブジェクトと、バインディングとアドレスに関する情報を、アプリケーション構成ファイルを使用せずにプログラムによって渡します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="callbackObject" />、<paramref name="binding" />、または <paramref name="remoteAddress" /> は、<see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DuplexChannelFactory (object callbackInstance, System.ServiceModel.Channels.Binding binding, string remoteAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object callbackInstance, class System.ServiceModel.Channels.Binding binding, string remoteAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Object,System.ServiceModel.Channels.Binding,System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="callbackObject" Type="System.Object" />
        <Parameter Name="binding" Type="System.ServiceModel.Channels.Binding" />
        <Parameter Name="remoteAddress" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="callbackInstance">To be added.</param>
        <param name="binding">ファクトリにより作成されたチャネルを通じてサービスに接続するために使用される <see cref="T:System.ServiceModel.Channels.Binding" />。</param>
        <param name="remoteAddress">サービスの場所を提供するリモート アドレス。</param>
        <summary>指定したコールバック オブジェクト、バインディング、およびリモート アドレスを使用して、<see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="callbackObject" />、<paramref name="binding" />、または <paramref name="remoteAddress" /> は、<see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DuplexChannelFactory (object callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object callbackInstance, string endpointConfigurationName, class System.ServiceModel.EndpointAddress remoteAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Object,System.String,System.ServiceModel.EndpointAddress)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="callbackObject" Type="System.Object" />
        <Parameter Name="endpointConfigurationName" Type="System.String" />
        <Parameter Name="remoteAddress" Type="System.ServiceModel.EndpointAddress" />
      </Parameters>
      <Docs>
        <param name="callbackInstance">To be added.</param>
        <param name="endpointConfigurationName">エンドポイント構成で使用される名前。</param>
        <param name="remoteAddress">サービスの場所を提供する <see cref="T:System.ServiceModel.EndpointAddress" />。</param>
        <summary>コールバック コントラクトを実装するオブジェクトと、指定した構成とエンドポイント アドレスを使用して、<see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このコンストラクターを使用して、ターゲット サービス用のコールバック コントラクトを実装するサービス オブジェクトとアドレス情報をプログラムによって渡し、他のターゲット エンドポイント情報をクライアント アプリケーション構成ファイルから決定します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="callbackObject" />、<paramref name="endpointConfigurationName" />、または <paramref name="remoteAddress" /> は、<see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DuplexChannelFactory (System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.InstanceContext callbackInstance, class System.ServiceModel.Channels.Binding binding, class System.ServiceModel.EndpointAddress remoteAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Duplex</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="callbackInstance" Type="System.ServiceModel.InstanceContext" />
        <Parameter Name="binding" Type="System.ServiceModel.Channels.Binding" />
        <Parameter Name="remoteAddress" Type="System.ServiceModel.EndpointAddress" />
      </Parameters>
      <Docs>
        <param name="callbackInstance">接続サービスからのメッセージをリッスンするためにクライアントが使用する <see cref="T:System.ServiceModel.InstanceContext" />。</param>
        <param name="binding">ファクトリにより作成されたチャネルを通じてサービスに接続するために使用される <see cref="T:System.ServiceModel.Channels.Binding" />。</param>
        <param name="remoteAddress">サービスの場所を提供する <see cref="T:System.ServiceModel.EndpointAddress" />。</param>
        <summary>コールバック コントラクトを実装するオブジェクトと、指定したバインドとエンドポイント アドレスを使用して、<see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このコンストラクターを使用して、ターゲット サービス用のコールバック コントラクトを実装するインスタンス コンテキスト オブジェクトと、バインディングとアドレスに関する情報を、アプリケーション構成ファイルを使用せずにプログラムによって渡します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="callbackInstance" />、<paramref name="binding" />、または <paramref name="remoteAddress" /> は、<see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DuplexChannelFactory (System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, string remoteAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.InstanceContext callbackInstance, class System.ServiceModel.Channels.Binding binding, string remoteAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Duplex</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="callbackInstance" Type="System.ServiceModel.InstanceContext" />
        <Parameter Name="binding" Type="System.ServiceModel.Channels.Binding" />
        <Parameter Name="remoteAddress" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="callbackInstance">接続サービスからのメッセージをリッスンするためにクライアントが使用する <see cref="T:System.ServiceModel.InstanceContext" />。</param>
        <param name="binding">ファクトリにより作成されたチャネルを通じてサービスに接続するために使用される <see cref="T:System.ServiceModel.Channels.Binding" />。</param>
        <param name="remoteAddress">サービスの場所を提供するリモート アドレス。</param>
        <summary>指定したインスタンス コンテキスト、バインディング、およびリモート アドレスを使用して、<see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="callbackInstance" />、<paramref name="binding" />、または <paramref name="remoteAddress" /> は、<see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DuplexChannelFactory (System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, class System.ServiceModel.EndpointAddress remoteAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.String,System.ServiceModel.EndpointAddress)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Duplex</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="callbackInstance" Type="System.ServiceModel.InstanceContext" />
        <Parameter Name="endpointConfigurationName" Type="System.String" />
        <Parameter Name="remoteAddress" Type="System.ServiceModel.EndpointAddress" />
      </Parameters>
      <Docs>
        <param name="callbackInstance">接続サービスからのメッセージをリッスンするためにクライアントが使用する <see cref="T:System.ServiceModel.InstanceContext" />。</param>
        <param name="endpointConfigurationName">エンドポイント構成で使用される名前。</param>
        <param name="remoteAddress">サービスの場所を提供する <see cref="T:System.ServiceModel.EndpointAddress" />。</param>
        <summary>コールバック コントラクトを実装するオブジェクトと、指定した構成とエンドポイント アドレスを使用して、<see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このコンストラクターを使用して、ターゲット サービス用のコールバック コントラクトを実装するインスタンス コンテキスト オブジェクトとアドレス情報をプログラムによって渡し、他のターゲット エンドポイント情報をクライアント アプリケーション構成ファイルから決定します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="callbackInstance" />、<paramref name="endpointConfigurationName" />、または <paramref name="remoteAddress" /> は、<see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DuplexChannelFactory (Type callbackInstanceType, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type callbackInstanceType, class System.ServiceModel.Channels.Binding binding, class System.ServiceModel.EndpointAddress remoteAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Type,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="callbackInstanceType" Type="System.Type" />
        <Parameter Name="binding" Type="System.ServiceModel.Channels.Binding" />
        <Parameter Name="remoteAddress" Type="System.ServiceModel.EndpointAddress" />
      </Parameters>
      <Docs>
        <param name="callbackInstanceType">接続サービスからのメッセージをリッスンするためにクライアントが使用するコールバック インスタンスを提供する <see cref="T:System.Type" />。</param>
        <param name="binding">ファクトリにより作成されたチャネルを通じてサービスに接続するために使用される <see cref="T:System.ServiceModel.Channels.Binding" />。</param>
        <param name="remoteAddress">サービスの場所を提供する <see cref="T:System.ServiceModel.EndpointAddress" />。</param>
        <summary>指定したコールバック インスタンスの型、バインディング、およびリモート アドレスを使用して、<see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="callbackInstanceType" />、<paramref name="binding" />、または <paramref name="remoteAddress" /> は、<see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DuplexChannelFactory (Type callbackInstanceType, System.ServiceModel.Channels.Binding binding, string remoteAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type callbackInstanceType, class System.ServiceModel.Channels.Binding binding, string remoteAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Type,System.ServiceModel.Channels.Binding,System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="callbackInstanceType" Type="System.Type" />
        <Parameter Name="binding" Type="System.ServiceModel.Channels.Binding" />
        <Parameter Name="remoteAddress" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="callbackInstanceType">接続サービスからのメッセージをリッスンするためにクライアントが使用するコールバック インスタンスを提供する <see cref="T:System.Type" />。</param>
        <param name="binding">ファクトリにより作成されたチャネルを通じてサービスに接続するために使用される <see cref="T:System.ServiceModel.Channels.Binding" />。</param>
        <param name="remoteAddress">サービスの場所を提供するリモート アドレス。</param>
        <summary>指定したコールバック インスタンスの型、バインディング、およびリモート アドレスを使用して、<see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="callbackInstanceType" />、<paramref name="binding" />、または <paramref name="remoteAddress" /> は、<see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DuplexChannelFactory (Type callbackInstanceType, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type callbackInstanceType, string endpointConfigurationName, class System.ServiceModel.EndpointAddress remoteAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Type,System.String,System.ServiceModel.EndpointAddress)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="callbackInstanceType" Type="System.Type" />
        <Parameter Name="endpointConfigurationName" Type="System.String" />
        <Parameter Name="remoteAddress" Type="System.ServiceModel.EndpointAddress" />
      </Parameters>
      <Docs>
        <param name="callbackInstanceType">接続サービスからのメッセージをリッスンするためにクライアントが使用するコールバック インスタンスを提供する <see cref="T:System.Type" />。</param>
        <param name="endpointConfigurationName">エンドポイント構成で使用される名前。</param>
        <param name="remoteAddress">サービスの場所を提供する <see cref="T:System.ServiceModel.EndpointAddress" />。</param>
        <summary>指定したコールバック インスタンスの型、構成、およびリモート アドレスを使用して、<see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="callbackInstanceType" />、<paramref name="endpointConfigurationName" />、または <paramref name="remoteAddress" /> は、<see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateChannel">
      <MemberSignature Language="C#" Value="public TChannel CreateChannel (System.ServiceModel.InstanceContext callbackInstance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !TChannel CreateChannel(class System.ServiceModel.InstanceContext callbackInstance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Duplex</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TChannel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callbackInstance" Type="System.ServiceModel.InstanceContext" />
      </Parameters>
      <Docs>
        <param name="callbackInstance">接続サービスからのメッセージをリッスンするためにクライアントが使用する <see cref="T:System.ServiceModel.InstanceContext" />。</param>
        <summary>サービスと、クライアント上のコールバック インスタンスとの間の双方向チャネルを作成します。</summary>
        <returns>クライアントとサービス間のファクトリに対するジェネリック パラメーターである <paramref name="TChannel" /> 型の双方向チャネル。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="callbackInstance" /> または<paramref name="callbackInstance" />.UserObject が <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateChannel">
      <MemberSignature Language="C#" Value="public static TChannel CreateChannel (object callbackObject, string endpointConfigurationName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !TChannel CreateChannel(object callbackObject, string endpointConfigurationName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.Object,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TChannel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callbackObject" Type="System.Object" />
        <Parameter Name="endpointConfigurationName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="callbackObject">接続サービスからのメッセージをリッスンするためにクライアントが使用する <see cref="T:System.Object" />。</param>
        <param name="endpointConfigurationName">エンドポイント構成で使用される名前。</param>
        <summary>サービスと、クライアント上のコールバック インスタンスとの間の双方向チャネルを作成します。</summary>
        <returns>クライアントとサービス間のファクトリに対するジェネリック パラメーターである <paramref name="TChannel" /> 型のチャネル。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="endpointConfigurationName" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="callbackInstance" /> または<paramref name="callbackInstance" />.UserObject が <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateChannel">
      <MemberSignature Language="C#" Value="public override TChannel CreateChannel (System.ServiceModel.EndpointAddress address, Uri via);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance !TChannel CreateChannel(class System.ServiceModel.EndpointAddress address, class System.Uri via) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Duplex</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TChannel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.ServiceModel.EndpointAddress" />
        <Parameter Name="via" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="address">サービスの場所を提供する <see cref="T:System.ServiceModel.EndpointAddress" />。</param>
        <param name="via">メッセージの送信先のトランスポート アドレスを格納している <see cref="T:System.Uri" />。</param>
        <summary>サービスと、クライアント上のコールバック インスタンスとの間の双方向チャネルを作成します。</summary>
        <returns>クライアントとサービス間のファクトリに対するジェネリック パラメーターである <paramref name="TChannel" /> 型の双方向チャネル。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> は <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateChannel">
      <MemberSignature Language="C#" Value="public TChannel CreateChannel (System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.EndpointAddress address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !TChannel CreateChannel(class System.ServiceModel.InstanceContext callbackInstance, class System.ServiceModel.EndpointAddress address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext,System.ServiceModel.EndpointAddress)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Duplex</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TChannel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callbackInstance" Type="System.ServiceModel.InstanceContext" />
        <Parameter Name="address" Type="System.ServiceModel.EndpointAddress" />
      </Parameters>
      <Docs>
        <param name="callbackInstance">接続サービスからのメッセージをリッスンするためにクライアントが使用する <see cref="T:System.ServiceModel.InstanceContext" />。</param>
        <param name="address">サービスの場所を提供する <see cref="T:System.ServiceModel.EndpointAddress" />。</param>
        <summary>サービスと、クライアント上のコールバック インスタンスとの間の双方向チャネルを作成します。</summary>
        <returns>クライアントとサービス間のファクトリに対するジェネリック パラメーターである <paramref name="TChannel" /> 型の双方向チャネル。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="callbackInstance" /> または<paramref name="callbackInstance" />.UserObject が <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateChannel">
      <MemberSignature Language="C#" Value="public static TChannel CreateChannel (System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !TChannel CreateChannel(class System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TChannel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callbackInstance" Type="System.ServiceModel.InstanceContext" />
        <Parameter Name="endpointConfigurationName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="callbackInstance">接続サービスからのメッセージをリッスンするためにクライアントが使用する <see cref="T:System.ServiceModel.InstanceContext" />。</param>
        <param name="endpointConfigurationName">エンドポイント構成で使用される名前。</param>
        <summary>サービスと、クライアント上のコールバック インスタンスとの間の双方向チャネルを作成します。</summary>
        <returns>クライアントとサービス間のファクトリに対するジェネリック パラメーターである <paramref name="TChannel" /> 型のチャネル。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="endpointConfigurationName" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="callbackInstance" /> または<paramref name="callbackInstance" />.UserObject が <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateChannel">
      <MemberSignature Language="C#" Value="public static TChannel CreateChannel (object callbackObject, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress endpointAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !TChannel CreateChannel(object callbackObject, class System.ServiceModel.Channels.Binding binding, class System.ServiceModel.EndpointAddress endpointAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.Object,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TChannel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callbackObject" Type="System.Object" />
        <Parameter Name="binding" Type="System.ServiceModel.Channels.Binding" />
        <Parameter Name="endpointAddress" Type="System.ServiceModel.EndpointAddress" />
      </Parameters>
      <Docs>
        <param name="callbackObject">接続サービスからのメッセージをリッスンするためにクライアントが使用する <see cref="T:System.Object" />。</param>
        <param name="binding">ファクトリにより作成されたチャネルを通じてサービスに接続するために使用される <see cref="T:System.ServiceModel.Channels.Binding" />。</param>
        <param name="endpointAddress">サービスの場所を提供する <see cref="T:System.ServiceModel.EndpointAddress" />。</param>
        <summary>サービスと、クライアント上のコールバック インスタンスとの間の双方向チャネルを作成します。</summary>
        <returns>クライアントとサービス間のファクトリに対するジェネリック パラメーターである <paramref name="TChannel" /> 型のチャネル。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="binding" /> または <paramref name="endpointAddress" /> が <see langword="null" /> です。</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="callbackInstance" /> または<paramref name="callbackInstance" />.UserObject が <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateChannel">
      <MemberSignature Language="C#" Value="public static TChannel CreateChannel (System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress endpointAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !TChannel CreateChannel(class System.ServiceModel.InstanceContext callbackInstance, class System.ServiceModel.Channels.Binding binding, class System.ServiceModel.EndpointAddress endpointAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TChannel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callbackInstance" Type="System.ServiceModel.InstanceContext" />
        <Parameter Name="binding" Type="System.ServiceModel.Channels.Binding" />
        <Parameter Name="endpointAddress" Type="System.ServiceModel.EndpointAddress" />
      </Parameters>
      <Docs>
        <param name="callbackInstance">接続サービスからのメッセージをリッスンするためにクライアントが使用する <see cref="T:System.ServiceModel.InstanceContext" />。</param>
        <param name="binding">ファクトリにより作成されたチャネルを通じてサービスに接続するために使用される <see cref="T:System.ServiceModel.Channels.Binding" />。</param>
        <param name="endpointAddress">サービスの場所を提供する <see cref="T:System.ServiceModel.EndpointAddress" />。</param>
        <summary>サービスと、クライアント上のコールバック インスタンスとの間の双方向チャネルを作成します。</summary>
        <returns>クライアントとサービス間のファクトリに対するジェネリック パラメーターである <paramref name="TChannel" /> 型のチャネル。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="binding" /> または <paramref name="endpointAddress" /> が <see langword="null" /> です。</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="callbackInstance" /> または<paramref name="callbackInstance" />.UserObject が <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateChannel">
      <MemberSignature Language="C#" Value="public virtual TChannel CreateChannel (System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.EndpointAddress address, Uri via);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TChannel CreateChannel(class System.ServiceModel.InstanceContext callbackInstance, class System.ServiceModel.EndpointAddress address, class System.Uri via) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext,System.ServiceModel.EndpointAddress,System.Uri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Duplex</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TChannel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callbackInstance" Type="System.ServiceModel.InstanceContext" />
        <Parameter Name="address" Type="System.ServiceModel.EndpointAddress" />
        <Parameter Name="via" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="callbackInstance">接続サービスからのメッセージをリッスンするためにクライアントが使用する <see cref="T:System.ServiceModel.InstanceContext" />。</param>
        <param name="address">サービスの場所を提供する <see cref="T:System.ServiceModel.EndpointAddress" />。</param>
        <param name="via">メッセージの送信先のトランスポート アドレスを格納している <see cref="T:System.Uri" />。</param>
        <summary>サービスと、クライアント上のコールバック インスタンスとの間の双方向チャネルを作成します。</summary>
        <returns>クライアントとサービス間のファクトリに対するジェネリック パラメーターである <paramref name="TChannel" /> 型のチャネル。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="callbackInstance" /> または<paramref name="callbackInstance" />.UserObject が <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateChannel">
      <MemberSignature Language="C#" Value="public static TChannel CreateChannel (object callbackObject, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress endpointAddress, Uri via);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !TChannel CreateChannel(object callbackObject, class System.ServiceModel.Channels.Binding binding, class System.ServiceModel.EndpointAddress endpointAddress, class System.Uri via) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.Object,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress,System.Uri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TChannel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callbackObject" Type="System.Object" />
        <Parameter Name="binding" Type="System.ServiceModel.Channels.Binding" />
        <Parameter Name="endpointAddress" Type="System.ServiceModel.EndpointAddress" />
        <Parameter Name="via" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="callbackObject">接続サービスからのメッセージをリッスンするためにクライアントが使用する <see cref="T:System.Object" />。</param>
        <param name="binding">ファクトリにより作成されたチャネルを通じてサービスに接続するために使用される <see cref="T:System.ServiceModel.Channels.Binding" />。</param>
        <param name="endpointAddress">サービスの場所を提供する <see cref="T:System.ServiceModel.EndpointAddress" />。</param>
        <param name="via">メッセージの送信先のトランスポート アドレスを格納している <see cref="T:System.Uri" />。</param>
        <summary>サービスと、クライアント上のコールバック インスタンスとの間の双方向チャネルを作成します。</summary>
        <returns>クライアントとサービス間のファクトリに対するジェネリック パラメーターである <paramref name="TChannel" /> 型のチャネル。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="binding" /> または <paramref name="endpointAddress" /> が <see langword="null" /> です。</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="callbackInstance" /> または<paramref name="callbackInstance" />.UserObject が <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateChannel">
      <MemberSignature Language="C#" Value="public static TChannel CreateChannel (System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress endpointAddress, Uri via);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !TChannel CreateChannel(class System.ServiceModel.InstanceContext callbackInstance, class System.ServiceModel.Channels.Binding binding, class System.ServiceModel.EndpointAddress endpointAddress, class System.Uri via) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress,System.Uri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TChannel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callbackInstance" Type="System.ServiceModel.InstanceContext" />
        <Parameter Name="binding" Type="System.ServiceModel.Channels.Binding" />
        <Parameter Name="endpointAddress" Type="System.ServiceModel.EndpointAddress" />
        <Parameter Name="via" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="callbackInstance">接続サービスからのメッセージをリッスンするためにクライアントが使用する <see cref="T:System.ServiceModel.InstanceContext" />。</param>
        <param name="binding">ファクトリにより作成されたチャネルを通じてサービスに接続するために使用される <see cref="T:System.ServiceModel.Channels.Binding" />。</param>
        <param name="endpointAddress">サービスの場所を提供する <see cref="T:System.ServiceModel.EndpointAddress" />。</param>
        <param name="via">メッセージの送信先のトランスポート アドレスを格納している <see cref="T:System.Uri" />。</param>
        <summary>サービスと、クライアント上のコールバック インスタンスとの間の双方向チャネルを作成します。</summary>
        <returns>クライアントとサービス間のファクトリに対するジェネリック パラメーターである <paramref name="TChannel" /> 型のチャネル。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="binding" /> または <paramref name="endpointAddress" /> が <see langword="null" /> です。</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="callbackInstance" /> または<paramref name="callbackInstance" />.UserObject が <see langword="null" /> です。</exception>
      </Docs>
    </Member>
  </Members>
</Type>
