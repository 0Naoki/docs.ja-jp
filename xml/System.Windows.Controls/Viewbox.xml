<Type Name="Viewbox" FullName="System.Windows.Controls.Viewbox">
  <TypeSignature Language="C#" Value="public class Viewbox : System.Windows.Controls.Decorator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi Viewbox extends System.Windows.Controls.Decorator" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.Viewbox" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.Decorator</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>利用できるスペースに合うように 1 つの子を引き伸ばしたり拡大縮小したりするためのコンテンツ デコレータを定義します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A <xref:System.Windows.Controls.Viewbox> 1 つだけあることができます<xref:System.Windows.Controls.Viewbox.Child%2A>です。 追加する場合<xref:System.Windows.Controls.Viewbox.Child%2A>、発生する、<xref:System.ArgumentException>実行時にします。  
  
   
  
## Examples  
 次の例のインスタンスを作成する方法を示しています、<xref:System.Windows.Controls.Viewbox>し、コードで共通のプロパティを設定します。  
  
 [!code-cpp[ViewBoxCode#2](~/samples/snippets/cpp/VS_Snippets_Wpf/ViewBoxCode/CPP/ViewboxCode.cpp#2)]
 [!code-csharp[ViewBoxCode#2](~/samples/snippets/csharp/VS_Snippets_Wpf/ViewBoxCode/Csharp/ViewboxCode.cs#2)]
 [!code-vb[ViewBoxCode#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ViewBoxCode/VisualBasic/ViewBoxCodeVB.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Viewbox ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Viewbox.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.Controls.Viewbox" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ArrangeOverride">
      <MemberSignature Language="C#" Value="protected override System.Windows.Size ArrangeOverride (System.Windows.Size arrangeSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Windows.Size ArrangeOverride(valuetype System.Windows.Size arrangeSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Viewbox.ArrangeOverride(System.Windows.Size)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arrangeSize" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="arrangeSize"><see cref="T:System.Windows.Size" />この要素を使用してその子要素を整列します。</param>
        <summary><see cref="T:System.Windows.Controls.Viewbox" /> 要素のコンテンツを配置します。</summary>
        <returns>
          <see cref="T:System.Windows.Size" />配置のサイズを表す<see cref="T:System.Windows.Controls.Viewbox" />要素とその子要素です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.Viewbox>常にその<xref:System.Windows.Controls.Viewbox.Child%2A>を<xref:System.Windows.UIElement.DesiredSize%2A>です。 計算しからの変換を適用<xref:System.Windows.Size>使用可能な領域にします。 <xref:System.Windows.Controls.Viewbox>余白を差し引くことで使用可能な領域を決定その<xref:System.Windows.Controls.Viewbox.Child%2A>入力から<xref:System.Windows.Size>要素。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Child">
      <MemberSignature Language="C#" Value="public override System.Windows.UIElement Child { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.UIElement Child" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Viewbox.Child" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.UIElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の 1 つの子、<see cref="T:System.Windows.Controls.Viewbox" />要素。</summary>
        <value>1 つの子、<see cref="T:System.Windows.Controls.Viewbox" />要素。 このプロパティには既定値はありません。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 追加の子要素を追加する場合、<xref:System.Windows.Controls.Viewbox>により、<xref:System.ArgumentException>実行時にします。  
  
   
  
## Examples  
 次の例のインスタンスを作成する方法を示しています、<xref:System.Windows.Controls.Viewbox>し、コードを使用してその子プロパティを設定します。  
  
 [!code-cpp[ViewBoxCode#1](~/samples/snippets/cpp/VS_Snippets_Wpf/ViewBoxCode/CPP/ViewboxCode.cpp#1)]
 [!code-csharp[ViewBoxCode#1](~/samples/snippets/csharp/VS_Snippets_Wpf/ViewBoxCode/Csharp/ViewboxCode.cs#1)]
 [!code-vb[ViewBoxCode#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ViewBoxCode/VisualBasic/ViewBoxCodeVB.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVisualChild">
      <MemberSignature Language="C#" Value="protected override System.Windows.Media.Visual GetVisualChild (int index);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Media.Visual GetVisualChild(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Viewbox.GetVisualChild(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Visual</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">目的のインデックス位置<see cref="T:System.Windows.Media.Visual" />子。</param>
        <summary>取得、<see cref="T:System.Windows.Media.Visual" />内の指定した子<paramref name="index" />位置。</summary>
        <returns>A<see cref="T:System.Windows.Media.Visual" />親の子<see cref="T:System.Windows.Controls.Viewbox" />要素。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogicalChildren">
      <MemberSignature Language="C#" Value="protected override System.Collections.IEnumerator LogicalChildren { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IEnumerator LogicalChildren" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Viewbox.LogicalChildren" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この論理子を反復処理できる列挙子を取得<see cref="T:System.Windows.Controls.Viewbox" />要素。</summary>
        <value><see cref="T:System.Collections.IEnumerator" />。 このプロパティには既定値はありません。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasureOverride">
      <MemberSignature Language="C#" Value="protected override System.Windows.Size MeasureOverride (System.Windows.Size constraint);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Windows.Size MeasureOverride(valuetype System.Windows.Size constraint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Viewbox.MeasureOverride(System.Windows.Size)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="constraint" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="constraint">A<see cref="T:System.Windows.Size" />制限を<see cref="T:System.Windows.Controls.Viewbox" />超えることはできません。</param>
        <summary>子要素の測定、<see cref="T:System.Windows.Controls.Viewbox" />中に配置する前に、<see cref="M:System.Windows.Controls.WrapPanel.ArrangeOverride(System.Windows.Size)" />渡します。</summary>
        <returns><see cref="T:System.Windows.Size" />を表す要素のサイズを変更します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 親<xref:System.Windows.UIElement>の<xref:System.Windows.Controls.Viewbox>通常このメソッドは、最初のレイアウト パスの実行を呼び出します。  
  
 <xref:System.Windows.Controls.Viewbox>無限では、その子を測定`constraint`、子プロセスを必要とされる最大サイズを許可します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Stretch">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Stretch Stretch { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Media.Stretch Stretch" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Viewbox.Stretch" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Stretch</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定、 <see cref="T:System.Windows.Controls.Viewbox" /> <see cref="T:System.Windows.Media.Stretch" />モードで、コンテンツが使用可能な領域に収める方法を決定します。</summary>
        <value>A<see cref="T:System.Windows.Media.Stretch" />コンテンツが使用可能な領域に収める方法を決定します。 既定値は、<see cref="F:System.Windows.Media.Stretch.Uniform" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_Stretch"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Controls.Viewbox.StretchProperty>|  
|メタデータ プロパティに設定します。`true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
   
  
## Examples  
 次の例は、のインスタンスを作成する方法を示しています。<xref:System.Windows.Controls.Viewbox>し、設定、<xref:System.Windows.Controls.Viewbox.Stretch%2A>コードを使用してプロパティです。  
  
 [!code-cpp[ViewBoxCode#2](~/samples/snippets/cpp/VS_Snippets_Wpf/ViewBoxCode/CPP/ViewboxCode.cpp#2)]
 [!code-csharp[ViewBoxCode#2](~/samples/snippets/csharp/VS_Snippets_Wpf/ViewBoxCode/Csharp/ViewboxCode.cs#2)]
 [!code-vb[ViewBoxCode#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ViewBoxCode/VisualBasic/ViewBoxCodeVB.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StretchDirection">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.StretchDirection StretchDirection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.StretchDirection StretchDirection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Viewbox.StretchDirection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.StretchDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定、<see cref="T:System.Windows.Controls.StretchDirection" />のコンテンツにスケーリングを適用する方法を決定する、<see cref="T:System.Windows.Controls.Viewbox" />です。</summary>
        <value>A<see cref="T:System.Windows.Controls.StretchDirection" />のコンテンツにスケーリングを適用する方法を決定する、<see cref="T:System.Windows.Controls.Viewbox" />です。 既定値は、<see cref="F:System.Windows.Controls.StretchDirection.Both" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティの内容に適用されるスケールの制限を決定する、<xref:System.Windows.Controls.Viewbox>です。 たとえば、このプロパティを使用しての内容を防ぐために、<xref:System.Windows.Controls.Viewbox>から元のサイズより小さいか大きいです。  
  
<a name="dependencyPropertyInfo_StretchDirection"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Controls.Viewbox.StretchDirectionProperty>|  
|メタデータ プロパティに設定します。`true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
   
  
## Examples  
 次の例は、のインスタンスを作成する方法を示しています。<xref:System.Windows.Controls.Viewbox>し、設定、<xref:System.Windows.Controls.Viewbox.StretchDirection%2A>コードを使用してプロパティです。  
  
 [!code-cpp[ViewBoxCode#2](~/samples/snippets/cpp/VS_Snippets_Wpf/ViewBoxCode/CPP/ViewboxCode.cpp#2)]
 [!code-csharp[ViewBoxCode#2](~/samples/snippets/csharp/VS_Snippets_Wpf/ViewBoxCode/Csharp/ViewboxCode.cs#2)]
 [!code-vb[ViewBoxCode#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ViewBoxCode/VisualBasic/ViewBoxCodeVB.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StretchDirectionProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty StretchDirectionProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty StretchDirectionProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Viewbox.StretchDirectionProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Controls.Viewbox.StretchDirection" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StretchProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty StretchProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty StretchProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Viewbox.StretchProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Controls.Viewbox.Stretch" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisualChildrenCount">
      <MemberSignature Language="C#" Value="protected override int VisualChildrenCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 VisualChildrenCount" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Viewbox.VisualChildrenCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>子の数を取得<see cref="T:System.Windows.Media.Visual" />のこのインスタンス内のオブジェクト<see cref="T:System.Windows.Controls.Viewbox" />です。</summary>
        <value>数<see cref="T:System.Windows.Media.Visual" />子。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティは、常に 1 を返します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
