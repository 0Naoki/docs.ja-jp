<Type Name="InkPresenter" FullName="System.Windows.Controls.InkPresenter">
  <TypeSignature Language="C#" Value="public class InkPresenter : System.Windows.Controls.Decorator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit InkPresenter extends System.Windows.Controls.Decorator" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.InkPresenter" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.Decorator</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>サーフェイス上のインクをレンダリングします。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 2 つの方法で発生したインクのレンダリング: 動的および静的です。 インクの表面にインクが書き込まれると、動的レンダリングが発生する: が収集されると、線はレンダリングされます。 静的なレンダリングは、ストロークのデータが収集され、新しい stroke に接続した後に発生します。  
  
 使用して動的にインクを表示するために、 <xref:System.Windows.Controls.InkPresenter>、アタッチ、<xref:System.Windows.Input.StylusPlugIns.DynamicRenderer.RootVisual%2A>のプロパティ、<xref:System.Windows.Input.StylusPlugIns.DynamicRenderer>を<xref:System.Windows.Controls.InkPresenter>を使用して、<xref:System.Windows.Controls.InkPresenter.AttachVisuals%2A>メソッドです。 インク、静的にレンダリングするストローク オブジェクトを追加、<xref:System.Windows.Controls.InkPresenter.Strokes%2A>プロパティです。  
  
   
  
## Examples  
 次の例は、プログラムで線を作成しを追加、<xref:System.Windows.Controls.InkPresenter>です。 この例では、前提条件で静的なレンダリングのみが行われる、<xref:System.Windows.FrameworkElement.Loaded>イベントがイベント ハンドラーに関連付けられている`WindowLoaded`です。  
  
 [!code-csharp[InkPresenterSample#1](~/samples/snippets/csharp/VS_Snippets_Wpf/InkPresenterSample/CSharp/Window1.xaml.cs#1)]
 [!code-vb[InkPresenterSample#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkPresenterSample/VisualBasic/Window1.xaml.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InkPresenter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkPresenter.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.Controls.InkPresenter" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ArrangeOverride">
      <MemberSignature Language="C#" Value="protected override System.Windows.Size ArrangeOverride (System.Windows.Size arrangeSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Windows.Size ArrangeOverride(valuetype System.Windows.Size arrangeSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkPresenter.ArrangeOverride(System.Windows.Size)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arrangeSize" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="arrangeSize"><see cref="T:System.Windows.Size" />この要素を使用してその子コンテンツを整列します。</param>
        <summary><see cref="T:System.Windows.Controls.Decorator" /> 要素のコンテンツを配置します。</summary>
        <returns>この <see cref="T:System.Windows.Controls.Decorator" /> 要素とその子の配置のサイズを表す <see cref="T:System.Windows.Size" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AttachVisuals">
      <MemberSignature Language="C#" Value="public void AttachVisuals (System.Windows.Media.Visual visual, System.Windows.Ink.DrawingAttributes drawingAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AttachVisuals(class System.Windows.Media.Visual visual, class System.Windows.Ink.DrawingAttributes drawingAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkPresenter.AttachVisuals(System.Windows.Media.Visual,System.Windows.Ink.DrawingAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
        <Parameter Name="drawingAttributes" Type="System.Windows.Ink.DrawingAttributes" />
      </Parameters>
      <Docs>
        <param name="visual">ビジュアル、<see cref="T:System.Windows.Input.StylusPlugIns.DynamicRenderer" />です。</param>
        <param name="drawingAttributes"><see cref="T:System.Windows.Ink.DrawingAttributes" />動的に描画されるインクの外観を指定します。</param>
        <summary>ビジュアルをアタッチ、<see cref="T:System.Windows.Input.StylusPlugIns.DynamicRenderer" />を<see cref="T:System.Windows.Controls.InkPresenter" />です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ビジュアルをアタッチ、<xref:System.Windows.Input.StylusPlugIns.DynamicRenderer>を<xref:System.Windows.Controls.InkPresenter>コントロール上のインクを動的に表示するためにします。  
  
   
  
## Examples  
 次の例では、ビジュアルをアタッチする方法と<xref:System.Windows.Input.StylusPlugIns.DynamicRenderer.DrawingAttributes%2A>の<xref:System.Windows.Input.StylusPlugIns.DynamicRenderer>を<xref:System.Windows.Controls.InkPresenter>です。  
  
 [!code-csharp[StylusPluginSamples#3](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusPluginSamples/CSharp/StylusControl.cs#3)]
 [!code-vb[StylusPluginSamples#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusPluginSamples/VisualBasic/StylusControl.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="visual" />ビジュアル ツリーに既にアタッチされています。</exception>
      </Docs>
    </Member>
    <Member MemberName="DetachVisuals">
      <MemberSignature Language="C#" Value="public void DetachVisuals (System.Windows.Media.Visual visual);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DetachVisuals(class System.Windows.Media.Visual visual) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkPresenter.DetachVisuals(System.Windows.Media.Visual)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="visual">ビジュアル、<see cref="T:System.Windows.Input.StylusPlugIns.DynamicRenderer" />をデタッチします。</param>
        <summary>ビジュアルの関連付けを解除、<see cref="T:System.Windows.Input.StylusPlugIns.DynamicRenderer" />から、<see cref="T:System.Windows.Controls.InkPresenter" />です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ときに、<xref:System.Windows.Ink.DrawingAttributes>カスタム コントロールの変更では、ビジュアルに、<xref:System.Windows.Input.StylusPlugIns.DynamicRenderer>に再度接続する必要があります、<xref:System.Windows.Controls.InkPresenter>です。  呼び出す、<xref:System.Windows.Controls.InkPresenter.DetachVisuals%2A>と<xref:System.Windows.Controls.InkPresenter.AttachVisuals%2A>にビジュアルを再アタッチする方法、<xref:System.Windows.Controls.InkPresenter>です。  
  
   
  
## Examples  
 次の例は、ビジュアルの再アタッチ、<xref:System.Windows.Input.StylusPlugIns.DynamicRenderer>を<xref:System.Windows.Controls.InkPresenter>されるたびに、<xref:System.Windows.Ink.DrawingAttributes>変更します。  この例では、<xref:System.Windows.Ink.DrawingAttributes.AttributeChanged>イベントがイベント ハンドラーに関連付けられています。  
  
 [!code-csharp[StrokeCollectionMethods#39](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/InkSelector.cs#39)]
 [!code-vb[StrokeCollectionMethods#39](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/InkSelector.vb#39)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="visual" />アタッチされていない、<see cref="T:System.Windows.Controls.InkPresenter" />です。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetLayoutClip">
      <MemberSignature Language="C#" Value="protected override System.Windows.Media.Geometry GetLayoutClip (System.Windows.Size layoutSlotSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Media.Geometry GetLayoutClip(valuetype System.Windows.Size layoutSlotSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkPresenter.GetLayoutClip(System.Windows.Size)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Geometry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="layoutSlotSize" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="layoutSlotSize">要素のサイズ。</param>
        <summary>場合にクリップされる領域を示すクリッピング ジオメトリを返します、<see cref="P:System.Windows.UIElement.ClipToBounds" />プロパティに設定されている<see langword="true" />です。</summary>
        <returns>A<see cref="T:System.Windows.Media.Geometry" />られている領域を表す場合にクリップ<see cref="P:System.Windows.UIElement.ClipToBounds" />は<see langword="true" />します。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVisualChild">
      <MemberSignature Language="C#" Value="protected override System.Windows.Media.Visual GetVisualChild (int index);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Media.Visual GetVisualChild(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkPresenter.GetVisualChild(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Visual</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">子要素のインデックス位置。</param>
        <summary>子を取得します<see cref="T:System.Windows.Media.Visual" />、指定した位置にある要素<paramref name="index" />位置。</summary>
        <returns>指定した位置にある子要素<paramref name="index" />位置。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasureOverride">
      <MemberSignature Language="C#" Value="protected override System.Windows.Size MeasureOverride (System.Windows.Size constraint);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Windows.Size MeasureOverride(valuetype System.Windows.Size constraint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkPresenter.MeasureOverride(System.Windows.Size)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="constraint" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="constraint">上限<see cref="T:System.Windows.Size" />を超えていない必要があります。</param>
        <summary>子要素の測定、<see cref="T:System.Windows.Controls.Decorator" />間に、配置を準備する、<see cref="M:System.Windows.Controls.Decorator.ArrangeOverride(System.Windows.Size)" />渡します。</summary>
        <returns>ターゲット<see cref="T:System.Windows.Size" />要素のです。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkPresenter.OnCreateAutomationPeer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>適切な提供<see cref="T:System.Windows.Automation.Peers.InkPresenterAutomationPeer" />の一部として、このコントロールの実装、[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]インフラストラクチャです。</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Strokes">
      <MemberSignature Language="C#" Value="public System.Windows.Ink.StrokeCollection Strokes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Ink.StrokeCollection Strokes" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkPresenter.Strokes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Ink.StrokeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得して、ストロークの設定、<see cref="T:System.Windows.Controls.InkPresenter" />が表示されます。</summary>
        <value>ストロークを<see cref="T:System.Windows.Controls.InkPresenter" />が表示されます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_Strokes"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Controls.InkPresenter.StrokesProperty>|  
|メタデータ プロパティに設定します。`true`|なし|  
  
   
  
## Examples  
 次の例は、プログラムで線を作成しを追加、<xref:System.Windows.Controls.InkPresenter>です。 例では、<xref:System.Windows.FrameworkElement.Loaded>イベントがイベント ハンドラーに関連付けられている`WindowLoaded`です。  
  
 [!code-csharp[InkPresenterSample#1](~/samples/snippets/csharp/VS_Snippets_Wpf/InkPresenterSample/CSharp/Window1.xaml.cs#1)]
 [!code-vb[InkPresenterSample#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkPresenterSample/VisualBasic/Window1.xaml.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StrokesProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty StrokesProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty StrokesProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.InkPresenter.StrokesProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Controls.InkPresenter.Strokes" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisualChildrenCount">
      <MemberSignature Language="C#" Value="protected override int VisualChildrenCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 VisualChildrenCount" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkPresenter.VisualChildrenCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.Windows.Controls.Decorator" /> のインスタンスのビジュアルな子要素の数に相当する値を取得します。</summary>
        <value>ビジュアル子要素の数。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
