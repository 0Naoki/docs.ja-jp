<Type Name="WrapPanel" FullName="System.Windows.Controls.WrapPanel">
  <TypeSignature Language="C#" Value="public class WrapPanel : System.Windows.Controls.Panel" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi WrapPanel extends System.Windows.Controls.Panel" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.WrapPanel" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.Panel</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>左から右へ順に子要素を配置し、ボックスの端で改行してコンテンツを次の行へ送ります。 上から下にするか、右から左の値に応じてに順番に発生後続の並べ替え、<see cref="P:System.Windows.Controls.WrapPanel.Orientation" />プロパティです。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A<xref:System.Windows.Controls.WrapPanel>のコレクションを格納<xref:System.Windows.UIElement>では、オブジェクト、<xref:System.Windows.Controls.Panel.Children%2A>プロパティです。 すべての子要素、<xref:System.Windows.Controls.WrapPanel>のレイアウトのパーティション サイズを受け取る<xref:System.Windows.Controls.WrapPanel.ItemWidth%2A>を掛けた<xref:System.Windows.Controls.WrapPanel.ItemHeight%2A>です。  
  
   
  
## Examples  
 次の例で作成する方法、<xref:System.Windows.Controls.WrapPanel>コード内と[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]です。  
  
 [!code-cpp[WrapPanel_Intro#1](~/samples/snippets/cpp/VS_Snippets_Wpf/WrapPanel_Intro/CPP/WrapPanel_Code.cpp#1)]
 [!code-csharp[WrapPanel_Intro#1](~/samples/snippets/csharp/VS_Snippets_Wpf/WrapPanel_Intro/CSharp/WrapPanel_Code.cs#1)]
 [!code-vb[WrapPanel_Intro#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WrapPanel_Intro/VisualBasic/WrapPanel_vb.vb#1)]
 [!code-xaml[WrapPanel_Intro#1](~/samples/snippets/xaml/VS_Snippets_Wpf/WrapPanel_Intro/XAML/default.xaml#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WrapPanel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.WrapPanel.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.Controls.WrapPanel" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ArrangeOverride">
      <MemberSignature Language="C#" Value="protected override System.Windows.Size ArrangeOverride (System.Windows.Size finalSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Windows.Size ArrangeOverride(valuetype System.Windows.Size finalSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.WrapPanel.ArrangeOverride(System.Windows.Size)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="finalSize" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="finalSize"><see cref="T:System.Windows.Size" />をこの要素が使用する子要素を配置します。</param>
        <summary><see cref="T:System.Windows.Controls.WrapPanel" /> 要素のコンテンツを配置します。</summary>
        <returns><see cref="T:System.Windows.Size" />の配置のサイズを表す<see cref="T:System.Windows.Controls.WrapPanel" />要素とその子要素です。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemHeight">
      <MemberSignature Language="C#" Value="public double ItemHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 ItemHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.WrapPanel.ItemHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.LengthConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定内に含まれるすべてのアイテムの高さを指定する値、<see cref="T:System.Windows.Controls.WrapPanel" />です。</summary>
        <value><see cref="T:System.Double" /> Uniform 内に含まれるすべてのアイテムの高さを表す、<see cref="T:System.Windows.Controls.WrapPanel" />です。 既定値は <see cref="F:System.Double.NaN" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティが設定されていない場合 (またはに設定されている場合`Auto`XAML または`Double.NaN`コードで)、レイアウト パーティションのサイズ、子要素の目的のサイズと同じです。  
  
 子要素、<xref:System.Windows.Controls.WrapPanel>高さプロパティを明示的に設定しておくことがあります。 <xref:System.Windows.Controls.WrapPanel.ItemHeight%2A>によって予約されているレイアウト パーティションのサイズを指定します、<xref:System.Windows.Controls.WrapPanel>の子要素です。 その結果、<xref:System.Windows.Controls.WrapPanel.ItemHeight%2A>要素の高さよりも優先されます。  
  
<a name="xamlAttributeUsage_ItemHeight"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
  
```  
<object ItemHeight="double"/>  
- or -  
<object ItemHeight="qualifiedDouble"/>  
- or -  
<object ItemHeight="Auto"/>  
```  
  
<a name="xamlValues_ItemHeight"></a>   
## <a name="xaml-values"></a>XAML 値  
 *double*  
 <xref:System.Double>  
  
 文字列表現を<xref:System.Double>値以上になると`0.0034`がよりを以下になる`160000`です。 修飾されていない値は、デバイス非依存ピクセル単位で計測されます。 明示的に、文字列では、小数点を含める必要がありますされません。  
  
 *qualifiedDouble*  
 A*二重*、上記で説明したように値 (ドキュメントを除く`Auto`) 後に、次の単位指定子の 1 つ: `px`、 `in`、 `cm`、`pt`です。  
  
 `px`(既定値)[!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]  
  
 `in`インチです。1 96px を = =  
  
 `cm`センチメートル; は、します。1cm==(96/2.54) px  
  
 `pt`ポイントです。1pt==(96/72) px  
  
 自動  
 原因は、行の高さは現在のフォント特性から自動的に決定されます。  プロパティの値に相当<xref:System.Double.NaN>です。  
  
<a name="dependencyPropertyInfo_ItemHeight"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Controls.WrapPanel.ItemHeightProperty>|  
|メタデータ プロパティに設定します。`true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
   
  
## Examples  
 次の例は、設定する方法を示します、<xref:System.Windows.Controls.WrapPanel.ItemHeight%2A>プロパティ[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]です。  
  
 [!code-xaml[WrapPanel_Intro2#1](~/samples/snippets/csharp/VS_Snippets_Wpf/WrapPanel_Intro2/CS/default.xaml#1)]  
  
 次の例は、設定する方法を示します、<xref:System.Windows.Controls.WrapPanel.ItemHeight%2A>コードを使用してプロパティです。  
  
 [!code-cpp[wrappanel_intro#1](~/samples/snippets/cpp/VS_Snippets_Wpf/WrapPanel_Intro/CPP/WrapPanel_Code.cpp#1)]
 [!code-csharp[wrappanel_intro#1](~/samples/snippets/csharp/VS_Snippets_Wpf/WrapPanel_Intro/CSharp/WrapPanel_Code.cs#1)]
 [!code-vb[wrappanel_intro#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WrapPanel_Intro/VisualBasic/WrapPanel_vb.vb#1)]
 [!code-xaml[wrappanel_intro#1](~/samples/snippets/xaml/VS_Snippets_Wpf/WrapPanel_Intro/XAML/default.xaml#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemHeightProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ItemHeightProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ItemHeightProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.WrapPanel.ItemHeightProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Controls.WrapPanel.ItemHeight" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemWidth">
      <MemberSignature Language="C#" Value="public double ItemWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 ItemWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.WrapPanel.ItemWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.LengthConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定内に含まれるすべてのアイテムの幅を指定する値、<see cref="T:System.Windows.Controls.WrapPanel" />です。</summary>
        <value>A<see cref="T:System.Double" />内に含まれるすべての項目の均一の幅を表す、<see cref="T:System.Windows.Controls.WrapPanel" />です。 既定値は <see cref="F:System.Double.NaN" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティが設定されていない場合 (またはに設定されている場合`Auto`で[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]または`Double.NaN`コードで)、レイアウトのパーティションのサイズと等しい、<xref:System.Windows.UIElement.DesiredSize%2A>子要素のです。  
  
 子要素、<xref:System.Windows.Controls.WrapPanel>幅プロパティを明示的に設定しておくことがあります。 <xref:System.Windows.Controls.WrapPanel.ItemWidth%2A>によって予約されているレイアウト パーティションのサイズを指定します、<xref:System.Windows.Controls.WrapPanel>の子要素です。 その結果、<xref:System.Windows.Controls.WrapPanel.ItemWidth%2A>要素の幅よりも優先されます。  
  
<a name="xamlAttributeUsage_ItemWidth"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
  
```  
<object ItemWidth="double"/>  
- or -  
<object ItemWidth="qualifiedDouble"/>  
- or -  
<object ItemWidth="Auto"/>  
```  
  
<a name="xamlValues_ItemWidth"></a>   
## <a name="xaml-values"></a>XAML 値  
 *double*  
 <xref:System.Double>  
  
 文字列表現を<xref:System.Double>値以上になると`0.0034`がよりを以下になる`160000`です。 修飾されていない値は、デバイス非依存ピクセル単位で計測されます。 明示的に、文字列では、小数点を含める必要がありますされません。  
  
 *qualifiedDouble*  
 A*二重*、上記で説明したように値 (ドキュメントを除く`Auto`) 後に、次の単位指定子の 1 つ: `px`、 `in`、 `cm`、`pt`です。  
  
 `px`(既定値)[!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]  
  
 `in`インチです。1 96px を = =  
  
 `cm`センチメートル; は、します。1cm==(96/2.54) px  
  
 `pt`ポイントです。1pt==(96/72) px  
  
 自動  
 原因は、行の高さは現在のフォント特性から自動的に決定されます。  プロパティの値に相当<xref:System.Double.NaN>です。  
  
<a name="dependencyPropertyInfo_ItemWidth"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Controls.WrapPanel.ItemWidthProperty>|  
|メタデータ プロパティに設定します。`true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
   
  
## Examples  
 次の例は、設定する方法を示します、<xref:System.Windows.Controls.WrapPanel.ItemWidth%2A>プロパティ[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]です。  
  
 [!code-xaml[WrapPanel_Intro2#1](~/samples/snippets/csharp/VS_Snippets_Wpf/WrapPanel_Intro2/CS/default.xaml#1)]  
  
 次の例は、設定する方法を示します、<xref:System.Windows.Controls.WrapPanel.ItemWidth%2A>コードを使用してプロパティです。  
  
 [!code-cpp[wrappanel_intro#1](~/samples/snippets/cpp/VS_Snippets_Wpf/WrapPanel_Intro/CPP/WrapPanel_Code.cpp#1)]
 [!code-csharp[wrappanel_intro#1](~/samples/snippets/csharp/VS_Snippets_Wpf/WrapPanel_Intro/CSharp/WrapPanel_Code.cs#1)]
 [!code-vb[wrappanel_intro#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WrapPanel_Intro/VisualBasic/WrapPanel_vb.vb#1)]
 [!code-xaml[wrappanel_intro#1](~/samples/snippets/xaml/VS_Snippets_Wpf/WrapPanel_Intro/XAML/default.xaml#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemWidthProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ItemWidthProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ItemWidthProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.WrapPanel.ItemWidthProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Controls.WrapPanel.ItemWidth" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasureOverride">
      <MemberSignature Language="C#" Value="protected override System.Windows.Size MeasureOverride (System.Windows.Size constraint);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Windows.Size MeasureOverride(valuetype System.Windows.Size constraint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.WrapPanel.MeasureOverride(System.Windows.Size)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="constraint" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="constraint">上限<see cref="T:System.Windows.Size" />を超えていない必要があります。</param>
        <summary>子要素の測定、<see cref="T:System.Windows.Controls.WrapPanel" />中の調整に応じるために、<see cref="M:System.Windows.Controls.WrapPanel.ArrangeOverride(System.Windows.Size)" />渡します。</summary>
        <returns><see cref="T:System.Windows.Size" />要素の目的のサイズを表すです。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Orientation">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.Orientation Orientation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.Orientation Orientation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.WrapPanel.Orientation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.Orientation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または子コンテンツが配置されているディメンションを指定する値を設定します。</summary>
        <value><see cref="T:System.Windows.Controls.Orientation" />内のコンテンツの物理的な方向を表す値、<see cref="T:System.Windows.Controls.WrapPanel" />水平または垂直として。 既定値は <see cref="F:System.Windows.Controls.Orientation.Horizontal" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 場合、<xref:System.Windows.Controls.WrapPanel.Orientation%2A>プロパティに設定されている`Horizontal`フォーム水平行の最初の子コンテンツ、およびかどうか必要は行の垂直方向のスタックを形成します。 場合、<xref:System.Windows.Controls.WrapPanel.Orientation%2A>プロパティに設定されている`Vertical`最初の子コンテンツの縦の列に配置、および十分な領域がない場合の折り返しが発生し、水平方向に列が追加されました。  
  
<a name="dependencyPropertyInfo_Orientation"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Controls.WrapPanel.OrientationProperty>|  
|メタデータ プロパティに設定します。`true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
   
  
## Examples  
 次の例は、設定する方法を示します、<xref:System.Windows.Controls.WrapPanel.Orientation%2A>プロパティ[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]です。  
  
 [!code-xaml[WrapPanel_Intro2#1](~/samples/snippets/csharp/VS_Snippets_Wpf/WrapPanel_Intro2/CS/default.xaml#1)]  
  
 次の例は、設定する方法を示します、<xref:System.Windows.Controls.WrapPanel.Orientation%2A>コードを使用してプロパティです。  
  
 [!code-cpp[wrappanel_intro#1](~/samples/snippets/cpp/VS_Snippets_Wpf/WrapPanel_Intro/CPP/WrapPanel_Code.cpp#1)]
 [!code-csharp[wrappanel_intro#1](~/samples/snippets/csharp/VS_Snippets_Wpf/WrapPanel_Intro/CSharp/WrapPanel_Code.cs#1)]
 [!code-vb[wrappanel_intro#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WrapPanel_Intro/VisualBasic/WrapPanel_vb.vb#1)]
 [!code-xaml[wrappanel_intro#1](~/samples/snippets/xaml/VS_Snippets_Wpf/WrapPanel_Intro/XAML/default.xaml#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OrientationProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty OrientationProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty OrientationProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.WrapPanel.OrientationProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Controls.WrapPanel.Orientation" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
