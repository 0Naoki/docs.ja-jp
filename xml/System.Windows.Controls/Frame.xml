<Type Name="Frame" FullName="System.Windows.Controls.Frame">
  <TypeSignature Language="C#" Value="public class Frame : System.Windows.Controls.ContentControl, System.Windows.Markup.IAddChild, System.Windows.Markup.IUriContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi Frame extends System.Windows.Controls.ContentControl implements class System.Windows.Markup.IAddChild, class System.Windows.Markup.IUriContext" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.Frame" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.ContentControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Markup.IAddChild</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Markup.IUriContext</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("Navigated")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Source")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.Ignore)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.TemplatePart(Name="PART_FrameCP", Type=typeof(System.Windows.Controls.ContentPresenter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>フレームは、ナビゲーションをサポートするコンテンツ コントロールです。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.Frame>移動し、コンテンツを表示する機能を提供するコンテンツ コントロールです。 <xref:System.Windows.Controls.Frame>他のコントロールと要素と同様、その他のコンテンツ内でホストできます。  
  
> [!CAUTION]
>  ときに、<xref:System.Windows.Controls.Frame>コントロールが HTML のコンテンツに移動、<xref:System.Windows.Controls.Frame>コントロールが内部でネイティブの WebBrowser ActiveX コントロールをインスタンス化します。 WPF では、WebBrowser ActiveX コントロールにコントロールの機能を適用することでセキュリティ機能を使用します。 適用されている機能のコントロールは、Xbap とスタンドアロン アプリケーションで異なります。 一部のアプリケーションでは、悪意のあるコンテンツが実行されないようにする追加の機能のコントロールを適用する必要があります。 詳細についてを参照してください「WebBrowser コントロールおよび機能のコントロール」[セキュリティ (WPF)](~/docs/framework/wpf/security-wpf.md)と[WebBrowser コントロールの概要とチュートリアル](http://go.microsoft.com/fwlink/?LinkId=179388)です。  
  
 コンテンツできる任意の種類の[!INCLUDE[TLA2#tla_winfx](~/includes/tla2sharptla-winfx-md.md)]オブジェクトおよび[!INCLUDE[TLA#tla_html](~/includes/tlasharptla-html-md.md)]ファイル。 一般に、ただし、ページは、優先されるパッケージのコンテンツを移動できるようにするための方法 (を参照してください<xref:System.Windows.Controls.Page>)。  
  
 設定するコンテンツを移動する、<xref:System.Windows.Controls.Frame.Source%2A>を持つプロパティ、[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]目的のコンテンツ。 さらに、コンテンツに移動するに次のオーバー ロードのいずれかを使用して、<xref:System.Windows.Controls.Frame.Navigate%2A>メソッド。  
  
-   <xref:System.Windows.Controls.Frame.Navigate%28System.Uri%29>  
  
-   <xref:System.Windows.Controls.Frame.Navigate%28System.Uri%2CSystem.Object%29>  
  
 ときのコンテンツに移動して[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]、<xref:System.Windows.Controls.Frame>コンテンツを含むオブジェクトを返します。 いずれかを使用してコンテンツに移動する代わりに、<xref:System.Windows.Controls.Frame.Navigate%2A>オブジェクトを受け取るメソッド オーバー ロードします。  
  
-   <xref:System.Windows.Controls.Frame.Navigate%28System.Object%29>  
  
-   <xref:System.Windows.Controls.Frame.Navigate%28System.Object%2CSystem.Object%29>  
  
 ナビゲーションの有効期間は、次のイベントを追跡できます。  
  
-   <xref:System.Windows.Controls.Frame.Navigating>  
  
-   <xref:System.Windows.Controls.Frame.Navigated>  
  
-   <xref:System.Windows.Controls.Frame.NavigationProgress>  
  
-   <xref:System.Windows.Controls.Frame.NavigationFailed>  
  
-   <xref:System.Windows.Controls.Frame.NavigationStopped>  
  
-   <xref:System.Windows.Controls.Frame.LoadCompleted>  
  
-   <xref:System.Windows.Controls.Frame.FragmentNavigation>  
  
 すべてのイベントはたびに発生する、ナビゲーションが発生します。(キャンセル、停止、または失敗) は、発生するイベントのセットをナビゲーション (コンテンツまたはコンテンツ フラグメント) に発生して、ナビゲーションの完了方法の種類によって決まります。  
  
 次の図は、これらのイベントを発生させるシーケンスを示しています。  
  
 ![ページ ナビゲーションのフロー チャート](~/add/media/navigationoverviewfigure11.png "ページ ナビゲーションのフロー チャート")  
  
 中またはその後、ナビゲーション<xref:System.Windows.Controls.Frame>に移動されているコンテンツに関する情報を提供、[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]移動先のコンテンツの (<xref:System.Windows.Controls.Frame.Source%2A>) では、[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]の現在のコンテンツ (<xref:System.Windows.Controls.Frame.CurrentSource%2A>)、および移動先の内容を格納しているオブジェクト (<xref:System.Windows.Controls.ContentControl.Content%2A>)。  
  
 コンテンツの移動、<xref:System.Windows.Controls.Frame>ナビゲーション履歴にエントリとしてナビゲーションを記録します。 ナビゲーション履歴のバックアップを作成して呼び出すことによって、どちらか、新しいナビゲーションが発生したときに、エントリが追加、<xref:System.Windows.Controls.Frame.Navigate%2A>メソッドを呼び出すことによって、"進む"ナビゲーション履歴内のエントリに移動して<xref:System.Windows.Controls.Frame.GoForward%2A>です。 呼び出してナビゲーション履歴に戻るのエントリに移動して"進む"ナビゲーション履歴にエントリが追加された<xref:System.Windows.Controls.Frame.GoBack%2A>です。 <xref:System.Windows.Controls.Frame.CanGoBack%2A>および<xref:System.Windows.Controls.Frame.CanGoForward%2A>があるか前に、"進む"ナビゲーション履歴の場合は、それぞれを報告します。  
  
 最初にその 1 つのコンテンツへの移動が、コンテンツの別の部分から<xref:System.Windows.Controls.Frame>ナビゲーションが自動的に表示されます[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]ユーザー ナビゲーション履歴を前後に移動することができます。 タイミングを構成することができます、ナビゲーション[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]設定で表示されます、<xref:System.Windows.Controls.Frame.NavigationUIVisibility%2A>プロパティです。  
  
 既定では、<xref:System.Windows.Controls.Frame>親ナビゲーター場合にのみに、独自のナビゲーション履歴を使用 (<xref:System.Windows.Navigation.NavigationWindow>、 <xref:System.Windows.Controls.Frame>)、独自のナビゲーションと履歴を検出できません。 これは、親ナビゲーターのフレームのナビゲーション履歴エントリがナビゲーション履歴のエントリと混じり合うことを意味します。 指定する、<xref:System.Windows.Controls.Frame>独自ナビゲーション履歴を管理する設定、<xref:System.Windows.Controls.Frame.JournalOwnership%2A>プロパティを<xref:System.Windows.Navigation.JournalOwnership.OwnsJournal>です。  
  
 最新のエントリに戻るナビゲーション履歴を呼び出すことによって削除されることができます<xref:System.Windows.Controls.Frame.RemoveBackEntry%2A>です。  
  
 <xref:System.Windows.Controls.Frame>ナビゲーション履歴には、コンテンツ オブジェクトのインスタンスは保存されません。 代わりに、<xref:System.Windows.Controls.Frame>ナビゲーション履歴を使用して、移動するたびに、コンテンツ オブジェクトの新しいインスタンスを作成します。 この動作は数値が大きいとコンテンツの大きなデータは移動先ときに、過度なメモリ消費を避けるために設計されています。 その結果、次に、コンテンツの状態は 1 つのナビゲーションからに記憶されません。 ただし、[!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)]ナビゲーション履歴に特定のコンテンツの状態を格納する、いくつかの方法を提供します。  
  
 使用して<xref:System.Windows.Controls.Frame.AddBackEntry%2A>、単一のページ インスタンスの状態の複数のセットも覚えておいてください。  
  
## <a name="customizing-the-frame-control"></a>フレーム コントロールのカスタマイズ  
 設定を適用する、同じプロパティを複数<xref:System.Windows.Controls.Frame>、コントロールを使用して、<xref:System.Windows.FrameworkElement.Style%2A>プロパティです。 既定値を変更することができます<xref:System.Windows.Controls.ControlTemplate>コントロールの外観を一意にします。 作成の詳細については、<xref:System.Windows.Controls.ControlTemplate>を参照してください[、ControlTemplate を作成することで、既存のコントロールの外観のカスタマイズ](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)です。  部分とに固有の状態を表示する、<xref:System.Windows.Controls.Frame>を参照してください[フレームのスタイルとテンプレート](~/docs/framework/wpf/controls/frame-styles-and-templates.md)です。  
  
 コントロールの既定のスタイルでは、このコントロールの依存関係プロパティを設定する場合があります。  プロパティが既定のスタイルが設定されている場合は、アプリケーションでコントロールが表示されたら既定値から、プロパティが変更可能性があります。 既定のスタイルは、いるデスクトップ テーマによっては、アプリケーションが実行されている場合は使用が決定されます。  詳細については、次を参照してください。 [WPF テーマの既定の](http://go.microsoft.com/fwlink/?LinkID=158252)します。  
  
> [!NOTE]
>  Visual プロパティの設定はのみに効果が場合、このプロパティは、両方に存在<xref:System.Windows.Controls.Frame>コントロールの既定のテンプレートとを使用して設定をします。 「を変更する、Visual 構造の制御」 セクションで visual のプロパティの一覧を検索できる[、ControlTemplate を作成することで、既存のコントロールの外観のカスタマイズ](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)です。  
  
   
  
## Examples  
 次の例は、単純なを作成する方法を示します<xref:System.Windows.Controls.Frame>制御およびからロードする最初のソース コンテンツの指定、[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]を使用して、<xref:System.Windows.Controls.Frame.Source%2A>プロパティです。  
  
 [!code-xaml[FrameSnippets#SetFrameSourceXAML1](~/samples/snippets/csharp/VS_Snippets_Wpf/FrameSnippets/CS/MainWindow.xaml#setframesourcexaml1)]  
[!code-xaml[FrameSnippets#SetFrameSourceXAML2](~/samples/snippets/csharp/VS_Snippets_Wpf/FrameSnippets/CS/MainWindow.xaml#setframesourcexaml2)]  
[!code-xaml[FrameSnippets#SetFrameSourceXAML3](~/samples/snippets/csharp/VS_Snippets_Wpf/FrameSnippets/CS/MainWindow.xaml#setframesourcexaml3)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Frame ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Frame.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.Controls.Frame" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddBackEntry">
      <MemberSignature Language="C#" Value="public void AddBackEntry (System.Windows.Navigation.CustomContentState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddBackEntry(class System.Windows.Navigation.CustomContentState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Frame.AddBackEntry(System.Windows.Navigation.CustomContentState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Windows.Navigation.CustomContentState" />
      </Parameters>
      <Docs>
        <param name="state">A<see cref="T:System.Windows.Navigation.CustomContentState" />特定のコンテンツに関連付けられているアプリケーション定義の状態を表すオブジェクト。</param>
        <summary>バックアップが含まれるナビゲーション履歴にエントリを追加、<see cref="T:System.Windows.Navigation.CustomContentState" />オブジェクト。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 「<xref:System.Windows.Navigation.NavigationService.AddBackEntry%2A?displayProperty=nameWithType>」を参照してください。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="state" /><see langword="null" />、および<see cref="T:System.Windows.Navigation.CustomContentState" />からオブジェクトが返されない<see cref="M:System.Windows.Navigation.IProvideCustomContentState.GetContentState" />です。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddChild">
      <MemberSignature Language="C#" Value="protected override void AddChild (object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddChild(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Frame.AddChild(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">追加する子オブジェクト。</param>
        <summary>子オブジェクトを追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドはオーバーライド<xref:System.Windows.Controls.Frame>子が許可されません。 代わりに、使用、<xref:System.Windows.Controls.ContentControl.Content%2A>コンテンツを設定するプロパティです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddText">
      <MemberSignature Language="C#" Value="protected override void AddText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Frame.AddText(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">オブジェクトに追加するテキスト。</param>
        <summary>オブジェクトにノードのテキスト コンテンツを追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 防ぐためにこのメソッドはオーバーライド<xref:System.Windows.Controls.Frame>からテキストを追加します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackStack">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerable BackStack { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IEnumerable BackStack" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Frame.BackStack" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返します、<see cref="T:System.Collections.IEnumerable" />の"戻る"ナビゲーション履歴のエントリの列挙を使用すること、<see cref="T:System.Windows.Controls.Frame" />です。</summary>
        <value>
          <see cref="T:System.Collections.IEnumerable" />少なくとも 1 つのエントリがある場合は、戻るナビゲーション履歴に追加されました。 エントリが存在しない場合、または<see cref="T:System.Windows.Controls.Frame" />独自ナビゲーション履歴を所有していない<see cref="P:System.Windows.Controls.Frame.BackStack" />は<see langword="null" />します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 によって返されるエントリ<xref:System.Windows.Controls.Frame.BackStack%2A>コンテンツ全体、フラグメント ナビゲーション カスタム状態などです。  
  
<a name="dependencyPropertyInfo_FrameBackStack"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Controls.Frame.BackStackProperty>|  
|メタデータ プロパティに設定します。`true`|なし|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackStackProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty BackStackProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty BackStackProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Frame.BackStackProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Controls.Frame.BackStack" /> 依存関係プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.Frame.BackStack%2A> 依存関係プロパティの識別子。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseUri">
      <MemberSignature Language="C#" Value="protected virtual Uri BaseUri { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri BaseUri" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Frame.BaseUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の基本[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]の<see cref="T:System.Windows.Controls.Frame" />です。</summary>
        <value>基本[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]の<see cref="T:System.Windows.Controls.Frame" />コントロール。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.Frame.BaseUri%2A>相対パスの解決を支援するために設定することができます[!INCLUDE[TLA#tla_uri#plural](~/includes/tlasharptla-urisharpplural-md.md)]さらに移動できるようにします。  
  
 取得または設定する、[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]の<xref:System.Windows.Controls.Frame>コントロールを使用して、<xref:System.Windows.Controls.Frame.Source%2A>プロパティです。  
  
 これは、プロテクト仮想プロパティを直接使用することはできません派生クラスで使用できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanGoBack">
      <MemberSignature Language="C#" Value="public bool CanGoBack { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanGoBack" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Frame.CanGoBack" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ナビゲーション履歴には、少なくとも 1 つのエントリがあるかどうかを示す値を取得します。</summary>
        <value>
          <see langword="true" />戻るナビゲーション履歴に少なくとも 1 つのエントリがある場合<see langword="false" />ナビゲーション履歴にエントリがない場合、または<see cref="T:System.Windows.Controls.Frame" />独自ナビゲーション履歴を所有していません。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 「<xref:System.Windows.Navigation.NavigationService.CanGoBack%2A?displayProperty=nameWithType>」を参照してください。  
  
<a name="dependencyPropertyInfo_FrameCanGoBack"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Controls.Frame.CanGoBackProperty>|  
|メタデータ プロパティに設定します。`true`|なし|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanGoBackProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CanGoBackProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CanGoBackProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Frame.CanGoBackProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Controls.Frame.CanGoBack" /> 依存関係プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.Frame.CanGoBack%2A> 依存関係プロパティの識別子。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanGoForward">
      <MemberSignature Language="C#" Value="public bool CanGoForward { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanGoForward" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Frame.CanGoForward" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>次に進むナビゲーション履歴に少なくとも 1 つのエントリがあるかどうかを示す値を取得します。</summary>
        <value>
          <see langword="true" />次に進むナビゲーション履歴に少なくとも 1 つのエントリがある場合<see langword="false" /> "進む"ナビゲーション履歴にエントリがない場合、または<see cref="T:System.Windows.Controls.Frame" />独自ナビゲーション履歴を所有していません。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 「<xref:System.Windows.Controls.Frame.CanGoForward%2A>」を参照してください。  
  
<a name="dependencyPropertyInfo_FrameCanGoForward"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Controls.Frame.CanGoForwardProperty>|  
|メタデータ プロパティに設定します。`true`|なし|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanGoForwardProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CanGoForwardProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CanGoForwardProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Frame.CanGoForwardProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Controls.Frame.CanGoForward" /> 依存関係プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.Frame.CanGoForward%2A> 依存関係プロパティの識別子。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentRendered">
      <MemberSignature Language="C#" Value="public event EventHandler ContentRendered;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ContentRendered" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.Frame.ContentRendered" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>後に発生<see cref="T:System.Windows.Controls.Frame" />コンテンツがレンダリングされました。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 場合、<xref:System.Windows.Controls.Frame>コンテンツを持たないこのイベントは発生しません。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentSource">
      <MemberSignature Language="C#" Value="public Uri CurrentSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri CurrentSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Frame.CurrentSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得、[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]されたコンテンツを最後に移動されました。</summary>
        <value>A<see cref="T:System.Uri" />最後に移動したを使用してに移動する場合、コンテンツを[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]、それ以外の<see langword="null" />します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 「<xref:System.Windows.Navigation.NavigationService.CurrentSource%2A?displayProperty=nameWithType>」を参照してください。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForwardStack">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerable ForwardStack { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IEnumerable ForwardStack" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Frame.ForwardStack" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得、 <see cref="T:System.Collections.IEnumerable" /> "進む"ナビゲーション履歴のエントリの列挙を使用すること、<see cref="T:System.Windows.Controls.Frame" />です。</summary>
        <value><see cref="T:System.Collections.IEnumerable" /> "進む"ナビゲーション履歴に少なくとも 1 つのエントリが追加された場合は、オブジェクトまたは<see langword="null" />エントリがない場合、または<see cref="T:System.Windows.Controls.Frame" />独自ナビゲーション履歴を所有していません。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 によって返されるエントリ<xref:System.Windows.Controls.Frame.ForwardStack%2A>コンテンツ全体、フラグメント ナビゲーション カスタム状態などです。  
  
<a name="dependencyPropertyInfo_FrameForwardStack"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Controls.Frame.ForwardStackProperty>|  
|メタデータ プロパティに設定します。`true`|なし|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForwardStackProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ForwardStackProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ForwardStackProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Frame.ForwardStackProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Controls.Frame.ForwardStack" /> 依存関係プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.Frame.ForwardStack%2A> 依存関係プロパティの識別子。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FragmentNavigation">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.FragmentNavigationEventHandler FragmentNavigation;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.FragmentNavigationEventHandler FragmentNavigation" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.Frame.FragmentNavigation" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.FragmentNavigationEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コンテンツ フラグメントへのナビゲーションが開始されると、すぐに、発生する場合は、目的のフラグメントは、現在のコンテンツまたはソースの後に発生した[!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)]フラグメント場合は、必要な別のコンテンツにコンテンツが読み込まれました。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 「<xref:System.Windows.Navigation.NavigationService.FragmentNavigation?displayProperty=nameWithType>」を参照してください。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GoBack">
      <MemberSignature Language="C#" Value="public void GoBack ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GoBack() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Frame.GoBack" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>場合、ナビゲーション履歴を戻る、最新の項目に移動、<see cref="T:System.Windows.Controls.Frame" />独自ナビゲーション履歴を管理します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 フレーム ナビゲーション履歴が親ナビゲーターによって管理されているかどうか (<xref:System.Windows.Navigation.NavigationWindow>、 <xref:System.Windows.Controls.Frame>) では、`GoBack`そのナビゲーターのメソッドまたは関連付けられた<xref:System.Windows.Navigation.NavigationService>オブジェクトを呼び出す必要があります。  
  
-   <xref:System.Windows.Controls.Frame.GoBack%2A?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Navigation.NavigationWindow.GoBack%2A?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Navigation.NavigationService.GoBack%2A?displayProperty=nameWithType>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="M:System.Windows.Controls.Frame.GoBack" />ナビゲーション履歴にエントリがない場合に呼び出されます。</exception>
      </Docs>
    </Member>
    <Member MemberName="GoForward">
      <MemberSignature Language="C#" Value="public void GoForward ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GoForward() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Frame.GoForward" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>次に進むナビゲーション履歴に最新の項目に移動する場合、<see cref="T:System.Windows.Controls.Frame" />独自ナビゲーション履歴を管理します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 フレーム ナビゲーション履歴が親ナビゲーターによって管理されているかどうか (<xref:System.Windows.Navigation.NavigationWindow>、 <xref:System.Windows.Controls.Frame>) では、`GoForward`そのナビゲーターのメソッドまたは関連付けられた<xref:System.Windows.Navigation.NavigationService>オブジェクトを呼び出す必要があります。  
  
-   <xref:System.Windows.Controls.Frame.GoForward%2A?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Navigation.NavigationWindow.GoForward%2A?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Navigation.NavigationService.GoForward%2A?displayProperty=nameWithType>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="M:System.Windows.Controls.Frame.GoForward" />ナビゲーション履歴にエントリがない場合に呼び出されます。</exception>
      </Docs>
    </Member>
    <Member MemberName="JournalOwnership">
      <MemberSignature Language="C#" Value="public System.Windows.Navigation.JournalOwnership JournalOwnership { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Navigation.JournalOwnership JournalOwnership" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Frame.JournalOwnership" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.JournalOwnership</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定するかどうか、<see cref="T:System.Windows.Controls.Frame" />で独自のナビゲーション履歴を管理または親ナビゲーターにナビゲーション履歴の管理を生成する (<see cref="T:System.Windows.Navigation.NavigationWindow" />、 <see cref="T:System.Windows.Controls.Frame" />)。</summary>
        <value>A<see cref="T:System.Windows.Navigation.JournalOwnership" />値を指定するかどうか<see cref="T:System.Windows.Controls.Frame" />独自の履歴を管理します。 既定値は <see cref="F:System.Windows.Navigation.JournalOwnership.Automatic" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 既定では、<xref:System.Windows.Controls.Frame>親ナビゲーション ホスト場合にのみに、独自のナビゲーション履歴を使用 (<xref:System.Windows.Navigation.NavigationWindow>、 <xref:System.Windows.Controls.Frame>) と独自のジャーナルを検出することはできません (場合など、<xref:System.Windows.Controls.Frame>がによってホストされているコンテンツでホストされている、 <xref:System.Windows.Window>)。 強制的に<xref:System.Windows.Controls.Frame>を独自のナビゲーション履歴を管理するには、次のように設定します。<xref:System.Windows.Controls.Frame.JournalOwnership%2A>に<xref:System.Windows.Navigation.JournalOwnership.OwnsJournal>です。  
  
<a name="dependencyPropertyInfo_FrameJournalOwnership"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Controls.Frame.JournalOwnershipProperty>|  
|メタデータ プロパティに設定します。`true`|なし|  
  
   
  
## Examples  
 次の例を示しています、<xref:System.Windows.Controls.Frame>独自ナビゲーション履歴を使用する構成されています。  
  
 [!code-xaml[FrameJournalOwnershipSnippetSample#SetJournalOwnershipProperty](~/samples/snippets/csharp/VS_Snippets_Wpf/FrameJournalOwnershipSnippetSample/CS/HomePage.xaml#setjournalownershipproperty)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JournalOwnershipProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty JournalOwnershipProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty JournalOwnershipProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Frame.JournalOwnershipProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Controls.Frame.JournalOwnership" /> 依存関係プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.Frame.JournalOwnership%2A> 依存関係プロパティの識別子。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadCompleted">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.LoadCompletedEventHandler LoadCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.LoadCompletedEventHandler LoadCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.Frame.LoadCompleted" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.LoadCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>移動先のコンテンツが読み込まれ、解析されて、レンダリングが開始されると発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 「<xref:System.Windows.Navigation.NavigationService.LoadCompleted?displayProperty=nameWithType>」を参照してください。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public bool Navigate (object content);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Navigate(object content) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Frame.Navigate(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="content"><see cref="T:System.Object" />移動先のコンテンツを格納しています。</param>
        <summary>オブジェクトによって格納されているコンテンツを非同期に移動します。</summary>
        <returns>
          <see langword="true" />ナビゲーションがキャンセルされない場合それ以外の場合、<see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 「<xref:System.Windows.Navigation.NavigationService.Navigate%28System.Object%29?displayProperty=nameWithType>」を参照してください。  
  
   
  
## Examples  
 次の例では、オブジェクトに格納されているコンテンツに移動する方法を示します。  
  
 [!code-csharp[HOWTONavigationSnippets#NavigateToPageObjCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/HOWTONavigationSnippets/CSharp/MainWindow.xaml.cs#navigatetopageobjcode)]
 [!code-vb[HOWTONavigationSnippets#NavigateToPageObjCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/HOWTONavigationSnippets/visualbasic/mainwindow.xaml.vb#navigatetopageobjcode)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public bool Navigate (Uri source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Navigate(class System.Uri source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Frame.Navigate(System.Uri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="source">A<see cref="T:System.Uri" />オブジェクトを初期化して、[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]目的のコンテンツ。</param>
        <summary>指定されているコンテンツを非同期に移動、[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]です。</summary>
        <returns>
          <see langword="true" />ナビゲーションがキャンセルされない場合それ以外の場合、<see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 「<xref:System.Windows.Navigation.NavigationService.Navigate%28System.Uri%29?displayProperty=nameWithType>」を参照してください。  
  
> [!NOTE]
>  [!INCLUDE[TLA#tla_uri#initcap#plural](~/includes/tlasharptla-urisharpinitcapsharpplural-md.md)]相対パスまたは絶対のいずれかを指定できます。 詳細については、「[WPF におけるパック URI](~/docs/framework/wpf/app-development/pack-uris-in-wpf.md)」を参照してください。  
  
   
  
## Examples  
 次の例を使用する方法を示しています、<xref:System.Windows.Controls.Frame.Navigate%2A>に移動する方法、[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]です。  
  
 [!code-csharp[HOWTONavigationSnippets#NavigateToPageNavCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/HOWTONavigationSnippets/CSharp/MainWindow.xaml.cs#navigatetopagenavcode)]
 [!code-vb[HOWTONavigationSnippets#NavigateToPageNavCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/HOWTONavigationSnippets/visualbasic/mainwindow.xaml.vb#navigatetopagenavcode)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public bool Navigate (object content, object extraData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Navigate(object content, object extraData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Frame.Navigate(System.Object,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="System.Object" />
        <Parameter Name="extraData" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="content"><see cref="T:System.Object" />移動先のコンテンツを格納しています。</param>
        <param name="extraData">A<see cref="T:System.Object" />ナビゲーション中に処理するために使用するデータを格納しています。</param>
        <summary>コンテンツは、オブジェクトが含まれ、ナビゲーション中に処理を使用するデータを格納するオブジェクトを渡しますへ非同期的に移動します。</summary>
        <returns>
          <see langword="true" />ナビゲーションがキャンセルされない場合それ以外の場合、<see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 「<xref:System.Windows.Navigation.NavigationService.Navigate%28System.Object%2CSystem.Object%29?displayProperty=nameWithType>」を参照してください。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public bool Navigate (Uri source, object extraData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Navigate(class System.Uri source, object extraData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Frame.Navigate(System.Uri,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Uri" />
        <Parameter Name="extraData" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="source">A<see cref="T:System.Uri" />オブジェクトを初期化して、[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]目的のコンテンツ。</param>
        <param name="extraData">A<see cref="T:System.Object" />ナビゲーション中に処理するために使用するデータを格納しています。</param>
        <summary>あるソース コンテンツを非同期に移動、 [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]、し、ナビゲーション中に処理するために使用するデータを格納しているオブジェクトを渡します。</summary>
        <returns>
          <see langword="true" />ナビゲーションがキャンセルされない場合それ以外の場合、<see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 「<xref:System.Windows.Navigation.NavigationService.Navigate%28System.Uri%2CSystem.Object%29?displayProperty=nameWithType>」を参照してください。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Navigated">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.NavigatedEventHandler Navigated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.NavigatedEventHandler Navigated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.Frame.Navigated" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.NavigatedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>移動先のコンテンツが見つかるとから利用できるときに発生、<see cref="P:System.Windows.Controls.ContentControl.Content" />プロパティ、可能性がありますが、完了していない読み込みがします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 「<xref:System.Windows.Navigation.NavigationService.Navigated?displayProperty=nameWithType>」を参照してください。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Navigating">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.NavigatingCancelEventHandler Navigating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.NavigatingCancelEventHandler Navigating" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.Frame.Navigating" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.NavigatingCancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>新しいナビゲーションが要求されたときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 「<xref:System.Windows.Navigation.NavigationService.Navigating?displayProperty=nameWithType>」を参照してください。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NavigationFailed">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.NavigationFailedEventHandler NavigationFailed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.NavigationFailedEventHandler NavigationFailed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.Frame.NavigationFailed" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.NavigationFailedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>要求されたコンテンツにナビゲートするときにエラーが発生したときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 「<xref:System.Windows.Navigation.NavigationService.NavigationFailed?displayProperty=nameWithType>」を参照してください。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NavigationProgress">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.NavigationProgressEventHandler NavigationProgress;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.NavigationProgressEventHandler NavigationProgress" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.Frame.NavigationProgress" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.NavigationProgressEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ナビゲーション進行状況の情報提供を目的として、ダウンロード中に定期的に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 「<xref:System.Windows.Navigation.NavigationService.NavigationProgress?displayProperty=nameWithType>」を参照してください。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NavigationService">
      <MemberSignature Language="C#" Value="public System.Windows.Navigation.NavigationService NavigationService { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Navigation.NavigationService NavigationService" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Frame.NavigationService" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.NavigationService</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得、<see cref="T:System.Windows.Navigation.NavigationService" />これによって使用される<see cref="T:System.Windows.Controls.Frame" />ナビゲーション サービスを提供します。</summary>
        <value>A<see cref="T:System.Windows.Controls.Frame" />を表すオブジェクト、<see cref="T:System.Windows.Navigation.NavigationService" />で使用される<see cref="T:System.Windows.Controls.Frame" />が利用可能な場合です。 それ以外の場合、<see langword="null" />が返されます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.Frame>使用して<xref:System.Windows.Navigation.NavigationService>ホストされているコンテンツのナビゲーションをサポートするためにします。 <xref:System.Windows.Controls.Frame.NavigationService%2A>コードをホストするのに便利ですが、<xref:System.Windows.Controls.Frame>への参照を取得する、<xref:System.Windows.Navigation.NavigationService>です。 によってホストされているコンテンツ、<xref:System.Windows.Controls.Frame>など<xref:System.Windows.Controls.Page>、使用する必要があります<xref:System.Windows.Navigation.NavigationService.GetNavigationService%2A>または<xref:System.Windows.Controls.Page.NavigationService%2A>への参照を取得する、<xref:System.Windows.Navigation.NavigationService>です。  
  
> [!NOTE]
>  <xref:System.Windows.Controls.Frame.NavigationService%2A>参照を返さない<xref:System.Windows.Controls.Frame.NavigationService%2A>呼び出すことと<xref:System.Windows.Navigation.NavigationService.GetNavigationService%2A>渡す<xref:System.Windows.Controls.Frame>はします。 前者を返します、<xref:System.Windows.Controls.Frame.NavigationService%2A>が所有する、<xref:System.Windows.Controls.Frame>後者を返します、<xref:System.Windows.Controls.Frame.NavigationService%2A>をコンテンツに移動するナビゲーション ホストに、<xref:System.Windows.Controls.Frame>がホストされています。 次のコードでは、相違点を示します。  
  
 [!code-csharp[NSGNSvsFNSSnippets#NSFrameDiffCODE1](~/samples/snippets/csharp/VS_Snippets_Wpf/NSGNSvsFNSSnippets/CSharp/Window1.xaml.cs#nsframediffcode1)]
 [!code-vb[NSGNSvsFNSSnippets#NSFrameDiffCODE1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NSGNSvsFNSSnippets/visualbasic/window1.xaml.vb#nsframediffcode1)]  
[!code-csharp[NSGNSvsFNSSnippets#NSFrameDiffCODE2](~/samples/snippets/csharp/VS_Snippets_Wpf/NSGNSvsFNSSnippets/CSharp/Window1.xaml.cs#nsframediffcode2)]
[!code-vb[NSGNSvsFNSSnippets#NSFrameDiffCODE2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NSGNSvsFNSSnippets/visualbasic/window1.xaml.vb#nsframediffcode2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NavigationStopped">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.NavigationStoppedEventHandler NavigationStopped;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.NavigationStoppedEventHandler NavigationStopped" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.Frame.NavigationStopped" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.NavigationStoppedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>発生したときに、<see cref="M:System.Windows.Controls.Frame.StopLoading" />メソッドを呼び出して、または現在のナビゲーション中に新しいナビゲーションが要求された場合。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 「<xref:System.Windows.Navigation.NavigationService.NavigationStopped?displayProperty=nameWithType>」を参照してください。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NavigationUIVisibility">
      <MemberSignature Language="C#" Value="public System.Windows.Navigation.NavigationUIVisibility NavigationUIVisibility { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Navigation.NavigationUIVisibility NavigationUIVisibility" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Frame.NavigationUIVisibility" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.NavigationUIVisibility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定するときに、<see cref="T:System.Windows.Controls.Frame" />のナビゲーションを表示できる[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]です。</summary>
        <value>A<see cref="T:System.Windows.Navigation.NavigationUIVisibility" />タイミングを指定する値、<see cref="T:System.Windows.Controls.Frame" />のナビゲーションを表示できる[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]です。 既定値は <see cref="F:System.Windows.Navigation.NavigationUIVisibility.Automatic" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 既定では、 <xref:System.Windows.Controls.Frame> 、ナビゲーションを示しています。[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]ナビゲーション履歴に最初のエントリが追加されたときに自動的にします。 ナビゲーション[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]後で表示されたまま、バックアップ、または適切に有効になる"進む"ナビゲーション ボタンや背面のエントリの数を反映してナビゲーション履歴に転送するには、無効になっています。  
  
 おくと、そのナビゲーション[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]は常に表示するには。  
  
1.  <xref:System.Windows.Navigation.NavigationUIVisibility> ～ <xref:System.Windows.Navigation.NavigationUIVisibility.Visible>  
  
2.  <xref:System.Windows.Controls.Frame.JournalOwnership%2A> ～ <xref:System.Windows.Navigation.JournalOwnership.OwnsJournal>  
  
 設定する<xref:System.Windows.Navigation.NavigationUIVisibility>に<xref:System.Windows.Navigation.NavigationUIVisibility.Hidden>ナビゲーションを非表示にする場合[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]です。 これがある場合、ときにナビゲーション[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]から表示するコンテンツを持つ意味がないため、 <xref:System.Windows.Controls.Frame>、または独自のナビゲーションを提供しているため[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]です。  
  
<a name="dependencyPropertyInfo_FrameJournalNavigationUIVisibility"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Controls.Frame.NavigationUIVisibilityProperty>|  
|メタデータ プロパティに設定します。`true`|なし|  
  
   
  
## Examples  
 次の例では、ナビゲーションのクロムを確認する方法、<xref:System.Windows.Controls.Frame>は常に表示するには<xref:System.Windows.Controls.Frame.NavigationUIVisibility%2A>に<xref:System.Windows.Navigation.NavigationUIVisibility.Visible>です。  
  
 [!code-csharp[FrameNavigationUIVisibilitySnippets#SetNavigationUIVisibility](~/samples/snippets/csharp/VS_Snippets_Wpf/FrameNavigationUIVisibilitySnippets/CSharp/Window1.xaml.cs#setnavigationuivisibility)]
 [!code-vb[FrameNavigationUIVisibilitySnippets#SetNavigationUIVisibility](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FrameNavigationUIVisibilitySnippets/visualbasic/window1.xaml.vb#setnavigationuivisibility)]
 [!code-xaml[FrameNavigationUIVisibilitySnippets#SetNavigationUIVisibility](~/samples/snippets/xaml/VS_Snippets_Wpf/FrameNavigationUIVisibilitySnippets/XAML/Window1.xaml#setnavigationuivisibility)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NavigationUIVisibilityProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty NavigationUIVisibilityProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty NavigationUIVisibilityProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Frame.NavigationUIVisibilityProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Controls.Frame.NavigationUIVisibility" /> 依存関係プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.Frame.NavigationUIVisibility%2A> 依存関係プロパティの識別子。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnApplyTemplate">
      <MemberSignature Language="C#" Value="public override void OnApplyTemplate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void OnApplyTemplate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Frame.OnApplyTemplate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ビジュアル ツリーのテンプレートの世代が作成されるときに呼び出されます。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnContentRendered">
      <MemberSignature Language="C#" Value="protected virtual void OnContentRendered (EventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnContentRendered(class System.EventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Frame.OnContentRendered(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="args">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary><see cref="E:System.Windows.Controls.Frame.ContentRendered" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.Frame.OnContentRendered%2A> は、<xref:System.Windows.Controls.Frame.ContentRendered> イベントを発生させます。  
  
 派生する型<xref:System.Windows.Controls.Frame>よりも優先<xref:System.Windows.Controls.Frame.OnContentRendered%2A>です。 オーバーライドされたメソッドを呼び出す必要があります<xref:System.Windows.Controls.Frame.OnContentRendered%2A>基本クラスの場合は<xref:System.Windows.Controls.Frame.ContentRendered>を発生させる必要があります。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Frame.OnCreateAutomationPeer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>作成して返します、<see cref="T:System.Windows.Automation.Peers.NavigationWindowAutomationPeer" />オブジェクトの<see cref="T:System.Windows.Controls.Frame" />します。</summary>
        <returns>A<see cref="T:System.Windows.Automation.Peers.NavigationWindowAutomationPeer" />オブジェクトの<see cref="T:System.Windows.Controls.Frame" />します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは<xref:System.Windows.ContentElement.OnCreateAutomationPeer%2A?displayProperty=nameWithType>します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public void Refresh ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Refresh() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Frame.Refresh" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>現在のコンテンツを再読み込みします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 「<xref:System.Windows.Navigation.NavigationService.Refresh%2A?displayProperty=nameWithType>」を参照してください。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveBackEntry">
      <MemberSignature Language="C#" Value="public System.Windows.Navigation.JournalEntry RemoveBackEntry ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Navigation.JournalEntry RemoveBackEntry() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Frame.RemoveBackEntry" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.JournalEntry</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>バックアップ履歴から最新の履歴エントリを削除します。</summary>
        <returns>最新<see cref="T:System.Windows.Navigation.JournalEntry" />"戻る"ナビゲーション履歴に 1 つを使用する必要がある場合。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 「<xref:System.Windows.Navigation.NavigationService.RemoveBackEntry%2A?displayProperty=nameWithType>」を参照してください。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SandboxExternalContent">
      <MemberSignature Language="C#" Value="public bool SandboxExternalContent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SandboxExternalContent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Frame.SandboxExternalContent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定するかどうか、<see cref="T:System.Windows.Controls.Frame" />分離外部[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]部分信頼セキュリティ サンド ボックス内のコンテンツの (、既定値は<see langword="Internet" />アクセス許可セット)。</summary>
        <value>
          <see langword="true" />コンテンツが、部分信頼セキュリティ サンド ボックス内で分離される場合それ以外の場合、<see langword="false" />です。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 外部コンテンツが[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]リソース ファイルまたはコンテンツ ファイルのいずれかとしてアプリケーションに含まれていないコンテンツ (を参照してください[WPF アプリケーションのリソース、コンテンツ、およびデータ ファイル](~/docs/framework/wpf/app-development/wpf-application-resource-content-and-data-files.md))。  
  
 ときに<xref:System.Windows.Controls.Frame.SandboxExternalContent%2A>は`true`、およびコンテンツのソース、<xref:System.Windows.Controls.Frame>外部[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]ファイル、コンテンツが既定値に限定されている、部分信頼のセキュリティのサンド ボックスに読み込まれる`Internet`権限セットです。 外部コンテンツが、後で別のプロセスに読み込まれます。 その結果、外部コンテンツの分離になりはリソース ディクショナリなど、アプリケーション スコープのリソースへのアクセスがありません (を参照してください<xref:System.Windows.ResourceDictionary>)。  
  
> [!NOTE]
>  <xref:System.Windows.Controls.Frame>外部コンテンツのみが含まれるときに、<xref:System.Windows.Controls.Frame.Source%2A>プロパティに設定されている、[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]外部の[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]ファイル。 <xref:System.Windows.Controls.Frame>使用して提供されるコンテンツ、<xref:System.Windows.Controls.ContentControl.Content%2A>プロパティは、内部コンテンツと見なされます、その後は、分離ではありません。  
  
<a name="dependencyPropertyInfo_FrameSandboxExternalContent"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Controls.Frame.SandboxExternalContent%2A>|  
|メタデータ プロパティに設定します。`true`|なし|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">
          <see cref="P:System.Windows.Controls.Frame.SandboxExternalContent" />アプリケーションが部分信頼で実行するときに設定されています。</exception>
      </Docs>
    </Member>
    <Member MemberName="SandboxExternalContentProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SandboxExternalContentProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SandboxExternalContentProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Frame.SandboxExternalContentProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Controls.Frame.SandboxExternalContent" /> 依存関係プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.Frame.SandboxExternalContent%2A> 依存関係プロパティの識別子。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeContent">
      <MemberSignature Language="C#" Value="public override bool ShouldSerializeContent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool ShouldSerializeContent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Frame.ShouldSerializeContent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>派生クラスのシリアル化の動作を決定する、<see cref="P:System.Windows.Controls.ContentControl.Content" />プロパティです。</summary>
        <returns>
          <see langword="true" />場合は、コンテンツをシリアル化する必要があります。それ以外の場合、<see langword="false" />です。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public Uri Source { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Source" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Frame.Source" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定、[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]の現在のコンテンツまたは[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]現在移動先の新しいコンテンツのです。</summary>
        <value>A<see cref="T:System.Uri" />を格納している、[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]の現在の内容またはコンテンツが現在移動先をします。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 「<xref:System.Windows.Navigation.NavigationService.Source%2A?displayProperty=nameWithType>」を参照してください。  
  
> [!NOTE]
>  [!INCLUDE[TLA#tla_uri#initcap#plural](~/includes/tlasharptla-urisharpinitcapsharpplural-md.md)]相対パスまたは絶対のいずれかを指定できます。 詳細については、「[WPF におけるパック URI](~/docs/framework/wpf/app-development/pack-uris-in-wpf.md)」を参照してください。  
  
<a name="dependencyPropertyInfo_FrameSource"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Controls.Frame.SourceProperty>|  
|メタデータ プロパティに設定します。`true`|<xref:System.Windows.FrameworkPropertyMetadata.Journal%2A>|  
  
   
  
## Examples  
 次の例に移動する方法を示しています、[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]を設定して、<xref:System.Windows.Controls.Frame.Source%2A>プロパティです。  
  
 [!code-csharp[HOWTONavigationSnippets#NavigateToPageSrcCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/HOWTONavigationSnippets/CSharp/MainWindow.xaml.cs#navigatetopagesrccode)]
 [!code-vb[HOWTONavigationSnippets#NavigateToPageSrcCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/HOWTONavigationSnippets/visualbasic/mainwindow.xaml.vb#navigatetopagesrccode)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SourceProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SourceProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Frame.SourceProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Controls.Frame.Source" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StopLoading">
      <MemberSignature Language="C#" Value="public void StopLoading ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StopLoading() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Frame.StopLoading" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>さらに、現在のナビゲーション要求のコンテンツのダウンロードを停止します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 「<xref:System.Windows.Navigation.NavigationService.StopLoading%2A?displayProperty=nameWithType>」を参照してください。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IUriContext.BaseUri">
      <MemberSignature Language="C#" Value="Uri System.Windows.Markup.IUriContext.BaseUri { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri System.Windows.Markup.IUriContext.BaseUri" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Frame.System#Windows#Markup#IUriContext#BaseUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このメンバーの詳細については、「<see cref="P:System.Windows.Markup.IUriContext.BaseUri" />」をご覧ください。</summary>
        <value>基本[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]現在のコンテキスト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Windows.Controls.Frame> のインスタンスが <xref:System.Windows.Markup.IUriContext> インターフェイスにキャストされる場合にのみ、使用できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
