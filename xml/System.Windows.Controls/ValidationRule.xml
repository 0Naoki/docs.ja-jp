<Type Name="ValidationRule" FullName="System.Windows.Controls.ValidationRule">
  <TypeSignature Language="C#" Value="public abstract class ValidationRule" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ValidationRule extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.ValidationRule" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>ユーザー入力の有効性を検査するためのカスタム ルールを作成する方法を提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用すると、[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]データ バインディング モデルに関連付けることができます<xref:System.Windows.Data.Binding.ValidationRules%2A>でバインド オブジェクトです。 カスタム規則を作成するには、このサブクラス クラスおよび実装を確認、<xref:System.Windows.Controls.ValidationRule.Validate%2A>メソッドです。 組み込みを使用して、必要に応じて、 <xref:System.Windows.Controls.ExceptionValidationRule>、ソースの更新中にスローされる例外をキャッチするか、 <xref:System.Windows.Controls.DataErrorValidationRule>、によって発生したエラーのチェック、<xref:System.ComponentModel.IDataErrorInfo>ソース オブジェクトの実装です。  
  
 バインディング エンジンは、それぞれチェック<xref:System.Windows.Controls.ValidationRule>たびに転送します。 これは、バインディング ターゲット プロパティの値、バインディング ソース プロパティに入力の値にバインディングに関連付けられました。  
  
 データの検証の詳細については、次を参照してください。[データ バインディングの概要](~/docs/framework/wpf/data/data-binding-overview.md)です。  
  
 ダイアログ ボックスでユーザー指定のデータを検証する方法については、次を参照してください。[ダイアログ ボックスの概要](~/docs/framework/wpf/app-development/dialog-boxes-overview.md)です。  
  
   
  
## Examples  
 次の例では、検証規則を実装する方法を示します。 数字以外の文字が含まれている場合、または下限と上限の外側では、入力値が無効です。 場合、返された値<xref:System.Windows.Controls.ValidationResult>が有効でない、<xref:System.Windows.Controls.ValidationResult.ErrorContent%2A>プロパティが適切なエラー メッセージに設定され、<xref:System.Windows.Controls.ValidationResult.IsValid%2A>プロパティに設定されている`false`です。  
  
 完了の例では、次を参照してください。[する方法: バインド検証を実装する](~/docs/framework/wpf/data/how-to-implement-binding-validation.md)です。  
  
 [!code-csharp[BindValidation#3](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/AgeRangeRule.cs#3)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ValidationRule ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ValidationRule.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.Controls.ValidationRule" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ValidationRule (System.Windows.Controls.ValidationStep validationStep, bool validatesOnTargetUpdated);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Controls.ValidationStep validationStep, bool validatesOnTargetUpdated) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ValidationRule.#ctor(System.Windows.Controls.ValidationStep,System.Boolean)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="validationStep" Type="System.Windows.Controls.ValidationStep" />
        <Parameter Name="validatesOnTargetUpdated" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="validationStep">検証規則を実行する場合を指定する列挙値の 1 つ。</param>
        <param name="validatesOnTargetUpdated">
          <see langword="true" />実行時に検証ルールのターゲット、 <see cref="T:System.Windows.Data.Binding" /> 、それ以外の更新された<see langword="false" />です。</param>
        <summary>新しいインスタンスを初期化、<see cref="T:System.Windows.Controls.ValidationRule" />指定した検証手順と、ターゲットが更新されたときに検証規則を実行するかどうかを示す値を持つクラス。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public abstract System.Windows.Controls.ValidationResult Validate (object value, System.Globalization.CultureInfo cultureInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Controls.ValidationResult Validate(object value, class System.Globalization.CultureInfo cultureInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ValidationRule.Validate(System.Object,System.Globalization.CultureInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ValidationResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="cultureInfo" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="value">チェックするバインド ターゲットからの値。</param>
        <param name="cultureInfo">このルールで使用するカルチャ。</param>
        <summary>派生クラスによってオーバーライドされた場合、値に対して検証チェックを実行します。</summary>
        <returns><see cref="T:System.Windows.Controls.ValidationResult" /> オブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 サブクラスを作成するときに、このメソッドを実装する必要があります、<xref:System.Windows.Controls.ValidationRule>カスタム検証規則を作成するためにクラスです。  
  
 各データ バインディング エンジンは、バインディング ソース プロパティ (基になるデータ) に (ユーザー入力) からバインディング ターゲット プロパティから値を転送、ことを確認するときかどうか、<xref:System.Windows.Data.Binding.ValidationRules%2A>のバインディングを定義します。 場合<xref:System.Windows.Data.Binding.ValidationRules%2A>エンジンの呼び出し、バインディングの定義、<xref:System.Windows.Controls.ValidationRule.Validate%2A>メソッドをそれぞれ<xref:System.Windows.Controls.ValidationRule>エラーを検出うちの 1 つになるまで、またはそれらのすべてに合格するまでです。  
  
 データの検証の詳細については、次を参照してください。[データ バインディングの概要](~/docs/framework/wpf/data/data-binding-overview.md)です。  
  
   
  
## Examples  
 次の例では、検証規則を実装する方法を示します。 次の例では、入力値が無効数字以外の文字が含まれている場合、または下限と上限の外部である場合。 入力値が有効でない場合、<xref:System.Windows.Controls.ValidationResult.ErrorContent%2A>プロパティが適切なエラー メッセージに設定され、<xref:System.Windows.Controls.ValidationResult.IsValid%2A>プロパティに設定されている`false`です。  
  
 完了の例では、次を参照してください。[する方法: バインド検証を実装する](~/docs/framework/wpf/data/how-to-implement-binding-validation.md)です。  
  
 [!code-csharp[BindValidation#3](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/AgeRangeRule.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Controls.ValidationResult Validate (object value, System.Globalization.CultureInfo cultureInfo, System.Windows.Data.BindingExpressionBase owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Controls.ValidationResult Validate(object value, class System.Globalization.CultureInfo cultureInfo, class System.Windows.Data.BindingExpressionBase owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ValidationRule.Validate(System.Object,System.Globalization.CultureInfo,System.Windows.Data.BindingExpressionBase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ValidationResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="cultureInfo" Type="System.Globalization.CultureInfo" />
        <Parameter Name="owner" Type="System.Windows.Data.BindingExpressionBase" />
      </Parameters>
      <Docs>
        <param name="value">チェックするバインド ターゲットからの値。</param>
        <param name="cultureInfo">このルールで使用するカルチャ。</param>
        <param name="owner">検証規則を使用するバインディング式。</param>
        <summary>値に対して検証チェックを実行します。</summary>
        <returns><see cref="T:System.Windows.Controls.ValidationResult" /> オブジェクト。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Controls.ValidationResult Validate (object value, System.Globalization.CultureInfo cultureInfo, System.Windows.Data.BindingGroup owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Controls.ValidationResult Validate(object value, class System.Globalization.CultureInfo cultureInfo, class System.Windows.Data.BindingGroup owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ValidationRule.Validate(System.Object,System.Globalization.CultureInfo,System.Windows.Data.BindingGroup)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ValidationResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="cultureInfo" Type="System.Globalization.CultureInfo" />
        <Parameter Name="owner" Type="System.Windows.Data.BindingGroup" />
      </Parameters>
      <Docs>
        <param name="value">チェックするバインド ターゲットからの値。</param>
        <param name="cultureInfo">このルールで使用するカルチャ。</param>
        <param name="owner">検証規則を使用するバインディングのグループ。</param>
        <summary>値に対して検証チェックを実行します。</summary>
        <returns><see cref="T:System.Windows.Controls.ValidationResult" /> オブジェクト。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidatesOnTargetUpdated">
      <MemberSignature Language="C#" Value="public bool ValidatesOnTargetUpdated { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValidatesOnTargetUpdated" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ValidationRule.ValidatesOnTargetUpdated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定時に検証規則を実行するかどうかを示す値の対象、<see cref="T:System.Windows.Data.Binding" />が更新されます。</summary>
        <value>
          <see langword="true" />検証規則を実行するときに場合の対象、 <see cref="T:System.Windows.Data.Binding" /> 、それ以外の更新された<see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次の例をチェックするかどうか、<xref:System.Windows.Controls.TextBox>が空です。 <xref:System.Windows.Controls.ValidationRule>、`ValueIsNotNull`が<xref:System.Windows.Controls.ValidationRule.ValidatesOnTargetUpdated%2A>'éý' `true`、アプリケーションを起動するように、<xref:System.Windows.Controls.ValidationRule>実行され、メッセージを表示、<xref:System.Windows.Controls.TextBox>が空です。  
  
 [!code-xaml[BindingGroupSnippets#ValidatesOnTargetUpdated](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml#validatesontargetupdated)]  
  
 次の例は、<xref:System.Windows.Controls.ValidationRule>前の例と、イベント ハンドラー内で使用される、<xref:System.Windows.Controls.Validation.Error>イベント。  
  
 [!code-csharp[BindingGroupSnippets#ValueIsNotNull](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml.cs#valueisnotnull)]
 [!code-vb[BindingGroupSnippets#ValueIsNotNull](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window3.xaml.vb#valueisnotnull)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationStep">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.ValidationStep ValidationStep { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.ValidationStep ValidationStep" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ValidationRule.ValidationStep" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ValidationStep</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の検証規則を実行します。</summary>
        <value>列挙値の 1 つ。  既定値は、<see cref="F:System.Windows.Controls.ValidationStep.RawProposedValue" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次の例のセット、<xref:System.Windows.Controls.ValidationRule.ValidationStep%2A>に<xref:System.Windows.Controls.ValidationStep.ConvertedProposedValue>で、<xref:System.Windows.Controls.ValidationRule>と呼ばれる`ValidateDateAndPrice`できるように、これを実行すると、<xref:System.Windows.Controls.ValidationRule.Validate%2A>メソッドには、ソース プロパティの型の値にアクセスします。 ときに、ルール`PriceIsAPositiveNumber`と`FutureDateRule`各内の値を実行します。<xref:System.Windows.Controls.ValidationRule.Validate%2A>値がそれぞれの型に変換される前に、ルールが実行されるため、メソッドは文字列です。  
  
 [!code-xaml[BindingGroupSnippets#WindowLayout](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml#windowlayout)]  
  
 次の例は、 <xref:System.Windows.Controls.ValidationRule>`ValidateDateAndPrice`です。 `Validate`メソッドのオーバーライド、`Price`プロパティの型は<xref:System.Double>と`OfferExpires`プロパティの型は<xref:System.DateTime>文字列が、時間によってそれぞれの型に変換されたため、<xref:System.Windows.Controls.ValidationRule>を実行します。  
  
 [!code-csharp[BindingGroupSnippets#ValidateObject](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Data.cs#validateobject)]
 [!code-vb[BindingGroupSnippets#ValidateObject](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/data.vb#validateobject)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
