<Type Name="TreeView" FullName="System.Web.UI.WebControls.TreeView">
  <TypeSignature Language="C#" Value="public class TreeView : System.Web.UI.WebControls.HierarchicalDataBoundControl, System.Web.UI.ICallbackEventHandler, System.Web.UI.IPostBackDataHandler, System.Web.UI.IPostBackEventHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TreeView extends System.Web.UI.WebControls.HierarchicalDataBoundControl implements class System.Web.UI.ICallbackEventHandler, class System.Web.UI.IPostBackDataHandler, class System.Web.UI.IPostBackEventHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.TreeView" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.HierarchicalDataBoundControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.ICallbackEventHandler</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackDataHandler</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackEventHandler</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("SelectedNodeChanged")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.TreeViewDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ControlValueProperty("SelectedValue")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.SupportsEventValidation</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>目次などの階層データをツリー構造で表示します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このトピックの内容  
  
-   [はじめに](#introduction)  
  
-   [ノード](#nodes)  
  
-   [静的なデータ](#static_data)  
  
-   [データへのバインド](#binding_to_data)  
  
-   [動的なノード](#dynamic_node_population)  
  
-   [ユーザー インターフェイスのカスタマイズ](#customizing_the_user_interface)  
  
-   [イベント](#events)  
  
-   [スクロール](#scrolling)  
  
-   [ユーザー補助](#accessibility)  
  
-   [宣言型の構文](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>はじめに  
 <xref:System.Web.UI.WebControls.TreeView>コントロール ツリー構造のコンテンツまたはファイルのディレクトリのテーブルなどの階層データを表示するために使用し、次の機能をサポートしています。  
  
-   データ バインディングは、XML、表形式、またはリレーショナル データにバインドされるコントロールのノードです。  
  
-   サイトのナビゲーションとの統合により、<xref:System.Web.UI.WebControls.SiteMapDataSource>コントロール。  
  
-   プレーン テキストまたはハイパーリンクとして表示可能なノードのテキスト。  
  
-   プログラムによるアクセスを<xref:System.Web.UI.WebControls.TreeView>オブジェクト モデル ツリーを作成、ノードを作成に動的にプロパティを設定します。  
  
-   クライアント側のノードの読み込み (サポートされているブラウザー)。  
  
-   各ノードの横にあるチェック ボックスを表示する権限です。  
  
-   ユーザー定義のテーマ外観のカスタマイズでは、イメージ、およびスタイルします。  
  
    > [!NOTE]
    >  <xref:System.Web.UI.WebControls.TreeView>コントロール内で使用するものでは、<xref:System.Web.UI.UpdatePanel>制御される場合にのみ<xref:System.Web.UI.WebControls.TreeView.EnableClientScript%2A>に設定されている`true`です。 <xref:System.Web.UI.UpdatePanel>コントロールはポストバック時にページ全体が更新ではなく、ページの選択した領域の更新に使用されます。 詳細については、次を参照してください。 [UpdatePanel コントロールの概要](http://msdn.microsoft.com/library/29a2265d-9674-4c19-b70e-e5560ee9689a)と[部分ページ レンダリング概要](http://msdn.microsoft.com/library/5c12736d-d9e9-464a-9388-3fe0f9f49e49)です。  
  
<a name="nodes"></a>   
## <a name="nodes"></a>ノード  
 <xref:System.Web.UI.WebControls.TreeView>コントロールで構成されたノード。 ツリー内の各エントリし、呼ばれ、ノードによって表される、<xref:System.Web.UI.WebControls.TreeNode>オブジェクト。 ノードの種類の定義は次のとおりです。  
  
-   その他のノードを含むノードと呼びます、*親ノード*です。  
  
-   呼ばれる別のノードが含まれているノード、*子ノード*です。  
  
-   子を持たないノードと呼ばれる、*リーフ ノード*です。  
  
-   他のノードに含まれていないが、その他のすべてのノードの先祖ノードが、*ルート ノード*です。  
  
 ノードが親と子要素が、ルートの親の両方を指定でき、リーフ ノードは相互に排他的です。 ノードのいくつかの外観および動作プロパティは、ノードがルート、子、またはリーフ ノードかどうかによって決定されます。  
  
 一般的なツリー構造が 1 つだけのルート ノードがありますが、<xref:System.Web.UI.WebControls.TreeView>コントロールでは、ツリー構造に複数のルート ノードを追加することができます。 これは、製品カテゴリの一覧と同様に、単一のルート ノードを表示することがなく項目の一覧を表示する場合に便利です。  
  
 各ノードには、<xref:System.Web.UI.WebControls.TreeNode.Text%2A>プロパティおよび<xref:System.Web.UI.WebControls.TreeNode.Value%2A>プロパティです。 値、<xref:System.Web.UI.WebControls.TreeNode.Text%2A>でプロパティを表示、<xref:System.Web.UI.WebControls.TreeView>中、<xref:System.Web.UI.WebControls.TreeNode.Value%2A>プロパティは、ノードに関連付けられているポストバック イベントに渡されるデータなど、ノードに関するその他のデータの格納に使用します。  
  
 ノードが 2 つのモードのいずれかになります。 選択モードとナビゲーション モード。 既定では、ノードは選択モードです。 ノードをナビゲーション モードにする設定、<xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>ノードの空の文字列以外の値をプロパティ ("") です。 ノードを選択モードにする、<xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>ノードの空の文字列をプロパティ ("") です。  
  
> [!NOTE]
>  一部のインターネット ブラウザーのパフォーマンスに影響を与える制限がある、<xref:System.Web.UI.WebControls.TreeView>コントロール。 たとえば、Microsoft Internet Explorer 6.0 には、ポストバック 2067 文字の URL の文字数制限があります。 ノードの URL の文字数が数よりも大きい場合は、そのノードの展開は失敗し、例外はスローされません。  
  
<a name="static_data"></a>   
## <a name="static-data"></a>静的なデータ  
 最も単純なデータ モデル、<xref:System.Web.UI.WebControls.TreeView>コントロールは、静的データです。 宣言の構文を使用して静的なデータを表示するには、まずを開いたり閉じたり`<Nodes>`タグ、開始タグと終了タグの間、<xref:System.Web.UI.WebControls.TreeView>コントロール。 次に、ツリー構造を入れ子により作成`<asp:TreeNode>`開始タグと終了の間に要素`<Nodes>`タグ。 各`<asp:TreeNode>`要素は、ツリー内のノードを表すされにマップする<xref:System.Web.UI.WebControls.TreeNode>オブジェクト。 属性を設定して各ノードのプロパティを設定することができます、`<asp:TreeNode>`要素。 子ノードを作成するには、追加入れ子`<asp:TreeNode>`開始タグと終了の間に要素`<asp:TreeNode>`親ノードのタグ。  
  
<a name="binding_to_data"></a>   
## <a name="binding-to-data"></a>データへのバインド  
 <xref:System.Web.UI.WebControls.TreeView>データにコントロールをバインドすることもできます。 2 つのメソッドのいずれかを使用して、バインドすることができます、<xref:System.Web.UI.WebControls.TreeView>適切なデータ ソースの種類を制御します。  
  
-   <xref:System.Web.UI.WebControls.TreeView>コントロールを実装する任意のデータ ソース コントロールを使用できます、<xref:System.Web.UI.IHierarchicalDataSource>インターフェイスなど、<xref:System.Web.UI.WebControls.XmlDataSource>コントロールまたは<xref:System.Web.UI.WebControls.SiteMapDataSource>コントロール。 データ ソース コントロールにバインドするには、設定、<xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A>のプロパティ、<xref:System.Web.UI.WebControls.TreeView>コントロールを<xref:System.Web.UI.Control.ID%2A>データ ソース コントロールの値。 <xref:System.Web.UI.WebControls.TreeView>コントロールを自動的に指定されたデータ ソース コントロールにバインドします。 これは、データにバインドする推奨される方法です。  
  
-   <xref:System.Web.UI.WebControls.TreeView>にコントロールをバインドすることも、<xref:System.Xml.XmlDocument>オブジェクトまたは<xref:System.Data.DataSet>リレーションを持つオブジェクト。 これらのデータ ソースのいずれかにバインドするには、設定、<xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A>のプロパティ、<xref:System.Web.UI.WebControls.TreeView>データ ソースを制御し、呼び出す、<xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A>メソッドです。  
  
 によって返される値を表示、ノードの各データ項目が (XML 要素などいくつかの属性を持つ)、複数のプロパティを含むデータ ソースにバインドするとき、`ToString`既定では、データ項目のメソッドです。 XML 要素の場合、ノードには、ツリーの基になる構造を示していますが、それ以外が非常に便利ですが、要素名が表示されます。 ノードを特定のデータ項目のプロパティにバインドするにはツリー ノードのバインディングを使用して指定することによって、<xref:System.Web.UI.WebControls.TreeView.DataBindings%2A>コレクション。 <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A>コレクションを含む`TreeNodeBinding`データ項目とそのバインド先のノード間のリレーションシップを定義するオブジェクト。 ノードに表示するには、バインドとデータ項目のプロパティの条件を指定できます。 ツリー ノードのバインディングの詳細については、次を参照してください。<xref:System.Web.UI.WebControls.TreeNodeBinding>です。  
  
> [!IMPORTANT]
>  悪意のあるユーザーはコールバック要求を作成したり、データのノードを取得、<xref:System.Web.UI.WebControls.TreeView>ページの開発者が表示されていないコントロール。 したがって、データ ソースによってデータのセキュリティを実装する必要があります。 使用しないで、<xref:System.Web.UI.WebControls.TreeView.MaxDataBindDepth%2A>プロパティ データを非表示にします。  
  
<a name="dynamic_node_population"></a>   
## <a name="dynamic-node-population"></a>動的なノード  
 場合によっては、データ ソースが返すデータが多すぎるため、または表示するデータは、実行時に取得する情報に依存するために、ツリー構造を静的に定義することは実用的ではありません。 このため、<xref:System.Web.UI.WebControls.TreeView>コントロールは、動的なノードをサポートしています。 ときに、<xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A>ノードのプロパティに設定`true`、そのノードが実行時に、ノードが展開されている設定を取得します。 ノードを動的に設定するには、ノードを設定するロジックを含むイベント処理メソッドを定義する必要があります、<xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate>イベント。  
  
 コールバック スクリプトをサポートするブラウザーでは、クライアント側のも利用できます。 (これを含む Internet Explorer 5.5 とそれ以降、およびその他のブラウザー)クライアント側のノードのカタログ作成ができるように、<xref:System.Web.UI.WebControls.TreeView>ユーザー、サーバーへのラウンド トリップを必要とせず、ノードを展開すると、クライアント スクリプトを使用してノードを設定するとします。 クライアント側のノードのカタログ作成の詳細については、次を参照してください。<xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A>です。  
  
<a name="customizing_the_user_interface"></a>   
## <a name="customizing-the-user-interface"></a>ユーザー インターフェイスのカスタマイズ  
 外観をカスタマイズする方法はたくさんあります、<xref:System.Web.UI.WebControls.TreeView>コントロール。 最初に、それぞれのノード型 (フォント サイズや色) とは異なるスタイルを指定できます。  
  
 コントロールの外観をカスタマイズするカスケード スタイル シート (CSS) を使用する場合は、インライン スタイルまたは個別の CSS ファイルの両方ではなくはどちらかを使用します。 インライン スタイルと個別の CSS ファイルの両方を使用すると、予期しない結果を可能性があります。 コントロールのスタイル シートを使用する方法については、次を参照してください。 [Web サーバー コントロールと CSS スタイル](http://msdn.microsoft.com/library/782c2db6-fc9b-4243-8df9-a8ffe2f4cc42)です。  
  
 次の表では、使用可能なノードのスタイルを一覧表示します。  
  
|ノードのスタイル プロパティ|説明|  
|-------------------------|-----------------|  
|<xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>|マウス ポインターを置いたときにノードのスタイルの設定。|  
|<xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>|リーフ ノードのスタイルの設定。|  
|<xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>|ノードの既定のスタイル設定します。|  
|<xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>|親ノードのスタイルの設定。|  
|<xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>|ルート ノードのスタイルの設定。|  
|<xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>|選択したノードのスタイルの設定。|  
  
 使用して、ツリー内で特定の深さを取得します。 ノードのスタイルを制御することも、<xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A>コレクション。 コレクション内の最初のスタイルは、ツリーで、1 つのレベルのノードのスタイルに対応します。 コレクション内の 2 番目のスタイルは、ツリーで 2 番目のレベルのノードのスタイルに対応しています。 これは最もよく使用される内容: スタイルのナビゲーション メニューのテーブルを生成する特定の深さのノードが子ノードがあるかどうかに関係なく、同じ外観を持つ必要があります。  
  
> [!NOTE]
>  特定の深さレベルを使用して、スタイルが定義されているかどうか、<xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A>コレクション、スタイルには、ルート、親、またはその深さのノードのリーフ ノードのスタイルの設定よりも優先されます。  
  
 コントロールの外観を変更する別の方法に表示されるイメージをカスタマイズするには、<xref:System.Web.UI.WebControls.TreeView>コントロール。 次の表に示すようにプロパティを設定して、独自のカスタム コントロールのさまざまな部分のイメージのセットを指定できます。  
  
|イメージのプロパティ|説明|  
|--------------------|-----------------|  
|<xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A>|折りたたみ可能なノード指標を表示するイメージ URL です。 このイメージは、通常、マイナス記号 (-) です。|  
|<xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>|展開可能なノード指標を表示するイメージ URL です。 このイメージは、通常、プラス記号 (+) です。|  
|<xref:System.Web.UI.WebControls.TreeView.LineImagesFolder%2A>|親ノードを子ノードに接続するために使用する線のイメージを含むフォルダーの URL です。 <xref:System.Web.UI.WebControls.TreeView.ShowLines%2A>プロパティを設定する必要がありますも`true`影響を与えるには、このプロパティにします。|  
|<xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>|展開なノードのインジケーターを表示するイメージ URL です。|  
  
> [!NOTE]
>  すべてのイメージ プロパティをカスタマイズする必要はありません。 イメージのプロパティが明示的に設定されていない場合は、組み込みの既定のイメージが使用されます。  
  
 <xref:System.Web.UI.WebControls.TreeView>コントロールでは、ノードの横にあるチェック ボックスを表示することもできます。 ときに、<xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A>プロパティが以外の値に設定`TreeNodeTypes.None`、指定したノードの種類の横にあるチェック ボックスが表示されます。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A>プロパティは、ビットごとの組み合わせに設定することができます、<xref:System.Web.UI.WebControls.TreeNodeTypes>列挙メンバー値。  
  
 ページがサーバーにポストされるたびに、<xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A>コレクションは、選択したノードが設定されます。 チェック ボックスが表示されるときに行うこともできます、<xref:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged>イベントをサーバーにポスト間で、チェック ボックスをオンの状態が変更されるたびに、カスタム ルーチンを実行します。  
  
<a name="events"></a>   
## <a name="events"></a>イベント  
 <xref:System.Web.UI.WebControls.TreeView>コントロールには、ユーザーがプログラムをいくつかのイベントが用意されています。 これにより、イベントが発生するたびに、カスタムのルーチンを実行することができます。 次の表でサポートされているイベントの一覧、<xref:System.Web.UI.WebControls.TreeView>コントロール。  
  
|イベント|説明|  
|-----------|-----------------|  
|<xref:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged>|発生時のチェック ボックス、<xref:System.Web.UI.WebControls.TreeView>コントロールは、サーバーへのポスト間の状態を変更します。|  
|<xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged>|ノードが選択したときに発生、<xref:System.Web.UI.WebControls.TreeView>コントロール。|  
|<xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded>|内のノードが展開されたときに発生、<xref:System.Web.UI.WebControls.TreeView>コントロール。|  
|<xref:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed>|ノードが折りたたまれているときに発生、<xref:System.Web.UI.WebControls.TreeView>コントロール。|  
|<xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate>|ノードをときに発生、<xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A>プロパティに設定`true`で展開されて、<xref:System.Web.UI.WebControls.TreeView>コントロール。|  
|<xref:System.Web.UI.WebControls.TreeView.TreeNodeDataBound>|データ項目が内のノードにバインドされているときに発生、<xref:System.Web.UI.WebControls.TreeView>コントロール。|  
  
<a name="scrolling"></a>   
## <a name="scrolling"></a>スクロール  
 <xref:System.Web.UI.WebControls.TreeView>コントロールに組み込まれているスクロールがありません。 スクロールを追加するには、配置、<xref:System.Web.UI.WebControls.TreeView>内の制御、<xref:System.Web.UI.WebControls.Panel>を制御しにスクロール バーを追加、<xref:System.Web.UI.WebControls.Panel>コントロール。 詳細については、次を参照してください。[パネル Web サーバー コントロールの概要](http://msdn.microsoft.com/library/127b61ed-87f2-46f4-92a3-785166e7245b)です。  
  
<a name="accessibility"></a>   
## <a name="accessibility"></a>ユーザー補助  
 このコントロールの既定で表示されるマークアップは、ユーザー補助の標準に準拠していません可能性があります。 このコントロールのユーザー補助のサポートに関する詳細については、「 [ASP.NET コントロールやアクセシビリティ](http://msdn.microsoft.com/library/847a37e3-ce20-41da-b0d3-7dfb0fdae9a0)です。  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>宣言型の構文  
  
```  
<asp:TreeView  
    AccessKey="string"  
    AutoGenerateDataBindings="True|False"  
    BackColor="color name|#dddddd"  
    BorderColor="color name|#dddddd"  
    BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|  
        Inset|Outset"  
    BorderWidth="size"  
    CollapseImageToolTip="string"  
    CollapseImageUrl="uri"  
    CssClass="string"  
    DataSource="string"  
    DataSourceID="string"  
    EnableClientScript="True|False"  
    Enabled="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    ExpandDepth="string|FullyExpand|0|1|2|3|4|5|6|7|8|9|10|11|12|13|  
        14|15|16|17|18|19|20|21|22|23|24|25|26|27|28|29|30"  
    ExpandImageToolTip="string"  
    ExpandImageUrl="uri"  
    Font-Bold="True|False"  
    Font-Italic="True|False"  
    Font-Names="string"  
    Font-Overline="True|False"  
    Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|Medium|  
       Large|X-Large|XX-Large"  
    Font-Strikeout="True|False"  
    Font-Underline="True|False"  
    ForeColor="color name|#dddddd"  
    Height="size"  
    ID="string"  
    ImageSet="Custom|XPFileExplorer|Msdn|WindowsHelp|Simple|Simple2|  
        BulletedList|BulletedList2|BulletedList3|BulletedList4|  
        Arrows|News|Contacts|Inbox|Events|Faq"  
    LineImagesFolder="string"  
    MaxDataBindDepth="integer"  
    NodeIndent="integer"  
    NodeWrap="True|False"  
    NoExpandImageUrl="uri"  
    OnDataBinding="DataBinding event handler"  
    OnDataBound="DataBound event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnSelectedNodeChanged="SelectedNodeChanged event handler"  
    OnTreeNodeCheckChanged="TreeNodeCheckChanged event handler"  
    OnTreeNodeCollapsed="TreeNodeCollapsed event handler"  
    OnTreeNodeDataBound="TreeNodeDataBound event handler"  
    OnTreeNodeExpanded="TreeNodeExpanded event handler"  
    OnTreeNodePopulate="TreeNodePopulate event handler"  
    OnUnload="Unload event handler"  
    PathSeparator="string"  
    PopulateNodesFromClient="True|False"  
    runat="server"  
    ShowCheckBoxes="None|Root|Parent|Leaf|All"  
    ShowExpandCollapse="True|False"  
    ShowLines="True|False"  
    SkinID="string"  
    SkipLinkText="string"  
    Style="string"  
    TabIndex="integer"  
    Target="string"  
    ToolTip="string"  
    Visible="True|False"  
    Width="size"  
>  
        <DataBindings>  
                <asp:TreeNodeBinding  
                    DataMember="string"  
                    Depth="integer"  
                    FormatString="string"  
                    ImageToolTip="string"  
                    ImageToolTipField="string"  
                    ImageUrl="uri"  
                    ImageUrlField="string"  
                    NavigateUrl="uri"  
                    NavigateUrlField="string"  
                    PopulateOnDemand="True|False"  
                    SelectAction="Select|Expand|SelectExpand|None"  
                    ShowCheckBox="string"  
                    Target="string"  
                    TargetField="string"  
                    Text="string"  
                    TextField="string"  
                    ToolTip="string"  
                    ToolTipField="string"  
                    Value="string"  
                    ValueField="string"  
                />  
        </DataBindings>  
        <HoverNodeStyle />  
        <LeafNodeStyle  
            BackColor="color name|#dddddd"  
            BorderColor="color name|#dddddd"  
            BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|  
                Groove|Ridge|Inset|Outset"  
            BorderWidth="size"  
            ChildNodesPadding="size"  
            CssClass="string"  
            Font-Bold="True|False"  
            Font-Italic="True|False"  
            Font-Names="string"  
            Font-Overline="True|False"  
            Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|  
                Medium|Large|X-Large|XX-Large"  
            Font-Strikeout="True|False"  
            Font-Underline="True|False"  
            ForeColor="color name|#dddddd"  
            Height="size"  
            HorizontalPadding="size"  
            ImageUrl="uri"  
            NodeSpacing="size"  
            OnDisposed="Disposed event handler"  
            VerticalPadding="size"  
            Width="size"  
        />  
        <LevelStyles>  
                <asp:TreeNodeStyle  
                    BackColor="color name|#dddddd"  
                    BorderColor="color name|#dddddd"  
                    BorderStyle="NotSet|None|Dotted|Dashed|Solid|  
                        Double|Groove|Ridge|Inset|Outset"  
                    BorderWidth="size"  
                    ChildNodesPadding="size"  
                    CssClass="string"  
                    Font-Bold="True|False"  
                    Font-Italic="True|False"  
                    Font-Names="string"  
                    Font-Overline="True|False"  
                    Font-Size="string|Smaller|Larger|XX-Small|  
                        X-Small|Small|Medium|Large|X-Large|XX-Large"  
                    Font-Strikeout="True|False"  
                    Font-Underline="True|False"  
                    ForeColor="color name|#dddddd"  
                    Height="size"  
                    HorizontalPadding="size"  
                    ImageUrl="uri"  
                    NodeSpacing="size"  
                    OnDisposed="Disposed event handler"  
                    VerticalPadding="size"  
                    Width="size"  
                />  
        </LevelStyles>  
        <Nodes>  
                <asp:TreeNode  
                    Checked="True|False"  
                    Expanded="string"  
                    ImageToolTip="string"  
                    ImageUrl="uri"  
                    NavigateUrl="uri"  
                    PopulateOnDemand="True|False"  
                    SelectAction="Select|Expand|SelectExpand|None"  
                    Selected="True|False"  
                    ShowCheckBox="string"  
                    Target="string"  
                    Text="string"  
                    ToolTip="string"  
                    Value="string"  
>  
                </asp:TreeNode>  
        </Nodes>  
        <NodeStyle  
            BackColor="color name|#dddddd"  
            BorderColor="color name|#dddddd"  
            BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|  
                Groove|Ridge|Inset|Outset"  
            BorderWidth="size"  
            ChildNodesPadding="size"  
            CssClass="string"  
            Font-Bold="True|False"  
            Font-Italic="True|False"  
            Font-Names="string"  
            Font-Overline="True|False"  
            Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|  
                Medium|Large|X-Large|XX-Large"  
            Font-Strikeout="True|False"  
            Font-Underline="True|False"  
            ForeColor="color name|#dddddd"  
            Height="size"  
            HorizontalPadding="size"  
            ImageUrl="uri"  
            NodeSpacing="size"  
            OnDisposed="Disposed event handler"  
            VerticalPadding="size"  
            Width="size"  
        />  
        <ParentNodeStyle  
            BackColor="color name|#dddddd"  
            BorderColor="color name|#dddddd"  
            BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|  
                Groove|Ridge|Inset|Outset"  
            BorderWidth="size"  
            ChildNodesPadding="size"  
            CssClass="string"  
            Font-Bold="True|False"  
            Font-Italic="True|False"  
            Font-Names="string"  
            Font-Overline="True|False"  
            Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|  
                Medium|Large|X-Large|XX-Large"  
            Font-Strikeout="True|False"  
            Font-Underline="True|False"  
            ForeColor="color name|#dddddd"  
            Height="size"  
            HorizontalPadding="size"  
            ImageUrl="uri"  
            NodeSpacing="size"  
            OnDisposed="Disposed event handler"  
            VerticalPadding="size"  
            Width="size"  
        />  
        <RootNodeStyle  
            BackColor="color name|#dddddd"  
            BorderColor="color name|#dddddd"  
            BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|  
                Groove|Ridge|Inset|Outset"  
            BorderWidth="size"  
            ChildNodesPadding="size"  
            CssClass="string"  
            Font-Bold="True|False"  
            Font-Italic="True|False"  
            Font-Names="string"  
            Font-Overline="True|False"  
            Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|  
                Medium|Large|X-Large|XX-Large"  
            Font-Strikeout="True|False"  
            Font-Underline="True|False"  
            ForeColor="color name|#dddddd"  
            Height="size"  
            HorizontalPadding="size"  
            ImageUrl="uri"  
            NodeSpacing="size"  
            OnDisposed="Disposed event handler"  
            VerticalPadding="size"  
            Width="size"  
        />  
        <SelectedNodeStyle  
            BackColor="color name|#dddddd"  
            BorderColor="color name|#dddddd"  
            BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|  
                Groove|Ridge|Inset|Outset"  
            BorderWidth="size"  
            ChildNodesPadding="size"  
            CssClass="string"  
            Font-Bold="True|False"  
            Font-Italic="True|False"  
            Font-Names="string"  
            Font-Overline="True|False"  
            Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|  
                Medium|Large|X-Large|XX-Large"  
            Font-Strikeout="True|False"  
            Font-Underline="True|False"  
            ForeColor="color name|#dddddd"  
            Height="size"  
            HorizontalPadding="size"  
            ImageUrl="uri"  
            NodeSpacing="size"  
            OnDisposed="Disposed event handler"  
            VerticalPadding="size"  
            Width="size"  
        />  
</asp:TreeView>  
```  
  
   
  
## Examples  
 このセクションには、7 つのコード例が含まれています。  
  
-   最初のコード例では、2 つ目のコード例については、フレームを設定する方法を示します。  
  
-   2 番目のコード例は、宣言構文を使用して、静的データを表示する方法を示します、<xref:System.Web.UI.WebControls.TreeView>コントロール。  
  
-   3 番目のコード例では、バインド、 <xref:System.Web.UI.WebControls.TreeView> XML データ ソースを制御します。  
  
-   4 番目のコード例では、3 番目のコード例のサンプル XML データを提供します。  
  
-   5 番目のコード例を使用する方法を示します、<xref:System.Web.UI.WebControls.TreeView>にバインドすることによってサイト ナビゲーション コントロール、<xref:System.Web.UI.WebControls.SiteMapDataSource>コントロール。  
  
-   6 番目のコード例は、5 番目のコード例については、サンプルのサイト マップ データを提供します。  
  
-   7 番目のコード例に示します内のノードを設定する方法について、<xref:System.Web.UI.WebControls.TreeView>クライアントから管理します。  
  
 次のコード例では、次のコード例のフレームを設定する方法を示します。  
  
 [!code-aspx-csharp[TreeViewFrameSet#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewFrameSet/CS/framecs.aspx#1)]
 [!code-aspx-vb[TreeViewFrameSet#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewFrameSet/VB/framevb.aspx#1)]  
  
 次のコード例は、宣言構文を使用して、静的データを表示する方法を示します、<xref:System.Web.UI.WebControls.TreeView>コントロール。 この例を使用して前の例のフレーム セット内の目次を表示します。  
  
 [!code-aspx-csharp[TreeViewFrameExample#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewFrameExample/CS/treeviewframecs.aspx#1)]
 [!code-aspx-vb[TreeViewFrameExample#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewFrameExample/VB/treeviewframevb.aspx#1)]  
  
 次のコード例をバインドする方法を示しています、 <xref:System.Web.UI.WebControls.TreeView> XML データ ソースを制御します。 この例を正しく動作するには、Book.xml をという名前のファイルにこのコード例の後、サンプルの XML データをコピーする必要があります。  
  
 [!code-aspx-csharp[TreeViewXml#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewXml/CS/treeviewxmlcs.aspx#1)]
 [!code-aspx-vb[TreeViewXml#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewXml/VB/treeviewxmlvb.aspx#1)]  
  
 次のコード例では、前の例のサンプル XML データを提供します。  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1">  
        </Section>  
        <Section Heading="Section 2">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 次のコード例を使用する方法を示しています、<xref:System.Web.UI.WebControls.TreeView>にバインドすることによってサイト ナビゲーション コントロール、<xref:System.Web.UI.WebControls.SiteMapDataSource>コントロール。 この例を正しく動作するには、Web.sitemap をという名前のファイルにこのコード例の後、サンプル サイト マップ データをコピーする必要があります。  
  
 [!code-aspx-csharp[TreeViewAutoGenerateBindings#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewAutoGenerateBindings/CS/treeviewautogeneratebindingscs.aspx#1)]
 [!code-aspx-vb[TreeViewAutoGenerateBindings#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewAutoGenerateBindings/VB/treeviewautogeneratebindingsvb.aspx#1)]  
  
 次のコード例では、前のコード例のサンプル サイト マップ データを提供します。  
  
```  
<siteMap>  
    <siteMapNode title="Home" description="Home" url="default.aspx">  
        <siteMapNode title="Products" description="Products" url="Products.aspx">  
            <siteMapNode title="Computers" url="Computers.aspx"/>  
            <siteMapNode title="Accessories" url="Accessories.aspx"/>       
        </siteMapNode>  
    </siteMapNode>  
</siteMap>  
```  
  
 次のコード例でノードを作成する方法を示します、<xref:System.Web.UI.WebControls.TreeView>クライアントから管理します。 クライアント側のノードのカタログ作成を有効にすると、ノードは、サーバーへのポストバックをすることがなく、クライアント上に動的に設定します。  
  
 [!code-aspx-csharp[TreeViewPopulateNodesFromClient#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewPopulateNodesFromClient/CS/treeviewpopulatenodesfromclientcs.aspx#1)]
 [!code-aspx-vb[TreeViewPopulateNodesFromClient#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewPopulateNodesFromClient/VB/treeviewpopulatenodesfromclientvb.aspx#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TreeView ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.TreeView" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.TreeView.%23ctor%2A>作成しの新しいインスタンスを初期化するコンス トラクター、<xref:System.Web.UI.WebControls.TreeView>クラスです。 追加する、<xref:System.Web.UI.WebControls.TreeView>ページに動的にコントロールを新規作成<xref:System.Web.UI.WebControls.TreeView>オブジェクト、そのプロパティを設定し、追加するに、<xref:System.Web.UI.Control.Controls%2A?displayProperty=nameWithType>コンテナーのコレクションを制御するように、<xref:System.Web.UI.WebControls.PlaceHolder>コントロール。  
  
   
  
## Examples  
 このセクションには、2 つのコード例が含まれています。 最初のコード例を使用する方法を示しています、<xref:System.Web.UI.WebControls.TreeView.%23ctor%2A>コンス トラクターを追加する、<xref:System.Web.UI.WebControls.TreeView>ページに動的に制御します。 2 番目のコード例では、最初のコード例のサンプル XML データを提供します。  
  
 次のコード例を使用する方法を示しています、<xref:System.Web.UI.WebControls.TreeView.%23ctor%2A>コンス トラクターを追加する、<xref:System.Web.UI.WebControls.TreeView>ページに動的に制御します。 この例を正しく動作するには、Book.xml をという名前のファイルにこのコード例の後のサンプル XML データをコピーする必要があります。  
  
 [!code-aspx-csharp[TreeViewCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewCtor/CS/treeviewctorcs.aspx#1)]
 [!code-aspx-vb[TreeViewCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewCtor/VB/treeviewctorvb.aspx#1)]  
  
 次のコード例では、前の例のサンプル XML データを提供します。  
  
```  
<Book Title="Book Title">  
  <Chapter Heading="Chapter 1">  
    <Section Heading="Section 1">  
    </Section>  
    <Section Heading="Section 2">  
    </Section>  
  </Chapter>  
  <Chapter Heading="Chapter 2">  
    <Section Heading="Section 1">  
    </Section>  
  </Chapter>  
</Book>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAttributesToRender">
      <MemberSignature Language="C#" Value="protected override void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddAttributesToRender(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">クライアントに HTML コンテンツを表示する出力ストリームを表す <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>HTML 属性およびスタイルをレンダリングする必要がある追加を指定した<see cref="T:System.Web.UI.HtmlTextWriter" />コントロール。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView.AddAttributesToRender%2A>メソッドは、主にコントロールの開発者によって使用されます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoGenerateDataBindings">
      <MemberSignature Language="C#" Value="public bool AutoGenerateDataBindings { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoGenerateDataBindings" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.AutoGenerateDataBindings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定を示す値かどうか、<see cref="T:System.Web.UI.WebControls.TreeView" />コントロールは、ツリー ノードのバインディングを自動的に生成されます。</summary>
        <value>
          <see langword="true" /><see cref="T:System.Web.UI.WebControls.TreeView" />コントロール ツリー ノードのバインディングを自動的に生成する以外の場合、<see langword="false" />です。 既定値は、<see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ツリー ノードのバインディングは、データ項目とそのバインド先のノード間のリレーションシップを定義します。 各データ項目が (XML 要素などいくつかの属性を持つ)、複数のプロパティを含むデータ ソースにバインドするとき、<xref:System.Web.UI.WebControls.TreeView>コントロールをバインドするプロパティをデータ項目を知る必要がある<xref:System.Web.UI.WebControls.TreeNode>プロパティです。 場合、<xref:System.Web.UI.WebControls.TreeView.AutoGenerateDataBindings%2A>プロパティに設定されている`true`、<xref:System.Web.UI.WebControls.TreeView>コントロールは、設定ツリー ノードのバインディングを既定値を自動的に生成、<xref:System.Web.UI.WebControls.TreeNode.Text%2A>のプロパティ、<xref:System.Web.UI.WebControls.TreeNode>によって返される値へのバインドに関連付けられているオブジェクト、`ToString`データ項目のメソッドです。  
  
> [!NOTE]
>  自動的に生成されたツリー ノードのバインディングは追加されていない、<xref:System.Web.UI.WebControls.TreeView.DataBindings%2A>コレクション。  
  
 XML 要素によって返される値の場合、`ToString`メソッドは、要素名を XML ファイルの基になる構造を示していますが、それ以外が非常に便利です。 便利なツリーを作成するには、設定することで、独自のツリー ノードのバインディングを定義する必要があります、<xref:System.Web.UI.WebControls.TreeView.DataBindings%2A>コレクション。  
  
> [!NOTE]
>  定義した場合、 <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A> 、コレクション、<xref:System.Web.UI.WebControls.TreeView>コントロールが自動的に生成されたツリー ノードのバインディングではなくそれらの値を使用します。  
  
 このプロパティの値は、ビュー ステートに格納されます。  
  
   
  
## Examples  
 このセクションには、2 つのコード例が含まれています。 最初のコード例を設定して自動ツリー ノードのバインドの生成を無効にする方法を示しています、<xref:System.Web.UI.WebControls.TreeView.AutoGenerateDataBindings%2A>プロパティを`false`です。 2 番目のコード例では、最初のコード例のサンプル サイト マップ データを提供します。  
  
 次のコード例を設定して自動ツリー ノードのバインドの生成を無効にする方法を示しています、<xref:System.Web.UI.WebControls.TreeView.AutoGenerateDataBindings%2A>プロパティを`false`です。 A<xref:System.Web.UI.WebControls.TreeView.DataBindings%2A>データ項目の間のリレーションシップを確立するためにコレクションを定義し、<xref:System.Web.UI.WebControls.SiteMapDataSource>コントロールとのノード、<xref:System.Web.UI.WebControls.TreeView>コントロール。 この例を正しく動作するには、Web.sitemap をという名前のファイルにこのコード例の後、サンプル サイト マップ データをコピーする必要があります。  
  
 [!code-aspx-csharp[TreeViewAutoGenerateBindings#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewAutoGenerateBindings/CS/treeviewautogeneratebindingscs.aspx#1)]
 [!code-aspx-vb[TreeViewAutoGenerateBindings#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewAutoGenerateBindings/VB/treeviewautogeneratebindingsvb.aspx#1)]  
  
 次のコード例では、前の例のサンプル サイト マップ データを提供します。  
  
```  
<siteMap>  
    <siteMapNode title="Home" description="Home" url="default.aspx">  
        <siteMapNode title="Products" description="Products" url="Products.aspx">  
            <siteMapNode title="Computers" url="Computers.aspx"/>  
            <siteMapNode title="Accessories" url="Accessories.aspx"/>       
        </siteMapNode>  
    </siteMapNode>  
</siteMap>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckedNodes">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeCollection CheckedNodes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNodeCollection CheckedNodes" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.CheckedNodes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コレクションを取得<see cref="T:System.Web.UI.WebControls.TreeNode" />でノードを表すオブジェクト、<see cref="T:System.Web.UI.WebControls.TreeView" />選択チェック ボックスを表示するコントロール。</summary>
        <value>A<see cref="T:System.Web.UI.WebControls.TreeNodeCollection" />内のノードを格納している、<see cref="T:System.Web.UI.WebControls.TreeView" />選択チェック ボックスを表示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 チェック ボックスを表示するときに、<xref:System.Web.UI.WebControls.TreeView>コントロール (を設定して、<xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A>プロパティ以外の値を`TreeNodeType.None`) を使用して、<xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A>プロパティを決定するノードが選択されているチェック ボックスを表示します。 このコレクションは、通常をツリーで選択されているチェック ボックスを持つすべてのノードを反復処理に使用されます。  
  
 <xref:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged>イベントが発生したときのチェック ボックス、<xref:System.Web.UI.WebControls.TreeView>コントロールは、サーバーへのポスト間の状態を変更します。 これにより、このイベントが発生するたびに、データベースまたは、表示されているコンテンツの更新など、カスタムのルーチンを実行するイベント処理メソッドを提供できます。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A>コレクションがツリー構造の深さ優先検査で値が設定: 次の親ノードが格納されます前に、各親ノードがその子ノードまで処理ができます。  
  
   
  
## Examples  
 次のコード例を使用する方法を示しています、<xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A>のどのノードを特定のプロパティ選択されているチェック ボックスがあります、<xref:System.Web.UI.WebControls.TreeView>コントロール。  
  
 [!code-aspx-csharp[TreeViewShowCheckBoxes#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewShowCheckBoxes/CS/treeviewshowcheckboxescs.aspx#1)]
 [!code-aspx-vb[TreeViewShowCheckBoxes#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewShowCheckBoxes/VB/treeviewshowcheckboxesvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CollapseAll">
      <MemberSignature Language="C#" Value="public void CollapseAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CollapseAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.CollapseAll" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ツリー内の各ノードを閉じます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView.CollapseAll%2A>メソッドは、ツリー内の各ノードを終了する便利な手段を提供します。  
  
   
  
## Examples  
 次のコード例を使用する方法を示しています、<xref:System.Web.UI.WebControls.TreeView.CollapseAll%2A>メソッド内のすべてのノードを折りたたみます、<xref:System.Web.UI.WebControls.TreeView>同時に管理します。  
  
 [!code-aspx-csharp[TreeViewExpandAll#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewExpandAll/CS/treeviewexpandallcs.aspx#1)]
 [!code-aspx-vb[TreeViewExpandAll#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewExpandAll/VB/treeviewexpandallvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CollapseImageToolTip">
      <MemberSignature Language="C#" Value="public string CollapseImageToolTip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CollapseImageToolTip" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.CollapseImageToolTip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはノードの折りたたみ可能なインジケーターの表示されるイメージのツールヒントを設定します。</summary>
        <value>ノードの折りたたみ可能なインジケーターの表示されるイメージのツールヒント。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.TreeView.CollapseImageToolTip%2A>プロパティを折りたたみ可能なイメージのツール ヒントを指定します。 指定したテキストは、支援テクノロジ デバイスでコントロールを使いやすくするために使用できるイメージの説明を提供します。  
  
 このプロパティの値は、ビュー ステートに格納されます。  
  
 このプロパティの値を設定すると、デザイナーのツールを使用して、リソース ファイルに自動的に保存できます。 詳細については、次を参照してください。<xref:System.ComponentModel.LocalizableAttribute>と[グローバリゼーションとローカリゼーション](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)です。  
  
   
  
## Examples  
 次のコード例を使用する方法を示しています、<xref:System.Web.UI.WebControls.TreeView.CollapseImageToolTip%2A>プロパティ ノードの折りたたみ可能なインジケーターの表示されるイメージのツール ヒントを指定します。  
  
 [!code-aspx-csharp[TreeViewCustomImage#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewCustomImage/CS/treeviewcustomimagecs.aspx#1)]
 [!code-aspx-vb[TreeViewCustomImage#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewCustomImage/VB/treeviewcustomimagevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CollapseImageUrl">
      <MemberSignature Language="C#" Value="public string CollapseImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CollapseImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.CollapseImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはノードの折りたたみ可能なインジケーターのカスタム イメージの URL を設定します。</summary>
        <value>折りたたみ可能なノードに表示されるカスタム イメージの URL。 既定値は空の文字列 ("")、既定のマイナス記号 (-) のイメージが表示されます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A>プロパティを折りたたみ可能なノード指標のカスタム イメージを指定します。 このイメージは、折りたたみ可能なノードの横に表示され、マイナス記号 (-) は、通常します。  
  
 ときに、<xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A>プロパティに設定されている`true`、<xref:System.Web.UI.WebControls.TreeView>コントロールは、プラス記号 (+) またはマイナス記号 (-) を示すかどうか、ノードが展開可能な折りたたみ可能なまたは拡張不可能、それぞれのノードの横にあるプレース ホルダー イメージが表示されます。 最初の設定によってカスタム イメージを指定することができます、<xref:System.Web.UI.WebControls.TreeView.ImageSet%2A>プロパティを`TreeViewImageSet.Custom`、し、設定、 <xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>、 <xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>、および<xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A>プロパティをカスタム イメージの Url。 イメージが指定されていない場合、既定のイメージが使用されます。 ノードの展開のインジケーターを隠すには、設定、<xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A>プロパティを`false`です。  
  
> [!NOTE]
>  ノードが正常に整合していることを確認する、<xref:System.Web.UI.WebControls.TreeView>ことを確認して、カスタム イメージを使用する場合を制御して指定されているすべてのイメージ、 <xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>、 <xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>、および<xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A>プロパティが同じ次元を持ちます。  
  
 を折りたたみ可能なノードのインジケーターのカスタム イメージを使用する場合は、設定も考慮する必要があります、<xref:System.Web.UI.WebControls.TreeView.CollapseImageToolTip%2A>イメージのツールヒントを指定するプロパティです。  
  
 このプロパティの値は、ビュー ステートに格納されます。  
  
   
  
## Examples  
 次のコード例を使用する方法を示しています、<xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A>プロパティを折りたたみ可能なノード指標のカスタム イメージを指定します。 およびコントロールに表示するイメージを表示するコード例では、独自のイメージを指定する必要があります、<xref:System.Web.UI.WebControls.TreeView.ImageSet%2A>プロパティに設定する必要があります`TreeNodeImageSet.Custom`です。  
  
 [!code-aspx-csharp[TreeViewCustomImage#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewCustomImage/CS/treeviewcustomimagecs.aspx#1)]
 [!code-aspx-vb[TreeViewCustomImage#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewCustomImage/VB/treeviewcustomimagevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateControlCollection">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.ControlCollection CreateControlCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.ControlCollection CreateControlCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.CreateControlCollection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>子コントロールを格納するコレクションを作成します。</summary>
        <returns>常に <see cref="T:System.Web.UI.EmptyControlCollection" /> を返します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView>コントロールでは、子コントロールの埋め込みはサポートされません。 このメソッドを子コントロールの追加を防ぐためにオーバーライドされているし、常に返します、<xref:System.Web.UI.EmptyControlCollection?displayProperty=nameWithType>オブジェクト。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateNode">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.TreeNode CreateNode ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Web.UI.WebControls.TreeNode CreateNode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.CreateNode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.TreeNode" /> クラスの新しいインスタンスを返します。 <see cref="M:System.Web.UI.WebControls.TreeView.CreateNode" />ヘルパー メソッドです。</summary>
        <returns><see cref="T:System.Web.UI.WebControls.TreeNode" /> の新しいインスタンス。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView.CreateNode%2A>メソッドは、の新しいインスタンスを返すヘルパー メソッド、<xref:System.Web.UI.WebControls.TreeNode>クラスです。  
  
 <xref:System.Web.UI.WebControls.TreeView.CreateNode%2A>メソッドは、主にコントロールの開発者によって使用されます。 拡張する開発者の制御、<xref:System.Web.UI.WebControls.TreeView>クラスを拡張することによって、<xref:System.Web.UI.WebControls.TreeNode>クラスから派生したオブジェクトを取得するには、このメソッドをオーバーライドする必要があります、<xref:System.Web.UI.WebControls.TreeNode>です。 拡張する一般的な理由として、<xref:System.Web.UI.WebControls.TreeNode>クラスがオーバーライドするには、<xref:System.Web.UI.WebControls.TreeNode.RenderPreText%2A>と<xref:System.Web.UI.WebControls.TreeNode.RenderPostText%2A>メソッドです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataBind">
      <MemberSignature Language="C#" Value="public override sealed void DataBind ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void DataBind() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.DataBind" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>呼び出し、<see cref="M:System.Web.UI.WebControls.BaseDataBoundControl.DataBind" />基底クラスのメソッドです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 データ バインド コントロールをオーバーライドする必要があります、<xref:System.Web.UI.WebControls.TreeView.PerformDataBinding%2A>メソッドの代わりに、<xref:System.Web.UI.WebControls.TreeView.DataBind%2A>メソッドです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataBindings">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeBindingCollection DataBindings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNodeBindingCollection DataBindings" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.DataBindings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.TreeViewBindingsEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeBindingCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コレクションを取得<see cref="T:System.Web.UI.WebControls.TreeNodeBinding" />データ項目とそのバインド先のノード間のリレーションシップを定義するオブジェクト。</summary>
        <value>A<see cref="T:System.Web.UI.WebControls.TreeNodeBindingCollection" />データ項目とそのバインド先のノード間のリレーションシップを表すです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A>コレクションを含む<xref:System.Web.UI.WebControls.TreeNodeBinding>データ項目とそのバインド先のノード間のリレーションシップを定義するオブジェクト。 によって返される値を表示、ノードの各データ項目が (XML 要素などいくつかの属性を持つ)、複数のプロパティを含むデータ ソースにバインドするとき、`ToString`既定では、データ項目のメソッドです。 XML 要素の場合、ノードには、要素名、ツリーの基になる構造を示していますが、それ以外が非常に便利ですが表示されます。 ツリー ノードのバインディングを指定することによって、ノードを特定のデータ項目のプロパティにバインドできます。  
  
 データ項目と、ノード間のリレーションシップを定義するときに両方のプロパティにバインドするには、バインドと値の条件を指定する必要があります<xref:System.Web.UI.WebControls.TreeNode>オブジェクト。 基準は、データ項目ノードにバインドするタイミングを示します。 ノードの深さ、データ メンバー、またはその両方の条件を指定することができます。 ノードの深さは、バインドされるノードのレベルを指定します。 たとえば、ノードの深さは 0 を指定すると、レベル 0 のツリー構造のすべてのノードが、ツリー ノードのバインドを使用してバインドされます。 データ メンバーは、基になるデータ ソースのデータ項目の種類を指定しますが、データ ソースに応じて、異なる情報を表すことができます。 たとえば、XML 要素のデータ メンバーは、要素の名前を指定します。  
  
 複数<xref:System.Web.UI.WebControls.TreeNodeBinding>、互いに競合するオブジェクトが定義されて、<xref:System.Web.UI.WebControls.TreeView>制御の優先順位の順にツリー ノードのバインディングに適用されます。  
  
1.  <xref:System.Web.UI.WebControls.TreeNodeBinding>深さと、データ メンバーの両方を定義するオブジェクト。  
  
2.  <xref:System.Web.UI.WebControls.TreeNodeBinding>深さのみを定義するオブジェクト。  
  
3.  <xref:System.Web.UI.WebControls.TreeNodeBinding>データ メンバーのみを定義するオブジェクト。  
  
4.  <xref:System.Web.UI.WebControls.TreeNodeBinding>深さでも、データ メンバーを定義するオブジェクト。  
  
 同じ優先順位条件に一致する複数のバインディングを指定する場合は、コレクション内の最初のバインドが適用されます。  
  
 バインディングの基準が確立されるのプロパティはバインドし、<xref:System.Web.UI.WebControls.TreeNode>値にバインドできるオブジェクト。 属性またはデータ項目のフィールドにバインドするか、静的な値を表示します。 バインディングのプロパティの詳細については、<xref:System.Web.UI.WebControls.TreeNode>オブジェクト値を参照してください<xref:System.Web.UI.WebControls.TreeNodeBinding>です。  
  
 ただし、<xref:System.Web.UI.WebControls.TreeView.DataBindings%2A>コレクションがプログラムによって設定されると、宣言によって通常設定されています。 ツリー ノードのバインディングを指定するには、まずを開いたり閉じたり`<DataBindings>`タグ、開始タグと終了タグの間、<xref:System.Web.UI.WebControls.TreeView>コントロール。 次に、`<asp:TreeNodeBinding>`開始タグと終了の間に要素`<DataBindings>`を指定するバインドを行う各ツリー ノードのタグが必要です。  
  
 設定してデータ バインディングを作成するときに、<xref:System.Web.UI.WebControls.TreeView.AutoGenerateDataBindings%2A>のプロパティ、<xref:System.Web.UI.WebControls.TreeView>に制御を`true`、作成されるバインディングがある、<xref:System.Web.UI.WebControls.TreeNodeBinding.PopulateOnDemand%2A>プロパティに設定`true`です。 宣言によって作成されるデータ バインディングがある、<xref:System.Web.UI.WebControls.TreeNodeBinding.PopulateOnDemand%2A>プロパティに設定`false`です。 宣言の構文を使用するには、個々 のデータ バインディングの動作を制御することができます。  
  
   
  
## Examples  
 このセクションには、2 つのコード例が含まれています。 最初のコード例を使用する方法を示しています、<xref:System.Web.UI.WebControls.TreeView.DataBindings%2A>データ項目とそのバインド先のノード間のリレーションシップを定義するコレクション。 2 番目のコード例では、最初のコード例のサンプル XML データを提供します。  
  
 次のコード例を使用する方法を示しています、<xref:System.Web.UI.WebControls.TreeView.DataBindings%2A>データ項目とそのバインド先のノード間のリレーションシップを定義するコレクション。 この例を正しく動作するには、Book.xml をという名前のファイルにこのコード例の後、サンプルの XML データをコピーする必要があります。 この例でのみ指定、<xref:System.Web.UI.WebControls.TreeNodeBinding.DataMember%2A>バインディングのプロパティです。 指定することによってパフォーマンスを多少向上を追加できませんでした、<xref:System.Web.UI.WebControls.TreeNodeBinding.Depth%2A>プロパティです。  
  
 [!code-aspx-csharp[TreeViewXml#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewXml/CS/treeviewxmlcs.aspx#1)]
 [!code-aspx-vb[TreeViewXml#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewXml/VB/treeviewxmlvb.aspx#1)]  
  
 次のコード例では、前の例のサンプル XML データを提供します。  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1">  
        </Section>  
        <Section Heading="Section 2">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableClientScript">
      <MemberSignature Language="C#" Value="public bool EnableClientScript { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableClientScript" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.EnableClientScript" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定を示す値かどうか、<see cref="T:System.Web.UI.WebControls.TreeView" />コントロールは、展開と折りたたみのイベントを処理するクライアント側スクリプトを表示します。</summary>
        <value>
          <see langword="true" />互換性のあるブラウザーでクライアント側スクリプトを表示するにはそれ以外の場合、<see langword="false" />です。 既定値は、<see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.TreeView.EnableClientScript%2A>プロパティを指定するかどうか、<xref:System.Web.UI.WebControls.TreeView>コントロールが展開と折りたたみのイベントを処理する互換性のあるブラウザーでクライアント側スクリプトを表示します。 このプロパティに設定するときに`true`、互換性のあるブラウザーを展開して、クライアント上のノードを折りたたむコードを実行します。 クライアント側スクリプトを操作するツリー ノードのデータを事前に知る必要があります。 クライアント スクリプトを使用するように投稿サーバーにノードを展開したり折りたたんだりするたびにします。  
  
 場合、ノードをクライアントから設定できるツリー ノードのデータが事前にわかっていない、ときに、`PopulateNodesFromClient`プロパティに設定されても`true`します。 このシナリオでは、イベント処理メソッドを提供する必要がありますも、<xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate>ノードを作成するイベントです。 クライアント側のノードのカタログ作成の詳細については、次を参照してください。<xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A>です。  
  
> [!NOTE]
>  場合、<xref:System.Web.UI.WebControls.TreeView.EnableClientScript%2A>プロパティに設定されている`false`、<xref:System.Web.UI.WebControls.TreeView>ノードを展開したり折りたたんだりするたびに、サーバーへコントロールのポストバックします。  
  
 このプロパティの値は、ビュー ステートに格納されます。  
  
 テーマまたはスタイル シート テーマによっては、このプロパティを設定できません。 詳細については、次を参照してください。<xref:System.Web.UI.ThemeableAttribute>と[ASP.NET のテーマとスキン](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)です。  
  
   
  
## Examples  
 このセクションには、2 つのコード例が含まれています。 最初のコード例を使用する方法を示しています、<xref:System.Web.UI.WebControls.TreeView.EnableClientScript%2A>を展開し、互換性のあるブラウザーのノードを折りたたむに使用されるクライアント側スクリプトを表示するプロパティです。 2 番目のコード例では、最初のコード例のサンプル XML データを提供します。  
  
 次のコード例を使用する方法を示しています、<xref:System.Web.UI.WebControls.TreeView.EnableClientScript%2A>を展開し、互換性のあるブラウザーのノードを折りたたむに使用されるクライアント側スクリプトを表示するプロパティです。 展開して折りたたむノード、サーバーへの post が必要なことに注意してください。 ときに、<xref:System.Web.UI.WebControls.TreeView.EnableClientScript%2A>プロパティがに設定されている`false`です。 この例を正しく動作するには、Book.xml をという名前のファイルにこのコード例の後、サンプルの XML データをコピーする必要があります。  
  
 [!code-aspx-csharp[TreeViewEnableClientScript#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewEnableClientScript/CS/treeviewenableclientscriptcs.aspx#1)]
 [!code-aspx-vb[TreeViewEnableClientScript#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewEnableClientScript/VB/treeviewenableclientscriptvb.aspx#1)]  
  
 次のコード例では、前のコード例のサンプル XML データを提供します。  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1">  
        </Section>  
        <Section Heading="Section 2">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpandAll">
      <MemberSignature Language="C#" Value="public void ExpandAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ExpandAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.ExpandAll" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ツリー内のすべてのノードを開きます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView.ExpandAll%2A>メソッドを開くには、ツリー内のすべてのノードの便利な方法を提供します。  
  
   
  
## Examples  
 次のコード例を使用する方法を示しています、<xref:System.Web.UI.WebControls.TreeView.ExpandAll%2A>内のすべてのノードを展開する方法、<xref:System.Web.UI.WebControls.TreeView>同時に管理します。  
  
 [!code-aspx-csharp[TreeViewExpandAll#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewExpandAll/CS/treeviewexpandallcs.aspx#1)]
 [!code-aspx-vb[TreeViewExpandAll#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewExpandAll/VB/treeviewexpandallvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpandDepth">
      <MemberSignature Language="C#" Value="public int ExpandDepth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ExpandDepth" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.ExpandDepth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.TreeView/TreeViewExpandDepthConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定時に展開されるレベル数、<see cref="T:System.Web.UI.WebControls.TreeView" />コントロールが最初に表示されます。</summary>
        <value>ときに表示する深さ、<see cref="T:System.Web.UI.WebControls.TreeView" />が最初に表示されます。 既定では-1 で、すべてのノードが表示されます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.TreeView.ExpandDepth%2A>プロパティの表示を制御する、<xref:System.Web.UI.WebControls.TreeView>表示される最初の時間を制御します。 以降のポストバックでは、ノードは、現在展開された状態を保持します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpandImageToolTip">
      <MemberSignature Language="C#" Value="public string ExpandImageToolTip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ExpandImageToolTip" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.ExpandImageToolTip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または展開可能なノードのインジケーターの表示されるイメージのツールヒントを設定します。</summary>
        <value>展開可能なノード指標に表示されるイメージのツールヒント。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.TreeView.ExpandImageToolTip%2A>イメージのツールヒントを指定するプロパティです。 指定したテキストは、支援テクノロジ デバイスでコントロールを使いやすくするために使用できるイメージの説明を提供します。  
  
 このプロパティの値は、ビュー ステートに格納されます。  
  
 このプロパティの値を設定すると、デザイナーのツールを使用して、リソース ファイルに自動的に保存できます。 詳細については、次を参照してください。<xref:System.ComponentModel.LocalizableAttribute>と[グローバリゼーションとローカリゼーション](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)です。  
  
   
  
## Examples  
 次のコード例を使用する方法を示しています、<xref:System.Web.UI.WebControls.TreeView.ExpandImageToolTip%2A>プロパティ ノードが展開可能なインジケーターの表示されるイメージのツール ヒントを指定します。  
  
 [!code-aspx-csharp[TreeViewCustomImage#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewCustomImage/CS/treeviewcustomimagecs.aspx#1)]
 [!code-aspx-vb[TreeViewCustomImage#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewCustomImage/VB/treeviewcustomimagevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpandImageUrl">
      <MemberSignature Language="C#" Value="public string ExpandImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ExpandImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.ExpandImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または、カスタム イメージを展開可能なノードのインジケーターの URL を設定します。</summary>
        <value>拡張可能なノードに表示するカスタム イメージの URL。 既定値は空の文字列 ("")、既定値を表示する正符号 (+) のイメージです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>プロパティを展開可能なノード指標のカスタム イメージを指定します。 このイメージは、展開可能なノードの横に表示され、プラス記号 (+) は、通常します。  
  
 ときに、<xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A>プロパティに設定されている`true`、<xref:System.Web.UI.WebControls.TreeView>コントロールは、プラス記号 (+) またはマイナス記号 (-) を示すかどうか、ノードが展開可能な折りたたみ可能なまたは拡張不可能、それぞれのノードの横にあるプレース ホルダー イメージが表示されます。 最初の設定によってカスタム イメージを指定することができます、<xref:System.Web.UI.WebControls.TreeView.ImageSet%2A>プロパティを`TreeViewImageSet.Custom`、し、設定、 <xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>、 <xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>、および<xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A>プロパティをカスタム イメージの Url。 イメージが指定されていない場合、既定のイメージが使用されます。 ノードの展開のインジケーターを隠すには、設定、<xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A>プロパティを`false`です。  
  
> [!NOTE]
>  ノードが正常に整合していることを確認する、<xref:System.Web.UI.WebControls.TreeView>ことを確認して、カスタム イメージを使用する場合を制御して指定されているすべてのイメージ、 <xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>、 <xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>、および<xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A>プロパティが同じ次元を持ちます。  
  
 カスタム イメージを正しく表示するのを設定する必要があります<xref:System.Web.UI.WebControls.TreeView.ShowLines%2A>に`false`です。  
  
 を展開可能なノードのインジケーターのカスタム イメージを使用する場合は、設定も考慮する必要があります、<xref:System.Web.UI.WebControls.TreeView.ExpandImageToolTip%2A>イメージのツールヒントを指定するプロパティです。  
  
 このプロパティの値は、ビュー ステートに格納されます。  
  
   
  
## Examples  
 次のコード例を使用する方法を示しています、<xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>プロパティを展開可能なノード指標のカスタム イメージを指定します。 およびコントロールに表示するイメージを表示するコード例では、独自のイメージを指定する必要があります、<xref:System.Web.UI.WebControls.TreeView.ImageSet%2A>プロパティに設定する必要があります`TreeNodeImageSet.Custom`です。  
  
 [!code-aspx-csharp[TreeViewCustomImage#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewCustomImage/CS/treeviewcustomimagecs.aspx#1)]
 [!code-aspx-vb[TreeViewCustomImage#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewCustomImage/VB/treeviewcustomimagevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindNode">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNode FindNode (string valuePath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.WebControls.TreeNode FindNode(string valuePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.FindNode(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="valuePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="valuePath">ノードの値パス。</param>
        <summary>取得、<see cref="T:System.Web.UI.WebControls.TreeNode" />内のオブジェクト、<see cref="T:System.Web.UI.WebControls.TreeView" />指定した値パスにあるコントロールです。</summary>
        <returns><see cref="T:System.Web.UI.WebControls.TreeNode" />指定した値パスにします。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.TreeView.FindNode%2A>からノードを取得するメソッド、<xref:System.Web.UI.WebControls.TreeView>指定した値パスにあるコントロールです。 値パスには、ルート ノードから現在のノードへのパスを形成するノードの値のコンマ区切りの一覧が含まれています。 各ノードに値のパスを格納、<xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A>プロパティです。 <xref:System.Web.UI.WebControls.TreeView.PathSeparator%2A>プロパティは、ノードの値を区切るために使用する区切り文字を指定します。  
  
   
  
## Examples  
 次のコード例を使用する方法を示しています、<xref:System.Web.UI.WebControls.TreeView.FindNode%2A>からノードを取得する方法を<xref:System.Web.UI.WebControls.TreeView>コントロール。  
  
> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、次を参照してください。[スクリプト悪用概要](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)です。  
  
 [!code-aspx-csharp[TreeViewFindNode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewFindNode/CS/treeviewfindnodecs.aspx#1)]
 [!code-aspx-vb[TreeViewFindNode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewFindNode/VB/treeviewfindnodevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCallbackResult">
      <MemberSignature Language="C#" Value="protected virtual string GetCallbackResult ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetCallbackResult() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.GetCallbackResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>コントロールを対象とするコールバック イベントの結果を返します。</summary>
        <returns>コールバックの結果。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView>制御を実装、<xref:System.Web.UI.ICallbackEventHandler>使用してインターフェイス、<xref:System.Web.UI.WebControls.TreeView.RaisePostBackEvent%2A>データを取得して<xref:System.Web.UI.WebControls.TreeView.GetCallbackResult%2A>をコントロールに取得したデータを返すメソッド。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HoverNodeStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style HoverNodeStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style HoverNodeStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.HoverNodeStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>参照を取得、<see cref="T:System.Web.UI.WebControls.TreeNodeStyle" />上にマウス ポインターが配置されているときに、ノードの外観を設定できるようにするオブジェクト。</summary>
        <value>参照、<see cref="T:System.Web.UI.WebControls.TreeNodeStyle" />上にマウス ポインターが配置されている場合に、ノードのスタイルを表すです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>上にマウス ポインターが配置されているときに、ノードの外観を制御するプロパティです。 このプロパティは読み取り専用です。ただしのプロパティを設定することができます、<xref:System.Web.UI.WebControls.TreeNodeStyle>返されるオブジェクト。 フォームのプロパティを宣言して設定されることができます`Property-Subproperty`ここで、`Subproperty`のプロパティ、<xref:System.Web.UI.WebControls.TreeNodeStyle>オブジェクト (たとえば、 `HoverNodeStyle-ForeColor`)。 プロパティがフォームにプログラムで設定することもできます`Property.Subproperty`(たとえば、 `HoverNodeStyle.ForeColor`)。 この機能は、スクリプト対応のクライアントでのみサポートされます。  
  
> [!NOTE]
>  使用する、<xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>プロパティ、する必要があります、`<head>`を持つ要素を`runat="server"`属性。  
  
 通常、一般的な設定には、カスタムの背景色、前景の色、フォントのプロパティ、およびノードの間隔が含まれます。 スタイル プロパティは、次の順序で適用されます。  
  
1.  <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>。  
  
2.  <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>、 <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>、または<xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>、ノードの種類によって異なります。 場合、<xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A>コレクションが定義されているその他のノードのスタイル プロパティをオーバーライドするこの時点で適用されます場合、。  
  
3.  <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>。  
  
4.  <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>。  
  
> [!NOTE]
>  スタイルの設定、<xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>プロパティ内にある対応するノードのスタイル設定を上書きする、 <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>、 <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>、 <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>、 <xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>、または<xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>プロパティです。  
  
 <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>ノードのプロパティはレンダリングされません、<xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A>プロパティに設定`TreeNodeSelectAction.None`です。  
  
 異なり、<xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>と<xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>プロパティであるプロパティ<xref:System.Web.UI.WebControls.TreeNodeStyle>、オブジェクト、<xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>プロパティは、<xref:System.Web.UI.WebControls.Style>オブジェクト。  
  
   
  
## Examples  
 次のコード例を使用する方法を示しています、<xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>上にマウス ポインターが配置されているときに、ノードの外観を制御するプロパティです。 この例を実行するにする必要があります、`<head>`を持つ要素を`runat="server"`属性。  
  
 [!code-aspx-csharp[TreeViewHoverNodeStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewHoverNodeStyle/CS/treeviewhovernodestylecs.aspx#1)]
 [!code-aspx-vb[TreeViewHoverNodeStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewHoverNodeStyle/VB/treeviewhovernodestylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImageSet">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeViewImageSet ImageSet { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.TreeViewImageSet ImageSet" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.ImageSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeViewImageSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定に使用するイメージのグループ、<see cref="T:System.Web.UI.WebControls.TreeView" />コントロール。</summary>
        <value><see cref="T:System.Web.UI.WebControls.TreeViewImageSet" /> 値のいずれか。 既定値は、<see langword="TreeViewImageSet.Custom" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.TreeView.ImageSet%2A>プロパティを使用するイメージのグループを指定する、<xref:System.Web.UI.WebControls.TreeView>コントロール。 定義済みの標準の外観を制御または独自のカスタム セットを定義するイメージのセットを選択できますか。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.TreeView.ImageSet%2A>プロパティでは、ノードのスタイル設定には影響しません。 など、適切なスタイル プロパティの設定、<xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>プロパティ、カスタムの色と間隔を追加する場合。  
  
 次の表に、有効な値の<xref:System.Web.UI.WebControls.TreeView.ImageSet%2A>プロパティです。  
  
|イメージのセット|説明|  
|---------------|-----------------|  
|`TreeViewImageSet.Arrows`|矢印の画像を使用する定義済みのイメージ セット。|  
|`TreeViewImageSet.BulletedList`|ダイヤ型の行頭文字を使用する定義済みのイメージ セット。|  
|`TreeViewImageSet.BulletedList2`|行頭文字の正方形イメージを使用する定義済みのイメージ セット。|  
|`TreeViewImageSet.BulletedList3`|定義済み区分けされ、ひし形のセットの形の行頭文字です。|  
|`TreeViewImageSet.BulletedList4`|定義済みの代替区分けされ、ひし形のセットの形のレベルごとに異なるサイズの行頭文字です。|  
|`TreeViewImageSet.Contacts`|MSN Messenger の画像を使用する定義済みのイメージ セット。|  
|`TreeViewImageSet.Custom`|ユーザー定義のイメージを設定します。|  
|`TreeViewImageSet.Events`|イベント ログ スタイルのイメージを使用する定義済みのイメージ セット。|  
|`TreeViewImageSet.Faq`|よく寄せられる質問スタイルのイメージを使用する定義済みのイメージ セット。|  
|`TreeViewImageSet.Inbox`|電子メール スタイルのイメージを使用する定義済みのイメージ セット。|  
|`TreeViewImageSet.News`|ニュースグループ スタイルのイメージを使用する定義済みのイメージ セット。|  
|`TreeViewImageSet.Simple`|単純な図形を使用する定義済みのイメージ セットについて説明します。|  
|`TreeViewImageSet.Simple2`|単純な塗りつぶされた図形を使用する定義済みのイメージ セット。|  
|`TreeViewImageSet.Msdn`|MSDN イメージを使用する定義済みのイメージ セット。|  
|`TreeViewImageSet.WindowsHelp`|Microsoft Windows のヘルプのイメージを使用する定義済みのイメージ セット。|  
|`TreeViewImageSet.XPFileExplorer`|Microsoft Windows XP で使用できるイメージは Windows エクスプ ローラーを使用する定義済みのイメージ セット。|  
  
 イメージのカスタム セットを定義するときに、次の表に、プロパティの各イメージを指定する必要があります。 それ以外の場合、そのプロパティの既定のイメージが使用されます。  
  
|プロパティ|説明|  
|--------------|-----------------|  
|<xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A>|折りたたみ可能なノード指標のカスタム イメージの URL です。|  
|<xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>|展開可能なノード指標のカスタム イメージの URL です。|  
|<xref:System.Web.UI.WebControls.TreeView.LineImagesFolder%2A>|ノードを接続する線のカスタム イメージを含むフォルダーの URL です。|  
|<xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>|展開を可能なノード指標のカスタム イメージの URL です。|  
  
 このプロパティの値は、ビュー ステートに格納されます。  
  
   
  
## Examples  
 次のコード例を使用する方法を示しています、<xref:System.Web.UI.WebControls.TreeView.ImageSet%2A>内のイメージの Windows エクスプ ローラーのセットを表示するプロパティを<xref:System.Web.UI.WebControls.TreeView>コントロール。  
  
 [!code-aspx-csharp[TreeViewImageSet#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewImageSet/CS/treeviewimagesetcs.aspx#1)]
 [!code-aspx-vb[TreeViewImageSet#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewImageSet/VB/treeviewimagesetvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定したイメージ セットは、のいずれかではない、<see cref="T:System.Web.UI.WebControls.TreeViewImageSet" />値。</exception>
      </Docs>
    </Member>
    <Member MemberName="LeafNodeStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeStyle LeafNodeStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNodeStyle LeafNodeStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.LeafNodeStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>参照を取得、<see cref="T:System.Web.UI.WebControls.TreeNodeStyle" />リーフ ノードの外観を設定できるようにするオブジェクト。</summary>
        <value>参照、<see cref="T:System.Web.UI.WebControls.TreeNodeStyle" />内のリーフ ノードのスタイルを表す、<see cref="T:System.Web.UI.WebControls.TreeView" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>内のリーフ ノードの外観を制御するプロパティ、<xref:System.Web.UI.WebControls.TreeView>コントロール。 このプロパティは読み取り専用です。ただしのプロパティを設定することができます、<xref:System.Web.UI.WebControls.TreeNodeStyle>オブジェクトを返します。 フォームのプロパティを宣言して設定されることができます`Property-Subproperty`ここで、`Subproperty`のプロパティ、<xref:System.Web.UI.WebControls.TreeNodeStyle>オブジェクト (たとえば、 `LeafNodeStyle-ForeColor`)。 プロパティがフォームにプログラムで設定することもできます`Property.Subproperty`(たとえば、 `LeafNodeStyle.ForeColor`)。 通常、一般的な設定には、カスタムの背景色、前景の色、フォントのプロパティ、およびノードの間隔が含まれます。 スタイル プロパティは、次の優先順位で適用されます。  
  
1.  <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>。  
  
2.  <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>、 <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>、または<xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>、ノードの種類によって異なります。 場合、<xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A>コレクションが定義されているその他のノードのスタイル プロパティをオーバーライドするこの時点で適用されます場合、。  
  
3.  <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>。  
  
4.  <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>。  
  
 特定のレベルのノードが子ノードがあるかどうかに関係なく、同じ外観を持つ必要がありますコンテンツ スタイルのナビゲーション メニューのテーブルを生成する必要がある場合は、使用を検討する可能性があります、<xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A>プロパティが個々 のスタイル プロパティを設定する代わりにします。  
  
   
  
## Examples  
 次のコード例を使用する方法を示しています、<xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>内のリーフ ノードの外観を制御するプロパティ、<xref:System.Web.UI.WebControls.TreeView>コントロール。  
  
 [!code-aspx-csharp[TreeViewLeafNodeStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewLeafNodeStyle/CS/treeviewleafnodestylecs.aspx#1)]
 [!code-aspx-vb[TreeViewLeafNodeStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewLeafNodeStyle/VB/treeviewleafnodestylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LevelStyles">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeStyleCollection LevelStyles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNodeStyleCollection LevelStyles" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.LevelStyles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.TreeNodeStyleCollectionEditor,System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeStyleCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コレクションを取得<see cref="T:System.Web.UI.WebControls.Style" />ツリーの各レベルでノードのスタイルを表すオブジェクト。</summary>
        <value>A<see cref="T:System.Web.UI.WebControls.StyleCollection" />ツリーの各レベルでノードのスタイルを表すです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A>の代わりに個々 のスタイル プロパティのコレクション (など、<xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>プロパティ) をツリーの各レベルでのノードのスタイルを制御します。 コレクション内の最初のスタイルは、ツリーの最初のレベルでのノードのスタイルに対応します。 コレクション内の 2 番目のスタイルは、ツリーの 2 番目のレベルのノードのスタイルに対応します。 このプロパティはほとんどの場合、特定のレベルのノードが子ノードがあるかどうかに関係なく、同じ外観を持つ必要がありますコンテンツ スタイルのナビゲーション メニューのテーブルを生成する使用されます。  
  
 スタイル プロパティは、次の順序で適用されます。  
  
1.  <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>。  
  
2.  <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>、 <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>、または<xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>、ノードの種類によって異なります。 場合、<xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A>コレクションが定義されているその他のノードのスタイル プロパティをオーバーライドするこの時点で適用されます場合、。  
  
3.  <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>。  
  
4.  <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>  
  
   
  
## Examples  
 次のコード例を使用する方法を示しています、<xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A>ナビゲーション メニューを作成するプロパティです。 コントロールが常に完全に展開され、ノード展開インジケーターと非表示の画像。 また、<xref:System.Web.UI.WebControls.TreeNodeStyle.ChildNodesPadding%2A>ノード レベルの余白を制御するプロパティを使用します。  
  
 [!code-aspx-csharp[TreeViewLevelStyles#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewLevelStyles/CS/treeviewlevelstylescs.aspx#1)]
 [!code-aspx-vb[TreeViewLevelStyles#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewLevelStyles/VB/treeviewlevelstylesvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LineImagesFolder">
      <MemberSignature Language="C#" Value="public string LineImagesFolder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LineImagesFolder" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.LineImagesFolder" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または親ノードに子ノードを接続するために使用される線のイメージを格納するフォルダへのパスを設定します。</summary>
        <value>ノードを接続するために使用する線のイメージを含むフォルダーへのパス。 既定値は空の文字列 ("")、ことを示します、<see cref="P:System.Web.UI.WebControls.TreeView.LineImagesFolder" />プロパティが設定されていません。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView>コントロールで子ノードを親ノードに接続する線を表示できるときに、<xref:System.Web.UI.WebControls.TreeView.ShowLines%2A>プロパティに設定されている`true`です。 行が表示されたらを使用して、<xref:System.Web.UI.WebControls.TreeView.LineImagesFolder%2A>の線を使用する前に表示する画像のセットを含む Web にアクセスできるフォルダーを指定するプロパティです。 次の表に、イメージで使用される、<xref:System.Web.UI.WebControls.TreeView>コントロール。  
  
|イメージ|説明|  
|-----------|-----------------|  
|Dash.gif|ツリー構造の 1 つだけのルート ノードとルート ノードがある場合に、ルート ノードの横に表示される線のイメージは、リーフです。|  
|Dashminus.gif|マイナス記号 (-)、ルート ノードが展開されていることを示すためにツリー構造に 1 つだけのルート ノードが存在する場合、ルート ノードの横に表示されるイメージ。|  
|Dashplus.gif|ルート ノードが折りたたまれていることを示すためにツリー構造に 1 つだけのルート ノードが存在する場合にルート ノードの横に表示されるプラス記号 (+) イメージ。|  
|I.gif|隣接するノードに接続する線のイメージです。|  
|L.gif|線のイメージ横に表示される最後のノードは分岐で、リーフ ノードがある場合。|  
|Lminus.gif|ノードが展開されていることを示すために、分岐内の最後のノードの横に表示される線のイメージです。|  
|Lplus.gif|ノードが折りたたまれていることを示すために、分岐内の最後のノードの横に表示される線のイメージです。|  
|Minus.gif|マイナス記号 (-)、ノードが展開されていることを示すために複数のルート ノードを含むツリー構造内の最初のルート ノードの横に表示されるイメージ。 このイメージは、余分な行が含まれていないと、ルート ノードが折りたたまれた後にのみが表示されます。 ページが最初に読み込まれた Rminus.gif イメージが表示されます。|  
|Noexpand.gif|リーフ ノードの横に表示される空のスペーサー イメージ。 このイメージは、垂直方向に整列するテキストを使用します。|  
|Plus.gif|示すために複数のルート ノードのノードを含むツリー構造での最初のルート ノードの横に表示されるプラス記号 (+) イメージが折りたたまれています。 このイメージは、余分な行が含まれていないと、ルート ノードが展開された後がある場合にのみ表示されます。 ページが最初に読み込まれた Rplus.gif イメージが表示されます。|  
|R.gif|ノードがリーフ ノードであることを示す複数のルート ノードを含むツリー構造内の最初のルート ノードの横に表示される線のイメージです。|  
|Rminus.gif|マイナス記号 (-)、ノードが展開されていることを示すために複数のルート ノードを含むツリー構造内の最初のルート ノードの横に表示されるイメージ。 このイメージは、余分な行が含まれています、ページが最初に読み込まれた場合にのみが表示されます。 ルート後ノードが折りたたまれた後、「Minus.gif イメージが表示されます。|  
|Rplus.gif|示すために複数のルート ノードのノードを含むツリー構造での最初のルート ノードの横に表示されるプラス記号 (+) イメージが折りたたまれています。 このイメージは、余分な行が含まれています、ページが最初に読み込まれた場合にのみが表示されます。 ルートの後にノードが展開された後、Plus.gif イメージが表示されます。|  
|T.gif|ノードがリーフであることを示します (、t の交差部分に) ツリー構造の途中でノードの横に表示する線のイメージです。|  
|Tminus.gif|マイナス記号 (-)、ノードが展開されていることを示すために、ツリー構造 (t 交点) の途中でノードの横に表示されるイメージ。|  
|Tplus.gif|ノードが折りたたまれていることを示すために (、t の交差部分に) ツリー構造の途中でノードの横に表示されるプラス記号 (+) イメージ。|  
  
> [!NOTE]
>  場合、<xref:System.Web.UI.WebControls.TreeView.LineImagesFolder%2A>プロパティが設定されていない、<xref:System.Web.UI.WebControls.TreeView>コントロールが組み込まれており、既定のイメージ (20 × 20 ピクセル単位) を使用します。  
  
 Microsoft Visual Studio などのいくつかのビジュアル デザイナーでは、線のイメージを生成するためのツールを提供します。  
  
 実行時は、右から左へ表示用のカスタム イメージを反転できません。 左から右へと右から左への Web ページの両方をサポートするには、双方向のイメージ セットを作成する必要があります。  
  
 このプロパティの値は、ビュー ステートに格納されます。  
  
   
  
## Examples  
 次のコード例を使用する方法を示しています、<xref:System.Web.UI.WebControls.TreeView.LineImagesFolder%2A>プロパティを表示する線のイメージが含まれているフォルダーを指定する、<xref:System.Web.UI.WebControls.TreeView>コントロール。 この例を使用するのにには、線イメージのセットを作成するのにあらかじめ線デザイナー ツールを使用します。 サンプル アプリケーションのディレクトリ内である LineImages をという名前のフォルダーに配置します。  
  
 [!code-aspx-csharp[TreeViewLineImagesFolderUrl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewLineImagesFolderUrl/CS/treeviewlineimagesfolderurlcs.aspx#1)]
 [!code-aspx-vb[TreeViewLineImagesFolderUrl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewLineImagesFolderUrl/VB/treeviewlineimagesfolderurlvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadPostData">
      <MemberSignature Language="C#" Value="protected virtual bool LoadPostData (string postDataKey, System.Collections.Specialized.NameValueCollection postCollection);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LoadPostData(string postDataKey, class System.Collections.Specialized.NameValueCollection postCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="postDataKey" Type="System.String" />
        <Parameter Name="postCollection" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="postDataKey">コントロールのキー識別子。</param>
        <param name="postCollection">すべての着信名前値のコレクション。</param>
        <summary><see cref="T:System.Web.UI.WebControls.TreeView" /> コントロールのポストバック データを処理します。</summary>
        <returns>
          <see langword="true" />、場合、<see cref="T:System.Web.UI.WebControls.TreeView" />コントロールの状態の変更、ポストバック イベントの結果としてそれ以外の場合、<see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET ページ フレームワークを返すすべてのサーバー コントロールでは追跡`true`から、<xref:System.Web.UI.WebControls.TreeView.LoadPostData%2A>メソッドを呼び出すして呼び出します、<xref:System.Web.UI.WebControls.TreeView.RaisePostDataChangedEvent%2A>それらのコントロールのメソッドです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.LoadViewState(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="state">コントロールの保存されているビュー ステートの値を格納するオブジェクト。</param>
        <summary>以前に保存した <see cref="T:System.Web.UI.WebControls.TreeView" /> コントロールのビュー ステートを読み込みます。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxDataBindDepth">
      <MemberSignature Language="C#" Value="public int MaxDataBindDepth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxDataBindDepth" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.MaxDataBindDepth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定にバインドするツリー レベルの最大数、<see cref="T:System.Web.UI.WebControls.TreeView" />コントロール。</summary>
        <value>バインドするツリー レベルの最大数、<see cref="T:System.Web.UI.WebControls.TreeView" />コントロール。 既定値は、-1 で、データ ソース内のすべてのツリー レベルをコントロールにバインドします。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 バインドするときに、<xref:System.Web.UI.WebControls.TreeView>コントロールをデータ ソースを使用して、<xref:System.Web.UI.WebControls.TreeView.MaxDataBindDepth%2A>コントロールにバインドするツリー レベルの数を制限するプロパティです。 たとえば、このプロパティを設定`2`バインドしたルート ノードだけがすぐにルート ノードの下にあるノード、<xref:System.Web.UI.WebControls.TreeView>コントロール。 データ ソース内のすべての残りのノードは無視されます。  
  
> [!IMPORTANT]
>  悪意のあるユーザーはコールバック要求を作成したり、データのノードを取得、<xref:System.Web.UI.WebControls.TreeView>ページの開発者が表示されていないコントロール。 したがって、データ ソースによってデータのセキュリティを実装する必要があります。 使用しないで、<xref:System.Web.UI.WebControls.TreeView.MaxDataBindDepth%2A>プロパティ データを非表示にします。  
  
 このプロパティの値は、ビュー ステートに格納されます。  
  
   
  
## Examples  
 このセクションには、2 つのコード例が含まれています。 最初のコード例を使用する方法を示しています、<xref:System.Web.UI.WebControls.TreeView.MaxDataBindDepth%2A>にのみ、最初次の 2 つのノード レベル (深度 0 および 1) をバインドするプロパティ、<xref:System.Web.UI.WebControls.TreeView>コントロール。 2 番目のコード例では、最初のコード例のサンプル XML データを提供します。  
  
 次のコード例を使用する方法を示しています、<xref:System.Web.UI.WebControls.TreeView.MaxDataBindDepth%2A>にのみ、最初次の 2 つのノード レベル (深度 0 および 1) をバインドするプロパティ、<xref:System.Web.UI.WebControls.TreeView>コントロール。 データ ソース内のすべてのノード レベルは無視されます。 この例を正しく動作するには、Book.xml をという名前のファイルにこのコード例の後、サンプルの XML データをコピーする必要があります。  
  
 [!code-aspx-csharp[TreeViewMaxDataBindDepth#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewMaxDataBindDepth/CS/treeviewmaxdatabinddepthcs.aspx#1)]
 [!code-aspx-vb[TreeViewMaxDataBindDepth#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewMaxDataBindDepth/VB/treeviewmaxdatabinddepthvb.aspx#1)]  
  
 次のコード例では、前のコード例のサンプル XML データを提供します。  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1">  
        </Section>  
        <Section Heading="Section 2">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">選択した値より小さい<see langword="-1" />です。</exception>
      </Docs>
    </Member>
    <Member MemberName="NodeIndent">
      <MemberSignature Language="C#" Value="public int NodeIndent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NodeIndent" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.NodeIndent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(20)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定インデント幅 (ピクセル単位) で、子のノード、<see cref="T:System.Web.UI.WebControls.TreeView" />コントロール。</summary>
        <value>子ノードの左端とその親ノードの左端のピクセル単位での領域の量。 既定値は 20 です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.TreeView.NodeIndent%2A>の子ノードの左端とその親ノードの左端との間のスペースの量を制御するプロパティです。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.TreeView.NodeIndent%2A>プロパティはすべての子ノードで、影響、<xref:System.Web.UI.WebControls.TreeView>コントロール。 各ノードのインデント幅を個別に制御することはできません。  
  
 このプロパティの値は、ビュー ステートに格納されます。  
  
   
  
## Examples  
 次のコード例を使用する方法を示しています、<xref:System.Web.UI.WebControls.TreeView.NodeIndent%2A>子ノードのインデントを制御するプロパティです。  
  
 [!code-aspx-csharp[TreeViewNodeIndent#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewNodeIndent/CS/treeviewnodeindentcs.aspx#1)]
 [!code-aspx-vb[TreeViewNodeIndent#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewNodeIndent/VB/treeviewnodeindentvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Nodes">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeCollection Nodes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNodeCollection Nodes" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.Nodes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.TreeNodeCollectionEditor,System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コレクションを取得<see cref="T:System.Web.UI.WebControls.TreeNode" />のルート ノードを表すオブジェクト、<see cref="T:System.Web.UI.WebControls.TreeView" />コントロール。</summary>
        <value>A<see cref="T:System.Web.UI.WebControls.TreeNodeCollection" />のルート ノードを格納している、<see cref="T:System.Web.UI.WebControls.TreeView" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.TreeView.Nodes%2A>を取得するプロパティ、<xref:System.Web.UI.WebControls.TreeNodeCollection>ツリー内のすべてのルート ノードを含むオブジェクトです。 このコレクションは、すべてのルート ノードをすばやく反復処理するか、ツリー内の特定のルート ノードにアクセスするによく使用されます。  
  
> [!NOTE]
>  一般的なツリー構造になります。 1 つだけのルート ノードです。ただし、複数のルート ノードを追加することができます、<xref:System.Web.UI.WebControls.TreeView>コントロール。  
  
 <xref:System.Web.UI.WebControls.TreeView.Nodes%2A>プロパティは、ツリーのルート ノードをプログラムで管理にも使用できます。 追加、挿入、削除、および取得<xref:System.Web.UI.WebControls.TreeNode>コレクションからオブジェクト。 コレクションへの更新は自動的に反映されます、<xref:System.Web.UI.WebControls.TreeView>ラウンド トリップをサーバーに次のコントロールです。  
  
 ルート ノードの子ノードにアクセスするには、使用、<xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A>ノードのプロパティです。 使用して、<xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A>プロパティそれぞれ後続親レベルのノードのノードのレベルを下へ移動します。  
  
   
  
## Examples  
 次のコード例を使用する方法を示しています、<xref:System.Web.UI.WebControls.TreeView.Nodes%2A>プロパティをツリーを走査します。  
  
 [!code-aspx-csharp[TreeNodeCollectionCount#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCollectionCount/CS/treenodecollectioncountcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCollectionCount#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCollectionCount/VB/treenodecollectioncountvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NodeStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeStyle NodeStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNodeStyle NodeStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.NodeStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>参照を取得、<see cref="T:System.Web.UI.WebControls.TreeNodeStyle" />内のノードの既定の外観を設定できるようにするオブジェクト、<see cref="T:System.Web.UI.WebControls.TreeView" />コントロール。</summary>
        <value>参照、<see cref="T:System.Web.UI.WebControls.TreeNodeStyle" />を表すノードの既定のスタイル。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>プロパティ内のノードの既定の外観を制御する、<xref:System.Web.UI.WebControls.TreeView>コントロール。 このプロパティは読み取り専用です。ただしのプロパティを設定することができます、<xref:System.Web.UI.WebControls.TreeNodeStyle>オブジェクトを返します。 フォームのプロパティを宣言して設定されることができます`Property-Subproperty`ここで、`Subproperty`のプロパティ、<xref:System.Web.UI.WebControls.TreeNodeStyle>オブジェクト (たとえば、 `NodeStyle-ForeColor`)。 プロパティがフォームにプログラムで設定することもできます`Property.Subproperty`(たとえば、 `NodeStyle.ForeColor`)。 通常、一般的な設定には、カスタムの背景色、前景の色、フォントのプロパティ、およびノードの間隔が含まれます。 スタイル プロパティは、次の優先順位で適用されます。  
  
1.  <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>。  
  
2.  <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>、 <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>、または<xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>、ノードの種類によって異なります。 場合、<xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A>コレクションが定義されているその他のノードのスタイル プロパティをオーバーライドするこの時点で適用されます場合、。  
  
3.  <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>。  
  
4.  <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>。  
  
> [!NOTE]
>  対応するノードのスタイル設定、 <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>、 <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>、または<xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>のスタイル設定の上書きのプロパティ、<xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>プロパティです。  
  
 特定のレベルのノードが子ノードがあるかどうかに関係なく、同じ外観を持つ必要がありますコンテンツ スタイルのナビゲーション メニューのテーブルを生成する必要がある場合は、使用を検討する可能性があります、<xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A>プロパティが個々 のスタイル プロパティを設定する代わりにします。  
  
   
  
## Examples  
 次のコード例を使用する方法を示しています、<xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>内のノードの外観を制御するプロパティ、<xref:System.Web.UI.WebControls.TreeView>コントロール。  
  
 [!code-aspx-csharp[TreeViewNodeStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewNodeStyle/CS/treeviewnodestylecs.aspx#1)]
 [!code-aspx-vb[TreeViewNodeStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewNodeStyle/VB/treeviewnodestylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NodeWrap">
      <MemberSignature Language="C#" Value="public bool NodeWrap { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NodeWrap" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.NodeWrap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはノードが領域を使い果たしたときに、ノードのテキストを折り返すかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" />のテキストを折り返すそれ以外の場合、<see langword="false" />です。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.TreeView.NodeWrap%2A>プロパティ領域を使い果たしたときに、各ノードに表示されるテキストが折り返されるかどうかを指定します。  
  
 このプロパティの値は、ビュー ステートに格納されます。  
  
   
  
## Examples  
 次のコード例を使用する方法を示しています、<xref:System.Web.UI.WebControls.TreeView.NodeWrap%2A>プロパティのテキストを折り返す、<xref:System.Web.UI.WebControls.TreeView>コントロール。  
  
 [!code-aspx-csharp[TreeViewNodeWrap#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewNodeWrap/CS/treeviewnodewrapcs.aspx#1)]
 [!code-aspx-vb[TreeViewNodeWrap#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewNodeWrap/VB/treeviewnodewrapvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NoExpandImageUrl">
      <MemberSignature Language="C#" Value="public string NoExpandImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NoExpandImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.NoExpandImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または、カスタム イメージを展開なノードのインジケーターの URL を設定します。</summary>
        <value>非拡張可能なノードに表示するカスタム イメージ URL です。 既定値は空の文字列 ("")、既定の空白のイメージが表示されます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>展開なノード指標のカスタム イメージを指定するプロパティです。 展開なノードのインジケーターの画像 (またはスペース用) は、親またはルート ノードのリーフ ノードに合わせて (展開および折りたたみ可能なノード指標) の代わりにリーフ ノードの横に表示されます。  
  
 ときに、<xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A>プロパティに設定されている`true`、<xref:System.Web.UI.WebControls.TreeView>コントロールは、プラス記号 (+) またはマイナス記号 (-) を示すかどうか、ノードが展開可能な折りたたみ可能なまたは拡張不可能、それぞれのノードの横にあるプレース ホルダー イメージが表示されます。 最初の設定によってカスタム イメージを指定することができます、<xref:System.Web.UI.WebControls.TreeView.ImageSet%2A>プロパティを`TreeViewImageSet.Custom`、し、設定、 <xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>、 <xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>、および<xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A>プロパティをカスタム イメージの Url。 イメージが指定されていない場合、既定のイメージが使用されます。 ノードの展開のインジケーターを隠すには、設定、<xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A>プロパティを`false`です。  
  
> [!NOTE]
>  ノードが正常に整合していることを確認する、<xref:System.Web.UI.WebControls.TreeView>ことを確認して、カスタム イメージを使用する場合を制御して指定されているすべてのイメージ、 <xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>、 <xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>、および<xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A>プロパティが同じ次元を持ちます。  
  
 このプロパティの値は、ビュー ステートに格納されます。  
  
   
  
## Examples  
 次のコード例を使用する方法を示しています、<xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>展開なノード指標のカスタム イメージを指定するプロパティです。 およびコントロールに表示するイメージを表示するコード例では、独自のイメージを指定する必要があります、<xref:System.Web.UI.WebControls.TreeView.ImageSet%2A>プロパティに設定する必要があります`TreeNodeImageSet.Custom`です。  
  
 [!code-aspx-csharp[TreeViewCustomImage#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewCustomImage/CS/treeviewcustomimagecs.aspx#1)]
 [!code-aspx-vb[TreeViewCustomImage#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewCustomImage/VB/treeviewcustomimagevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.OnInit(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary><see cref="E:System.Web.UI.Control.Init" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView.OnInit%2A>メソッドによって呼び出されます、<xref:System.Web.UI.WebControls.TreeView>させるコントロール、<xref:System.Web.UI.Control.Init>イベント。 通常は、使用コントロールの開発者によって拡張するとき、<xref:System.Web.UI.WebControls.TreeView>クラスです。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)です。  
  
 <xref:System.Web.UI.WebControls.TreeView.OnInit%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>オーバーライドする場合、<see cref="M:System.Web.UI.WebControls.TreeView.OnInit(System.EventArgs)" />を呼び出して派生クラスでメソッドが必ず、<see cref="M:System.Web.UI.WebControls.TreeView.OnInit(System.EventArgs)" />デリゲートを登録するための基本クラスのメソッドは、イベントを受信します。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.OnPreRender(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary><see cref="E:System.Web.UI.Control.PreRender" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView.OnPreRender%2A>ポストバック用に登録するメソッドをオーバーライドします。 クライアント スクリプトが有効になっている場合、必要なスクリプトと非表示フィールドも表示します。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。  
  
 <xref:System.Web.UI.WebControls.TreeView.OnPreRender%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>オーバーライドする場合、<see cref="M:System.Web.UI.WebControls.TreeView.OnPreRender(System.EventArgs)" />を呼び出して派生クラスでメソッドが必ず、<see cref="M:System.Web.UI.WebControls.TreeView.OnPreRender(System.EventArgs)" />デリゲートを登録するための基本クラスのメソッドは、イベントを受信します。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnSelectedNodeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectedNodeChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectedNodeChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.OnSelectedNodeChanged(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>発生させる、<see cref="E:System.Web.UI.WebControls.TreeView.SelectedNodeChanged" />のイベント、<see cref="T:System.Web.UI.WebControls.TreeView" />コントロール。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged>でノードを選択すると、イベントが発生した、<xref:System.Web.UI.WebControls.TreeView>コントロール。 これにより、このイベントが発生するたびに、表示されているコンテンツの更新など、カスタムのルーチンを実行するイベント処理メソッドを提供できます。  
  
 必要に応じて設定することができます、<xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A>そのノードが選択されているときに発生するイベントを指定するノードのプロパティです。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>を持つノードにはレンダリングされません、<xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A>プロパティに設定`TreeNodeSelectAction.None`です。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。  
  
 <xref:System.Web.UI.WebControls.TreeView.OnSelectedNodeChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>オーバーライドする場合、<see cref="M:System.Web.UI.WebControls.TreeView.OnSelectedNodeChanged(System.EventArgs)" />を呼び出して派生クラスでメソッドが必ず、<see cref="M:System.Web.UI.WebControls.TreeView.OnSelectedNodeChanged(System.EventArgs)" />デリゲートを登録するための基本クラスのメソッドは、イベントを受信します。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnTreeNodeCheckChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnTreeNodeCheckChanged (System.Web.UI.WebControls.TreeNodeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTreeNodeCheckChanged(class System.Web.UI.WebControls.TreeNodeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.OnTreeNodeCheckChanged(System.Web.UI.WebControls.TreeNodeEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.TreeNodeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A<see cref="T:System.Web.UI.WebControls.TreeNodeEventArgs" />イベント データを格納します。</param>
        <summary>発生させる、<see cref="E:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged" />のイベント、<see cref="T:System.Web.UI.WebControls.TreeView" />コントロール。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged>イベントは、チェック ボックスで、<xref:System.Web.UI.WebControls.TreeView>コントロールは、サーバーへのポスト間の状態を変更します。 これにより、このイベントが発生するたびに、データベースまたは、表示されているコンテンツの更新など、カスタムのルーチンを実行するイベント処理メソッドを提供できます。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。  
  
 <xref:System.Web.UI.WebControls.TreeView.OnTreeNodeCheckChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>オーバーライドする場合、<see cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeCheckChanged(System.Web.UI.WebControls.TreeNodeEventArgs)" />派生クラスでは、呼び出しに必ず、<see cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeCheckChanged(System.Web.UI.WebControls.TreeNodeEventArgs)" />デリゲートを登録するための基本クラスのメソッドは、イベントを受信します。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnTreeNodeCollapsed">
      <MemberSignature Language="C#" Value="protected virtual void OnTreeNodeCollapsed (System.Web.UI.WebControls.TreeNodeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTreeNodeCollapsed(class System.Web.UI.WebControls.TreeNodeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.OnTreeNodeCollapsed(System.Web.UI.WebControls.TreeNodeEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.TreeNodeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A<see cref="T:System.Web.UI.WebControls.TreeNodeEventArgs" />イベント データを格納します。</param>
        <summary>発生させる、<see cref="E:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed" />のイベント、<see cref="T:System.Web.UI.WebControls.TreeView" />コントロール。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed>でノードが折りたたまれているときにイベントが発生した、<xref:System.Web.UI.WebControls.TreeView>コントロール。 これにより、このイベントが発生するたびに、カスタム ルーチンを実行するイベント処理メソッドを提供できます。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。  
  
 <xref:System.Web.UI.WebControls.TreeView.OnTreeNodeCollapsed%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>オーバーライドする場合、<see cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeCollapsed(System.Web.UI.WebControls.TreeNodeEventArgs)" />を呼び出して派生クラスでメソッドが必ず、<see cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeCollapsed(System.Web.UI.WebControls.TreeNodeEventArgs)" />デリゲートを登録するための基本クラスのメソッドは、イベントを受信します。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnTreeNodeDataBound">
      <MemberSignature Language="C#" Value="protected virtual void OnTreeNodeDataBound (System.Web.UI.WebControls.TreeNodeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTreeNodeDataBound(class System.Web.UI.WebControls.TreeNodeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.OnTreeNodeDataBound(System.Web.UI.WebControls.TreeNodeEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.TreeNodeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A<see cref="T:System.Web.UI.WebControls.TreeNodeEventArgs" />イベント データを格納します。</param>
        <summary>発生させる、<see cref="E:System.Web.UI.WebControls.TreeView.TreeNodeDataBound" />のイベント、<see cref="T:System.Web.UI.WebControls.TreeView" />コントロール。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView.TreeNodeDataBound>イベントは、データ項目が内のノードにバインドされている場合、<xref:System.Web.UI.WebControls.TreeView>コントロール。 これにより、このイベントが発生するたびに、カスタム ルーチンを実行するイベント処理メソッドを提供できます。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。  
  
 <xref:System.Web.UI.WebControls.TreeView.OnTreeNodeDataBound%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>オーバーライドする場合、<see cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeDataBound(System.Web.UI.WebControls.TreeNodeEventArgs)" />を呼び出して派生クラスでメソッドが必ず、<see cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeDataBound(System.Web.UI.WebControls.TreeNodeEventArgs)" />デリゲートを登録するための基本クラスのメソッドは、イベントを受信します。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnTreeNodeExpanded">
      <MemberSignature Language="C#" Value="protected virtual void OnTreeNodeExpanded (System.Web.UI.WebControls.TreeNodeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTreeNodeExpanded(class System.Web.UI.WebControls.TreeNodeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.OnTreeNodeExpanded(System.Web.UI.WebControls.TreeNodeEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.TreeNodeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A<see cref="T:System.Web.UI.WebControls.TreeNodeEventArgs" />イベント データを格納します。</param>
        <summary>発生させる、<see cref="E:System.Web.UI.WebControls.TreeView.TreeNodeExpanded" />のイベント、<see cref="T:System.Web.UI.WebControls.TreeView" />コントロール。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded>でノードが展開されると、イベントが発生、<xref:System.Web.UI.WebControls.TreeView>コントロール。 これにより、このイベントが発生するたびに、カスタム ルーチンを実行するイベント処理メソッドを提供できます。  
  
> [!NOTE]
>  場合、<xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A>ノードのプロパティに設定されて<xref:System.Web.UI.WebControls.TreeNodeSelectAction.Expand>または<xref:System.Web.UI.WebControls.TreeNodeSelectAction.SelectExpand>、<xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded>でそのノードがクリックされたときにも、イベントが発生、<xref:System.Web.UI.WebControls.TreeView>コントロール。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。  
  
 <xref:System.Web.UI.WebControls.TreeView.OnTreeNodeExpanded%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>オーバーライドする場合、<see cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeExpanded(System.Web.UI.WebControls.TreeNodeEventArgs)" />を呼び出して派生クラスでメソッドが必ず、<see cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeExpanded(System.Web.UI.WebControls.TreeNodeEventArgs)" />デリゲートを登録するための基本クラスのメソッドは、イベントを受信します。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnTreeNodePopulate">
      <MemberSignature Language="C#" Value="protected virtual void OnTreeNodePopulate (System.Web.UI.WebControls.TreeNodeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTreeNodePopulate(class System.Web.UI.WebControls.TreeNodeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.OnTreeNodePopulate(System.Web.UI.WebControls.TreeNodeEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.TreeNodeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A<see cref="T:System.Web.UI.WebControls.TreeNodeEventArgs" />イベント データを格納します。</param>
        <summary>発生させる、<see cref="E:System.Web.UI.WebControls.TreeView.TreeNodePopulate" />のイベント、<see cref="T:System.Web.UI.WebControls.TreeView" />コントロール。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 場合によっては、データのサイズまたはユーザーの入力に依存するカスタム コンテンツのためのツリー構造を静的に事前に定義することは実用的ではありません。 このため、<xref:System.Web.UI.WebControls.TreeView>コントロールは、動的なノードをサポートしています。 ときに、<xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A>ノードのプロパティに設定`true`、そのノードが実行時に、ノードが展開されている設定を取得します。  
  
 ノードを動的に設定するを最初に設定、<xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A>のノードにプロパティ`true`です。 イベント処理メソッドを次に、定義、<xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate>プログラムでノードを追加するイベントです。 一般的なイベント処理メソッド ノードのデータをデータ ソースから取得、ノードの構造にデータを置くし、するノード構造を追加、<xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A>登録されているノードのコレクション。 追加することによって、ノードの構造が作成された<xref:System.Web.UI.WebControls.TreeNode>オブジェクトを<xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A>親ノードのコレクション。  
  
> [!NOTE]
>  ときに、<xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A>ノードのプロパティに設定されて`true`ノードを動的に設定する必要があります。 別のノード下に入れ子に宣言できません。それ以外の場合、ページで、エラーが発生します。  
  
 サポートされているブラウザー (Internet Explorer 4.0 と互換性のあるブラウザーおよびそれ以降) のクライアント側のノードの母集団のも利用できます。 これにより、有効にすると、<xref:System.Web.UI.WebControls.TreeView>が原因で、サーバーに投稿する必要がそのノードを展開すると、場合に、クライアント上のノードを動的に設定するコントロール。 クライアント側のノードのカタログ作成の詳細については、次を参照してください。<xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A>です。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。  
  
 <xref:System.Web.UI.WebControls.TreeView.OnTreeNodePopulate%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>オーバーライドする場合、<see cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodePopulate(System.Web.UI.WebControls.TreeNodeEventArgs)" />を呼び出して派生クラスでメソッドが必ず、<see cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodePopulate(System.Web.UI.WebControls.TreeNodeEventArgs)" />デリゲートを登録するための基本クラスのメソッドは、イベントを受信します。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ParentNodeStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeStyle ParentNodeStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNodeStyle ParentNodeStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.ParentNodeStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>参照を取得、<see cref="T:System.Web.UI.WebControls.TreeNodeStyle" />の親ノードの外観を設定できるようにするオブジェクト、<see cref="T:System.Web.UI.WebControls.TreeView" />コントロール。</summary>
        <value>参照、<see cref="T:System.Web.UI.WebControls.TreeNodeStyle" />内の親ノードのスタイルを表す、<see cref="T:System.Web.UI.WebControls.TreeView" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>内の親ノードの外観を制御するプロパティ、<xref:System.Web.UI.WebControls.TreeView>コントロール。 このプロパティは読み取り専用です。ただしのプロパティを設定することができます、<xref:System.Web.UI.WebControls.TreeNodeStyle>オブジェクトを返します。 フォームのプロパティを宣言して設定されることができます`Property-Subproperty`ここで、`Subproperty`のプロパティ、<xref:System.Web.UI.WebControls.TreeNodeStyle>オブジェクト (たとえば、 `ParentNodeStyle-ForeColor`)。 プロパティがフォームにプログラムで設定することもできます`Property.Subproperty`(たとえば、 `ParentNodeStyle.ForeColor`)。 通常、一般的な設定には、カスタムの背景色、前景の色、フォントのプロパティ、およびノードの間隔が含まれます。 スタイル プロパティは、次の優先順位で適用されます。  
  
1.  <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>。  
  
2.  <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>、 <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>、または<xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>、ノードの種類によって異なります。 場合、<xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A>コレクションが定義されているその他のノードのスタイル プロパティをオーバーライドするこの時点で適用されます場合、。  
  
3.  <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>。  
  
4.  <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>。  
  
 特定のレベルのノードが子ノードがあるかどうかに関係なく、同じ外観を持つ必要がありますコンテンツ スタイルのナビゲーション メニューのテーブルを生成する必要がある場合は、使用を検討する可能性があります、<xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A>プロパティが個々 のスタイル プロパティを設定する代わりにします。  
  
   
  
## Examples  
 次のコード例を使用する方法を示しています、<xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>内の親ノードの外観を制御するプロパティ、<xref:System.Web.UI.WebControls.TreeView>コントロール。  
  
 [!code-aspx-csharp[TreeViewParentNodeStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewParentNodeStyle/CS/treeviewparentnodestylecs.aspx#1)]
 [!code-aspx-vb[TreeViewParentNodeStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewParentNodeStyle/VB/treeviewparentnodestylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PathSeparator">
      <MemberSignature Language="C#" Value="public char PathSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char PathSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.PathSeparator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue('/')</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定で指定されているノードの値を区切るために使用される、文字、<see cref="P:System.Web.UI.WebControls.TreeNode.ValuePath" />プロパティです。</summary>
        <value>指定されたノードの値を区切るために使用する文字、<see cref="P:System.Web.UI.WebControls.TreeNode.ValuePath" />プロパティです。 既定ではスラッシュ記号 (/) です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A>プロパティには、ルート ノードから現在のノードへのパスを形成するノードの値のコンマ区切りの一覧が含まれています。 使用して、<xref:System.Web.UI.WebControls.TreeView.PathSeparator%2A>ノードの値を分離する、区切り記号の文字を指定するプロパティを使用します。 個々 の値の一覧を解析するときに、この値は使用一般的です。  
  
 表示されるテキストによって、<xref:System.Web.UI.WebControls.TreeView>コントロール、区切り文字は、すべての競合を防ぐために変更する必要があります。 たとえば、コンマを区切り文字を設定した場合、表示されたテキスト含めることはできませんコンマそれ以外の場合、<xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A>プロパティを正確に解析することはできません。  
  
 このプロパティの値は、ビュー ステートに格納されます。  
  
   
  
## Examples  
 次のコード例を使用する方法を示しています、<xref:System.Web.UI.WebControls.TreeView.PathSeparator%2A>の区切り文字を指定するプロパティ、<xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A>ノードのプロパティです。 この値は解析に使用し、<xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A>個々 の値のプロパティです。  
  
 [!code-aspx-csharp[TreeViewPathSeparator2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewPathSeparator2/CS/treeviewpathseparatorcs.aspx#1)]
 [!code-aspx-vb[TreeViewPathSeparator2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewPathSeparator2/VB/treeviewpathseparatorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PerformDataBinding">
      <MemberSignature Language="C#" Value="protected override void PerformDataBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void PerformDataBinding() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.PerformDataBinding" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>データ ソースに基づくすべてのノードを作成します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView.PerformDataBinding%2A>メソッドが呼び出されるヘルパー メソッド、<xref:System.Web.UI.WebControls.TreeView>コントロールのコントロールに指定されたデータ ソースをバインドします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><see cref="M:System.Web.UI.WebControls.BaseDataBoundControl.DataBind" />メソッドはシールされている、オーバーライドする必要があります、<see cref="M:System.Web.UI.WebControls.TreeView.PerformDataBinding" />メソッド、データをバインドするときに、その他のタスクを実行する必要がある場合。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="PopulateNodesFromClient">
      <MemberSignature Language="C#" Value="public bool PopulateNodesFromClient { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PopulateNodesFromClient" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはノード データがクライアントから要求時に設定されているかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" />クライアントから要求時にツリー ノードのデータを設定するにはそれ以外の場合、<see langword="false" />です。 既定値は、<see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 場合によっては、データのサイズまたはユーザーの入力に依存するカスタム コンテンツのためのツリー構造を静的に事前に定義することは実用的ではありません。 このため、<xref:System.Web.UI.WebControls.TreeView>コントロールは、動的なノードをサポートしています。 ときに、<xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A>ノードのプロパティに設定`true`、そのノードが実行時に、ノードが展開されている設定を取得します。  
  
 オンデマンドのノードを設定するだけでなく、直接サポートされているクライアントのブラウザーでノードを作成することです。 ときに、<xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A>プロパティに設定されている`true`サービスがサーバーにポストバックが不要になるツリー ノードを作成する、クライアントから呼び出されます。 それ以外の場合、<xref:System.Web.UI.WebControls.TreeView>コントロールは、ノードを作成するサーバーに再度ポストします。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.TreeView.EnableClientScript%2A>プロパティを設定する必要がありますも`true`ために、<xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A>設定するプロパティを`true`です。  
  
 クライアント上のノードを設定するを最初に設定、<xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A>プロパティを`true`し、設定、<xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A>のノードにプロパティ`true`です。 イベント処理メソッドを次に、定義、<xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate>プログラムでノードを追加するイベントです。 一般的なイベント処理メソッド ノードのデータをデータ ソースから取得、ノードの構造にデータを置くし、するノード構造を追加、<xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A>登録されているノードのコレクション。 追加することによって、ノードの構造を作成する<xref:System.Web.UI.WebControls.TreeNode>オブジェクトを<xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A>親ノードのコレクション。  
  
> [!NOTE]
>  ときに、<xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A>ノードのプロパティに設定されて`true`ノードを動的に設定する必要があります。 別のノード下に入れ子に宣言できません。それ以外の場合、ページで、エラーが発生します。  
  
> [!NOTE]
>  クライアント側のノード カタログの作成機能は、コールバック スクリプトをサポートするブラウザーでサポートされています。 確認するには、ブラウザーがコールバック スクリプト アクセスをサポートしているかどうかを使用して、<xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A>のプロパティ、<xref:System.Web.HttpBrowserCapabilities>クラスです。 インスタンスにアクセスすることができます、<xref:System.Web.HttpBrowserCapabilities>を通じて現在の要求のクラス、<xref:System.Web.HttpRequest.Browser%2A>のプロパティ、<xref:System.Web.HttpRequest>クラスです。  
  
 このプロパティの値は、ビュー ステートに格納されます。  
  
   
  
## Examples  
 次のコード例を使用する方法を示しています、<xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A>内のノードのクライアント側のカタログ作成を有効にするプロパティ、<xref:System.Web.UI.WebControls.TreeView>コントロール。 クライアント側のノードのカタログ作成を有効にすると、ノードが設定されている動的にサーバーに投稿することがなく、クライアント上に注意してください。  
  
 [!code-aspx-csharp[TreeViewPopulateNodesFromClient#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewPopulateNodesFromClient/CS/treeviewpopulatenodesfromclientcs.aspx#1)]
 [!code-aspx-vb[TreeViewPopulateNodesFromClient#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewPopulateNodesFromClient/VB/treeviewpopulatenodesfromclientvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RaiseCallbackEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaiseCallbackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaiseCallbackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.RaiseCallbackEvent(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">イベント ハンドラーに渡すオプションのイベント引数を表す文字列。</param>
        <summary>指定した引数を使用して、コールバック イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView.RaiseCallbackEvent%2A>メソッドは、のヘルパー メソッド、<xref:System.Web.UI.WebControls.TreeView.System%23Web%23UI%23ICallbackEventHandler%23RaiseCallbackEvent%2A>メソッドです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RaisePostBackEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.RaisePostBackEvent(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">イベント ハンドラーに渡すオプションのイベント引数を表す文字列。</param>
        <summary>により、<see cref="T:System.Web.UI.WebControls.TreeView" />フォームがサーバーにポストされたときに発生するイベントを処理するコントロール。 <see cref="M:System.Web.UI.WebControls.TreeView.RaisePostBackEvent(System.String)" />メソッドは、のヘルパー メソッド、<see cref="M:System.Web.UI.WebControls.TreeView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" />メソッドです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 値が渡されます、`eventArgument`パラメーターを<xref:System.Web.UI.WebControls.TreeView.RaisePostBackEvent%2A>メソッドを実装するコントロールの<xref:System.Web.UI.IPostBackEventHandler?displayProperty=nameWithType>インターフェイスです。 これは、<xref:System.Web.UI.WebControls.TreeView>コントロールはポストバック イベントが発生する原因となる HTML 要素をレンダリングします。 コントロールは、サーバーへのポストバックをクライアント側スクリプトをレンダリングする場合、スクリプトの引数を渡す、`eventArgument`パラメーター。 サーバーに送信する、単純なによってポストバック イベントが発生した場合、`eventArgument`パラメーターは`null`します。  
  
 <xref:System.Web.UI.WebControls.TreeView.RaisePostBackEvent%2A>メソッドは、HTML や Web サーバー コントロールによって実装される多くのイベントの機能を提供します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RaisePostDataChangedEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostDataChangedEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaisePostDataChangedEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.RaisePostDataChangedEvent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>信号、<see cref="T:System.Web.UI.WebControls.TreeView" />コントロールの状態が変更されたことを ASP.NET アプリケーションに通知を制御します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 変更のイベント、<xref:System.Web.UI.WebControls.TreeView>から制御が発生した、<xref:System.Web.UI.WebControls.TreeView.RaisePostDataChangedEvent%2A>メソッドです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderBeginTag">
      <MemberSignature Language="C#" Value="public override void RenderBeginTag (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RenderBeginTag(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.RenderBeginTag(System.Web.UI.HtmlTextWriter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">クライアントに HTML コンテンツを表示する出力ストリームを表す <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>開始タグを指定されたライターにコントロールの HTML をレンダリングします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView.RenderBeginTag%2A>メソッドは、主にコントロールの開発者によって使用されます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderContents">
      <MemberSignature Language="C#" Value="protected override void RenderContents (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RenderContents(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.RenderContents(System.Web.UI.HtmlTextWriter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Web ページにコンテンツを書き込むために使用する出力ストリームを表す <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>内のノードを表示、<see cref="T:System.Web.UI.WebControls.TreeView" />コントロール。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.TreeView.RenderContents%2A>メソッド内のノードを表示するために、<xref:System.Web.UI.WebControls.TreeView>クライアントに制御します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderEndTag">
      <MemberSignature Language="C#" Value="public override void RenderEndTag (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RenderEndTag(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.RenderEndTag(System.Web.UI.HtmlTextWriter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">クライアントに HTML コンテンツを表示する出力ストリームを表す <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>終了タグを指定されたライターにコントロールの HTML をレンダリングします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView.RenderEndTag%2A>メソッドは、主にコントロールの開発者によって使用されます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RootNodeStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeStyle RootNodeStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNodeStyle RootNodeStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.RootNodeStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>参照を取得、<see cref="T:System.Web.UI.WebControls.TreeNodeStyle" />のルート ノードの外観を設定できるようにするオブジェクト、<see cref="T:System.Web.UI.WebControls.TreeView" />コントロール。</summary>
        <value>参照、<see cref="T:System.Web.UI.WebControls.TreeNodeStyle" />のルート ノードのスタイルを表す、<see cref="T:System.Web.UI.WebControls.TreeView" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>のルート ノードの外観を制御するプロパティ、<xref:System.Web.UI.WebControls.TreeView>コントロール。 このプロパティは読み取り専用です。ただしのプロパティを設定することができます、<xref:System.Web.UI.WebControls.TreeNodeStyle>オブジェクトを返します。 フォームのプロパティを宣言して設定されることができます`Property-Subproperty`ここで、`Subproperty`のプロパティ、<xref:System.Web.UI.WebControls.TreeNodeStyle>オブジェクト (たとえば、 `RootNodeStyle-ForeColor`)。 プロパティがフォームにプログラムで設定することもできます`Property.Subproperty`(たとえば、 `RootNodeStyle.ForeColor`)。 通常、一般的な設定には、カスタムの背景色、前景の色、フォントのプロパティ、およびノードの間隔が含まれます。 スタイル プロパティは、次の優先順位で適用されます。  
  
1.  <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>。  
  
2.  <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>、 <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>、または<xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>、ノードの種類によって異なります。 場合、<xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A>コレクションが定義されているその他のノードのスタイル プロパティをオーバーライドするこの時点で適用されます場合、。  
  
3.  <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>  
  
4.  <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>。  
  
 特定のレベルのノードが子ノードがあるかどうかに関係なく、同じ外観を持つ必要がありますコンテンツ スタイルのナビゲーション メニューのテーブルを生成する必要がある場合は、使用を検討する可能性があります、<xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A>プロパティが個々 のスタイル プロパティを設定する代わりにします。  
  
   
  
## Examples  
 次のコード例を使用する方法を示しています、<xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>のルート ノードの外観を制御するプロパティ、<xref:System.Web.UI.WebControls.TreeView>コントロール。  
  
 [!code-aspx-csharp[TreeViewRootNodeStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewRootNodeStyle/CS/treeviewrootnodestylecs.aspx#1)]
 [!code-aspx-vb[TreeViewRootNodeStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewRootNodeStyle/VB/treeviewrootnodestylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.SaveViewState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.TreeView" /> コントロールの状態を保存します。</summary>
        <returns>サーバー コントロールの現在のビュー ステート。それ以外の場合、<see langword="null" />コントロールに関連付けられているビュー ステートがない場合は、します。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedNode">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNode SelectedNode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNode SelectedNode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.SelectedNode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得、<see cref="T:System.Web.UI.WebControls.TreeNode" />で選択されたノードを表すオブジェクト、<see cref="T:System.Web.UI.WebControls.TreeView" />コントロール。</summary>
        <value>A<see cref="T:System.Web.UI.WebControls.TreeNode" />で選択されたノードを表す、<see cref="T:System.Web.UI.WebControls.TreeView" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 内のノードのテキスト、<xref:System.Web.UI.WebControls.TreeView>コントロールで 2 つのモードのいずれかであることができます。 選択モードとナビゲーション モード。 既定では、ノードは選択モードです。 ノードをナビゲーション モードにする設定、<xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>ノードの空の文字列以外の値をプロパティ ("") です。 ノードを選択モードにする、<xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>ノードの空の文字列をプロパティ ("") です。  
  
 選択モードでのノードがある場合、ユーザーは、ノード内のテキストをクリックすると、ノードを選択できます。 使用して、<xref:System.Web.UI.WebControls.TreeView.SelectedNode%2A>内のどのノードを選択を決定するプロパティ、<xref:System.Web.UI.WebControls.TreeView>コントロール。  
  
> [!NOTE]
>  ノードにすることはできないとき、<xref:System.Web.UI.WebControls.TreeView>コントロールのハイパーリンクを表示します。 ハイパーリンクが表示される場合、<xref:System.Web.UI.WebControls.TreeView.SelectedNode%2A>プロパティは常に返します`null`です。  
  
 ユーザーが内の異なるノードを選択すると、<xref:System.Web.UI.WebControls.TreeView>コントロール内の新しいノード、テキストをクリックして、<xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged>既定では、イベントが発生します。 設定して別のイベントを指定することができます、<xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A>プロパティのプロパティです。 利用可能なオプションの一覧を次の表に示します。  
  
|選択範囲の操作|説明|  
|----------------------|-----------------|  
|<xref:System.Web.UI.WebControls.TreeNodeSelectAction.Expand>|ノードの展開と折りたたみを切り替えます。 発生させる、<xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded>または<xref:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed>必要に応じて、イベント。|  
|<xref:System.Web.UI.WebControls.TreeNodeSelectAction.None>|ノードが選択されているときにイベントを発生させません。|  
|<xref:System.Web.UI.WebControls.TreeNodeSelectAction.Select>|発生させる、<xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged>イベント ノードを選択するとします。|  
|<xref:System.Web.UI.WebControls.TreeNodeSelectAction.SelectExpand>|両方を生成、<xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged>と<xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded>イベント ノードを選択するとします。 ノードのみを展開、折りたたむことはできません。|  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>を持つノードにはレンダリングされません、<xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A>プロパティに設定`TreeNodeSelectAction.None`です。  
  
   
  
## Examples  
 次のコード例を使用する方法を示しています、<xref:System.Web.UI.WebControls.TreeView.SelectedNode%2A>で選択したノードの値を決定するプロパティ、<xref:System.Web.UI.WebControls.TreeView>コントロール。  
  
 [!code-aspx-csharp[TreeViewSelectedNodeStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewSelectedNodeStyle/CS/treeviewselectednodestylecs.aspx#1)]
 [!code-aspx-vb[TreeViewSelectedNodeStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewSelectedNodeStyle/VB/treeviewselectednodestylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedNodeChanged">
      <MemberSignature Language="C#" Value="public event EventHandler SelectedNodeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SelectedNodeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.TreeView.SelectedNodeChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ノードが選択したときに発生、<see cref="T:System.Web.UI.WebControls.TreeView" />コントロール。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged>でノードを選択すると、イベントが発生した、<xref:System.Web.UI.WebControls.TreeView>コントロール。 これにより、このイベントが発生するたびに、表示されているコンテンツの更新など、カスタムのルーチンを実行するイベント処理メソッドを提供できます。  
  
 必要に応じて設定することができます、<xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A>そのノードが選択されているときに発生するイベントを指定するノードのプロパティです。 利用可能なオプションの一覧を次の表に示します。  
  
|選択範囲の操作|説明|  
|----------------------|-----------------|  
|<xref:System.Web.UI.WebControls.TreeNodeSelectAction.Expand>|ノードの展開と折りたたみを切り替えます。 発生させる、<xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded>または<xref:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed>必要に応じて、イベント。|  
|<xref:System.Web.UI.WebControls.TreeNodeSelectAction.None>|ノードが選択されているときにイベントを発生させません。|  
|<xref:System.Web.UI.WebControls.TreeNodeSelectAction.Select>|発生させる、<xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged>イベント ノードを選択するとします。|  
|<xref:System.Web.UI.WebControls.TreeNodeSelectAction.SelectExpand>|両方を生成、<xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged>と<xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded>イベント ノードを選択するとします。 ノードのみを展開、折りたたむことはできません。|  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>を持つノードにはレンダリングされません、<xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A>プロパティに設定`TreeNodeSelectAction.None`です。  
  
 <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged>ユーザーは、ノードをクリックしたときに、後でのみイベントが発生します。 場合、イベントは起動しませんが、<xref:System.Web.UI.WebControls.TreeView.SelectedNode%2A>プロパティをプログラムで変更します。  
  
 イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。  
  
   
  
## Examples  
 次のコード例を使用する方法を示しています、<xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged>を更新するイベント、<xref:System.Web.UI.WebControls.Label>コントロールでノードが選択した場合、<xref:System.Web.UI.WebControls.TreeView>コントロール。  
  
 [!code-aspx-csharp[TreeViewSelectedNodeStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewSelectedNodeStyle/CS/treeviewselectednodestylecs.aspx#1)]
 [!code-aspx-vb[TreeViewSelectedNodeStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewSelectedNodeStyle/VB/treeviewselectednodestylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedNodeStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeStyle SelectedNodeStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNodeStyle SelectedNodeStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.SelectedNodeStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得、<see cref="T:System.Web.UI.WebControls.TreeNodeStyle" />で選択されたノードの外観を制御するオブジェクト、<see cref="T:System.Web.UI.WebControls.TreeView" />コントロール。</summary>
        <value>A<see cref="T:System.Web.UI.WebControls.TreeNodeStyle" />で選択されたノードのスタイルを表す、<see cref="T:System.Web.UI.WebControls.TreeView" />コントロール。 既定値は<see langword="null" />、ことを示します、<see cref="P:System.Web.UI.WebControls.TreeView.SelectedNodeStyle" />プロパティが設定されていません。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>プロパティで選択されたノードの外観を制御する、<xref:System.Web.UI.WebControls.TreeView>コントロール。 このプロパティは読み取り専用です。ただしのプロパティを設定することができます、<xref:System.Web.UI.WebControls.TreeNodeStyle>オブジェクトを返します。 フォームのプロパティを宣言して設定されることができます`Property-Subproperty`ここで、`Subproperty`のプロパティ、<xref:System.Web.UI.WebControls.TreeNodeStyle>オブジェクト (たとえば、 `SelectedNodeStyle-ForeColor`)。 プロパティがフォームにプログラムで設定することもできます`Property.Subproperty`(たとえば、 `SelectedNodeStyle.ForeColor`)。 通常、一般的な設定には、カスタムの背景色、前景の色、フォントのプロパティ、およびノードの間隔が含まれます。 スタイル プロパティは、次の優先順位で適用されます。  
  
1.  <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>。  
  
2.  <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>、 <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>、または<xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>、ノードの種類によって異なります。 場合、<xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A>コレクションが定義されているその他のノードのスタイル プロパティをオーバーライドするこの時点で適用されます場合、。  
  
3.  <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>。  
  
4.  <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>。  
  
   
  
## Examples  
 次のコード例を使用する方法を示しています、<xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>プロパティで選択されたノードの外観を制御する、<xref:System.Web.UI.WebControls.TreeView>コントロール。  
  
 [!code-aspx-csharp[TreeViewSelectedNodeStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewSelectedNodeStyle/CS/treeviewselectednodestylecs.aspx#1)]
 [!code-aspx-vb[TreeViewSelectedNodeStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewSelectedNodeStyle/VB/treeviewselectednodestylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedValue">
      <MemberSignature Language="C#" Value="public string SelectedValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectedValue" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.SelectedValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>選択したノードの値を取得します。</summary>
        <value>選択したノードの値です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView.SelectedValue%2A>プロパティは、選択したノードの値を決定する便利な手段を提供します。 このプロパティは単の値を返します、<xref:System.Web.UI.WebControls.TreeNode.Value%2A>のプロパティ、<xref:System.Web.UI.WebControls.TreeNode>によって参照されるオブジェクト、<xref:System.Web.UI.WebControls.TreeView.SelectedNode%2A>プロパティです。 ノードで現在選択されていない場合、<xref:System.Web.UI.WebControls.TreeView>を制御する、空の文字列 ("") が返されます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetNodeDataBound">
      <MemberSignature Language="C#" Value="protected void SetNodeDataBound (System.Web.UI.WebControls.TreeNode node, bool dataBound);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetNodeDataBound(class System.Web.UI.WebControls.TreeNode node, bool dataBound) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.SetNodeDataBound(System.Web.UI.WebControls.TreeNode,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Web.UI.WebControls.TreeNode" />
        <Parameter Name="dataBound" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="node">設定する <see cref="T:System.Web.UI.WebControls.TreeNode" />。</param>
        <param name="dataBound">
          ノードをデータ バインドとして設定する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
        <summary>派生クラスがかどうかを設定できるように、指定した<see cref="T:System.Web.UI.WebControls.TreeNode" />コントロールがデータ バインドします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.TreeView.SetNodeDataBound%2A>を示すためにメソッドかどうか、指定した<xref:System.Web.UI.WebControls.TreeNode>データ バインドされています。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><see cref="M:System.Web.UI.WebControls.TreeView.SetNodeDataBound(System.Web.UI.WebControls.TreeNode,System.Boolean)" />から派生したコントロールを許可するメソッドが用意されて、<see cref="T:System.Web.UI.WebControls.TreeView" />コントロール設定を<see cref="P:System.Web.UI.WebControls.TreeNode.DataBound" />ノードのプロパティです。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="SetNodeDataItem">
      <MemberSignature Language="C#" Value="protected void SetNodeDataItem (System.Web.UI.WebControls.TreeNode node, object dataItem);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetNodeDataItem(class System.Web.UI.WebControls.TreeNode node, object dataItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.SetNodeDataItem(System.Web.UI.WebControls.TreeNode,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Web.UI.WebControls.TreeNode" />
        <Parameter Name="dataItem" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="node">設定する <see cref="T:System.Web.UI.WebControls.TreeNode" />。</param>
        <param name="dataItem"><see cref="T:System.Web.UI.WebControls.TreeNode" /> のデータ項目。</param>
        <summary>派生クラスが、指定されたデータ項目を設定できるように<see cref="T:System.Web.UI.WebControls.TreeNode" />コントロール。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.TreeView.SetNodeDataItem%2A>メソッドに指定されたデータ項目を指定して<xref:System.Web.UI.WebControls.TreeNode>コントロール。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetNodeDataPath">
      <MemberSignature Language="C#" Value="protected void SetNodeDataPath (System.Web.UI.WebControls.TreeNode node, string dataPath);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetNodeDataPath(class System.Web.UI.WebControls.TreeNode node, string dataPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.SetNodeDataPath(System.Web.UI.WebControls.TreeNode,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Web.UI.WebControls.TreeNode" />
        <Parameter Name="dataPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="node">設定する <see cref="T:System.Web.UI.WebControls.TreeNode" />。</param>
        <param name="dataPath"><see cref="T:System.Web.UI.WebControls.TreeNode" /> のデータ パス。</param>
        <summary>派生クラスが、指定されたデータのパスを設定できるように<see cref="T:System.Web.UI.WebControls.TreeNode" />コントロール。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、 <xref:System.Web.UI.WebControls.TreeView.SetNodeDataPath%2A> 、指定のデータ パスを設定するメソッドを<xref:System.Web.UI.WebControls.TreeNode>コントロール。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowCheckBoxes">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeTypes ShowCheckBoxes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.TreeNodeTypes ShowCheckBoxes" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.ShowCheckBoxes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeTypes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または各種類のノードのチェック ボックスが表示されますを示す値を設定、<see cref="T:System.Web.UI.WebControls.TreeView" />コントロール。</summary>
        <value><see cref="T:System.Web.UI.WebControls.TreeNodeTypes" /> 値のビットごとの組み合わせ。 既定値は、<see langword="TreeNodeType.None" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 複数のノードの選択のサポートを提供する、<xref:System.Web.UI.WebControls.TreeView>コントロール、イメージ ノードの横のチェック ボックスを表示することができます。 使用して、<xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A>各種類のノードのチェック ボックスが表示を指定するプロパティです。 たとえば、このプロパティに設定`TreeNodeType.Parent`ツリーで各親ノードのチェック ボックスが表示されます。 次の表は、このプロパティの有効な値を一覧表示します。  
  
|ノード型|説明|  
|---------------|-----------------|  
|`TreeNodeType.All`|すべてのノードのチェック ボックスが表示されます。|  
|`TreeNodeType.Leaf`|すべてのリーフ ノードの場合は、チェック ボックスが表示されます。|  
|`TreeNodeType.None`|チェック ボックスは表示されません。|  
|`TreeNodeType.Parent`|すべての親ノードのチェック ボックスが表示されます。|  
|`TreeNodeType.Root`|すべてのルート ノードのチェック ボックスが表示されます。|  
  
 列挙型に使用される、<xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A>プロパティはフラグ列挙体は、ビットごとの演算を使用して値を結合することができます。 たとえば、表示するには、親ノードおよびリーフ ノードのチェック ボックスを使用してビットごとの OR 演算子を結合する、`TreeNodeType.Parent`と`TreeNodeType.Leaf`値。  
  
 対象のノードのチェック ボックスを利用するかどうかのノードを選択すると、反復処理する、<xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A>コレクション。  
  
> [!NOTE]
>  オーバーライドすることができます、<xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A>設定して、<xref:System.Web.UI.WebControls.TreeNode.ShowCheckBox%2A>各ノードのプロパティです。  
  
 単一選択のみをサポートする必要がある場合は、使用を検討して、<xref:System.Web.UI.WebControls.TreeView.SelectedNode%2A>プロパティです。  
  
 このプロパティの値は、ビュー ステートに格納されます。  
  
   
  
## Examples  
 次のコード例を使用する方法を示しています、<xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A>プロパティを表示して、別のノードの種類のチェック ボックスを非表示にします。  
  
 [!code-aspx-csharp[TreeViewShowCheckBoxes#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewShowCheckBoxes/CS/treeviewshowcheckboxescs.aspx#1)]
 [!code-aspx-vb[TreeViewShowCheckBoxes#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewShowCheckBoxes/VB/treeviewshowcheckboxesvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">ビットごとの組み合わせの値は、範囲の<see cref="T:System.Web.UI.WebControls.TreeNodeTypes" />列挙します。</exception>
      </Docs>
    </Member>
    <Member MemberName="ShowExpandCollapse">
      <MemberSignature Language="C#" Value="public bool ShowExpandCollapse { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowExpandCollapse" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.ShowExpandCollapse" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはノード展開インジケーターが表示されるかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" />ノードのインジケーターです。 展開を表示するにはそれ以外の場合、<see langword="false" />です。 既定値は、<see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ノード展開インジケーターは、ノードが展開された、折りたたまれた、または非展開するかどうかを示すために使用されます。 使用して、<xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A>にノードを展開するインジケーターを表示するかどうかを指定するプロパティ、<xref:System.Web.UI.WebControls.TreeView>コントロール。  
  
 ときに、<xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A>プロパティに設定されている`true`、<xref:System.Web.UI.WebControls.TreeView>コントロールは、プラス記号 (+) またはマイナス記号 (-) を示すかどうか、ノードが展開可能な折りたたみ可能なまたは拡張不可能、それぞれのノードの横にあるプレース ホルダー イメージが表示されます。 最初の設定によってカスタム イメージを指定することができます、<xref:System.Web.UI.WebControls.TreeView.ImageSet%2A>プロパティを`TreeViewImageSet.Custom`、し、設定、 <xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>、 <xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>、および<xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A>プロパティをカスタム イメージの Url。 イメージが指定されていない場合、既定のイメージが使用されます。  
  
 このプロパティの値は、ビュー ステートに格納されます。  
  
   
  
## Examples  
 次のコード例を使用する方法を示しています、<xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A>プロパティを表示し、拡張ノードのアイコンを非表示にします。  
  
 [!code-aspx-csharp[TreeViewShowExpandCollapse#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewShowExpandCollapse/CS/treeviewshowexpandcollapsecs.aspx#1)]
 [!code-aspx-vb[TreeViewShowExpandCollapse#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewShowExpandCollapse/VB/treeviewshowexpandcollapsevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowLines">
      <MemberSignature Language="C#" Value="public bool ShowLines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowLines" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.ShowLines" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または親ノードに子ノードを結ぶ線を表示するかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" />ノードを接続する線を表示するにはそれ以外の場合、<see langword="false" />です。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.TreeView.ShowLines%2A>プロパティの親ノードに子ノードを接続している線を表示するかどうかを指定します。 このプロパティを設定すると`true`、<xref:System.Web.UI.WebControls.TreeView>コントロールで指定された Web にアクセスできるフォルダーから、検索、<xref:System.Web.UI.WebControls.TreeView.LineImagesFolder%2A>線イメージのプロパティです。  
  
> [!NOTE]
>  場合、<xref:System.Web.UI.WebControls.TreeView.LineImagesFolder%2A>プロパティが設定されていない、<xref:System.Web.UI.WebControls.TreeView>コントロールが組み込まれており、既定のイメージ (20 × 20 ピクセル単位) を使用します。  
  
 このプロパティの値は、ビュー ステートに格納されます。  
  
   
  
## Examples  
 次のコード例を使用する方法を示しています、<xref:System.Web.UI.WebControls.TreeView.ShowLines%2A>内のノードを結ぶ線を表示するプロパティを<xref:System.Web.UI.WebControls.TreeView>コントロール。 線のイメージのセットを作成し、サンプル アプリケーションのディレクトリ内である LineImages をという名前のフォルダーに配置する線デザイナー ツールを使用することを確認します。  
  
 [!code-aspx-csharp[TreeViewLineImagesFolderUrl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewLineImagesFolderUrl/CS/treeviewlineimagesfolderurlcs.aspx#1)]
 [!code-aspx-vb[TreeViewLineImagesFolderUrl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewLineImagesFolderUrl/VB/treeviewlineimagesfolderurlvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SkipLinkText">
      <MemberSignature Language="C#" Value="public string SkipLinkText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SkipLinkText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.SkipLinkText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはコントロールのコンテンツをスキップするスクリーン リーダー用の代替テキストを表示するために使用される値を設定します。</summary>
        <value>ある文字列、<see cref="T:System.Web.UI.WebControls.TreeView" />スクリーン リーダーにヒントとしてを非表示イメージの代替テキストとして表示します。 既定値は「スキップ ナビゲーション リンク」</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView.SkipLinkText%2A>プロパティは、Web ページを増減したりアクセスできるようにする設定できるプロパティです。 繰り返し出現するコンテンツを含む web ページは、ユーザーのスクリーン リーダー読み上げられるからコンテンツをスキップするためのメカニズムを提供できます。  
  
 <xref:System.Web.UI.WebControls.TreeView>コントロールには、<xref:System.Web.UI.WebControls.TreeView.SkipLinkText%2A>スクリーン リーダーでスキップするのには、全体の制御方法としてのプロパティです。 場合、<xref:System.Web.UI.WebControls.TreeView.SkipLinkText%2A>プロパティが設定されて、代替テキストを非表示の画像をレンダリングすると、コントロールの端にジャンプするためのオプションをユーザーに提供します。 スクリーン リーダーを読み上げる代替テキスト、イメージが 1 つだけのピクセルのスペースを占有します。 ページのレンダリングをピクセル正確に制御を設定、<xref:System.Web.UI.WebControls.TreeView.SkipLinkText%2A>プロパティを空の文字列 ("") し、ツリーをスキップする、独自のメカニズムを提供します。  
  
 <xref:System.Web.UI.WebControls.TreeView.SkipLinkText%2A>プロパティが既定では、コントロールは省略スクリーン リーダーを空の文字列に設定します。  
  
 このプロパティの値は、ビュー ステートに格納されます。  
  
 このプロパティの値を設定すると、デザイナーのツールを使用して、リソース ファイルに自動的に保存できます。 詳細については、次を参照してください。<xref:System.ComponentModel.LocalizableAttribute>と[グローバリゼーションとローカリゼーション](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.ICallbackEventHandler.GetCallbackResult">
      <MemberSignature Language="C#" Value="string ICallbackEventHandler.GetCallbackResult ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.Web.UI.ICallbackEventHandler.GetCallbackResult() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.System#Web#UI#ICallbackEventHandler#GetCallbackResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>コントロールを対象とするコールバック イベントの結果を返します。</summary>
        <returns>コールバックの結果。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView>制御を実装、<xref:System.Web.UI.ICallbackEventHandler>使用してインターフェイス、<xref:System.Web.UI.WebControls.TreeView.RaisePostBackEvent%2A>データを取得して<xref:System.Web.UI.WebControls.TreeView.GetCallbackResult%2A>をコントロールに取得したデータを返すメソッド。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent">
      <MemberSignature Language="C#" Value="void ICallbackEventHandler.RaiseCallbackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">イベント ハンドラーに渡すオプションのイベント引数を表す文字列。</param>
        <summary>指定した引数を使用して、コールバック イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コントロールの開発者がオーバーライドする必要があります、<xref:System.Web.UI.WebControls.TreeView.RaiseCallbackEvent%2A>メソッドです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackDataHandler.LoadPostData">
      <MemberSignature Language="C#" Value="bool IPostBackDataHandler.LoadPostData (string postDataKey, System.Collections.Specialized.NameValueCollection postCollection);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Web.UI.IPostBackDataHandler.LoadPostData(string postDataKey, class System.Collections.Specialized.NameValueCollection postCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="postDataKey" Type="System.String" />
        <Parameter Name="postCollection" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="postDataKey">コントロールのキー識別子。</param>
        <param name="postCollection">すべての着信名前値のコレクション。</param>
        <summary><see cref="T:System.Web.UI.WebControls.TreeView" /> コントロールのポストバック データを処理します。</summary>
        <returns>
          <see langword="true" />、場合、<see cref="T:System.Web.UI.WebControls.TreeView" />コントロールの状態の変更、ポストバック イベントの結果としてそれ以外の場合、<see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コントロールの開発者がオーバーライドする必要があります、<xref:System.Web.UI.WebControls.TreeView.LoadPostData%2A>メソッドです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent">
      <MemberSignature Language="C#" Value="void IPostBackDataHandler.RaisePostDataChangedEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>信号、<see cref="T:System.Web.UI.WebControls.TreeView" />コントロールの状態が変更されたことを ASP.NET アプリケーションに通知を制御します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コントロールの開発者がオーバーライドする必要があります、<xref:System.Web.UI.WebControls.TreeView.RaisePostDataChangedEvent%2A>メソッドです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackEventHandler.RaisePostBackEvent">
      <MemberSignature Language="C#" Value="void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">イベント ハンドラーに渡すオプションのイベント引数を表す文字列。</param>
        <summary>により、<see cref="T:System.Web.UI.WebControls.TreeView" />フォームがサーバーにポストされたときに発生するイベントを処理するコントロール。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コントロールの開発者がオーバーライドする必要があります、<xref:System.Web.UI.WebControls.TreeView.RaisePostBackEvent%2A>メソッドです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TagKey">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.HtmlTextWriterTag TagKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.HtmlTextWriterTag TagKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.TagKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterTag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.TreeView" /> コントロールの <see cref="T:System.Web.UI.HtmlTextWriterTag" /> 値を取得します。</summary>
        <value>常に返します、<see cref="F:System.Web.UI.HtmlTextWriterTag.Div" />値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView.TagKey%2A>プロパティでは、適切な HTML マークアップを記述する出力ストリーム、<xref:System.Web.UI.WebControls.TreeView>コントロール。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>オーバーライドすることができます、<see cref="P:System.Web.UI.WebControls.TreeView.TagKey" />プロパティを指定する<see cref="T:System.Web.UI.HtmlTextWriterTag" />派生したコントロールに使用する値。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Target">
      <MemberSignature Language="C#" Value="public string Target { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Target" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.Target" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定、ターゲットのウィンドウまたはフレームをノードに関連付けられている Web ページの内容を表示します。</summary>
        <value>リンクされた Web ページの内容を表示する対象のウィンドウまたはフレーム。 値で始めなければなりません A Z からの範囲の文字 (大文字小文字を区別しない)、次の表に示すように、アンダー スコアで始まる特殊な値を除く。  
  
 <list type="table"><listheader><term>対象の値  
  
 </term><description>内容を表示します。  
  
 </description></listheader><item><term><see langword="_blank" /></term><description>フレームを使用せず、新しいウィンドウ  
  
 </description></item><item><term><see langword="_parent" /></term><description>直前のフレーム セットの親です。  
  
 </description></item><item><term><see langword="_search" /></term><description>検索ペイン。  
  
 </description></item><item><term><see langword="_self" /></term><description>フォーカスのあるフレーム。  
  
 </description></item><item><term><see langword="_top" /></term><description>フル ウィンドウ フレームなしです。  
  
 </description></item></list><block subset="none" type="note"><para>  
 ブラウザーのマニュアルを参照するかどうかを<see langword="_search" />値はサポートされています。  たとえば、Microsoft Internet Explorer 5.0 を後でサポートしており、<see langword="_search" />ターゲット値。  
  
</para></block>  
  
 既定値は空の文字列 ("")、ウィンドウまたはフォーカスのあるフレームが更新されます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.TreeView.Target%2A>ウィンドウまたはフレームを表示するために、Web のコンテンツを指定するプロパティをそのノードがクリックされたときに、ノードにリンクします。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.TreeView.Target%2A>としてプロパティを表示、`target`属性。 `target`属性`anchor`要素は、XHTML 1.1 ドキュメント型定義で許可されていません。 設定しないでください、<xref:System.Web.UI.WebControls.TreeView.Target%2A>プロパティの場合に表示される出力、 <xref:System.Web.UI.WebControls.TreeView> XHTML 1.1 を準拠にする必要があります。 詳細については、次を参照してください。 [Visual Studio および ASP.NET で XHTML 標準](http://msdn.microsoft.com/library/1b78d416-66bb-43a5-ac77-c703aab55b97)です。  
>   
>  ユーザー補助対応の Web ページを作成するときに使用しないように、<xref:System.Web.UI.WebControls.TreeView.Target%2A>を別のウィンドウを対象とするプロパティです。 詳細については、次を参照してください。 [ASP.NET コントロールやアクセシビリティ](http://msdn.microsoft.com/library/847a37e3-ce20-41da-b0d3-7dfb0fdae9a0)です。  
  
 このプロパティの値は、ビュー ステートに格納されます。  
  
   
  
## Examples  
 次のコード例を使用する方法を示しています、<xref:System.Web.UI.WebControls.TreeView.Target%2A>プロパティ ノードがクリックしてされたときに、新しいウィンドウでノードにリンクされている Web コンテンツを表示します。  
  
 [!code-aspx-csharp[TreeViewTarget#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewTarget/CS/treeviewtargetcs.aspx#1)]
 [!code-aspx-vb[TreeViewTarget#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewTarget/VB/treeviewtargetvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.TrackViewState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ビュー ステートの変更を追跡、<see cref="T:System.Web.UI.WebControls.TreeView" />制御で保存できるように、<see cref="T:System.Web.UI.StateBag" />コントロールのオブジェクト。 これは、<see cref="T:System.Web.UI.StateBag" />経由でアクセスでき、<see cref="P:System.Web.UI.Control.ViewState" />プロパティです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView.TrackViewState%2A>コントロールのビュー ステートの一部としてコントロールに対する変更の追跡と保存を開始する開始位置をマークするメソッドをオーバーライドします。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TreeNodeCheckChanged">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.TreeNodeEventHandler TreeNodeCheckChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.TreeNodeEventHandler TreeNodeCheckChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>内のチェック ボックスのときに発生、<see cref="T:System.Web.UI.WebControls.TreeView" />コントロールは、サーバーへのポスト間の状態を変更します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged>イベントは、チェック ボックスで、<xref:System.Web.UI.WebControls.TreeView>コントロールは、サーバーへのポスト間の状態を変更します。 これにより、このイベントが発生するたびに、データベースまたは、表示されているコンテンツの更新など、カスタムのルーチンを実行するイベント処理メソッドを提供できます。  
  
 場合でも、<xref:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged>イベントが発生したポスト バックのチェック ボックスを変更するは発生しませんポスト バックします。  
  
 イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。  
  
   
  
## Examples  
 次のコード例を使用する方法を示しています、<xref:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged>を更新するイベント、<xref:System.Web.UI.WebControls.Label>タイミングを制御のチェック ボックス、<xref:System.Web.UI.WebControls.TreeView>コントロールは、サーバーへのポスト間の状態を変更します。  
  
 [!code-aspx-csharp[TreeViewCheckChanged#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewCheckChanged/CS/treeviewcheckchangedcs.aspx#1)]
 [!code-aspx-vb[TreeViewCheckChanged#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewCheckChanged/VB/treeviewcheckchangedvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TreeNodeCollapsed">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.TreeNodeEventHandler TreeNodeCollapsed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.TreeNodeEventHandler TreeNodeCollapsed" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ノードが折りたたまれているときに発生、<see cref="T:System.Web.UI.WebControls.TreeView" />コントロール。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed>でノードが折りたたまれているときにイベントが発生した、<xref:System.Web.UI.WebControls.TreeView>コントロール。 これにより、このイベントが発生するたびに、カスタム ルーチンを実行するイベント処理メソッドを提供できます。  
  
 イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。  
  
   
  
## Examples  
 次のコード例を使用する方法を示しています、<xref:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed>の内容を更新するイベント、<xref:System.Web.UI.WebControls.Label>管理ユーザーが内のノードを縮小すると、<xref:System.Web.UI.WebControls.TreeView>コントロール。  
  
 [!code-aspx-csharp[TreeViewTreeNodeExpand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewTreeNodeExpand/CS/treeviewtreenodeexpandcs.aspx#1)]
 [!code-aspx-vb[TreeViewTreeNodeExpand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewTreeNodeExpand/VB/treeviewtreenodeexpandvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TreeNodeDataBound">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.TreeNodeEventHandler TreeNodeDataBound;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.TreeNodeEventHandler TreeNodeDataBound" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.TreeView.TreeNodeDataBound" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データ項目が内のノードにバインドされているときに発生、<see cref="T:System.Web.UI.WebControls.TreeView" />コントロール。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView.TreeNodeDataBound>イベントは、データ項目が内のノードにバインドされている場合、<xref:System.Web.UI.WebControls.TreeView>コントロール。 これにより、このイベントが発生するたびに、カスタム ルーチンを実行するイベント処理メソッドを提供できます。  
  
 イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。  
  
   
  
## Examples  
 このセクションには、2 つのコード例が含まれています。 最初のコード例を使用する方法を示しています、<xref:System.Web.UI.WebControls.TreeView.TreeNodeDataBound>をいくつかの条件が満たされたときに、ノードのイメージを変更するイベントです。 2 番目のコード例では、最初のコード例のサンプル XML データを提供します。  
  
 次のコード例を使用する方法を示しています、<xref:System.Web.UI.WebControls.TreeView.TreeNodeDataBound>をいくつかの条件が満たされたときに、ノードのイメージを変更するイベントです。 この例を正しく動作するには、Book.xml をという名前のファイルにこのコード例の後、サンプルの XML データをコピーする必要があります。 独自のイメージを表示するには、この例を提供することを確認します。  
  
 [!code-aspx-csharp[TreeViewTreeNodeDataBound#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewTreeNodeDataBound/CS/treeviewtreenodedataboundcs.aspx#1)]
 [!code-aspx-vb[TreeViewTreeNodeDataBound#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewTreeNodeDataBound/VB/treeviewtreenodedataboundvb.aspx#1)]  
  
 次のコード例では、前のコード例のサンプル XML データを提供します。  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1">  
        </Section>  
        <Section Heading="Section 2">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TreeNodeExpanded">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.TreeNodeEventHandler TreeNodeExpanded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.TreeNodeEventHandler TreeNodeExpanded" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.TreeView.TreeNodeExpanded" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>内のノードが展開されたときに発生、<see cref="T:System.Web.UI.WebControls.TreeView" />コントロール。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded>でノードが展開されると、イベントが発生、<xref:System.Web.UI.WebControls.TreeView>コントロール。 これにより、このイベントが発生するたびに、カスタム ルーチンを実行するイベント処理メソッドを提供できます。  
  
> [!NOTE]
>  場合、<xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A>ノードのプロパティに設定されて`TreeNodeSelectAction.Expand`または`TreeNodeSelectAction.SelectExpand`、<xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded>でそのノードがクリックされたときにも、イベントが発生、<xref:System.Web.UI.WebControls.TreeView>コントロール。  
  
 イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。  
  
   
  
## Examples  
 次のコード例を使用する方法を示しています、<xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded>の内容を更新するイベント、<xref:System.Web.UI.WebControls.Label>管理ユーザーが内のノードを展開するときに、<xref:System.Web.UI.WebControls.TreeView>コントロール。  
  
 [!code-aspx-csharp[TreeViewTreeNodeExpand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewTreeNodeExpand/CS/treeviewtreenodeexpandcs.aspx#1)]
 [!code-aspx-vb[TreeViewTreeNodeExpand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewTreeNodeExpand/VB/treeviewtreenodeexpandvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TreeNodePopulate">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.TreeNodeEventHandler TreeNodePopulate;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.TreeNodeEventHandler TreeNodePopulate" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.TreeView.TreeNodePopulate" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ノードをときに発生、<see cref="P:System.Web.UI.WebControls.TreeNode.PopulateOnDemand" />プロパティに設定<see langword="true" />で展開されて、<see cref="T:System.Web.UI.WebControls.TreeView" />コントロール。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 場合によっては、データのサイズまたはユーザーの入力に依存するカスタム コンテンツのためのツリー構造を静的に事前に定義することは実用的ではありません。 このため、<xref:System.Web.UI.WebControls.TreeView>コントロールは、動的なノードをサポートしています。 ときに、<xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A>ノードのプロパティに設定`true`、そのノードが実行時に、ノードが展開されている設定を取得します。  
  
 ノードを動的に設定するを最初に設定、<xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A>のノードにプロパティ`true`です。 イベント処理メソッドを次に、定義、<xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate>プログラムによって、ノードのメンバーを追加するイベントです。 一般的なイベント処理メソッド ノードのデータをデータ ソースから取得、ノードの構造にデータを置くし、するノード構造を追加、<xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A>登録されているノードのコレクション。 追加することによって、ノードの構造が作成された<xref:System.Web.UI.WebControls.TreeNode>オブジェクトを<xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A>親ノードのコレクション。  
  
> [!NOTE]
>  ときに、<xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A>ノードのプロパティに設定されて`true`ノードを動的に設定する必要があります。 別のノード下に入れ子に宣言できません。それ以外の場合、ページで、エラーが発生します。  
  
 サポートされているブラウザー (Internet Explorer 4.0 と互換性のあるブラウザーおよびそれ以降) のクライアント側のノードの母集団のも利用できます。 これにより、有効にすると、<xref:System.Web.UI.WebControls.TreeView>が原因で、サーバーに投稿する必要がそのノードを展開すると、場合に、クライアントで動的にノードを設定するコントロール。 クライアント側のノードのカタログ作成の詳細については、次を参照してください。<xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A>です。  
  
 イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。  
  
   
  
## Examples  
 次のコード例を使用する方法を示しています、<xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate>でノードを作成するイベント、<xref:System.Web.UI.WebControls.TreeView>サーバー上で動的に管理します。 注意して、<xref:System.Web.UI.WebControls.TreeView.EnableClientScript%2A>プロパティに設定されている`false`を展開するノードのイベントが、クライアントで処理されていることを防ぐためにします。  
  
 [!code-aspx-csharp[TreeViewTreeNodePopulate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewTreeNodePopulate/CS/treeviewtreenodepopulatecs.aspx#1)]
 [!code-aspx-vb[TreeViewTreeNodePopulate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewTreeNodePopulate/VB/treeviewtreenodepopulatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public override bool Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.Visible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定 ページで、コントロールが UI としてレンダリングされているかどうかを示す値。</summary>
        <value>
          <see langword="true" />、、コントロールがページに表示される場合それ以外の場合、<see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 場合、<xref:System.Web.UI.WebControls.TreeView.Visible%2A>プロパティに設定されている`false`コントロールは表示されません。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
