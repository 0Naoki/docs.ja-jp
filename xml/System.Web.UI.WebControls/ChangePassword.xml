<Type Name="ChangePassword" FullName="System.Web.UI.WebControls.ChangePassword">
  <TypeSignature Language="C#" Value="public class ChangePassword : System.Web.UI.WebControls.CompositeControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ChangePassword extends System.Web.UI.WebControls.CompositeControl implements class System.Web.UI.INamingContainer" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.ChangePassword" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.CompositeControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("ChangedPassword")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.ChangePasswordDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Web サイトのパスワードを変更するためのユーザー インターフェイスを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このトピックの内容  
  
-   [はじめに](#Introduction)  
  
-   [電子メール メッセージを送信します。](#sending_email_messages)  
  
-   [ビュー](#views)  
  
-   [スタイルおよびテンプレート](#styles_and_templates)  
  
-   [検証のグループ化](#validation_groupings)  
  
-   [アクセス キーとタブのインデックス](#access_keys_and_tab_indexes)  
  
-   [ユーザー補助](#accessibility)  
  
-   [Page_Load と Page_Init 中のコントロールにアクセスします。](#accessing_controls_during_page_load_and_page_init)  
  
-   [CSS スタイルを適用します。](#applying_styles)  
  
-   [宣言の構文 #](#DeclarativeSyntax)  
  
<a name="Introduction"></a>   
## <a name="introduction"></a>はじめに  
 使用して、 <xref:System.Web.UI.WebControls.ChangePassword> Web サイトにログオンを使用して、パスワードを変更する、Web サイトのユーザーを有効にする ページで制御します。  
  
> [!NOTE]
>  ASP.NET で使用できるログイン コントロールのセットに慣れていない場合は、読み取り[ASP.NET ログイン コントロールの概要](http://msdn.microsoft.com/library/ac032230-6469-4b03-b68d-03ef2643a24d)続行する前にします。 ログイン コントロールおよびメンバーシップに関連するその他のトピックの一覧は、次を参照してください。[メンバーシップを使用したユーザーを管理する](http://msdn.microsoft.com/library/824c3a24-f0af-427c-a652-0d2d1e9397cd)です。  
  
> [!IMPORTANT]
>  潜在的なセキュリティの脅威は、HTTP 経由でのパスワードを送信します。 HTTP 伝送は、悪意のあるユーザーが危険にさらさまたは表示できます。 ログイン コントロールを使用する場合にセキュリティを強化するのにには、ポストバック中に、ユーザーのパスワードを読み取ることができないことを確認するのに安全な sockets layer (SSL) 暗号化で HTTPS プロトコルを使用してください。 詳細については、次を参照してください。[ログイン コントロールのセキュリティで保護する](http://msdn.microsoft.com/library/d85075bc-9c1a-4453-8a0c-539b10853c9c)です。  
  
 <xref:System.Web.UI.WebControls.ChangePassword>コントロールで定義されたメンバーシップ プロバイダーを使用して、 <xref:System.Web.UI.WebControls.ChangePassword.MembershipProvider%2A> Web サイトのメンバーシップ プロバイダー データ ストアに格納されているパスワードを変更するプロパティです。 メンバーシップ プロバイダーを割り当てない場合、<xref:System.Web.UI.WebControls.ChangePassword>コントロールは、Web.config ファイルのセクションで定義されている既定のメンバーシップ プロバイダーを使用します。 <xref:System.Web.UI.WebControls.ChangePassword>コントロールにより、ユーザーは、次の操作を実行します。  
  
-   ログオンしている場合は、自分のパスワードを変更します。  
  
-   ページを格納している限り、これらは、ログオンしていない場合、パスワードの変更、<xref:System.Web.UI.WebControls.ChangePassword>コントロールは、匿名アクセスを許可し、<xref:System.Web.UI.WebControls.ChangePassword.DisplayUserName%2A>プロパティは`true`します。  
  
-   別のユーザーとしてログオンしている場合でも、ユーザー アカウントのパスワードを変更します。 これは、必要があります、<xref:System.Web.UI.WebControls.ChangePassword.DisplayUserName%2A>プロパティを`true`です。  
  
 設定、<xref:System.Web.UI.WebControls.ChangePassword.DisplayUserName%2A>プロパティを`true`により、ユーザー名を入力するユーザー [ユーザー名] テキスト ボックスが表示されます。 ユーザーがログオンした場合、<xref:System.Web.UI.WebControls.ChangePassword.UserName%2A>ログオン ユーザーの名前を持つコントロールに入力されます。 特定のユーザー名のパスワードを変更した後、ユーザーがログオンして変更されたパスワードに関連付けられているアカウントにでも、ユーザーがログオンしていない場合そのアカウントに以前です。  
  
> [!IMPORTANT]
>  ユーザー入力を受け付けるは、潜在的なセキュリティ脅威です。 悪意のあるユーザーは、上の脆弱性を公開するか、またはプログラムを実行するためのものでは、データは、自動生成されたパスワードを再試行してください。 送信できます。 セキュリティを向上させるには、ユーザー入力を使用する場合をするには、コントロールの検証機能を使用し、コントロール用に構成されているすべてのデータ プロバイダーをセキュリティで保護します。 詳細については、次を参照してください。[ログイン コントロールのセキュリティで保護する](http://msdn.microsoft.com/library/d85075bc-9c1a-4453-8a0c-539b10853c9c)、 [Web アプリケーション用の基本的なセキュリティ プラクティス](http://msdn.microsoft.com/library/3eeeee9e-b09f-4c7f-8ce5-d9ca1f9322ad)、および[セキュリティで保護するメンバーシップ](http://msdn.microsoft.com/library/2dab2012-c278-426a-bb0d-93b260c428a7)です。  
  
<a name="sending_email_messages"></a>   
## <a name="sending-e-mail-messages"></a>電子メール メッセージを送信します。  
 <xref:System.Web.UI.WebControls.ChangePassword>をユーザーに新しいパスワードを送信する電子メール サービスを使用するコントロールを構成することができます。 ASP.NET Web サーバー コントロールのいずれかからユーザーに電子メール メッセージを送信するには、アプリケーションの Web.config ファイルで電子メール サーバーを構成する必要があります。 詳細については、次を参照してください。 [NIB: 方法: インストールと構成内の SMTP 仮想サーバー IIS 6.0](http://msdn.microsoft.com/en-us/ed204b58-24af-47d0-9687-60e5df5f17f8)です。  
  
 使用して電子メール メッセージは、構成、<xref:System.Web.UI.WebControls.MailDefinition>クラスです。 設定する必要があります、<xref:System.Web.UI.WebControls.MailDefinition.BodyFileName%2A>プロパティ電子メールを送信する ASP.NET に指示します。  
  
> [!IMPORTANT]
>  ユーザー アカウント名またはパスワードを電子メールで潜在的なセキュリティの脅威を送信しています。 電子メール メッセージでは、プレーン テキストで送信される通常と、アプリケーションを「見つけ出す」特殊なネットワークで読み取ることができます。 セキュリティを強化するに記載されている緩和策を使用して[ログイン コントロールのセキュリティで保護する](http://msdn.microsoft.com/library/d85075bc-9c1a-4453-8a0c-539b10853c9c)です。  
  
> [!NOTE]
>  ユーザーが受信または電子メール メッセージを表示することを保証することはできません。 ユーザーがメッセージを受信したことを確認するには、ユーザーが通知を受信したことを確認できる、電子メール メッセージに確認のリンクを提供します。  
  
<a name="views"></a>   
## <a name="views"></a>ビュー  
 <xref:System.Web.UI.WebControls.ChangePassword>コントロールが 2 つの状態、またはビュー。  
  
-   パスワードの変更ビューは、現在のパスワードを要求し、2 回確認の新しいパスワードを入力する必要があります。 自分のパスワードを変更するには、設定にログオンしていないユーザーを許可する場合、<xref:System.Web.UI.WebControls.ChangePassword.DisplayUserName%2A>プロパティを`true`を表示する、<xref:System.Web.UI.WebControls.ChangePassword.UserName%2A>パスワードの変更 ビューでコントロール。 <xref:System.Web.UI.WebControls.ChangePassword.UserName%2A>コントロールにより、ユーザーにユーザーが登録されているユーザー名を入力します。 パスワードを変更するときにエラーがある場合は、パスワードの変更 ビューで、もう一度実行するユーザーを許可するエラー メッセージが表示されます。  
  
-   成功した場合は、パスワードが変更されたことを伝える確認メッセージを表示します。  
  
    > [!IMPORTANT]
    >  パスワードを変更して続行、およびキャンセルの機能は、どのビューに関係なく、ボタンが配置されて、適切なコマンド名を持つ任意のボタンに関連付けられます。 たとえば、値を持つボタン`commandname=changepassword`が成功したビューがするとき、パスワードを変更し、例外が発生します。  
  
<a name="styles_and_templates"></a>   
## <a name="styles-and-templates"></a>スタイルおよびテンプレート  
 外観をカスタマイズする、幅広いスタイル プロパティのセットを使用することができます、<xref:System.Web.UI.WebControls.ChangePassword>コントロール。 または、するカスタム テンプレートを適用 2 つのビューの外観の制御を完了する必要がある場合、<xref:System.Web.UI.WebControls.ChangePassword>コントロール。 概要については、テンプレートを定義する場合、<xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A>プロパティが適用されます。 テンプレートの表示に設定する必要があります、コントロールの一覧は、次を参照してください。、<xref:System.Web.UI.WebControls.ChangePassword.ChangePasswordTemplate%2A>と<xref:System.Web.UI.WebControls.ChangePassword.SuccessTemplate%2A>プロパティです。 <xref:System.Web.UI.WebControls.ChangePassword>コントロール テンプレートの内容を検査し、必要なコントロールが見つからない、名前が付いていない正しく、または間違った型の場合、例外をスローします。 テンプレートとセット内のコンテンツを使用する場合など、<xref:System.Web.UI.WebControls.ChangePassword.DisplayUserName%2A>プロパティを`true`、<xref:System.Web.UI.WebControls.ChangePassword>場合に例外をスロー、<xref:System.Web.UI.WebControls.TextBox>やその他<xref:System.Web.UI.IEditableTextControl>ユーザー名のコントロールが見つかりません。  
  
 次の表、<xref:System.Web.UI.WebControls.ChangePassword>スタイル プロパティを制御し、影響を与えるのどの UI 要素について説明します。 各スタイルを適用するプロパティの一覧は、個々 のスタイル プロパティを参照してください。  
  
|<xref:System.Web.UI.WebControls.ChangePassword>スタイル プロパティ|UI 要素|  
|----------------------------------------------------------------------------------------------------------------------------------------------------------------------|----------------|  
|<xref:System.Web.UI.WebControls.ChangePassword.CancelButtonStyle%2A>|パスワードの変更 ビューの キャンセル ボタンです。|  
|<xref:System.Web.UI.WebControls.ChangePassword.ChangePasswordButtonStyle%2A>|パスワードの変更 ビューでのパスワード ボタンを変更します。|  
|<xref:System.Web.UI.WebControls.ChangePassword.ContinueButtonStyle%2A>|成功ビューのボタンを続行します。|  
|<xref:System.Web.UI.WebControls.ChangePassword.FailureTextStyle%2A>|ユーザーに表示されるエラー テキスト。|  
|<xref:System.Web.UI.WebControls.ChangePassword.HyperLinkStyle%2A>|他のページへのハイパーリンクをします。|  
|<xref:System.Web.UI.WebControls.ChangePassword.InstructionTextStyle%2A>|使用する方法を説明するページ上の説明テキスト、<xref:System.Web.UI.WebControls.ChangePassword>コントロール。|  
|<xref:System.Web.UI.WebControls.ChangePassword.LabelStyle%2A>|テキスト ボックスなどのすべての入力フィールドのラベル。|  
|<xref:System.Web.UI.WebControls.ChangePassword.PasswordHintStyle%2A>|Web サイトの許容可能なパスワードを提供するためのヒント。|  
|<xref:System.Web.UI.WebControls.ChangePassword.SuccessTextStyle%2A>|パスワードが正常に変更されたときに、ユーザーに表示されるテキスト。|  
|<xref:System.Web.UI.WebControls.ChangePassword.TextBoxStyle%2A>|テキスト入力の入力フィールド|  
|<xref:System.Web.UI.WebControls.ChangePassword.TitleTextStyle%2A>|パスワードの変更状況と成功状態ビューのタイトル。|  
  
<a name="applying_styles"></a>   
## <a name="applying-css-styles"></a>CSS スタイルを適用します。  
 <xref:System.Web.UI.WebControls.ChangePassword>コントロールでは、マークアップで CSS スタイル規則を指定することができます。 外観をカスタマイズするテンプレートを使用する場合、<xref:System.Web.UI.WebControls.ChangePassword>コントロール、テンプレートのマークアップで CSS スタイルを指定できます。 その場合は、他の外側のテーブルは必要ありません。 テーブルが設定して表示されないように、<xref:System.Web.UI.WebControls.ChangePassword.RenderOuterTable%2A>プロパティを`false`です。  
  
<a name="validation_groupings"></a>   
## <a name="validation-groupings"></a>検証のグループ化  
 <xref:System.Web.UI.WebControls.ChangePassword>の他のフィールドと同じページに表示できるように、コントロールが検証グループを使用して、<xref:System.Web.UI.WebControls.ChangePassword>コントロールを個別に検証することができます。 既定では、<xref:System.Web.UI.Control.ID%2A>のプロパティ、<xref:System.Web.UI.WebControls.ChangePassword>コントロールは、検証グループの名前として使用します。 たとえば、 <xref:System.Web.UI.WebControls.ChangePassword> ID を持つコントロール`"ChangePassword1"`の検証グループ名を使用して、`ChangePassword1`もします。 設定する検証をグループ化、<xref:System.Web.UI.WebControls.ChangePassword>コントロールの一部であるコントロールを使用するテンプレートを作成し、検証グループ名を変更する必要があります。  
  
 エラーを表示するメッセージをユーザーが退職した場合、<xref:System.Web.UI.WebControls.TextBox>空制御、追加、<xref:System.Web.UI.WebControls.ValidationSummary>コントロールをページ。 設定、<xref:System.Web.UI.WebControls.ValidationSummary.ValidationGroup%2A>のプロパティ、<xref:System.Web.UI.WebControls.ValidationSummary>コントロールを<xref:System.Web.UI.Control.ID%2A>のプロパティ、<xref:System.Web.UI.WebControls.ChangePassword>コントロール。  
  
<a name="access_keys_and_tab_indexes"></a>   
## <a name="access-keys-and-tab-indexes"></a>アクセス キーとタブのインデックス  
 使用する方法については、<xref:System.Web.UI.WebControls.WebControl.AccessKey%2A>プロパティおよび<xref:System.Web.UI.WebControls.WebControl.TabIndex%2A>のプロパティ、<xref:System.Web.UI.WebControls.ChangePassword>を制御しを参照してください[Visual Studio と ASP.NET のユーザー補助機能](http://msdn.microsoft.com/library/7e3ce9c4-6b7d-4fb1-94b5-72cf2a44fe13)と[ASP.NET コントロールやアクセシビリティ](http://msdn.microsoft.com/library/847a37e3-ce20-41da-b0d3-7dfb0fdae9a0)です。  
  
<a name="accessibility"></a>   
## <a name="accessibility"></a>ユーザー補助  
 ユーザー補助の標準に準拠するマークアップを生成するように、このコントロールを構成する方法については、次を参照してください。 [Visual Studio と ASP.NET のユーザー補助機能](http://msdn.microsoft.com/library/7e3ce9c4-6b7d-4fb1-94b5-72cf2a44fe13)と[ASP.NET コントロールやアクセシビリティ](http://msdn.microsoft.com/library/847a37e3-ce20-41da-b0d3-7dfb0fdae9a0)です。  
  
<a name="accessing_controls_during_page_load_and_page_init"></a>   
## <a name="accessing-controls-during-pageload-and-pageinit"></a>Page_Load と Page_Init 中のコントロールにアクセスします。  
 <xref:System.Web.UI.WebControls.ChangePassword>コントロールのプロパティなどのテキスト ボックス、によって表される<xref:System.Web.UI.WebControls.ChangePassword.UserName%2A>と<xref:System.Web.UI.WebControls.ChangePassword.CurrentPassword%2A>はページのライフ サイクルのすべてのフェーズ中にアクセスします。 具体的には、Page_Init と Page_Load のフェーズ中にこれらのプロパティ値を持つ同じ起動時、<xref:System.Web.UI.WebControls.ChangePassword>コントロールを表示します。 ユーザーがの値を変更した場合、<xref:System.Web.UI.WebControls.ChangePassword.UserName%2A>プロパティを変更して、<xref:System.Web.UI.WebControls.ChangePassword.UserName%2A>テキスト ボックスで、新しい値ができる変更イベントが発生すると、Page_Load フェーズの後に発生します。 そのための値を設定した場合、<xref:System.Web.UI.WebControls.ChangePassword.UserName%2A>フェーズまたは Page_Load Page_Init のプロパティのカスタム ハンドラーを提供し、<xref:System.Web.UI.WebControls.ChangePassword>イベント、ユーザー、すべての変更、<xref:System.Web.UI.WebControls.ChangePassword.UserName%2A>テキスト ボックスは、Page_Init または Page_Load のフェーズでは設定値をオーバーライドします。  
  
<a name="DeclarativeSyntax"></a>   
## <a name="declarative-syntax"></a>宣言型の構文  
  
```  
<asp:ChangePassword  
    AccessKey="string"  
    BackColor="color name|#dddddd"  
    BorderColor="color name|#dddddd"  
    BorderPadding="integer"  
    BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|  
        Inset|Outset"  
    BorderWidth="size"  
    CancelButtonImageUrl="uri"  
    CancelButtonText="string"  
    CancelButtonType="Button|Image|Link"  
    CancelDestinationPageUrl="uri"  
    ChangePasswordButtonImageUrl="uri"  
    ChangePasswordButtonText="string"  
    ChangePasswordButtonType="Button|Image|Link"  
    ChangePasswordFailureText="string"  
    ChangePasswordTitleText="string"  
    ConfirmNewPasswordLabelText="string"  
    ConfirmPasswordCompareErrorMessage="string"  
    ConfirmPasswordRequiredErrorMessage="string"  
    ContinueButtonImageUrl="uri"  
    ContinueButtonText="string"  
    ContinueButtonType="Button|Image|Link"  
    ContinueDestinationPageUrl="uri"  
    CreateUserIconUrl="uri"  
    CreateUserText="string"  
    CreateUserUrl="uri"  
    CssClass="string"  
    DisplayUserName="True|False"  
    EditProfileIconUrl="uri"  
    EditProfileText="string"  
    EditProfileUrl="uri"  
    Enabled="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    Font-Bold="True|False"  
    Font-Italic="True|False"  
    Font-Names="string"  
    Font-Overline="True|False"  
    Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|Medium|  
        Large|X-Large|XX-Large"  
    Font-Strikeout="True|False"  
    Font-Underline="True|False"  
    ForeColor="color name|#dddddd"  
    Height="size"  
    HelpPageIconUrl="uri"  
    HelpPageText="string"  
    HelpPageUrl="uri"  
    ID="string"  
    InstructionText="string"  
    MailDefinition-BodyFileName="uri"  
    MailDefinition-CC="string"  
    MailDefinition-From="string"  
    MailDefinition-IsBodyHtml="True|False"  
    MailDefinition-Priority="Normal|Low|High"  
    MailDefinition-Subject="string"  
    MembershipProvider="string"  
    NewPasswordLabelText="string"  
    NewPasswordRegularExpression="string"  
    NewPasswordRegularExpressionErrorMessage="string"  
    NewPasswordRequiredErrorMessage="string"  
    OnCancelButtonClick="CancelButtonClick event handler"  
    OnChangedPassword="ChangedPassword event handler"  
    OnChangePasswordError="ChangePasswordError event handler"  
    OnChangingPassword="ChangingPassword event handler"  
    OnContinueButtonClick="ContinueButtonClick event handler"  
    OnDataBinding="DataBinding event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnSendingMail="SendingMail event handler"  
    OnSendMailError="SendMailError event handler"  
    OnUnload="Unload event handler"  
    PasswordHintText="string"  
    PasswordLabelText="string"  
    PasswordRecoveryIconUrl="uri"  
    PasswordRecoveryText="string"  
    PasswordRecoveryUrl="uri"  
    PasswordRequiredErrorMessage="string"  
    runat="server"  
    SkinID="string"  
    Style="string"  
    SuccessPageUrl="uri"  
    SuccessText="string"  
    SuccessTitleText="string"  
    TabIndex="integer"  
    ToolTip="string"  
    UserName="string"  
    UserNameLabelText="string"  
    UserNameRequiredErrorMessage="string"  
    Visible="True|False"  
    Width="size"  
>  
        <CancelButtonStyle/>  
        <ChangePasswordButtonStyle/>  
        <ChangePasswordTemplate>  
            <!-- child controls -->  
        </ChangePasswordTemplate>  
        <ContinueButtonStyle/>  
        <FailureTextStyle/>  
        <HyperLinkStyle/>  
        <InstructionTextStyle/>  
        <LabelStyle/>  
        <MailDefinition  
            BodyFileName="uri"  
            CC="string"  
            From="string"  
            IsBodyHtml="True|False"  
            Priority="Normal|Low|High"  
            Subject="string"  
>  
                <EmbeddedObjects>  
                        <asp:EmbeddedMailObject  
                            Name="string"  
                            Path="uri"  
                        />  
                </EmbeddedObjects>  
        </MailDefinition>  
        <PasswordHintStyle/>  
        <SuccessTemplate>  
            <!-- child controls -->  
        </SuccessTemplate>  
        <SuccessTextStyle/>  
        <TextBoxStyle/>  
        <TitleTextStyle/>  
        <ValidatorTextStyle/>  
</asp:ChangePassword>  
```  
  
   
  
## Examples  
 次のコード例は、設定する方法を示します、<xref:System.Web.UI.WebControls.ChangePassword.NewPasswordRegularExpression%2A>プロパティを次の条件を満たしているパスワードをチェックする正規表現を定義します。  
  
-   6 文字よりも大きくなります。  
  
-   少なくとも 1 つの数字を含めます。  
  
-   少なくとも 1 つの特殊 (アルファベット以外の) 文字を含めます。  
  
 含まれているパスワードの要件、<xref:System.Web.UI.WebControls.ChangePassword.PasswordHintText%2A>プロパティは、ユーザーに表示されます。  
  
 ユーザーが入力したパスワードが要件を満たしていないかどうか、<xref:System.Web.UI.WebControls.ChangePassword.NewPasswordRegularExpression%2A>プロパティに含まれるテキスト、<xref:System.Web.UI.WebControls.ChangePassword.NewPasswordRegularExpressionErrorMessage%2A>プロパティは、ユーザーに表示されます。 テキストが含まれる、新しいパスワードを入力しない場合、<xref:System.Web.UI.WebControls.ChangePassword.NewPasswordRequiredErrorMessage%2A>プロパティは、ユーザーに表示されます。  
  
> [!NOTE]
>  新しいパスワードに設定している最小要件を満たす必要がありますで、 <xref:System.Web.Security.Membership.MinRequiredPasswordLength%2A>、 <xref:System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters%2A>、および<xref:System.Web.Security.Membership.PasswordStrengthRegularExpression%2A>プロパティです。 パスワードがこれらの要件を満たしていない場合、<xref:System.Web.UI.WebControls.ChangePassword.ChangePasswordError>イベントが発生します。  
  
 [!code-aspx-csharp[ChangePasswordNewPasswordRegex#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ChangePasswordNewPasswordRegex/CS/changepasswordpasswordregexcs.aspx#1)]
 [!code-aspx-vb[ChangePasswordNewPasswordRegex#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ChangePasswordNewPasswordRegex/VB/changepasswordpasswordregexvb.aspx#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ChangePassword ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ChangePassword.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.ChangePassword" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例は、設定する方法を示します、<xref:System.Web.UI.WebControls.ChangePassword.NewPasswordRegularExpression%2A>プロパティを次の条件を満たしているパスワードをチェックする正規表現を定義します。  
  
-   6 文字よりも大きくなります。  
  
-   少なくとも 1 つの数字を含めます。  
  
-   少なくとも 1 つの特殊 (アルファベット以外の) 文字を含めます。  
  
 含まれているパスワードの要件、<xref:System.Web.UI.WebControls.ChangePassword.PasswordHintText%2A>プロパティは、ユーザーに表示されます。  
  
 テキストが含まれる、ユーザーが入力したパスワードが、条件を満たしていない場合、<xref:System.Web.UI.WebControls.ChangePassword.NewPasswordRegularExpressionErrorMessage%2A>プロパティは、ユーザーに表示されます。  テキストが含まれる、新しいパスワードを入力しない場合、<xref:System.Web.UI.WebControls.ChangePassword.NewPasswordRequiredErrorMessage%2A>プロパティは、ユーザーに表示されます。  
  
> [!NOTE]
>  新しいパスワードに設定している最小要件を満たす必要がありますで、 <xref:System.Web.Security.Membership.MinRequiredPasswordLength%2A>、 <xref:System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters%2A>、および<xref:System.Web.Security.Membership.PasswordStrengthRegularExpression%2A>プロパティです。 パスワードがこれらの要件を満たしていない場合、<xref:System.Web.UI.WebControls.ChangePassword.ChangePasswordError>イベントが発生します。  
  
 [!code-aspx-csharp[ChangePasswordNewPasswordRegex#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ChangePasswordNewPasswordRegex/CS/changepasswordpasswordregexcs.aspx#1)]
 [!code-aspx-vb[ChangePasswordNewPasswordRegex#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ChangePasswordNewPasswordRegex/VB/changepasswordpasswordregexvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderPadding">
      <MemberSignature Language="C#" Value="public virtual int BorderPadding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BorderPadding" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.BorderPadding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の余白、枠線と、指定された領域の内側のピクセル、<see cref="T:System.Web.UI.WebControls.ChangePassword" />コントロール。</summary>
        <value>内容の間にスペースのピクセルの数、<see cref="T:System.Web.UI.WebControls.ChangePassword" />コントロールと<see cref="T:System.Web.UI.WebControls.ChangePassword" />コントロールの境界線です。 既定値は 1 です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 値、<xref:System.Web.UI.WebControls.ChangePassword.BorderPadding%2A>プロパティは viewstate に格納されます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">値、<see cref="P:System.Web.UI.WebControls.ChangePassword.BorderPadding" />プロパティが-1 未満です。</exception>
      </Docs>
    </Member>
    <Member MemberName="CancelButtonClick">
      <MemberSignature Language="C#" Value="public event EventHandler CancelButtonClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CancelButtonClick" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ChangePassword.CancelButtonClick" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザーがパスワードの変更をキャンセルするキャンセル ボタンをクリックしたときに発生します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelButtonCommandName">
      <MemberSignature Language="C#" Value="public static readonly string CancelButtonCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string CancelButtonCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.ChangePassword.CancelButtonCommandName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>表す、 <see langword="CommandName" /> [キャンセル] ボタンの値。 このフィールドは読み取り専用です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.ChangePassword.CancelButtonCommandName>を表すフィールド、 `CommandName` [キャンセル] ボタンの値。 いずれかのボタンの [キャンセル] ボタンの機能を模倣するために構成するときに便利ですが、<xref:System.Web.UI.WebControls.ChangePassword>コントロール。  
  
 いずれかにキャンセル機能を割り当てる<xref:System.Web.UI.WebControls.Button>に含まれるコントロール、<xref:System.Web.UI.WebControls.ChangePassword>コントロールを設定、<xref:System.Web.UI.WebControls.Button.CommandName%2A>を文字列に含まれているボタンのプロパティ、<xref:System.Web.UI.WebControls.ChangePassword.CancelButtonCommandName>フィールドです。  
  
 [キャンセル] ボタンは、ChangePassword テンプレートや成功した場合に表示できます。 成功テンプレートに [キャンセル] ボタンをクリックしても、パスワードの変更は取り消されませんこれにより、テキスト ボックスがクリアされます。 [キャンセル] ボタンにカスタム機能を追加するに、イベント ハンドラーを作成、<xref:System.Web.UI.WebControls.ChangePassword.CancelButtonClick>イベント。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelButtonImageUrl">
      <MemberSignature Language="C#" Value="public virtual string CancelButtonImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CancelButtonImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.CancelButtonImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または [キャンセル] ボタンに表示するイメージの URL を設定して、[キャンセル] ボタンが構成されている場合、<see cref="P:System.Web.UI.WebControls.ChangePassword.CancelButtonType" />イメージ ボタンになるプロパティです。</summary>
        <value>[キャンセル] ボタンに表示するイメージの URL。 既定値は、<see cref="F:System.String.Empty" /> です。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelButtonStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style CancelButtonStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style CancelButtonStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.CancelButtonStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コレクションへの参照を取得<see cref="T:System.Web.UI.WebControls.Style" />で、[キャンセル] ボタンの外観を定義するプロパティ、<see cref="T:System.Web.UI.WebControls.ChangePassword" />コントロール。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.Style" /> [キャンセル] ボタンの外観を定義するオブジェクト。 既定値は、<see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 次の表に、スタイルの設定を使用したカスタマイズで利用可能な<xref:System.Web.UI.WebControls.ChangePassword.CancelButtonStyle%2A>プロパティです。  
  
|設定|説明|  
|-------------|-----------------|  
|`BackColor`|[キャンセル] ボタンの色。 色には、いずれかを指定できる、<xref:System.Drawing.Color>プロパティです。|  
|`BorderColor`|[キャンセル] ボタンの周りの境界線の色。 色には、いずれかを指定できる、<xref:System.Drawing.Color>プロパティです。|  
|`BorderStyle`|[キャンセル] ボタンの周りの境界線のスタイルです。  スタイルを指定できます`"None"`、 `"Dotted"`、 `"Dashed"`、 `"Solid"`、 `"Double"`、 `"Groove"`、 `"Ridge"`、 `"Inset"`、または`"Outset"`です。 既定値は、`"NotSet"` です。 一部のスタイルを明確に表示しない場合を除き、`BorderWidth`設定が 2 より大きい。|  
|`BorderWidth`|[キャンセル] ボタンの周りの境界線の幅。|  
|`CssClass`|[キャンセル] ボタンを表示するために使用されるカスケード スタイル シート (CSS)。 その他の設定を指定するとスタイル シートの設定よりも優先されます。|  
|`Font-Bold`|`true`キャンセル ボタンのテキストを太字で表示します。|  
|`Font-Italic`|`true`斜体で、[キャンセル] ボタンのテキストを表示します。|  
|`Font-Names`|フォントのフォント フェイスの名前。|  
|`Font-Overline`|`true`その上の行で、[キャンセル] ボタンのテキストを表示します。|  
|`Font-Size`|[キャンセル] ボタンのテキストのサイズ、<xref:System.Web.UI.WebControls.FontUnit>オブジェクト。|  
|`Font-Strikeout`|`true`取り消しは、[キャンセル] ボタンのテキストを表示します。|  
|`Font-Underline`|`true`[キャンセル] ボタンのテキストに下線を表示します。|  
|`ForeColor`|[キャンセル] ボタンのテキストの色。 色には、いずれかを指定できる、<xref:System.Drawing.Color>プロパティです。|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelButtonText">
      <MemberSignature Language="C#" Value="public virtual string CancelButtonText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CancelButtonText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.CancelButtonText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または [キャンセル] ボタンに表示されるテキストを設定します。</summary>
        <value>[キャンセル] ボタンを表示するテキスト。 既定値が"Cancel"です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 既定値を<xref:System.Web.UI.WebControls.ChangePassword.CancelButtonText%2A>プロパティが"Cancel"です。  
  
 このプロパティの値を設定すると、デザイナーのツールを使用して、リソース ファイルに自動的に保存できます。 詳細については、次を参照してください。<xref:System.ComponentModel.LocalizableAttribute>と[グローバリゼーションとローカリゼーション](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelButtonType">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.ButtonType CancelButtonType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.ButtonType CancelButtonType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.CancelButtonType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ButtonType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定を表示するときに、[キャンセル] ボタンを使用するにはボタンの種類、<see cref="T:System.Web.UI.WebControls.ChangePassword" />コントロール。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.ButtonType" /> [キャンセル] ボタンを表示するボタンの種類を定義するオブジェクト。 プロパティの値は、3 つのいずれかを指定できます<see cref="T:System.Web.UI.WebControls.ButtonType" />列挙値: <see langword="Button" />、 <see langword="Image" />、または<see langword="Link" />です。 既定値は、<see langword="Button" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ChangePassword.CancelButtonType%2A>プロパティを取得または設定の種類 (`Button`、 `Image`、または`Link)`のレンダリング時に使用する [キャンセル] ボタン、<xref:System.Web.UI.WebControls.ChangePassword>コントロール。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定した<see cref="T:System.Web.UI.WebControls.ButtonType" />のいずれかではない、<see cref="T:System.Web.UI.WebControls.ButtonType" />値。</exception>
      </Docs>
    </Member>
    <Member MemberName="CancelDestinationPageUrl">
      <MemberSignature Language="C#" Value="public virtual string CancelDestinationPageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CancelDestinationPageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.CancelDestinationPageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定で [キャンセル] ボタンをクリックした後、ユーザーが表示されるページの URL、<see cref="T:System.Web.UI.WebControls.ChangePassword" />コントロール。</summary>
        <value>ユーザーのページの URL は、[キャンセル] ボタンをクリックした後にリダイレクトされます。 既定値は、<see cref="F:System.String.Empty" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 テーマまたはスタイル シート テーマによっては、このプロパティを設定できません。 詳細については、次を参照してください。<xref:System.Web.UI.ThemeableAttribute>と[ASP.NET のテーマとスキン](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangedPassword">
      <MemberSignature Language="C#" Value="public event EventHandler ChangedPassword;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ChangedPassword" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ChangePassword.ChangedPassword" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザー アカウントのパスワードが変更されたときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ChangePassword.ChangedPassword>で指定されたメンバーシップ プロバイダーによって、パスワードが変更された後にイベントが発生した、<xref:System.Web.UI.WebControls.ChangePassword.MembershipProvider%2A>プロパティです。 後に、<xref:System.Web.UI.WebControls.ChangePassword.ChangedPassword>イベントを発生すると、次のようにします。  
  
-   場合、<xref:System.Web.UI.WebControls.ChangePassword.MailDefinition%2A>プロパティが設定されて、<xref:System.Web.UI.WebControls.ChangePassword>コントロールは、ユーザーに電子メール メッセージを送信しようとしています。  
  
-   ユーザーがで指定された Web サイトにリダイレクトするか、<xref:System.Web.UI.WebControls.ChangePassword.SuccessPageUrl%2A>プロパティまたはコントロール テンプレートで指定された、<xref:System.Web.UI.WebControls.ChangePassword.SuccessTemplate%2A>プロパティが表示されます。  
  
 ユーザーの認証トークンの新しいが後に設定されて、<xref:System.Web.UI.WebControls.ChangePassword.ChangingPassword>イベント前に、<xref:System.Web.UI.WebControls.ChangePassword.ChangedPassword>イベント。  
  
 イベント処理の詳細については、次を参照してください。[イベント](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangePasswordButtonCommandName">
      <MemberSignature Language="C#" Value="public static readonly string ChangePasswordButtonCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string ChangePasswordButtonCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.ChangePassword.ChangePasswordButtonCommandName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>表す、<see langword="CommandName" />パスワードの変更 ボタンの値。 このフィールドは読み取り専用です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.ChangePassword.ChangePasswordButtonCommandName>を表すフィールド、`CommandName`パスワードの変更 ボタンの値。 いずれかのボタンの [パスワードの変更] ボタンの機能を模倣するために構成するときに便利ですが、<xref:System.Web.UI.WebControls.ChangePassword>コントロール。 パスワードの変更 ボタンの最後の手順を完了する、<xref:System.Web.UI.WebControls.ChangePassword>コントロール。  
  
 いずれかにパスワードの変更機能を割り当てる<xref:System.Web.UI.WebControls.Button>に含まれるコントロール、<xref:System.Web.UI.WebControls.ChangePassword>コントロールを設定、<xref:System.Web.UI.WebControls.Button.CommandName%2A>を文字列に含まれているボタンのプロパティ、<xref:System.Web.UI.WebControls.ChangePassword.ChangePasswordButtonCommandName>フィールドです。  
  
 パスワードの変更 ボタンは、ChangePassword テンプレートや成功した場合に表示できます。 どちらの場合も、パスワードの変更 ボタンをクリックすると、パスワードを変更するメンバーシップ プロバイダーを呼び出します。 イベント ハンドラーを作成、パスワードの変更 ボタンにカスタム機能を追加するには<xref:System.Web.UI.WebControls.ChangePassword.ChangedPassword>イベント。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangePasswordButtonImageUrl">
      <MemberSignature Language="C#" Value="public virtual string ChangePasswordButtonImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ChangePasswordButtonImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.ChangePasswordButtonImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定にパスワードの変更 ボタンの横に表示されるイメージの URL、<see cref="T:System.Web.UI.WebControls.ChangePassword" />によってパスワードの変更 ボタンが構成されている場合は、制御、<see cref="P:System.Web.UI.WebControls.ChangePassword.ChangePasswordButtonType" />イメージ ボタンになるプロパティです。</summary>
        <value>パスワードの変更 ボタンの横に表示するイメージの URL。 既定値は、<see cref="F:System.String.Empty" /> です。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangePasswordButtonStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style ChangePasswordButtonStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style ChangePasswordButtonStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.ChangePasswordButtonStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コレクションへの参照を取得<see cref="T:System.Web.UI.WebControls.Style" />でパスワードの変更 ボタンの外観を定義するプロパティ、<see cref="T:System.Web.UI.WebControls.ChangePassword" />コントロール。</summary>
        <value>A<see cref="T:System.Web.UI.WebControls.Style" />パスワードの変更 ボタンの外観を定義するオブジェクト。 既定値は、<see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 次の表に、スタイルの設定を使用したカスタマイズで利用可能な<xref:System.Web.UI.WebControls.ChangePassword.ChangePasswordButtonStyle%2A>プロパティです。  
  
|設定|説明|  
|-------------|-----------------|  
|`BackColor`|パスワードの変更 ボタンの色。 色には、いずれかを指定できる、<xref:System.Drawing.Color>プロパティです。|  
|`BorderColor`|パスワードの変更 ボタンを囲む境界線の色。 色には、いずれかを指定できる、<xref:System.Drawing.Color>プロパティです。|  
|`BorderStyle`|パスワードの変更 ボタンを囲む境界線のスタイルです。 スタイルを指定できます`"None"`、 `"Dotted"`、 `"Dashed"`、 `"Solid"`、 `"Double"`、 `"Groove"`、 `"Ridge"`、 `"Inset"`、または`"Outset"`です。 既定値は、`"NotSet"` です。 一部のスタイルを明確に表示しない場合を除き、`BorderWidth`値が 2 より大きい。|  
|`BorderWidth`|パスワードの変更 ボタンを囲む境界線の幅。|  
|`CssClass`|パスワードの変更 ボタンを表示するために使用されるカスケード スタイル シート (CSS)。 その他の設定を指定するとスタイル シートの設定よりも優先されます。|  
|`Font-Bold`|`true`パスワードの変更 ボタンのテキストを太字で表示します。|  
|`Font-Italic`|`true`斜体でパスワードの変更 ボタンのテキストを表示します。|  
|`Font-Names`|フォントのフォント フェイスの名前。|  
|`Font-Overline`|`true`その上の行にパスワードの変更 ボタンのテキストを表示します。|  
|`Font-Size`|パスワードの変更 ボタンのテキストのサイズ、<xref:System.Web.UI.WebControls.FontUnit>オブジェクト。|  
|`Font-Strikeout`|`true`取り消しは、パスワードの変更 ボタンのテキストを表示します。|  
|`Font-Underline`|`true`パスワードの変更 ボタンのテキストに下線を表示します。|  
|`ForeColor`|パスワードの変更 ボタンのテキストの色。 色には、いずれかを指定できる、<xref:System.Drawing.Color>プロパティです。|  
|`Height`|A<xref:System.Web.UI.WebControls.Unit>パスワードの変更 ボタンの高さを表すです。|  
|`Width`|A<xref:System.Web.UI.WebControls.Unit>パスワードの変更 ボタンの幅を表すです。|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangePasswordButtonText">
      <MemberSignature Language="C#" Value="public virtual string ChangePasswordButtonText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ChangePasswordButtonText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.ChangePasswordButtonText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはパスワードの変更 ボタンに表示されるテキストを設定します。</summary>
        <value>パスワードの変更 ボタンを表示するテキスト。 既定値は、「パスワードの変更」です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティの値を設定すると、デザイナーのツールを使用して、リソース ファイルに自動的に保存できます。 詳細については、次を参照してください。<xref:System.ComponentModel.LocalizableAttribute>と[グローバリゼーションとローカリゼーション](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangePasswordButtonType">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.ButtonType ChangePasswordButtonType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.ButtonType ChangePasswordButtonType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.ChangePasswordButtonType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ButtonType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の [パスワードの変更] ボタンを表示するときに使用されるボタンの種類、<see cref="T:System.Web.UI.WebControls.ChangePassword" />コントロール。</summary>
        <value>A<see cref="T:System.Web.UI.WebControls.ButtonType" />パスワードの変更 ボタンを表示するボタンの種類を定義するオブジェクト。 プロパティの値は、3 つのいずれかを指定できます<see cref="T:System.Web.UI.WebControls.ButtonType" />列挙値: <see langword="Button" />、 <see langword="Image" />、または<see langword="Link" />です。 既定値は、<see langword="Button" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ChangePassword.ChangePasswordButtonType%2A>プロパティを取得または設定の種類 (`Button`、 `Image`、または`Link)`のレンダリング時に使用するパスワードの変更 ボタン、<xref:System.Web.UI.WebControls.ChangePassword>コントロール。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定した<see cref="T:System.Web.UI.WebControls.ButtonType" />のいずれかではない、<see cref="T:System.Web.UI.WebControls.ButtonType" />値。</exception>
      </Docs>
    </Member>
    <Member MemberName="ChangePasswordError">
      <MemberSignature Language="C#" Value="public event EventHandler ChangePasswordError;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ChangePasswordError" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ChangePassword.ChangePasswordError" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザー アカウントのパスワードの変更時にエラーがある場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ChangePassword.ChangePasswordError>イベントは、メンバーシップ プロバイダーがで指定した場合、<xref:System.Web.UI.WebControls.ChangePassword.MembershipProvider%2A>プロパティには、ユーザー アカウントのパスワードを変更中にエラーが発生しました。 これは、不適切な現在のパスワードまたは新しいパスワードは無効です、ユーザーが入力した場合に発生します。 指定した<xref:System.Web.Security.MembershipProvider>オブジェクトには、パスワードの変更が失敗した理由、のみは示しません。 パスワードが変更されていないこと。  
  
 使用して、<xref:System.Web.UI.WebControls.ChangePassword.ChangePasswordError>パスワードが変更されていない場合は、カスタム アクションを実行するイベントです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangePasswordFailureText">
      <MemberSignature Language="C#" Value="public virtual string ChangePasswordFailureText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ChangePasswordFailureText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.ChangePasswordFailureText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはユーザーのパスワードが変更されていない場合に表示されるメッセージを設定します。</summary>
        <value>ユーザーのパスワードを変更する試行が失敗したときに表示されるエラー メッセージ。 既定値は"パスワードを変更しようとするは、失敗しました。 もう一度やり直してください。"</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ChangePassword.ChangePasswordFailureText%2A>メンバーシップ プロバイダーが、ユーザーが入力したパスワードを却下した場合、プロパティが表示されます。  
  
 <xref:System.Web.Security.MembershipProvider>オブジェクトは、新しいパスワードを拒否した理由を返しません。 使用して、<xref:System.Web.UI.WebControls.ChangePassword.ChangePasswordError>など、強力なパスワードを指定する必要がありますを示すために使用できるパスワードを入力する方法に関するヒントをユーザーに提供する場合は、拒否されたパスワードを検査するイベントです。  
  
 このプロパティの値を設定すると、デザイナーのツールを使用して、リソース ファイルに自動的に保存できます。 詳細については、次を参照してください。<xref:System.ComponentModel.LocalizableAttribute>と[グローバリゼーションとローカリゼーション](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangePasswordTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate ChangePasswordTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate ChangePasswordTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.ChangePasswordTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.ChangePassword))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定、<see cref="T:System.Web.UI.ITemplate" />のパスワードの変更を表示するために使用するオブジェクト、<see cref="T:System.Web.UI.WebControls.ChangePassword" />コントロール。</summary>
        <value><see cref="T:System.Web.UI.ITemplate" />オブジェクトを表示するためのテンプレートが含まれる、<see cref="T:System.Web.UI.WebControls.ChangePassword" />パスワードの変更 ビューでコントロール。 既定値は、<see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ChangePassword.ChangePasswordTemplate%2A>プロパティを指定します、<xref:System.Web.UI.ITemplate>によって使用されるオブジェクト、<xref:System.Web.UI.WebControls.ChangePassword>コントロール。 詳細については、次を参照してください。[操作方法: 作成する ASP.NET Web サーバー コントロールのテンプレートに動的に](http://msdn.microsoft.com/library/8d7aef0c-d9e3-444b-b3f7-ca0c157eb8b4)です。  
  
 テンプレートは、HTML 要素とコントロールの特定の部分のレイアウトを構成するコントロールのセットです。 テンプレート スタイルが異なります。  
  
-   テンプレートは、コントロールのセクションの内容を定義します。  
  
-   スタイルは、コントロール内の要素の外観を指定します。  
  
 詳細については、次を参照してください。 [Web サーバー コントロールのテンプレート](http://msdn.microsoft.com/library/f769d290-fd04-4084-85fc-4ea30dd2e8ae)と[ASP.NET のテーマとスキン](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)です。  
  
 次の表は、テンプレートを使用し、対応するコントロールのビューでサポートされている、<xref:System.Web.UI.WebControls.ChangePassword>コントロール。  
  
|テンプレート名|コントロール ビュー|  
|-------------------|------------------|  
|<xref:System.Web.UI.WebControls.ChangePassword.ChangePasswordTemplate%2A>|パスワードの変更|  
|<xref:System.Web.UI.WebControls.ChangePassword.SuccessTemplate%2A>|成功|  
  
 作成または、.aspx ファイルでコントロールのテンプレートを変更することができますも。 詳細については、次を参照してください。[する方法: 作成する ASP.NET Web コントロール テンプレート宣言によって](http://msdn.microsoft.com/library/4977e1d5-c53a-4908-83be-bba0ad37357a)と[How To: 作成する ASP.NET Web サーバー コントロールのテンプレートに動的に](http://msdn.microsoft.com/library/8d7aef0c-d9e3-444b-b3f7-ca0c157eb8b4)です。 これらのトピックの手順の構成は不要、<xref:System.Web.UI.WebControls.ChangePassword.ChangePasswordTemplate%2A>プロパティです。 テンプレートを構成する場合は、次の表には、テンプレートの必須および省略可能なコントロールが一覧表示します。  
  
|コントロール ID|コントロールの種類|必須/オプション|  
|----------------|------------------|------------------------|  
|`Cancel`|原因となるイベントは、(サーバー コントロールの階層構造のイベントを渡す) バブルをなど、任意のコントロール、 <xref:System.Web.UI.WebControls.Button>、 <xref:System.Web.UI.WebControls.LinkButton>、および<xref:System.Web.UI.WebControls.ImageButton>コントロール。 コントロール ID にボタンのコマンド名を設定する必要があります。|Optional|  
|`ChangePassword`|原因となるイベントは、(サーバー コントロールの階層構造のイベントを渡す) バブルをなど、任意のコントロール、 <xref:System.Web.UI.WebControls.Button>、 <xref:System.Web.UI.WebControls.LinkButton>、および<xref:System.Web.UI.WebControls.ImageButton>コントロール。 コントロール ID にボタンのコマンド名を設定する必要があります。|Optional|  
|`ConfirmNewPassword`|サポートする任意の型、<xref:System.Web.UI.IEditableTextControl>インターフェイスなど、<xref:System.Web.UI.WebControls.TextBox>クラスです。|Optional|  
|`Continue`|原因となるイベントは、(サーバー コントロールの階層構造のイベントを渡す) バブルをなど、任意のコントロール、 <xref:System.Web.UI.WebControls.Button>、 <xref:System.Web.UI.WebControls.LinkButton>、および<xref:System.Web.UI.WebControls.ImageButton>コントロール。 コントロール ID にボタンのコマンド名を設定する必要があります。 このコントロールは、正常に完了テンプレートが表示されます。|Optional|  
|`CurrentPassword`|サポートする任意の型、<xref:System.Web.UI.IEditableTextControl>インターフェイスなど、<xref:System.Web.UI.WebControls.TextBox>クラスです。|必須|  
|`FailureText`|サポートする任意の型、<xref:System.Web.UI.ITextControl>インターフェイスです。|Optional|  
|`NewPassword`|サポートする任意の型、<xref:System.Web.UI.IEditableTextControl>インターフェイスなど、<xref:System.Web.UI.WebControls.TextBox>クラスです。|必須|  
|`UserName`|サポートする任意の型、<xref:System.Web.UI.IEditableTextControl>インターフェイスです。|場合は必須<xref:System.Web.UI.WebControls.ChangePassword.DisplayUserName%2A>は`true`します。 省略する必要があります<xref:System.Web.UI.WebControls.ChangePassword.DisplayUserName%2A>は`false`します。|  
  
 <xref:System.Web.UI.WebControls.ChangePassword>スローを制御、<xref:System.Web.HttpException>テンプレートには、必要なコントロールが含まれていない場合は例外です。 間違った型; のコントロールにオプションのコントロール ID を提供する場合に例外がスローされません。ただし、コントロール、その後では無視されます、<xref:System.Web.UI.WebControls.ChangePassword>コントロール。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangePasswordTemplateContainer">
      <MemberSignature Language="C#" Value="public System.Web.UI.Control ChangePasswordTemplateContainer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Control ChangePasswordTemplateContainer" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.ChangePasswordTemplateContainer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コンテナーを取得、<see cref="T:System.Web.UI.WebControls.ChangePassword" />のインスタンスを作成するコントロールを使用して、<see cref="P:System.Web.UI.WebControls.ChangePassword.ChangePasswordTemplate" />テンプレート。 これは、子コントロールにプログラムでアクセスを提供します。</summary>
        <value><see cref="T:System.Web.UI.Control" /> を格納している <see cref="P:System.Web.UI.WebControls.ChangePassword.ChangePasswordTemplate" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangePasswordTitleText">
      <MemberSignature Language="C#" Value="public virtual string ChangePasswordTitleText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ChangePasswordTitleText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.ChangePasswordTitleText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の上部に表示されるテキスト、<see cref="T:System.Web.UI.WebControls.ChangePassword" />パスワードの変更 ビューでコントロール。</summary>
        <value>上部に表示されるテキストを<see cref="T:System.Web.UI.WebControls.ChangePassword" />コントロール。 既定値は、「パスワードの変更」です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティの値を設定すると、デザイナーのツールを使用して、リソース ファイルに自動的に保存できます。 詳細については、次を参照してください。<xref:System.ComponentModel.LocalizableAttribute>と[グローバリゼーションとローカリゼーション](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangingPassword">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.LoginCancelEventHandler ChangingPassword;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.LoginCancelEventHandler ChangingPassword" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ChangePassword.ChangingPassword" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.LoginCancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>メンバーシップ プロバイダーによって、ユーザー アカウントのパスワードを変更するまでに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ChangePassword.ChangingPassword>で指定されたメンバーシップ プロバイダーの前にイベントが発生した、<xref:System.Web.UI.WebControls.ChangePassword.MembershipProvider%2A>ユーザー アカウントのパスワードを変更するプロパティが呼び出されます。  
  
 使用して、<xref:System.Web.UI.WebControls.ChangePassword.ChangingPassword>よくあるパスワードの一覧で確認するための新しいパスワードの確認など、パスワードを変更する前に必要な処理を実行するイベントは使用されません。 ユーザーの認証トークンの新しいが後に設定されて、<xref:System.Web.UI.WebControls.ChangePassword.ChangingPassword>イベント前に、<xref:System.Web.UI.WebControls.ChangePassword.ChangedPassword>イベント。  
  
 <xref:System.Web.UI.WebControls.ChangePassword.ChangingPassword>を設定してイベントを取り消すことができます、<xref:System.Web.UI.WebControls.LoginCancelEventArgs.Cancel%2A>のプロパティ、<xref:System.Web.UI.WebControls.LoginCancelEventArgs>オブジェクトを`true`場合は、イベント ハンドラーは、メンバーシップ プロバイダーを呼び出すことはできないことを決定します。  
  
 イベント処理の詳細については、次を参照してください。[イベント](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)です。  
  
   
  
## Examples  
 次のコード例を使用する ASP.NET ページを使用する方法を示しています、<xref:System.Web.UI.WebControls.ChangePassword>制御、およびのハンドラーが含まれています、<xref:System.Web.UI.WebControls.ChangePassword.ChangingPassword>という名前のイベント`ChangingPassword`です。 イベント ハンドラーのコードに格納されている古いパスワードを比較し、<xref:System.Web.UI.WebControls.ChangePassword.CurrentPassword%2A>プロパティに格納されている新しいパスワードを<xref:System.Web.UI.WebControls.ChangePassword.NewPassword%2A>です。 2 つのパスワードが同じ場合は、パスワードの変更は失敗します。  
  
 <xref:System.Web.UI.WebControls.ChangePassword>コントロール セット、<xref:System.Web.UI.WebControls.ChangePassword.DisplayUserName%2A>プロパティを`true`をユーザーがユーザー名を入力するユーザーを有効にします。 これにログオン ページを表示するため、ユーザーがないことを意味します。  
  
 このコード例では、ASP.NET メンバーシップとフォーム認証、および、名とパスワードがわかっているユーザーが作成されたを使用する ASP.NET Web サイトが構成されていると仮定します。 詳細については、次を参照してください。[する方法: 単純なフォーム認証を実装する](http://msdn.microsoft.com/library/9522bc8d-1a41-480a-aa11-c389a4ac2d2e)です。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ChangePassword.OnChangingPassword#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ChangePassword.OnChangingPassword/CS/changepassword_cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ChangePassword.OnChangingPassword#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ChangePassword.OnChangingPassword/VB/changepassword_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConfirmNewPassword">
      <MemberSignature Language="C#" Value="public virtual string ConfirmNewPassword { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConfirmNewPassword" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.ConfirmNewPassword" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Filterable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザーが入力したパスワードを取得します。</summary>
        <value>重複する新しいパスワード文字列、ユーザーが入力しました。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ChangePassword.ConfirmNewPassword%2A>プロパティには、ユーザーが入力した重複する新しいパスワードが含まれています。  
  
 使用することができます、<xref:System.Web.UI.WebControls.ChangePassword.NewPasswordRegularExpression%2A>プロパティを新しいパスワードの要件を定義します。 この正規表現を使用すると、クライアント側でパスワード規則の実施します。  
  
 <xref:System.Web.UI.WebControls.ChangePassword.NewPasswordRegularExpression%2A>データ ストア レベルで構成して、サーバー側で適用できるパスワード適用に関連していません。 パスワードに設定している最小要件を満たす必要がありますで、 <xref:System.Web.Security.Membership.MinRequiredPasswordLength%2A>、 <xref:System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters%2A>、および<xref:System.Web.Security.Membership.PasswordStrengthRegularExpression%2A>プロパティです。 パスワードがこれらの要件を満たしていない場合、<xref:System.Web.UI.WebControls.ChangePassword.ChangePasswordError>イベントが発生します。  
  
> [!IMPORTANT]
>  潜在的なセキュリティの脅威は、HTTP 経由でのパスワードを送信します。 HTTP 伝送は、悪意のあるユーザーが危険にさらさまたは表示できます。 ログイン コントロールを使用する場合は、セキュリティを向上させるためには、ポストバック中に、ユーザーのパスワードを読み取ることができないことを確認するのに安全な sockets layer (SSL) 暗号化を使用 HTTPS プロトコルを使用する必要があります。 詳細については、次を参照してください。[ログイン コントロールのセキュリティで保護する](http://msdn.microsoft.com/library/d85075bc-9c1a-4453-8a0c-539b10853c9c)です。  
  
 テーマまたはスタイル シート テーマによっては、このプロパティを設定できません。 詳細については、次を参照してください。<xref:System.Web.UI.ThemeableAttribute>と[ASP.NET のテーマとスキン](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConfirmNewPasswordLabelText">
      <MemberSignature Language="C#" Value="public virtual string ConfirmNewPasswordLabelText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConfirmNewPasswordLabelText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.ConfirmNewPasswordLabelText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定のラベルのテキスト、<see cref="P:System.Web.UI.WebControls.ChangePassword.ConfirmNewPassword" />テキスト ボックス。</summary>
        <value>表示するテキスト、<see cref="P:System.Web.UI.WebControls.ChangePassword.ConfirmNewPassword" />テキスト ボックス。 既定値は"新しいパスワードの確認:"です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティの値を設定すると、デザイナーのツールを使用して、リソース ファイルに自動的に保存できます。 詳細については、次を参照してください。<xref:System.ComponentModel.LocalizableAttribute>と[グローバリゼーションとローカリゼーション](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConfirmPasswordCompareErrorMessage">
      <MemberSignature Language="C#" Value="public virtual string ConfirmPasswordCompareErrorMessage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConfirmPasswordCompareErrorMessage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.ConfirmPasswordCompareErrorMessage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または新しいパスワードとユーザーが入力したパスワードが同一ではないときに表示されるメッセージを設定します。</summary>
        <value>エラー メッセージは、新しいパスワードと確認のパスワードが同一でない場合に表示されます。 既定値は「ことを確認して新しいパスワードの入力は、新しいパスワードの入力を一致する必要があります」</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ChangePassword>コントロールには、新しいパスワードを 2 回入力するユーザーが必要なように、ユーザーの入力、画面のパスワードの文字がマスクされるためです。 ユーザーによって、新しいパスワード テキスト ボックスと新しいパスワードの確認のテキスト ボックス内のメッセージの両方で同じパスワードが入力されるされないかどうか、<xref:System.Web.UI.WebControls.ChangePassword.ConfirmPasswordCompareErrorMessage%2A>プロパティが表示されます。  
  
 このプロパティの値を設定すると、デザイナーのツールを使用して、リソース ファイルに自動的に保存できます。 詳細については、次を参照してください。<xref:System.ComponentModel.LocalizableAttribute>と[グローバリゼーションとローカリゼーション](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConfirmPasswordRequiredErrorMessage">
      <MemberSignature Language="C#" Value="public virtual string ConfirmPasswordRequiredErrorMessage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConfirmPasswordRequiredErrorMessage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.ConfirmPasswordRequiredErrorMessage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または新しいパスワードの確認 テキスト ボックスが空のままにするときに表示されるエラー メッセージを設定します。</summary>
        <value>ユーザーに新しいパスワードを入力することがなくパスワードを変更するときに表示されるエラー メッセージ、<see cref="P:System.Web.UI.WebControls.ChangePassword.ConfirmNewPassword" />入力ボックス。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティの値を設定すると、デザイナーのツールを使用して、リソース ファイルに自動的に保存できます。 詳細については、次を参照してください。<xref:System.ComponentModel.LocalizableAttribute>と[グローバリゼーションとローカリゼーション](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContinueButtonClick">
      <MemberSignature Language="C#" Value="public event EventHandler ContinueButtonClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ContinueButtonClick" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ChangePassword.ContinueButtonClick" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>発生させます、<see cref="E:System.Web.UI.WebControls.ChangePassword.ContinueButtonClick" />イベント、ユーザーが [続行] ボタンをクリックします。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContinueButtonCommandName">
      <MemberSignature Language="C#" Value="public static readonly string ContinueButtonCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string ContinueButtonCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.ChangePassword.ContinueButtonCommandName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>表す<see langword="CommandName" />[続行] ボタンの値。 このフィールドは読み取り専用です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.ChangePassword.ContinueButtonCommandName>を表すフィールド、 `CommandName` [続行] ボタンの値。 いずれかのボタンの [続行] ボタンの機能を模倣するために構成するときに便利ですが、<xref:System.Web.UI.WebControls.ChangePassword>コントロール。  
  
 割り当てを続行するいずれかの機能を<xref:System.Web.UI.WebControls.Button>に含まれるコントロール、<xref:System.Web.UI.WebControls.ChangePassword>コントロールを設定、<xref:System.Web.UI.WebControls.Button.CommandName%2A>を文字列に含まれているボタンのプロパティ、<xref:System.Web.UI.WebControls.ChangePassword.ContinueButtonCommandName>フィールドです。  
  
 [続行] ボタンは、ChangePassword テンプレートや成功した場合に表示できます。 格納されている URL にユーザーをリダイレクト [続行] ボタンをクリックすると、<xref:System.Web.UI.WebControls.ChangePassword.ContinueDestinationPageUrl%2A>プロパティです。 [続行] ボタンにカスタム機能を追加するに、イベント ハンドラーを作成、<xref:System.Web.UI.WebControls.ChangePassword.ContinueButtonClick>イベント。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContinueButtonImageUrl">
      <MemberSignature Language="C#" Value="public virtual string ContinueButtonImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContinueButtonImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.ContinueButtonImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の成功ビューの 続行 ボタンを使用するイメージの URL、<see cref="T:System.Web.UI.WebControls.ChangePassword" />で続行 ボタンが構成されている場合は、制御、<see cref="P:System.Web.UI.WebControls.ChangePassword.ContinueButtonType" />イメージ ボタンになるプロパティです。</summary>
        <value>[続行] ボタンに表示するイメージの URL。 既定値は、<see cref="F:System.String.Empty" /> です。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContinueButtonStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style ContinueButtonStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style ContinueButtonStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.ContinueButtonStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コレクションへの参照を取得<see cref="T:System.Web.UI.WebControls.Style" />の成功すると、[続行] ボタンの外観を定義するプロパティを表示、<see cref="T:System.Web.UI.WebControls.ChangePassword" />コントロール。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.Style" /> [続行] ボタンの外観を定義するオブジェクト。 既定値は、<see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 次の表に、スタイルの設定を使用したカスタマイズで利用可能な<xref:System.Web.UI.WebControls.ChangePassword.ContinueButtonStyle%2A>プロパティです。  
  
|設定|説明|  
|-------------|-----------------|  
|`BackColor`|[続行] ボタンの色。 色には、いずれかを指定できる、<xref:System.Drawing.Color>プロパティです。|  
|`BorderColor`|[続行] ボタンの周りの境界線の色。 色には、いずれかを指定できる、<xref:System.Drawing.Color>プロパティです。|  
|`BorderStyle`|[続行] ボタンの周りの境界線のスタイルです。 スタイルを指定できます`"None"`、 `"Dotted"`、 `"Dashed"`、 `"Solid"`、 `"Double"`、 `"Groove"`、 `"Ridge"`、 `"Inset"`、または`"Outset"`です。  既定値は、`"NotSet"` です。 一部のスタイルを明確に表示しない場合を除き、`BorderWidth`値が 2 より大きい。|  
|`BorderWidth`|[続行] ボタンの周りの境界線の幅。|  
|`CssClass`|[続行] ボタンを表示するために使用されるカスケード スタイル シート (CSS)。 その他の設定を指定するとスタイル シートの設定よりも優先されます。|  
|`Font-Bold`|`true`続行ボタンのテキストを太字で表示します。|  
|`Font-Italic`|`true`斜体で続行 ボタンのテキストを表示します。|  
|`Font-Names`|フォントのフォント フェイスの名前。|  
|`Font-Overline`|`true`その上の行で続行ボタンのテキストを表示します。|  
|`Font-Size`|として [続行] ボタンのテキストのサイズ、<xref:System.Web.UI.WebControls.FontUnit>オブジェクト。|  
|`Font-Strikeout`|`true`取り消し続行ボタンのテキストを表示します。|  
|`Font-Underline`|`true`[続行] ボタンのテキストに下線を表示します。|  
|`ForeColor`|[続行] ボタンのテキストの色です。 色には、いずれかを指定できる、<xref:System.Drawing.Color>プロパティです。|  
|`Height`|A <xref:System.Web.UI.WebControls.Unit> [続行] ボタンの高さを表すです。|  
|`Width`|A <xref:System.Web.UI.WebControls.Unit> [続行] ボタンの幅を表すです。|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContinueButtonText">
      <MemberSignature Language="C#" Value="public virtual string ContinueButtonText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContinueButtonText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.ContinueButtonText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の成功ビューの [続行] ボタンに表示されるテキスト、<see cref="T:System.Web.UI.WebControls.ChangePassword" />コントロール。</summary>
        <value>[続行] ボタンを表示するテキストです。 既定値は、"Continue"です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティの値を設定すると、デザイナーのツールを使用して、リソース ファイルに自動的に保存できます。 詳細については、次を参照してください。<xref:System.ComponentModel.LocalizableAttribute>と[グローバリゼーションとローカリゼーション](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContinueButtonType">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.ButtonType ContinueButtonType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.ButtonType ContinueButtonType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.ContinueButtonType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ButtonType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の続行 ボタンをレンダリングするときに使用されるボタンの種類、<see cref="T:System.Web.UI.WebControls.ChangePassword" />コントロール。</summary>
        <value>A<see cref="T:System.Web.UI.WebControls.ButtonType" />続行 ボタンに表示するボタンの種類を定義するオブジェクト。 プロパティの値は、3 つのいずれかを指定できます<see cref="T:System.Web.UI.WebControls.ButtonType" />列挙値: <see langword="Button" />、 <see langword="Image" />、または<see langword="Link" />です。 既定値は、<see langword="Button" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ChangePassword.ContinueButtonType%2A>プロパティを取得または設定の種類 (`Button`、 `Image`、または`Link)`変更パスワード ボタンを表示するときに使用するの<xref:System.Web.UI.WebControls.ChangePassword>コントロール。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定した<see cref="T:System.Web.UI.WebControls.ButtonType" />のいずれかではない、<see cref="T:System.Web.UI.WebControls.ButtonType" />値。</exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueDestinationPageUrl">
      <MemberSignature Language="C#" Value="public virtual string ContinueDestinationPageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContinueDestinationPageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.ContinueDestinationPageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または成功ビューの [続行] ボタンをクリックした後、ユーザーに表示されるページの URL を設定します。</summary>
        <value>ユーザーのページの URL は、[続行] ボタンをクリックした後にリダイレクトされます。 既定値は、<see cref="F:System.String.Empty" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ChangePassword.ContinueDestinationPageUrl%2A>プロパティには、ユーザーが自分のパスワードを正常に変更した後に表示される Web ページの URL が含まれています。 設定して、<xref:System.Web.UI.WebControls.ChangePassword.ContinueDestinationPageUrl%2A>ユーザーが自分のパスワードを変更した後に表示される最初のページを制御することができます。  
  
 場合、<xref:System.Web.UI.WebControls.ChangePassword.ContinueDestinationPageUrl%2A>プロパティは、既定値、<xref:System.String.Empty>フィールドに、ユーザーは、[続行] ボタンをクリックし、ページが更新される、フォーム上の任意の値がクリアされます。  
  
 テーマまたはスタイル シート テーマによっては、このプロパティを設定できません。 詳細については、次を参照してください。<xref:System.Web.UI.ThemeableAttribute>と[ASP.NET のテーマとスキン](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateChildControls">
      <MemberSignature Language="C#" Value="protected override void CreateChildControls ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void CreateChildControls() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ChangePassword.CreateChildControls" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>構成する個々 のコントロールを作成、<see cref="T:System.Web.UI.WebControls.ChangePassword" />ポストバックまたはレンダリングの準備で制御します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ChangePassword.CreateChildControls%2A>メソッドを構成するコントロールのインスタンスを作成する、<xref:System.Web.UI.WebControls.ChangePassword>を制御し、既定のイベントのイベント ハンドラーを作成します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><see cref="P:System.Web.UI.WebControls.ChangePassword.DisplayUserName" />プロパティに設定されている<see langword="false" />、<see cref="P:System.Web.UI.WebControls.ChangePassword.ChangePasswordTemplate" />を実装するコントロールを含む、<see cref="T:System.Web.UI.IEditableTextControl" />インターフェイス、および<see cref="P:System.Web.UI.Control.ID" />コントロールのプロパティが"UserName"に設定します。  
  
 または  
  
 <see cref="P:System.Web.UI.WebControls.ChangePassword.DisplayUserName" />プロパティに設定されている<see langword="true" />、<see cref="P:System.Web.UI.WebControls.ChangePassword.ChangePasswordTemplate" />を実装するコントロールが含まれていない、<see cref="T:System.Web.UI.IEditableTextControl" />インターフェイス、および<see cref="P:System.Web.UI.Control.ID" />コントロールのプロパティが"UserName"に設定します。  
  
 または  
  
 <see cref="P:System.Web.UI.WebControls.ChangePassword.ChangePasswordTemplate" />を実装するコントロールが含まれていない、<see cref="T:System.Web.UI.IEditableTextControl" />インターフェイス、および<see cref="P:System.Web.UI.Control.ID" />コントロールのプロパティが"CurrentPassword"に設定します。  
  
 または  
  
 <see cref="P:System.Web.UI.WebControls.ChangePassword.ChangePasswordTemplate" />を実装するコントロールが含まれていない、<see cref="T:System.Web.UI.IEditableTextControl" />インターフェイス、および<see cref="P:System.Web.UI.Control.ID" />コントロールのプロパティが"NewPassword"に設定します。</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateUserIconUrl">
      <MemberSignature Language="C#" Value="public virtual string CreateUserIconUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CreateUserIconUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.CreateUserIconUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定を含む Web ページへのリンクの横に表示するイメージの URL、 <see cref="T:System.Web.UI.WebControls.CreateUserWizard" /> Web サイトのコントロールです。</summary>
        <value>含む Web ページへのリンクの横に表示するイメージの URL、 <see cref="T:System.Web.UI.WebControls.CreateUserWizard" /> Web サイトのコントロールです。 既定値は、<see cref="F:System.String.Empty" /> です。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateUserText">
      <MemberSignature Language="C#" Value="public virtual string CreateUserText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CreateUserText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.CreateUserText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定のリンク テキストを含む Web ページ、 <see cref="T:System.Web.UI.WebControls.CreateUserWizard" /> Web サイトのコントロールです。</summary>
        <value>含む Web ページへのリンクの横に表示されるテキストを<see cref="T:System.Web.UI.WebControls.CreateUserWizard" />Web サイトのコントロールです。 既定値は、<see cref="F:System.String.Empty" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティの値を設定すると、デザイナーのツールを使用して、リソース ファイルに自動的に保存できます。 詳細については、次を参照してください。<xref:System.ComponentModel.LocalizableAttribute>と[グローバリゼーションとローカリゼーション](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateUserUrl">
      <MemberSignature Language="C#" Value="public virtual string CreateUserUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CreateUserUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.CreateUserUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定を含む Web ページの URL、 <see cref="T:System.Web.UI.WebControls.CreateUserWizard" /> Web サイトのコントロールです。</summary>
        <value>含む Web ページの URL、 <see cref="T:System.Web.UI.WebControls.CreateUserWizard" /> Web サイトのコントロールです。 既定値は、<see cref="F:System.String.Empty" /> です。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentPassword">
      <MemberSignature Language="C#" Value="public virtual string CurrentPassword { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CurrentPassword" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.CurrentPassword" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Filterable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザーの現在のパスワードを取得します。</summary>
        <value>ユーザーが入力した現在のパスワード。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ChangePassword.CurrentPassword%2A>プロパティには、現在のユーザーが入力したパスワードが含まれています。  
  
> [!IMPORTANT]
>  潜在的なセキュリティの脅威は、HTTP 経由でのパスワードを送信します。 HTTP 伝送は、悪意のあるユーザーが危険にさらさまたは表示できます。 ログイン コントロールを使用する場合にセキュリティを強化するのにには、ポストバック中に、ユーザーのパスワードを読み取ることができないことを確認するのに安全な sockets layer (SSL) 暗号化で HTTPS プロトコルを使用してください。 詳細については、次を参照してください。[ログイン コントロールのセキュリティで保護する](http://msdn.microsoft.com/library/d85075bc-9c1a-4453-8a0c-539b10853c9c)です。  
  
 テーマまたはスタイル シート テーマによっては、このプロパティを設定できません。 詳細については、次を参照してください。<xref:System.Web.UI.ThemeableAttribute>と[ASP.NET のテーマとスキン](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)です。  
  
   
  
## Examples  
 次のコード例を使用する ASP.NET ページを使用する方法を示しています、<xref:System.Web.UI.WebControls.ChangePassword>制御、およびのハンドラーが含まれています、<xref:System.Web.UI.WebControls.ChangePassword.ChangingPassword>という名前のイベント`ChangingPassword`です。 内のコード、`ChangingPassword`ハンドラーに格納されている古いパスワードを比較し、<xref:System.Web.UI.WebControls.ChangePassword.CurrentPassword%2A>プロパティに格納されている新しいパスワードを<xref:System.Web.UI.WebControls.ChangePassword.NewPassword%2A>です。 2 つのパスワードが同じ場合は、パスワードの変更は失敗します。  
  
 <xref:System.Web.UI.WebControls.ChangePassword>コントロール セット、<xref:System.Web.UI.WebControls.ChangePassword.DisplayUserName%2A>プロパティを`true`をユーザーがユーザー名を入力するユーザーを有効にします。 これにログオン ページを表示するため、ユーザーがないことを意味します。  
  
 このコード例では、ASP.NET メンバーシップとフォーム認証、および、名とパスワードがわかっているユーザーが作成されたを使用する ASP.NET Web サイトが構成されていると仮定します。 詳細については、次を参照してください。[する方法: 単純なフォーム認証を実装する](http://msdn.microsoft.com/library/9522bc8d-1a41-480a-aa11-c389a4ac2d2e)です。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ChangePassword.OnChangingPassword#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ChangePassword.OnChangingPassword/CS/changepassword_cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ChangePassword.OnChangingPassword#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ChangePassword.OnChangingPassword/VB/changepassword_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayUserName">
      <MemberSignature Language="C#" Value="public virtual bool DisplayUserName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayUserName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.DisplayUserName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定を示す値かどうか、<see cref="T:System.Web.UI.WebControls.ChangePassword" />コントロールを表示する必要があります、<see cref="P:System.Web.UI.WebControls.ChangePassword.UserName" />コントロールとラベル。</summary>
        <value>
          <see langword="true" />場合、<see cref="T:System.Web.UI.WebControls.ChangePassword" />コントロールを表示する必要があります、 <see cref="P:System.Web.UI.WebControls.ChangePassword.UserName" />、それ以外の<see langword="false" />します。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 パスワードを変更するためには、メンバーシップ プロバイダーによってユーザーを認証する必要があります。 パスワードを変更または別のユーザー アカウントを使用してメンバーシップ プロバイダーによって認証され、そのアカウントのパスワードを変更するログオンしていないユーザーを許可する、<xref:System.Web.UI.WebControls.ChangePassword>コントロールで表示できる、<xref:System.Web.UI.WebControls.TextBox>ユーザー名をそのまま使用するコントロール。  
  
 設定する必要があります、<xref:System.Web.UI.WebControls.ChangePassword.DisplayUserName%2A>プロパティを`true`場合、<xref:System.Web.UI.WebControls.ChangePassword>コントロールがログオンしていないユーザーに表示されます。 それ以外の場合、ユーザーでは、ユーザー名を指定できません。 します。  
  
   
  
## Examples  
 次のコード例は、設定する方法を示します、<xref:System.Web.UI.WebControls.ChangePassword.DisplayUserName%2A>プロパティを表示、 <xref:System.Web.UI.WebControls.ChangePassword.UserName%2A> Web サイトにログオンしていないユーザーを制御します。  
  
 [!code-aspx-csharp[ChangePasswordDisplayUserName#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ChangePasswordDisplayUserName/CS/changepassworddisplayusernamecs.aspx#1)]
 [!code-aspx-vb[ChangePasswordDisplayUserName#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ChangePasswordDisplayUserName/VB/changepassworddisplayusernamevb.aspx#1)]  
  
 次のコード例を使用する ASP.NET ページを使用する方法を示しています、<xref:System.Web.UI.WebControls.ChangePassword>制御、およびのハンドラーが含まれています、<xref:System.Web.UI.WebControls.ChangePassword.ChangingPassword>という名前のイベント`ChangingPassword`です。 内のコード、`ChangingPassword`ハンドラーに格納されている古いパスワードを比較し、<xref:System.Web.UI.WebControls.ChangePassword.CurrentPassword%2A>プロパティに格納されている新しいパスワードを<xref:System.Web.UI.WebControls.ChangePassword.NewPassword%2A>です。 2 つのパスワードが同じ場合は、パスワードの変更は失敗します。  
  
 <xref:System.Web.UI.WebControls.ChangePassword>コントロール セット、<xref:System.Web.UI.WebControls.ChangePassword.DisplayUserName%2A>プロパティを`true`をユーザーにユーザーがユーザー名の入力を有効にします。 これにログオン ページを表示するため、ユーザーがないことを意味します。  
  
 このコード例では、ASP.NET メンバーシップとフォーム認証、および、名とパスワードがわかっているユーザーが作成されたを使用する ASP.NET Web サイトが構成されていると仮定します。 詳細については、次を参照してください。[する方法: 単純なフォーム認証を実装する](http://msdn.microsoft.com/library/9522bc8d-1a41-480a-aa11-c389a4ac2d2e)です。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ChangePassword.OnChangingPassword#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ChangePassword.OnChangingPassword/CS/changepassword_cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ChangePassword.OnChangingPassword#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ChangePassword.OnChangingPassword/VB/changepassword_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EditProfileIconUrl">
      <MemberSignature Language="C#" Value="public virtual string EditProfileIconUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EditProfileIconUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.EditProfileIconUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または Web サイトのページを編集するユーザー プロファイルへのリンクの横に表示するイメージの URL を設定します。</summary>
        <value>ユーザー プロファイルが編集、Web サイトのページへのリンクに表示するイメージの URL。 既定値は、<see cref="F:System.String.Empty" /> です。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EditProfileText">
      <MemberSignature Language="C#" Value="public virtual string EditProfileText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EditProfileText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.EditProfileText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または Web サイトのページの編集のユーザー プロファイルにリンクのテキストを設定します。</summary>
        <value>ユーザー プロファイルが編集、Web サイトのページへのリンクを表示するテキストです。 既定値は、<see cref="F:System.String.Empty" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティの値を設定すると、デザイナーのツールを使用して、リソース ファイルに自動的に保存できます。 詳細については、次を参照してください。<xref:System.ComponentModel.LocalizableAttribute>と[グローバリゼーションとローカリゼーション](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EditProfileUrl">
      <MemberSignature Language="C#" Value="public virtual string EditProfileUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EditProfileUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.EditProfileUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または Web サイトのページの編集のユーザー プロファイルの URL を設定します。</summary>
        <value>Web サイトのページの編集のユーザー プロファイルの URL です。 既定値は、<see cref="F:System.String.Empty" /> です。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FailureTextStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle FailureTextStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle FailureTextStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.FailureTextStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コレクションへの参照を取得<see cref="T:System.Web.UI.WebControls.Style" />でエラー メッセージの外観を定義するプロパティ、<see cref="T:System.Web.UI.WebControls.ChangePassword" />コントロール。</summary>
        <value>A<see cref="T:System.Web.UI.WebControls.TableItemStyle" />オブジェクトを含む、<see cref="T:System.Web.UI.WebControls.Style" />でエラー メッセージの外観を定義するプロパティ、<see cref="T:System.Web.UI.WebControls.ChangePassword" />コントロール。 既定値は、<see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 次の表に、スタイルの設定を使用したカスタマイズで利用可能な<xref:System.Web.UI.WebControls.ChangePassword.FailureTextStyle%2A>プロパティです。  
  
|設定|説明|  
|-------------|-----------------|  
|`BackColor`|エラー メッセージのテキストの背後に表示される色。 色には、いずれかを指定できる、<xref:System.Drawing.Color>プロパティです。|  
|`BorderColor`|エラー メッセージのテキストを囲む境界線の色です。 色には、いずれかを指定できる、<xref:System.Drawing.Color>プロパティです。|  
|`BorderStyle`|エラー メッセージのテキストを囲む境界線のスタイルです。 スタイルを指定できます`"None"`、 `"Dotted"`、 `"Dashed"`、 `"Solid"`、 `"Double"`、 `"Groove"`、 `"Ridge"`、 `"Inset"`、または`"Outset"`です。  既定値は、`"NotSet"` です。 一部のスタイルを明確に表示しない場合を除き、`BorderWidth`値が 2 より大きい。|  
|`BorderWidth`|エラー メッセージのテキストを囲む境界線の幅。|  
|`CssClass`|エラー メッセージのテキストを表示するために使用されるカスケード スタイル シート (CSS)。 その他の設定を指定するとスタイル シートの設定よりも優先されます。|  
|`Font-Bold`|`true`エラー メッセージのテキストを太字で表示します。|  
|`Font-Italic`|`true`斜体でエラー メッセージのテキストを表示します。|  
|`Font-Names`|フォントのフォント フェイスの名前。|  
|`Font-Overline`|`true`その上の行をエラー メッセージ テキストを表示します。|  
|`Font-Size`|エラー メッセージのテキストのサイズ、<xref:System.Web.UI.WebControls.FontUnit>オブジェクト。|  
|`Font-Strikeout`|`true`取り消しは、エラー メッセージのテキストを表示します。|  
|`Font-Underline`|`true`エラー メッセージ テキストに下線を表示します。|  
|`ForeColor`|エラー メッセージのテキスト内のテキストの色。 色には、いずれかを指定できる、<xref:System.Drawing.Color>プロパティです。|  
|`Height`|A<xref:System.Web.UI.WebControls.Unit>エラー メッセージのテキストの高さを表すです。|  
|`Width`|A<xref:System.Web.UI.WebControls.Unit>エラー メッセージのテキストの幅を表すです。|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HelpPageIconUrl">
      <MemberSignature Language="C#" Value="public virtual string HelpPageIconUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HelpPageIconUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.HelpPageIconUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または Web サイトのパスワードの変更のヘルプ ページの横に表示するイメージの URL を設定します。</summary>
        <value>Web サイトのパスワードの変更のヘルプ ページの横に表示するイメージの URL です。 既定値は、<see cref="F:System.String.Empty" /> です。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HelpPageText">
      <MemberSignature Language="C#" Value="public virtual string HelpPageText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HelpPageText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.HelpPageText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または Web サイトのパスワードの変更のヘルプ ページへのリンク テキストを設定します。</summary>
        <value>Web サイトのパスワードの変更のヘルプ ページへのリンクを表示するテキスト。 既定値は、<see cref="F:System.String.Empty" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティの値を設定すると、デザイナーのツールを使用して、リソース ファイルに自動的に保存できます。 詳細については、次を参照してください。<xref:System.ComponentModel.LocalizableAttribute>と[グローバリゼーションとローカリゼーション](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HelpPageUrl">
      <MemberSignature Language="C#" Value="public virtual string HelpPageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HelpPageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.HelpPageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または Web サイトのパスワードの変更のヘルプ ページの URL を設定します。</summary>
        <value>パスワードの変更の URL には、Web サイトのページが役立ちます。 既定値は、<see cref="F:System.String.Empty" /> です。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HyperLinkStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle HyperLinkStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle HyperLinkStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.HyperLinkStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コレクションへの参照を取得<see cref="T:System.Web.UI.WebControls.Style" />にハイパーリンクの外観を定義するプロパティ、<see cref="T:System.Web.UI.WebControls.ChangePassword" />コントロール。</summary>
        <value>A<see cref="T:System.Web.UI.WebControls.TableItemStyle" />オブジェクトを含む、<see cref="T:System.Web.UI.WebControls.Style" />にハイパーリンクの外観を定義するプロパティ、<see cref="T:System.Web.UI.WebControls.ChangePassword" />コントロール。 既定値は、<see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 次の表に、スタイルの設定を使用したカスタマイズで利用可能な<xref:System.Web.UI.WebControls.ChangePassword.HyperLinkStyle%2A>プロパティです。  
  
|設定|説明|  
|-------------|-----------------|  
|`BackColor`|ハイパーリンク テキストの背景色です。 色には、いずれかを指定できる、<xref:System.Drawing.Color>プロパティです。|  
|`BorderColor`|ハイパーリンクの周りの境界線の色。 色には、いずれかを指定できる、<xref:System.Drawing.Color>プロパティです。|  
|`BorderStyle`|ハイパーリンクの周りの境界線のスタイルです。 スタイルを指定できます`"None"`、 `"Dotted"`、 `"Dashed"`、 `"Solid"`、 `"Double"`、 `"Groove"`、 `"Ridge"`、 `"Inset"`、または`"Outset"`です。 既定値は、`"NotSet"` です。 一部のスタイルを明確に表示しない場合を除き、`BorderWidth`値が 2 より大きい。|  
|`BorderWidth`|ハイパーリンクの周りの境界線の幅。|  
|`CssClass`|ハイパーリンクを表示するために使用されるカスケード スタイル シート (CSS)。 その他の設定を指定するとスタイル シートの設定よりも優先されます。|  
|`Font-Bold`|`true`ハイパーリンクのテキストを太字で表示します。|  
|`Font-Italic`|`true`斜体でハイパーリンクのテキストを表示します。|  
|`Font-Names`|フォントのフォント フェイスの名前。|  
|`Font-Overline`|`true`ハイパーリンクのテキストに上線を表示します。|  
|`Font-Size`|としてハイパーリンクのテキストのサイズ、<xref:System.Web.UI.WebControls.FontUnit>オブジェクト。|  
|`Font-Strikeout`|`true`取り消しは、ハイパーリンクのテキストを表示します。|  
|`Font-Underline`|`true`ハイパーリンクのテキストに下線を表示します。|  
|`ForeColor`|ハイパーリンクのテキストの色。 色には、いずれかを指定できる、<xref:System.Drawing.Color>プロパティです。|  
|`Height`|A<xref:System.Web.UI.WebControls.Unit>ハイパーリンクの高さを表すです。|  
|`Width`|A<xref:System.Web.UI.WebControls.Unit>ハイパーリンクの幅を表すです。|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InstructionText">
      <MemberSignature Language="C#" Value="public virtual string InstructionText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InstructionText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.InstructionText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定に表示される情報のテキスト、<see cref="T:System.Web.UI.WebControls.ChangePassword" />間の制御、<see cref="P:System.Web.UI.WebControls.ChangePassword.ChangePasswordTitleText" />および入力のボックスです。</summary>
        <value>上に表示する情報のテキスト、<see cref="T:System.Web.UI.WebControls.ChangePassword" />間の制御、<see cref="P:System.Web.UI.WebControls.ChangePassword.ChangePasswordTitleText" />および入力のボックスです。 既定値は、<see cref="F:System.String.Empty" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ChangePassword.InstructionText%2A>プロパティを取得または設定に表示される情報のテキスト、<xref:System.Web.UI.WebControls.ChangePassword>コントロール。 既定値は、<xref:System.String.Empty> です。  
  
 このプロパティを使用して、自分の管理に関する一般的な情報を表示します。 使用することも、<xref:System.Web.UI.WebControls.ChangePassword.PasswordHintText%2A>メンバーシップ プロバイダーまたはで指定されたパスワードの要件に関する指示を表示するプロパティを<xref:System.Web.UI.WebControls.ChangePassword.NewPasswordRegularExpression%2A>プロパティです。  
  
 このプロパティの値を設定すると、デザイナーのツールを使用して、リソース ファイルに自動的に保存できます。 詳細については、次を参照してください。<xref:System.ComponentModel.LocalizableAttribute>と[グローバリゼーションとローカリゼーション](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InstructionTextStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle InstructionTextStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle InstructionTextStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.InstructionTextStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コレクションへの参照を取得<see cref="T:System.Web.UI.WebControls.Style" />の説明テキストの外観を定義するプロパティ、<see cref="T:System.Web.UI.WebControls.ChangePassword" />コントロール。</summary>
        <value>A<see cref="T:System.Web.UI.WebControls.TableItemStyle" />オブジェクトを含む、<see cref="T:System.Web.UI.WebControls.Style" />に含まれる説明のテキストの外観を定義するプロパティ、<see cref="P:System.Web.UI.WebControls.ChangePassword.InstructionText" />プロパティです。 既定値は、<see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 次の表に、スタイルの設定を使用したカスタマイズで利用可能な<xref:System.Web.UI.WebControls.ChangePassword.InstructionTextStyle%2A>プロパティです。  
  
|設定|説明|  
|-------------|-----------------|  
|`BackColor`|説明テキストの背景色です。 色には、いずれかを指定できる、<xref:System.Drawing.Color>プロパティです。|  
|`BorderColor`|説明テキストを囲む境界線の色です。 色には、いずれかを指定できる、<xref:System.Drawing.Color>プロパティです。|  
|`BorderStyle`|説明テキストを囲む境界線のスタイルです。 スタイルを指定できます`"None"`、 `"Dotted"`、 `"Dashed"`、 `"Solid"`、 `"Double"`、 `"Groove"`、 `"Ridge"`、 `"Inset"`、または`"Outset"`です。 既定値は、`"NotSet"` です。 一部のスタイルを明確に表示しない場合を除き、`BorderWidth`値が 2 より大きい。|  
|`BorderWidth`|説明テキストを囲む境界線の幅。|  
|`CssClass`|説明テキストを表示するために使用されるカスケード スタイル シート (CSS)。 その他の設定を指定するとスタイル シートの設定よりも優先されます。|  
|`Font-Bold`|`true`説明テキストを太字で表示します。|  
|`Font-Italic`|`true`斜体の説明テキストを表示します。|  
|`Font-Names`|フォントのフォント フェイスの名前。|  
|`Font-Overline`|`true`説明テキストに上線を表示します。|  
|`Font-Size`|説明のテキストとしてのテキストのサイズ、<xref:System.Web.UI.WebControls.FontUnit>オブジェクト。|  
|`Font-Strikeout`|`true`取り消しの説明テキストを表示します。|  
|`Font-Underline`|`true`説明のテキストに下線を表示します。|  
|`ForeColor`|説明のテキスト内のテキストの色。 色には、いずれかを指定できる、<xref:System.Drawing.Color>プロパティです。|  
|`Height`|A<xref:System.Web.UI.WebControls.Unit>説明テキストの高さを表すです。|  
|`Width`|A<xref:System.Web.UI.WebControls.Unit>説明テキストの幅を表すです。|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LabelStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle LabelStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle LabelStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.LabelStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コレクションへの参照を取得<see cref="T:System.Web.UI.WebControls.Style" />のテキストの外観を定義するオブジェクトでは、ラベルをボックスに、<see cref="T:System.Web.UI.WebControls.ChangePassword" />コントロール。</summary>
        <value>A<see cref="T:System.Web.UI.WebControls.TableItemStyle" />オブジェクトを含む、<see cref="T:System.Web.UI.WebControls.Style" />のテキストの外観を定義するプロパティでは、ラベルをボックスに、<see cref="T:System.Web.UI.WebControls.ChangePassword" />コントロール。 既定値は、<see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 次の表に、スタイルの設定を使用したカスタマイズで利用可能な<xref:System.Web.UI.WebControls.ChangePassword.LabelStyle%2A>プロパティです。  
  
|設定|説明|  
|-------------|-----------------|  
|`BackColor`|テキスト ボックスのラベルの背景色。 色には、いずれかを指定できる、<xref:System.Drawing.Color>プロパティです。|  
|`BorderColor`|テキスト ボックスのラベルの周りの境界線の色。 色には、いずれかを指定できる、<xref:System.Drawing.Color>プロパティです。|  
|`BorderStyle`|テキスト ボックスのラベルの周りの境界線のスタイルです。 スタイルを指定できます`"None"`、 `"Dotted"`、 `"Dashed"`、 `"Solid"`、 `"Double"`、 `"Groove"`、 `"Ridge"`、 `"Inset"`、または`"Outset"`です。 既定値は、`"NotSet"` です。 一部のスタイルを明確に表示しない場合を除き、`BorderWidth`値が 2 より大きい。|  
|`BorderWidth`|テキスト ボックスのラベルの周りの境界線の幅。|  
|`CssClass`|テキスト ボックスのラベルを表示するために使用されるカスケード スタイル シート (CSS)。 その他の設定を指定するとスタイル シートの設定よりも優先されます。|  
|`Font-Bold`|`true`テキスト ボックスのラベル テキストを太字で表示します。|  
|`Font-Italic`|`true`斜体のテキスト ボックスのラベル テキストを表示します。|  
|`Font-Names`|フォントのフォント フェイスの名前。|  
|`Font-Overline`|`true`その上の行のテキスト ボックスのラベル テキストを表示します。|  
|`Font-Size`|テキスト ボックスのラベルとしてのテキストのサイズ、<xref:System.Web.UI.WebControls.FontUnit>オブジェクト。|  
|`Font-Strikeout`|`true`テキスト ボックスを表示するラベルのテキストに取り消しできます。|  
|`Font-Underline`|`true`テキスト ボックスのラベル テキストに下線を表示します。|  
|`ForeColor`|テキスト ボックスのラベルのテキストの色です。 色には、いずれかを指定できる、<xref:System.Drawing.Color>プロパティです。|  
|`Height`|A<xref:System.Web.UI.WebControls.Unit>テキスト ボックスのラベルの高さを表すです。|  
|`Width`|A<xref:System.Web.UI.WebControls.Unit>テキスト ボックスのラベルの幅を表すです。|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadControlState">
      <MemberSignature Language="C#" Value="protected override void LoadControlState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void LoadControlState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ChangePassword.LoadControlState(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState"><see cref="T:System.Object" />を表すコントロールの状態を復元します。</param>
        <summary>コントロールによって保存された前回のページ要求からの状態情報を復元、<see cref="M:System.Web.UI.WebControls.ChangePassword.SaveControlState" />メソッドです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 上書き、<xref:System.Web.UI.WebControls.ChangePassword.LoadControlState%2A>メソッドと、カスタム サーバー コントロールがコントロールの状態を復元する方法を指定する必要があります。 詳細については、次を参照してください。[サーバー コントロールのカスタム状態管理](http://msdn.microsoft.com/library/96f79173-9d1a-4bde-bf34-1032ebbbe5a9)です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ChangePassword.LoadViewState(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState"><see cref="T:System.Object" />を表すコントロールの状態を復元します。</param>
        <summary>復元によって保存された前回のページ要求から状態情報の表示、<see cref="M:System.Web.UI.WebControls.ChangePassword.SaveViewState" />メソッドです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 上書き、<xref:System.Web.UI.WebControls.ChangePassword.LoadViewState%2A>メソッドと、カスタム サーバー コントロールがそのビューステートを復元する方法を指定する必要があります。 詳細については、次を参照してください。[サーバー コントロールのカスタム状態管理](http://msdn.microsoft.com/library/96f79173-9d1a-4bde-bf34-1032ebbbe5a9)です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="savedState" />パラメーターが有効なに解決できません。<see cref="P:System.Web.UI.Control.ViewState" />です。</exception>
      </Docs>
    </Member>
    <Member MemberName="MailDefinition">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MailDefinition MailDefinition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.MailDefinition MailDefinition" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.MailDefinition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MailDefinition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>自分のパスワードを変更した後は、ユーザーに送信される電子メール メッセージを定義するプロパティのコレクションへの参照を取得します。</summary>
        <value>参照、<see cref="T:System.Web.UI.WebControls.MailDefinition" />電子メール メッセージを定義するオブジェクトは、新しいユーザーに送信します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ChangePassword.MailDefinition%2A>プロパティを使用して、書式を定義するプロパティのグループと自分のパスワードを変更した後、ユーザーに送信される電子メール メッセージのコンテンツへの参照を返します。 一般的な設定には、件名、および送信者のリターン アドレスが含まれます。 プロパティの全一覧については、<xref:System.Web.UI.WebControls.MailDefinition> を参照してください。  
  
 <xref:System.Web.UI.WebControls.ChangePassword.MailDefinition%2A>プロパティは読み取り専用です。 ただし、のプロパティを設定することができます、<xref:System.Web.UI.WebControls.MailDefinition>オブジェクトを返します。 これらのプロパティを設定するには、フォームで*プロパティ*`-`*サブプロパティ*ここで、*サブプロパティ*のプロパティを表します、<xref:System.Web.UI.WebControls.MailDefinition>クラス (たとえば、 `MailDefinition-Subject`)。 プログラムでは、フォームにもプロパティを設定することができます*プロパティ*`.`*サブプロパティ*(たとえば、`MailDefinition.Subject`)。  
  
 ユーザー メンバーシップ プロバイダーに登録されている電子メール アドレスがある場合にのみ、電子メール メッセージが送信される場合に、<xref:System.Web.UI.WebControls.MailDefinition.BodyFileName%2A>のプロパティ、<xref:System.Web.UI.WebControls.ChangePassword.MailDefinition%2A>プロパティが有効なファイルをポイントします。 場合、<xref:System.Web.UI.WebControls.MailDefinition.BodyFileName%2A>プロパティが設定されて、<xref:System.Web.UI.WebControls.MailDefinition.From%2A>プロパティは、電子メール アドレス以外に設定する必要がありますそれ以外の場合、<xref:System.Web.HttpException>例外がスローされます。  
  
 電子メール メッセージを作成する場合、<xref:System.Web.UI.WebControls.MailDefinition>オブジェクトを次の表に示すように置換を行うことができます。 置換テキストは区別されません。  
  
|置換テキスト|置き換えられます|  
|-----------------------|-------------------|  
|**<%** `UserName` **%>**|ユーザーの Web サイトのユーザー名。|  
|**\<%***パスワード***%>**|ユーザーの新しいパスワード。|  
  
 場合、<xref:System.Web.UI.WebControls.MailDefinition.IsBodyHtml%2A>のプロパティ、<xref:System.Web.UI.WebControls.MailDefinition>オブジェクトが`true`、メール メッセージの内容は、HTML エンコードされたメッセージの受信者のクロス サイト スクリプティング セキュリティの脆弱性を防ぐされます。  
  
 使用することができます、<xref:System.Web.UI.WebControls.ChangePassword.SendingMail>を変更するイベント、<xref:System.Net.Mail.MailMessage>によって作成されるオブジェクト、<xref:System.Web.UI.WebControls.MailDefinition>オブジェクト。  
  
> [!IMPORTANT]
>  ユーザー アカウント名またはパスワードを電子メールで潜在的なセキュリティの脅威を送信しています。 電子メール メッセージでは、プレーン テキストで送信される通常と、アプリケーションを「見つけ出す」特殊なネットワークで読み取ることができます。 セキュリティを強化するに記載されている緩和策を使用して[ログイン コントロールのセキュリティで保護する](http://msdn.microsoft.com/library/d85075bc-9c1a-4453-8a0c-539b10853c9c)です。  
  
 テーマまたはスタイル シート テーマによっては、このプロパティを設定できません。 詳細については、次を参照してください。<xref:System.Web.UI.ThemeableAttribute>と[ASP.NET のテーマとスキン](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)です。  
  
   
  
## Examples  
 次のコード例を使用する方法を示しています、<xref:System.Web.UI.WebControls.ChangePassword.MailDefinition%2A>自分のパスワードを変更できるユーザーに送信される電子メール メッセージを定義するプロパティです。 という名前のファイルがあることを想定`MailFile.txt`を送信する電子メール メッセージのテキストを格納しています。  
  
 ユーザーに電子メール メッセージを送信できるようにするには、アプリケーションの Web.config ファイルで、電子メール サーバーを構成する必要があります。 詳細については、次を参照してください。 [NIB: 方法: インストールと構成内の SMTP 仮想サーバー IIS 6.0](http://msdn.microsoft.com/en-us/ed204b58-24af-47d0-9687-60e5df5f17f8)です。  
  
 [!code-aspx-csharp[ChangePasswordMailDefinition#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ChangePasswordMailDefinition/CS/changepasswordmaildefinitioncs.aspx#1)]
 [!code-aspx-vb[ChangePasswordMailDefinition#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ChangePasswordMailDefinition/VB/changepasswordmaildefinitionvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><see cref="P:System.Web.UI.WebControls.MailDefinition.From" />プロパティは、電子メール アドレスに設定されていません。</exception>
      </Docs>
    </Member>
    <Member MemberName="MembershipProvider">
      <MemberSignature Language="C#" Value="public virtual string MembershipProvider { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MembershipProvider" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.MembershipProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはメンバーの情報を管理するために使用するメンバーシップ プロバイダーを設定します。</summary>
        <value>名前、<see cref="T:System.Web.Security.MembershipProvider" />の<see cref="T:System.Web.UI.WebControls.ChangePassword" />コントロール。 既定では、アプリケーションのメンバーシップ プロバイダーです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ChangePassword.MembershipProvider%2A>プロパティを取得またはメンバーの情報を検索するために使用するメンバーシップ プロバイダーを設定します。 場合、<xref:System.Web.UI.WebControls.ChangePassword.MembershipProvider%2A>プロパティは`null`または空で、既定のメンバーシップ プロバイダー`AspNetSqlMembershipProvider`を使用します。 ASP.NET アプリケーションを使用可能なメンバーシップ プロバイダーの詳細については、次を参照してください。[メンバーシップ プロバイダー](http://msdn.microsoft.com/library/d2c90ff6-aa86-4001-b2c5-e5c99cb7f68f)です。  
  
 新しいパスワードで、メンバーシップ プロバイダーにより設定の最小要件を満たす必要があります、 <xref:System.Web.Security.Membership.MinRequiredPasswordLength%2A>、 <xref:System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters%2A>、および<xref:System.Web.Security.Membership.PasswordStrengthRegularExpression%2A>プロパティです。 パスワードがこれらの要件を満たしていない場合、<xref:System.Web.UI.WebControls.ChangePassword.ChangePasswordError>イベントが発生します。  
  
 テーマまたはスタイル シート テーマによっては、このプロパティを設定できません。 詳細については、次を参照してください。<xref:System.Web.UI.ThemeableAttribute>と[ASP.NET のテーマとスキン](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NewPassword">
      <MemberSignature Language="C#" Value="public virtual string NewPassword { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NewPassword" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.NewPassword" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Filterable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザーが入力した新しいパスワードを取得します。</summary>
        <value>ユーザーが入力した新しいパスワード。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ChangePassword.NewPassword%2A>プロパティには、ユーザーが入力した新しいパスワードが含まれています。  
  
 使用することができます、<xref:System.Web.UI.WebControls.ChangePassword.NewPasswordRegularExpression%2A>プロパティを新しいパスワードの要件を定義します。 この正規表現を使用すると、クライアント側でパスワード規則の実施します。 <xref:System.Web.UI.WebControls.ChangePassword.NewPasswordRegularExpression%2A>データ ストア レベルで構成可能なパスワードの適用に関連していません。 パスワードに設定している最小要件を満たす必要がありますで、 <xref:System.Web.Security.Membership.MinRequiredPasswordLength%2A>、 <xref:System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters%2A>、および<xref:System.Web.Security.Membership.PasswordStrengthRegularExpression%2A>プロパティです。 パスワードがこれらの要件を満たしていない場合、<xref:System.Web.UI.WebControls.ChangePassword.ChangePasswordError>イベントが発生します。  
  
> [!IMPORTANT]
>  潜在的なセキュリティの脅威は、HTTP 経由でのパスワードを送信します。 HTTP 伝送は、悪意のあるユーザーが危険にさらさまたは表示できます。 ログイン コントロールを使用する場合にセキュリティを強化するのにには、ポストバック中に、ユーザーのパスワードを読み取ることができないことを確認するのに安全な sockets layer (SSL) 暗号化で HTTPS プロトコルを使用してください。 詳細については、次を参照してください。[ログイン コントロールのセキュリティで保護する](http://msdn.microsoft.com/library/d85075bc-9c1a-4453-8a0c-539b10853c9c)です。  
  
 テーマまたはスタイル シート テーマによっては、このプロパティを設定できません。 詳細については、次を参照してください。<xref:System.Web.UI.ThemeableAttribute>と[ASP.NET のテーマとスキン](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)です。  
  
   
  
## Examples  
 次のコード例を使用する ASP.NET ページを使用する方法を示しています、<xref:System.Web.UI.WebControls.ChangePassword>制御、およびのハンドラーが含まれています、<xref:System.Web.UI.WebControls.ChangePassword.ChangingPassword>という名前のイベント`ChangingPassword`です。 `ChangingPassword`格納されている古いパスワードを比較し、<xref:System.Web.UI.WebControls.ChangePassword.CurrentPassword%2A>プロパティに格納されている新しいパスワードを<xref:System.Web.UI.WebControls.ChangePassword.NewPassword%2A>です。 同じ場合は、パスワードの変更は失敗します。  
  
 <xref:System.Web.UI.WebControls.ChangePassword>コントロール セット、<xref:System.Web.UI.WebControls.ChangePassword.DisplayUserName%2A>プロパティを`true`をユーザーにユーザーがユーザー名の入力を有効にします。 これにログオン ページを表示するため、ユーザーがないことを意味します。  
  
 このコード例では、ASP.NET メンバーシップとフォーム認証、および、名とパスワードがわかっているユーザーが作成されたを使用する ASP.NET Web サイトが構成されていると仮定します。 詳細については、次を参照してください。[する方法: 単純なフォーム認証を実装する](http://msdn.microsoft.com/library/9522bc8d-1a41-480a-aa11-c389a4ac2d2e)です。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ChangePassword.OnChangingPassword#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ChangePassword.OnChangingPassword/CS/changepassword_cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ChangePassword.OnChangingPassword#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ChangePassword.OnChangingPassword/VB/changepassword_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NewPasswordLabelText">
      <MemberSignature Language="C#" Value="public virtual string NewPasswordLabelText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NewPasswordLabelText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.NewPasswordLabelText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または新しいパスワード テキスト ボックスのラベル テキストを設定します。</summary>
        <value>新しいパスワード テキスト ボックスの横に表示するテキスト。 既定値は"新しいパスワード:"です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティの値を設定すると、デザイナーのツールを使用して、リソース ファイルに自動的に保存できます。 詳細については、次を参照してください。<xref:System.ComponentModel.LocalizableAttribute>と[グローバリゼーションとローカリゼーション](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NewPasswordRegularExpression">
      <MemberSignature Language="C#" Value="public virtual string NewPasswordRegularExpression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NewPasswordRegularExpression" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.NewPasswordRegularExpression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはユーザーによって提供されるパスワードの検証に使用される正規表現を設定します。</summary>
        <value>ユーザーによって提供される新しいパスワードの検証に使用する正規表現文字列。 既定値は、<see cref="F:System.String.Empty" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.ChangePassword.NewPasswordRegularExpression%2A>プロパティを使用するパスワードは、Web サイト上のユーザー アカウントを検証するための要件を定義します。 この正規表現を使用すると、クライアント側でパスワード規則の実施します。 <xref:System.Web.UI.WebControls.ChangePassword.NewPasswordRegularExpression%2A>データ ストア レベルで構成可能なパスワードの適用に関連していません。 パスワードに設定している最小要件を満たす必要がありますで、 <xref:System.Web.Security.Membership.MinRequiredPasswordLength%2A>、 <xref:System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters%2A>、および<xref:System.Web.Security.Membership.PasswordStrengthRegularExpression%2A>プロパティです。 パスワードがこれらの要件を満たしていない場合、<xref:System.Web.UI.WebControls.ChangePassword.ChangePasswordError>イベントが発生します。  
  
 要件をユーザーに表示するには設定、<xref:System.Web.UI.WebControls.ChangePassword.PasswordHintText%2A>プロパティです。  
  
 入力したパスワードに含まれている正規表現を渡さないかどうか、<xref:System.Web.UI.WebControls.ChangePassword.NewPasswordRegularExpression%2A>プロパティに含まれるテキスト、<xref:System.Web.UI.WebControls.ChangePassword.NewPasswordRegularExpressionErrorMessage%2A>プロパティは、ユーザーに表示されます。  
  
 テキストが含まれるメンバーシップ プロバイダーによって、パスワードが拒否された場合、<xref:System.Web.UI.WebControls.ChangePassword.ChangePasswordFailureText%2A>プロパティが表示されます。  
  
 パスワードの標準の一般的な用途では、強制的にユーザーが強力なパスワードを選択します。 ベスト プラクティスとして、メンバーシップ プロバイダーのデータ レベルでのパスワード規則の実施します。 <xref:System.Web.UI.WebControls.ChangePassword.NewPasswordRegularExpression%2A>プロパティでは、クライアント側でパスワードの確認の利便性のためが繰り返されるようにするユーザーをロックしないログオンを試みます。 セキュリティを強化するには、ユーザーがログオンする実行の試行回数を制限するメンバーシップ プロバイダーを構成します。  詳細については、次を参照してください。[セキュリティで保護するメンバーシップ](http://msdn.microsoft.com/library/2dab2012-c278-426a-bb0d-93b260c428a7)です。  
  
   
  
## Examples  
 次のコード例は、設定する方法を示します、<xref:System.Web.UI.WebControls.ChangePassword.NewPasswordRegularExpression%2A>プロパティを次の条件を満たしているパスワードをチェックする正規表現を定義します。  
  
-   6 文字よりも大きくなります。  
  
-   少なくとも 1 つの数字を含めます。  
  
-   少なくとも 1 つの特殊 (アルファベット以外の) 文字を含めます。  
  
 含まれているパスワードの要件、<xref:System.Web.UI.WebControls.ChangePassword.PasswordHintText%2A>プロパティは、ユーザーに表示されます。  
  
 テキストが含まれる、ユーザーが入力したパスワードが、条件を満たしていない場合、<xref:System.Web.UI.WebControls.ChangePassword.NewPasswordRegularExpressionErrorMessage%2A>プロパティは、ユーザーに表示されます。 テキストが含まれる、新しいパスワードを入力しない場合、<xref:System.Web.UI.WebControls.ChangePassword.NewPasswordRequiredErrorMessage%2A>プロパティは、ユーザーに表示されます。  
  
> [!NOTE]
>  新しいパスワードが設定している最小要件を満たす必要がありますで、 <xref:System.Web.Security.Membership.MinRequiredPasswordLength%2A>、 <xref:System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters%2A>、および<xref:System.Web.Security.Membership.PasswordStrengthRegularExpression%2A>プロパティです。 パスワードがこれらの要件を満たしていない場合、<xref:System.Web.UI.WebControls.ChangePassword.ChangePasswordError>イベントが発生します。  
  
 [!code-aspx-csharp[ChangePasswordNewPasswordRegex#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ChangePasswordNewPasswordRegex/CS/changepasswordpasswordregexcs.aspx#1)]
 [!code-aspx-vb[ChangePasswordNewPasswordRegex#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ChangePasswordNewPasswordRegex/VB/changepasswordpasswordregexvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NewPasswordRegularExpressionErrorMessage">
      <MemberSignature Language="C#" Value="public virtual string NewPasswordRegularExpressionErrorMessage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NewPasswordRegularExpressionErrorMessage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.NewPasswordRegularExpressionErrorMessage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定は、入力したパスワードがで定義されている正規表現の条件を渡していないときに表示されるエラー メッセージ、<see cref="P:System.Web.UI.WebControls.ChangePassword.NewPasswordRegularExpression" />プロパティです。</summary>
        <value>ときに入力したパスワード渡しませんで定義されている正規表現を示すエラー メッセージ、<see cref="P:System.Web.UI.WebControls.ChangePassword.NewPasswordRegularExpression" />です。 既定値は、<see cref="F:System.String.Empty" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.ChangePassword.NewPasswordRegularExpressionErrorMessage%2A>入力したパスワードがで定義されている正規表現を渡さないことをユーザーに通知するプロパティ、<xref:System.Web.UI.WebControls.ChangePassword.NewPasswordRegularExpression%2A>プロパティです。  
  
 <xref:System.Web.UI.WebControls.ChangePassword.NewPasswordRegularExpressionErrorMessage%2A>データ ストア レベルで構成可能なパスワードの適用に関連していません。 新しいパスワードに設定している最小要件を満たす必要がありますで、 <xref:System.Web.Security.Membership.MinRequiredPasswordLength%2A>、 <xref:System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters%2A>、および<xref:System.Web.Security.Membership.PasswordStrengthRegularExpression%2A>プロパティです。 パスワードがこれらの要件を満たしていない場合、<xref:System.Web.UI.WebControls.ChangePassword.ChangePasswordError>イベントが発生します。  
  
   
  
## Examples  
 次のコード例は、設定する方法を示します、<xref:System.Web.UI.WebControls.ChangePassword.NewPasswordRegularExpression%2A>プロパティを次の条件を満たしているパスワードをチェックする正規表現を定義します。  
  
-   6 文字よりも大きくなります。  
  
-   少なくとも 1 つの数字を含めます。  
  
-   少なくとも 1 つの特殊 (アルファベット以外の) 文字を含めます。  
  
 含まれているパスワードの要件、<xref:System.Web.UI.WebControls.ChangePassword.PasswordHintText%2A>プロパティは、ユーザーに表示されます。  
  
 テキストが含まれる、ユーザーが入力したパスワードが、条件を満たしていない場合、<xref:System.Web.UI.WebControls.ChangePassword.NewPasswordRegularExpressionErrorMessage%2A>プロパティは、ユーザーに表示されます。  テキストが含まれる、新しいパスワードを入力しない場合、<xref:System.Web.UI.WebControls.ChangePassword.NewPasswordRequiredErrorMessage%2A>プロパティは、ユーザーに表示されます。  
  
> [!NOTE]
>  新しいパスワードが設定している最小要件を満たす必要がありますで、 <xref:System.Web.Security.Membership.MinRequiredPasswordLength%2A>、 <xref:System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters%2A>、および<xref:System.Web.Security.Membership.PasswordStrengthRegularExpression%2A>プロパティです。 パスワードがこれらの要件を満たしていない場合、<xref:System.Web.UI.WebControls.ChangePassword.ChangePasswordError>イベントが発生します。  
  
 [!code-aspx-csharp[ChangePasswordNewPasswordRegex#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ChangePasswordNewPasswordRegex/CS/changepasswordpasswordregexcs.aspx#1)]
 [!code-aspx-vb[ChangePasswordNewPasswordRegex#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ChangePasswordNewPasswordRegex/VB/changepasswordpasswordregexvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NewPasswordRequiredErrorMessage">
      <MemberSignature Language="C#" Value="public virtual string NewPasswordRequiredErrorMessage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NewPasswordRequiredErrorMessage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.NewPasswordRequiredErrorMessage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはユーザーが新しいパスワード テキスト ボックスを空のままと表示されるエラー メッセージを設定します。</summary>
        <value>ユーザーが新しいパスワード テキスト ボックスを空のままにした場合に表示するエラー メッセージ。 既定値は「新しいパスワードが必要」です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティの値を設定すると、デザイナーのツールを使用して、リソース ファイルに自動的に保存できます。 詳細については、次を参照してください。<xref:System.ComponentModel.LocalizableAttribute>と[グローバリゼーションとローカリゼーション](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)です。  
  
   
  
## Examples  
 次のコード例は、設定する方法を示します、<xref:System.Web.UI.WebControls.ChangePassword.NewPasswordRegularExpression%2A>プロパティを次の条件を満たしているパスワードをチェックする正規表現を定義します。  
  
-   6 文字よりも大きくなります。  
  
-   少なくとも 1 つの数字を含めます。  
  
-   少なくとも 1 つの特殊 (アルファベット以外の) 文字を含めます。  
  
 含まれているパスワードの要件、<xref:System.Web.UI.WebControls.ChangePassword.PasswordHintText%2A>プロパティは、ユーザーに表示されます。  
  
 テキストが含まれる、ユーザーが入力したパスワードが、条件を満たしていない場合、<xref:System.Web.UI.WebControls.ChangePassword.NewPasswordRegularExpressionErrorMessage%2A>プロパティは、ユーザーに表示されます。 テキストが含まれる、新しいパスワードを入力しない場合、<xref:System.Web.UI.WebControls.ChangePassword.NewPasswordRequiredErrorMessage%2A>プロパティは、ユーザーに表示されます。  
  
> [!NOTE]
>  新しいパスワードが設定している最小要件を満たす必要がありますで、 <xref:System.Web.Security.Membership.MinRequiredPasswordLength%2A>、 <xref:System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters%2A>、および<xref:System.Web.Security.Membership.PasswordStrengthRegularExpression%2A>プロパティです。 パスワードがこれらの要件を満たしていない場合、<xref:System.Web.UI.WebControls.ChangePassword.ChangePasswordError>イベントが発生します。  
  
 [!code-aspx-csharp[ChangePasswordNewPasswordRegex#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ChangePasswordNewPasswordRegex/CS/changepasswordpasswordregexcs.aspx#1)]
 [!code-aspx-vb[ChangePasswordNewPasswordRegex#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ChangePasswordNewPasswordRegex/VB/changepasswordpasswordregexvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBubbleEvent">
      <MemberSignature Language="C#" Value="protected override bool OnBubbleEvent (object source, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool OnBubbleEvent(object source, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ChangePassword.OnBubbleEvent(System.Object,System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="source">イベントのソース。</param>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" /> オブジェクト。</param>
        <summary>決定するかどうかのイベントを<see cref="T:System.Web.UI.WebControls.ChangePassword" />Web サーバー コントロールの階層構造のページの制御が渡されます。</summary>
        <returns>
          イベントがキャンセルされた場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ChangePassword>コントロールには、パスワードの変更状況と成功状態ビューの子コントロールが含まれています。 入れ子になったコントロールからのイベントを通知するイベントの発生に個別に各ボタンではなく (つまり、これらに送信されて、名前付けコンテナー)。 名前付けコンテナーでイベントを発生させますジェネリックと呼ばれる`ItemCommand`できるようにする個々 のコントロールの発生元のイベントを確認するパラメーター値を使用します。 この単一のイベントに応答して、各子コントロールのイベント処理メソッドの記述を回避できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCancelButtonClick">
      <MemberSignature Language="C#" Value="protected virtual void OnCancelButtonClick (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCancelButtonClick(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ChangePassword.OnCancelButtonClick(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" /> オブジェクト。</param>
        <summary>発生させます、<see cref="E:System.Web.UI.WebControls.ChangePassword.CancelButtonClick" />イベント、ユーザーが [キャンセル] をクリックします。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnChangedPassword">
      <MemberSignature Language="C#" Value="protected virtual void OnChangedPassword (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnChangedPassword(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ChangePassword.OnChangedPassword(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" /> オブジェクト。</param>
        <summary>発生させる、<see cref="E:System.Web.UI.WebControls.ChangePassword.ChangedPassword" />パスワードが変更された後のイベントです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ChangePassword.OnChangedPassword%2A>メソッドで指定されたメンバーシップ プロバイダーによって、パスワードが変更された後に呼び出されますが、<xref:System.Web.UI.WebControls.ChangePassword.MembershipProvider%2A>プロパティです。 後に、<xref:System.Web.UI.WebControls.ChangePassword.OnChangedPassword%2A>メソッドは、次のようにします。  
  
-   場合、<xref:System.Web.UI.WebControls.ChangePassword.MailDefinition%2A>プロパティが設定されて、<xref:System.Web.UI.WebControls.ChangePassword>コントロールは、ユーザーに電子メール メッセージを送信しようとしています。  
  
-   ユーザーがで指定された Web サイトにリダイレクトするか、<xref:System.Web.UI.WebControls.ChangePassword.SuccessPageUrl%2A>プロパティまたはコントロール テンプレートで指定された、<xref:System.Web.UI.WebControls.ChangePassword.SuccessTemplate%2A>プロパティが表示されます。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[サーバーで ASP.NET Web フォーム ページのイベントの処理](http://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9)です。  
  
 <xref:System.Web.UI.WebControls.ChangePassword.OnChangedPassword%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>オーバーライドする場合、<see cref="M:System.Web.UI.WebControls.ChangePassword.OnChangedPassword(System.EventArgs)" />を呼び出して派生クラスでメソッドが必ず、<see cref="M:System.Web.UI.WebControls.ChangePassword.OnChangedPassword(System.EventArgs)" />デリゲートを登録するための基本クラスのメソッドは、イベントを受信します。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnChangePasswordError">
      <MemberSignature Language="C#" Value="protected virtual void OnChangePasswordError (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnChangePasswordError(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ChangePassword.OnChangePasswordError(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" /> オブジェクト。</param>
        <summary>発生させる、<see cref="E:System.Web.UI.WebControls.ChangePassword.ChangePasswordError" />イベント、ユーザーのパスワードが変更されていない場合。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ChangePassword.OnChangePasswordError%2A>メソッドは、メンバーシップ プロバイダーがで指定されたときに呼び出されますが、<xref:System.Web.UI.WebControls.ChangePassword.MembershipProvider%2A>プロパティには、ユーザーのパスワードを変更中にエラーが発生しました。 指定した<xref:System.Web.Security.MembershipProvider>オブジェクトには、パスワードの変更が失敗した理由、のみは示しません。 パスワードが変更されていないこと。  
  
 使用して、<xref:System.Web.UI.WebControls.ChangePassword.OnChangePasswordError%2A>ユーザーのパスワードが変更されていないときに、カスタム アクションを実行するメソッド。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[サーバーで ASP.NET Web フォーム ページのイベントの処理](http://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9)です。  
  
 <xref:System.Web.UI.WebControls.ChangePassword.OnChangePasswordError%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>オーバーライドする場合、<see cref="M:System.Web.UI.WebControls.ChangePassword.OnChangePasswordError(System.EventArgs)" />を呼び出して派生クラスでメソッドが必ず、<see cref="M:System.Web.UI.WebControls.ChangePassword.OnChangePasswordError(System.EventArgs)" />デリゲートを登録するための基本クラスのメソッドは、イベントを受信します。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnChangingPassword">
      <MemberSignature Language="C#" Value="protected virtual void OnChangingPassword (System.Web.UI.WebControls.LoginCancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnChangingPassword(class System.Web.UI.WebControls.LoginCancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ChangePassword.OnChangingPassword(System.Web.UI.WebControls.LoginCancelEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.LoginCancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A<see cref="T:System.ComponentModel.CancelEventArgs" />イベント データを含むオブジェクト。</param>
        <summary>発生させる、<see cref="E:System.Web.UI.WebControls.ChangePassword.ChangingPassword" />メンバーシップ プロバイダーによって、ユーザーのパスワードを変更するまでのイベントです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ChangePassword.OnChangingPassword%2A>メソッドで指定されたメンバーシップ プロバイダーの前に、<xref:System.Web.UI.WebControls.ChangePassword.MembershipProvider%2A>プロパティが、ユーザーのパスワードを変更すると呼ばれます。  
  
 使用して、<xref:System.Web.UI.WebControls.ChangePassword.OnChangingPassword%2A>を確認するために新しいパスワードの確認など、パスワードを変更する前に必要な処理を実行するメソッドはよくあるパスワードの一覧ではありません。  
  
 <xref:System.Web.UI.WebControls.ChangePassword.OnChangingPassword%2A>メソッドを取り消すことができます、<xref:System.Web.UI.WebControls.ChangePassword.ChangingPassword>イベントを設定して、<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>のプロパティ、<xref:System.ComponentModel.CancelEventArgs>オブジェクトとして渡される、 *e*パラメーターを`true`です。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[サーバーで ASP.NET Web フォーム ページのイベントの処理](http://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9)です。  
  
 <xref:System.Web.UI.WebControls.ChangePassword.OnChangingPassword%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
   
  
## Examples  
 次のコード例を使用する ASP.NET ページを使用する方法を示しています、<xref:System.Web.UI.WebControls.ChangePassword>制御、およびのハンドラーが含まれています、<xref:System.Web.UI.WebControls.ChangePassword.ChangingPassword>という名前のイベント`ChangingPassword`です。 `ChangingPassword`格納されている古いパスワードを比較し、<xref:System.Web.UI.WebControls.ChangePassword.CurrentPassword%2A>プロパティに格納されている新しいパスワードを<xref:System.Web.UI.WebControls.ChangePassword.NewPassword%2A>です。 2 つのパスワードが同じ場合は、パスワードの変更は失敗します。  
  
 <xref:System.Web.UI.WebControls.ChangePassword>コントロール セット、<xref:System.Web.UI.WebControls.ChangePassword.DisplayUserName%2A>プロパティを`true`をユーザーにユーザーがユーザー名の入力を有効にします。 これにログオン ページを表示するため、ユーザーがないことを意味します。  
  
 このコード例では、ASP.NET メンバーシップとフォーム認証、および、名とパスワードがわかっているユーザーが作成されたを使用する ASP.NET Web サイトが構成されていると仮定します。 詳細については、次を参照してください。[する方法: 単純なフォーム認証を実装する](http://msdn.microsoft.com/library/9522bc8d-1a41-480a-aa11-c389a4ac2d2e)です。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ChangePassword.OnChangingPassword#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ChangePassword.OnChangingPassword/CS/changepassword_cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ChangePassword.OnChangingPassword#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ChangePassword.OnChangingPassword/VB/changepassword_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>オーバーライドする場合、<see cref="M:System.Web.UI.WebControls.ChangePassword.OnChangingPassword(System.Web.UI.WebControls.LoginCancelEventArgs)" />を呼び出して派生クラスでメソッドが必ず、<see cref="M:System.Web.UI.WebControls.ChangePassword.OnChangingPassword(System.Web.UI.WebControls.LoginCancelEventArgs)" />デリゲートを登録するための基本クラスのメソッドは、イベントを受信します。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnContinueButtonClick">
      <MemberSignature Language="C#" Value="protected virtual void OnContinueButtonClick (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnContinueButtonClick(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ChangePassword.OnContinueButtonClick(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" /> オブジェクト。</param>
        <summary>発生させます、<see cref="E:System.Web.UI.WebControls.ChangePassword.ContinueButtonClick" />イベント、ユーザーが [続行] ボタンをクリックします。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ChangePassword.OnInit(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.EventArgs" />イベント データを含むオブジェクト。</param>
        <summary>発生させます、<see cref="E:System.Web.UI.Control.Init" />イベントを<see cref="T:System.Web.UI.WebControls.ChangePassword" />コントロール自体をページに登録するコントロールをできるようにします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Web サーバー コントロールには、インスタンスを作成および設定するために必要な初期化の手順を実行する必要があります。 このイベント内のビュー状態情報を使用することはできません。値を返さないまだです。 中に別の Web サーバー コントロールをアクセスしないでください、<xref:System.Web.UI.WebControls.ChangePassword.OnInit%2A>子または親にあるかどうかに関係なく、メソッド、<xref:System.Web.UI.WebControls.ChangePassword>コントロール。 その他の Web サーバー コントロールは、作成、アクセスを準備するではありません。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ChangePassword.OnPreRender(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.EventArgs" />イベント データを含むオブジェクト。</param>
        <summary><see cref="E:System.Web.UI.Control.PreRender" /> イベントを発生させます。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSendingMail">
      <MemberSignature Language="C#" Value="protected virtual void OnSendingMail (System.Web.UI.WebControls.MailMessageEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSendingMail(class System.Web.UI.WebControls.MailMessageEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ChangePassword.OnSendingMail(System.Web.UI.WebControls.MailMessageEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.MailMessageEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A<see cref="T:System.Web.UI.WebControls.MailMessageEventArgs" />イベント データを含むオブジェクト。</param>
        <summary>発生させる、<see cref="E:System.Web.UI.WebControls.ChangePassword.SendingMail" />イベント処理のための SMTP サーバーに電子メール メッセージが送信される前にします。 SMTP サーバーは、ユーザーにし、電子メール メッセージを送信します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.ChangePassword.OnSendingMail%2A>パスワードの変更後に、ユーザーに送信される電子メール メッセージを変更するメソッド。 <xref:System.Web.UI.WebControls.MailMessageEventArgs.Message%2A>のプロパティ、<xref:System.Web.UI.WebControls.MailMessageEventArgs>オブジェクトは、処理のため、SMTP サーバーに送信されます。 プロパティを変更、<xref:System.Web.Mail.MailMessage>電子メール メッセージを変更するオブジェクト。  
  
 電子メール メッセージが作成される場合にのみ、<xref:System.Web.UI.WebControls.MailDefinition.BodyFileName%2A>のプロパティ、<xref:System.Web.UI.WebControls.MailDefinition>で指定されたオブジェクト、<xref:System.Web.UI.WebControls.ChangePassword.MailDefinition%2A>プロパティが有効なファイル名を指します。  
  
> [!IMPORTANT]
>  ユーザー アカウント名またはパスワードを電子メールで潜在的なセキュリティの脅威を送信しています。 電子メール メッセージでは、プレーン テキストで送信される通常と、アプリケーションを「見つけ出す」特殊なネットワークで読み取ることができます。 セキュリティを強化するに記載されている緩和策を使用して[ログイン コントロールのセキュリティで保護する](http://msdn.microsoft.com/library/d85075bc-9c1a-4453-8a0c-539b10853c9c)です。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[サーバーで ASP.NET Web フォーム ページのイベントの処理](http://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9)です。  
  
 <xref:System.Web.UI.WebControls.ChangePassword.OnSendingMail%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
   
  
## Examples  
 次のコード例を使用する ASP.NET ページを示しています、 <xref:System.Web.UI.WebControls.ChangePassword> Web コントロール、およびイベント ハンドラーが含まれています、<xref:System.Web.UI.WebControls.ChangePassword.SendingMail>という名前のイベント`SendingMail`です。 このコード例では、ASP.NET メンバーシップとフォーム認証、および、名とパスワードがわかっているユーザーが作成されたを使用する ASP.NET Web サイトが構成されていると仮定します。 詳細については、次を参照してください。[する方法: 単純なフォーム認証を実装する](http://msdn.microsoft.com/library/9522bc8d-1a41-480a-aa11-c389a4ac2d2e)です。  
  
 パスワードの変更が成功すると、コードは、SMTP を使用して、変更の確認をユーザーに電子メール メッセージを送信しようとします。 これには、`SendingMail`イベント ハンドラー。 SMTP サーバーを構成する方法については、次を参照してください。 [NIB: 方法: インストールと構成内の SMTP 仮想サーバー IIS 6.0](http://msdn.microsoft.com/en-us/ed204b58-24af-47d0-9687-60e5df5f17f8)です。 この例の目的で、必要はありません。 SMTP サーバーを構成するには電子メール メッセージを送信するエラーをテストする例が構築されます。  
  
 メール サーバーが正しく構成されていない場合またはその他のエラーが発生した電子メール メッセージを送信することはできません、`SendMailError`関数が呼び出されます。 メッセージがユーザーに表示されます。 さらに、イベントはイベント ソース MySamplesSite を既にという名前が存在することを想定して Windows アプリケーション イベント ログに記録されます。 指定したイベント ソースを作成するのには、次のコード例を参照してください。 イベント ソースの作成の詳細については、次を参照してください。[サーバーで ASP.NET Web フォーム ページのイベントの処理](http://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9)です。 <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A>のプロパティ、<xref:System.Web.UI.WebControls.SendMailErrorEventArgs>にオブジェクトが設定されている`true`エラーが処理されていることを示すためにします。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/CS/changepassword_cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/VB/changepassword_vb.aspx#1)]  
  
 プログラムによって、アプリケーション ログに MySamplesSite をという名前のイベント ソースを追加する必要がある場合は、次のコード例を使用します。 このイベント ソースは、最初のコード例を正しく動作するために存在する必要があります。 次のコード例では、管理者特権が必要です。  
  
 [!code-csharp[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/CS/createeventsource.cs#1)]
 [!code-vb[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/VB/createeventsource.vb#1)]  
  
 次のコード例は、前のコード例の ChangePasswordMail.htm ファイルとして使用できます。  
  
> [!IMPORTANT]
>  ユーザー アカウント名またはパスワードを電子メールで潜在的なセキュリティの脅威を送信しています。 電子メール メッセージでは、プレーン テキストで送信される通常と、アプリケーションを「見つけ出す」特殊なネットワークで読み取ることができます。 セキュリティを強化するに記載されている緩和策を使用して[ログイン コントロールのセキュリティで保護する](http://msdn.microsoft.com/library/d85075bc-9c1a-4453-8a0c-539b10853c9c)です。  
  
```  
<html>  
<head><title></title></head>  
<body>  
<form>  
  
  <h1>Your password for the account named &quot;<%Username%>&quot; has changed.</h1>  
  
  <p>  
  If you did not initiate this change, please call 1-206-555-0100.  
  </p>  
  
  <p>  
  <a href="http://www.contoso.com/login.aspx">  
    <img src="cid:LoginGif" alt="Log In" />  
  </a>   
  </p>  
  
  <p>  
  Please read our attached Privacy Notice.  
  </p>  
  
</form>  
</body>  
</html>  
```  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>オーバーライドする場合、<see cref="M:System.Web.UI.WebControls.ChangePassword.OnSendingMail(System.Web.UI.WebControls.MailMessageEventArgs)" />を呼び出して派生クラスでメソッドが必ず、<see cref="M:System.Web.UI.WebControls.ChangePassword.OnSendingMail(System.Web.UI.WebControls.MailMessageEventArgs)" />デリゲートを登録するための基本クラスのメソッドは、イベントを受信します。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnSendMailError">
      <MemberSignature Language="C#" Value="protected virtual void OnSendMailError (System.Web.UI.WebControls.SendMailErrorEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSendMailError(class System.Web.UI.WebControls.SendMailErrorEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ChangePassword.OnSendMailError(System.Web.UI.WebControls.SendMailErrorEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.SendMailErrorEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A<see cref="T:System.Web.UI.WebControls.SendMailErrorEventArgs" />イベント データを含むオブジェクト。</param>
        <summary>発生させる、<see cref="E:System.Web.UI.WebControls.ChangePassword.SendMailError" />イベントをユーザーに電子メール メッセージを送信できない場合。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ChangePassword.OnSendMailError%2A>メソッドが呼び出されて、SMTP メール システム、ユーザーがパスワードを変更した後、電子メール メッセージを送信中に例外が発生します。  
  
 確認、<xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Exception%2A>のプロパティ、<xref:System.Web.UI.WebControls.SendMailErrorEventArgs>として渡されるオブジェクト、`e`実際の例外の原因を特定のパラメーターです。 最も一般的な理由で構成エラーが発生、 `smtp` Web.config ファイルのセクションです。  
  
 設定する必要があります、<xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A>として渡されるオブジェクトのプロパティ、`e`パラメーターを`true`care の実行です。 それ以外の場合に例外が発生しました、例外が再度スローされたことを通知します。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[サーバーで ASP.NET Web フォーム ページのイベントの処理](http://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9)です。  
  
 <xref:System.Web.UI.WebControls.ChangePassword.OnSendMailError%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
   
  
## Examples  
 次のコード例を使用する ASP.NET ページを示しています、 <xref:System.Web.UI.WebControls.ChangePassword> Web コントロール、およびイベント ハンドラーが含まれています、<xref:System.Web.UI.WebControls.ChangePassword.SendingMail>という名前のイベント`SendingMail`です。 このコード例では、ASP.NET メンバーシップとフォーム認証、および、名とパスワードがわかっているユーザーが作成されたを使用する ASP.NET Web サイトが構成されていると仮定します。 詳細については、次を参照してください。[する方法: 単純なフォーム認証を実装する](http://msdn.microsoft.com/library/9522bc8d-1a41-480a-aa11-c389a4ac2d2e)です。  
  
 パスワードの変更が成功すると、コードは、SMTP を使用して、変更の確認をユーザーに電子メール メッセージを送信しようとします。 これには、`SendingMail`イベント ハンドラー。 SMTP サーバーを構成する方法については、次を参照してください。 [NIB: 方法: インストールと構成内の SMTP 仮想サーバー IIS 6.0](http://msdn.microsoft.com/en-us/ed204b58-24af-47d0-9687-60e5df5f17f8)です。 この例の目的で、必要はありません。 SMTP サーバーを構成するには電子メール メッセージを送信するエラーをテストする例が構築されます。  
  
 メール サーバーが正しく構成されていない場合またはその他のエラーが発生した電子メール メッセージを送信することはできません、`SendMailError`関数が呼び出されます。 メッセージがユーザーに表示されます。 さらに、イベントはイベント ソース MySamplesSite を既にという名前が存在することを想定して Windows アプリケーション イベント ログに記録されます。 指定したイベント ソースを作成するのには、次のコード例を参照してください。 イベント ソースの作成の詳細については、次を参照してください。[サーバーで ASP.NET Web フォーム ページのイベントの処理](http://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9)です。 <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A>のプロパティ、<xref:System.Web.UI.WebControls.SendMailErrorEventArgs>にオブジェクトが設定されている`true`エラーが処理されていることを示すためにします。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/CS/changepassword_cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/VB/changepassword_vb.aspx#1)]  
  
 プログラムによって、アプリケーション ログに MySamplesSite をという名前のイベント ソースを追加する必要がある場合は、次のコード例を使用します。 このイベント ソースは、最初のコード例を正しく動作するために存在する必要があります。 次のコード例では、管理者特権が必要です。  
  
 [!code-csharp[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/CS/createeventsource.cs#1)]
 [!code-vb[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/VB/createeventsource.vb#1)]  
  
 次のコード例は、前のコード例の ChangePasswordMail.htm ファイルとして使用できます。  
  
> [!IMPORTANT]
>  ユーザー アカウント名またはパスワードを電子メールで潜在的なセキュリティの脅威を送信しています。 電子メール メッセージでは、プレーン テキストで送信される通常と、アプリケーションを「見つけ出す」特殊なネットワークで読み取ることができます。 セキュリティを強化するに記載されている緩和策を使用して[ログイン コントロールのセキュリティで保護する](http://msdn.microsoft.com/library/d85075bc-9c1a-4453-8a0c-539b10853c9c)です。  
  
```  
<html>  
<head><title></title></head>  
<body>  
<form>  
  
  <h1>Your password for the account named &quot;<%Username%>&quot; has changed.</h1>  
  
  <p>  
  If you did not initiate this change, please call 1-206-555-0100.  
  </p>  
  
  <p>  
  <a href="http://www.contoso.com/login.aspx">  
    <img src="cid:LoginGif" alt="Log In" />  
  </a>   
  </p>  
  
  <p>  
  Please read our attached Privacy Notice.  
  </p>  
  
</form>  
</body>  
</html>  
```  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>オーバーライドする場合、<see cref="M:System.Web.UI.WebControls.ChangePassword.OnSendMailError(System.Web.UI.WebControls.SendMailErrorEventArgs)" />を呼び出して派生クラスでメソッドが必ず、<see cref="M:System.Web.UI.WebControls.ChangePassword.OnSendMailError(System.Web.UI.WebControls.SendMailErrorEventArgs)" />デリゲートを登録するための基本クラスのメソッドは、イベントを受信します。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="PasswordHintStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle PasswordHintStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle PasswordHintStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.PasswordHintStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コレクションへの参照を取得<see cref="T:System.Web.UI.WebControls.Style" />に表示されるヒント テキストの外観を定義するプロパティ、<see cref="T:System.Web.UI.WebControls.ChangePassword" />コントロール。</summary>
        <value>A<see cref="T:System.Web.UI.WebControls.TableItemStyle" />オブジェクトを含む、<see cref="T:System.Web.UI.WebControls.Style" />に含まれているテキストの外観を定義するプロパティ、<see cref="P:System.Web.UI.WebControls.ChangePassword.PasswordHintText" />プロパティです。 既定値は、<see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 次の表に、スタイルの設定を使用したカスタマイズで利用可能な<xref:System.Web.UI.WebControls.ChangePassword.PasswordHintStyle%2A>プロパティです。  
  
|設定|説明|  
|-------------|-----------------|  
|`BackColor`|ヒントのテキストの背景色。 色には、いずれかを指定できる、<xref:System.Drawing.Color>プロパティです。|  
|`BorderColor`|ヒントのテキストを囲む境界線の色。 色には、いずれかを指定できる、<xref:System.Drawing.Color>プロパティです。|  
|`BorderStyle`|ヒントのテキストを囲む罫線のスタイルです。 指定できます"None"、「点線」、「点線」、「ソリッド」、"Double"、「グルーブ」、「ねじ山」、「埋め込み」または「現段階」です。 既定値は、"NotSet"です。 一部のスタイルを明確に表示しない場合を除き、`BorderWidth`値が 2 より大きい。|  
|`BorderWidth`|ヒントのテキストを囲む罫線の幅。|  
|`CssClass`|ヒントのテキストを表示するために使用されるカスケード スタイル シート (CSS)。 その他の設定を指定するとスタイル シートの設定よりも優先されます。|  
|`Font-Bold`|`true`というヒント テキストを太字で表示します。|  
|`Font-Italic`|`true`斜体でヒント テキストを表示します。|  
|`Font-Names`|フォントのフォント フェイスの名前。|  
|`Font-Overline`|`true`その上の行のヒント テキストを表示します。|  
|`Font-Size`|ヒントのテキストとしてのテキストのサイズ、<xref:System.Web.UI.WebControls.FontUnit>オブジェクト。|  
|`Font-Strikeout`|`true`取り消しというヒント テキストを表示します。|  
|`Font-Underline`|`true`ヒントのテキストに下線を表示します。|  
|`ForeColor`|ヒントのテキスト内のテキストの色。 色には、いずれかを指定できる、<xref:System.Drawing.Color>プロパティです。|  
|`Height`|A<xref:System.Web.UI.WebControls.Unit>ヒントのテキストの高さを表すです。|  
|`Width`|A<xref:System.Web.UI.WebControls.Unit>ヒントのテキストの幅を表すです。|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PasswordHintText">
      <MemberSignature Language="C#" Value="public virtual string PasswordHintText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PasswordHintText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.PasswordHintText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または Web サイトのパスワードを作成するための要件に関する情報のテキストを設定します。</summary>
        <value>新しいパスワードの基準について表示する情報のテキスト。 既定値は、<see cref="F:System.String.Empty" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ChangePassword.PasswordHintText%2A>プロパティを取得または Web サイトのパスワードを作成するための要件に関する情報のテキストを設定します。 このプロパティで指定されている新しいパスワードの要件について説明を使用して、<xref:System.Web.UI.WebControls.ChangePassword.NewPasswordRegularExpression%2A>プロパティです。  
  
 このプロパティの値を設定すると、デザイナーのツールを使用して、リソース ファイルに自動的に保存できます。 詳細については、次を参照してください。<xref:System.ComponentModel.LocalizableAttribute>と[グローバリゼーションとローカリゼーション](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)です。  
  
   
  
## Examples  
 次のコード例は、設定する方法を示します、<xref:System.Web.UI.WebControls.ChangePassword.NewPasswordRegularExpression%2A>プロパティを次の条件を満たしているパスワードをチェックする正規表現を定義します。  
  
-   6 文字よりも大きくなります。  
  
-   少なくとも 1 つの数字を含めます。  
  
-   少なくとも 1 つの特殊 (アルファベット以外の) 文字を含めます。  
  
 含まれているパスワードの要件、<xref:System.Web.UI.WebControls.ChangePassword.PasswordHintText%2A>プロパティは、ユーザーに表示されます。  
  
 テキストが含まれる、ユーザーが入力したパスワードが、条件を満たしていない場合、<xref:System.Web.UI.WebControls.ChangePassword.NewPasswordRegularExpressionErrorMessage%2A>プロパティは、ユーザーに表示されます。 テキストが含まれる、新しいパスワードを入力しない場合、<xref:System.Web.UI.WebControls.ChangePassword.NewPasswordRequiredErrorMessage%2A>プロパティは、ユーザーに表示されます。  
  
> [!NOTE]
>  新しいパスワードが設定している最小要件を満たす必要がありますで、 <xref:System.Web.Security.Membership.MinRequiredPasswordLength%2A>、 <xref:System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters%2A>、および<xref:System.Web.Security.Membership.PasswordStrengthRegularExpression%2A>プロパティです。 パスワードがこれらの要件を満たしていない場合、<xref:System.Web.UI.WebControls.ChangePassword.ChangePasswordError>イベントが発生します。  
  
 [!code-aspx-csharp[ChangePasswordNewPasswordRegex#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ChangePasswordNewPasswordRegex/CS/changepasswordpasswordregexcs.aspx#1)]
 [!code-aspx-vb[ChangePasswordNewPasswordRegex#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ChangePasswordNewPasswordRegex/VB/changepasswordpasswordregexvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PasswordLabelText">
      <MemberSignature Language="C#" Value="public virtual string PasswordLabelText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PasswordLabelText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.PasswordLabelText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または現在のパスワードのテキスト ボックスのラベルのテキストを設定します。</summary>
        <value>現在のパスワードのテキスト ボックスの横に表示するテキスト。 既定値は"パスワード:"です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティの値を設定すると、デザイナーのツールを使用して、リソース ファイルに自動的に保存できます。 詳細については、次を参照してください。<xref:System.ComponentModel.LocalizableAttribute>と[グローバリゼーションとローカリゼーション](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PasswordRecoveryIconUrl">
      <MemberSignature Language="C#" Value="public virtual string PasswordRecoveryIconUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PasswordRecoveryIconUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.PasswordRecoveryIconUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定を含む Web ページへのリンクの横に表示するイメージの URL、<see cref="T:System.Web.UI.WebControls.PasswordRecovery" />コントロール。</summary>
        <value>Web サイトのパスワードの回復 ページへのリンクの横に表示するイメージの URL です。 既定値は、<see cref="F:System.String.Empty" /> です。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PasswordRecoveryText">
      <MemberSignature Language="C#" Value="public virtual string PasswordRecoveryText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PasswordRecoveryText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.PasswordRecoveryText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定のリンク テキストを含む Web ページ、<see cref="T:System.Web.UI.WebControls.PasswordRecovery" />コントロール。</summary>
        <value>含む Web ページへのリンクを表示するテキスト、<see cref="T:System.Web.UI.WebControls.PasswordRecovery" />コントロール。 既定値は、<see cref="F:System.String.Empty" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティの値を設定すると、デザイナーのツールを使用して、リソース ファイルに自動的に保存できます。 詳細については、次を参照してください。<xref:System.ComponentModel.LocalizableAttribute>と[グローバリゼーションとローカリゼーション](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PasswordRecoveryUrl">
      <MemberSignature Language="C#" Value="public virtual string PasswordRecoveryUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PasswordRecoveryUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.PasswordRecoveryUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定を含む Web ページの URL、<see cref="T:System.Web.UI.WebControls.PasswordRecovery" />コントロール。</summary>
        <value>含む Web ページの URL、<see cref="T:System.Web.UI.WebControls.PasswordRecovery" />コントロール。 既定値は、<see cref="F:System.String.Empty" /> です。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PasswordRequiredErrorMessage">
      <MemberSignature Language="C#" Value="public virtual string PasswordRequiredErrorMessage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PasswordRequiredErrorMessage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.PasswordRequiredErrorMessage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはユーザーが現在のパスワードのテキスト ボックスを空のままと表示されるエラー メッセージを設定します。</summary>
        <value>ユーザーが現在のパスワードのテキスト ボックスを空のままにした場合に表示するエラー メッセージ。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ChangePassword.PasswordRequiredErrorMessage%2A>プロパティを取得またはユーザーが現在のパスワードのテキスト ボックスを空のままと表示されるエラー メッセージを設定します。  
  
 このプロパティの値を設定すると、デザイナーのツールを使用して、リソース ファイルに自動的に保存できます。 詳細については、次を参照してください。<xref:System.ComponentModel.LocalizableAttribute>と[グローバリゼーションとローカリゼーション](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ChangePassword.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><see cref="T:System.Web.UI.HtmlTextWriter" /> Web ページにコンテンツを書き込む出力ストリームを表すオブジェクトを使用します。</param>
        <summary>書き込みます、<see cref="T:System.Web.UI.WebControls.ChangePassword" />コントロールの内容を指定した<see cref="T:System.Web.UI.HtmlTextWriter" />クライアントに表示するためのオブジェクト。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderOuterTable">
      <MemberSignature Language="C#" Value="public virtual bool RenderOuterTable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RenderOuterTable" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.RenderOuterTable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはコントロールがでレンダリングされる HTML を囲むかどうかを示す値を設定、<see langword="table" />インライン スタイルを適用するために要素。</summary>
        <value>
          <see langword="true" />コントロールは、レンダリングされた HTML の場合、<see langword="table" />要素、それ以外の<see langword="false" />します。 既定値は、<see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ようなインライン スタイル プロパティを設定するために<xref:System.Web.UI.WebControls.WebControl.ForeColor%2A>コントロールに表示されるすべての HTML に適用されます、ASP.NET を囲むでレンダリングされる HTML、`table`要素。 場合は、外側しないようにする`table`レンダリングされる要素では、このプロパティを設定`false`です。 その場合は、インライン コントロール全体に適用されるスタイル プロパティを設定しようとすると、例外がスローされます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveControlState">
      <MemberSignature Language="C#" Value="protected override object SaveControlState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance object SaveControlState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ChangePassword.SaveControlState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ページがサーバーにポスト バックされた時間以降に発生したすべてのサーバー コントロール状態の変化を保存します。</summary>
        <returns>サーバー コントロールの現在の状態です。それ以外の場合、<see langword="null" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.ChangePassword.SaveControlState%2A>の操作に必要な状態情報を保存する方法、<xref:System.Web.UI.WebControls.ChangePassword>コントロール。 このコントロールの状態データがの状態データをビューから個別に格納されている、<xref:System.Web.UI.WebControls.ChangePassword>コントロール。  
  
 コントロールの状態を使用してカスタム コントロールを呼び出す必要があります、<xref:System.Web.UI.Page.RegisterRequiresControlState%2A>メソッドを<xref:System.Web.UI.Control.Page%2A>コントロールの状態を保存する前にオブジェクト。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>文字列オブジェクトが、HTML に格納されている変数として、クライアントに返されるコントロールの状態が保存されると、 <c>&lt;入力の種類 ="hidden"/&gt; </c>要素。 上書き、<see cref="M:System.Web.UI.WebControls.ChangePassword.SaveControlState" />メソッドで使用する状態情報を抽出する、<see cref="T:System.Web.UI.WebControls.ChangePassword" />コントロール。  
  
 コントロールの状態は、ページのインデックス、またはキーワードなどの重要なデータ量が少ないものです。 大量のデータの制御状態を使用すると、ページのパフォーマンスが低下することができます。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ChangePassword.SaveViewState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>すべてのサーバー コントロール、ページがサーバーにポストされた時間以降に発生したビューステートの変更を保存します。</summary>
        <returns>サーバー コントロールの現在のビュー ステート。それ以外の場合、<see langword="null" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ビュー ステートのプロパティの値が蓄積されるが、<xref:System.Web.UI.WebControls.ChangePassword>コントロール。 これらの値は自動的に配置されます、<xref:System.Web.UI.Control.ViewState%2A>プロパティを<xref:System.Web.UI.WebControls.ChangePassword>インスタンスであるコントロールの<xref:System.Web.UI.StateBag>クラスです。 値、<xref:System.Web.UI.Control.ViewState%2A>保存状態の段階の後に、プロパティは、文字列オブジェクトに永続化し、<xref:System.Web.UI.WebControls.ChangePassword>ライフ サイクルを制御します。 詳細については、次を参照してください。 [ASP.NET ページ ライフ サイクルの概要](http://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991)です。  
  
 ビューステートを保存すると、この文字列として返されるオブジェクトをクライアントに HTML に格納されている変数`<input type="hidden" />`要素。 カスタム サーバー コントロールを作成するときに、オーバーライドすることで効率を向上できます、<xref:System.Web.UI.WebControls.ChangePassword.SaveViewState%2A>メソッドと変更、<xref:System.Web.UI.Control.ViewState%2A>プロパティを<xref:System.Web.UI.WebControls.ChangePassword>コントロール。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SendingMail">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.MailMessageEventHandler SendingMail;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.MailMessageEventHandler SendingMail" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ChangePassword.SendingMail" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MailMessageEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザーはパスワードが変更されている確認の電子メールを送信する前に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ChangePassword>コントロールは、パスワードが変更されているときに確認する電子メール メッセージを送信、<xref:System.Web.UI.WebControls.ChangePassword.MailDefinition%2A>プロパティが送信する電子メール メッセージを定義します。  
  
 電子メール メッセージには、ユーザー名とパスワードの自動置換フィールドが含まれています。 使用することができます、<xref:System.Web.UI.WebControls.ChangePassword.SendingMail>をユーザーに送信される前に、電子メール メッセージを変更するイベントです。  
  
> [!IMPORTANT]
>  ユーザー アカウント名またはパスワードを電子メールで潜在的なセキュリティの脅威を送信しています。 電子メール メッセージでは、プレーン テキストで送信される通常と、アプリケーションを「見つけ出す」特殊なネットワークで読み取ることができます。 セキュリティを強化するに記載されている緩和策を使用して[ログイン コントロールのセキュリティで保護する](http://msdn.microsoft.com/library/d85075bc-9c1a-4453-8a0c-539b10853c9c)です。  
  
 イベント処理の詳細については、次を参照してください。[イベント](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)です。  
  
   
  
## Examples  
 次のコード例を使用する ASP.NET ページを示しています、 <xref:System.Web.UI.WebControls.ChangePassword> Web コントロール、およびイベント ハンドラーが含まれています、<xref:System.Web.UI.WebControls.ChangePassword.SendingMail>という名前のイベント`SendingMail`です。  
  
 このコード例では、ASP.NET メンバーシップとフォーム認証、および、名とパスワードがわかっているユーザーが作成されたを使用する ASP.NET Web サイトが構成されていると仮定します。 詳細については、次を参照してください。[する方法: 単純なフォーム認証を実装する](http://msdn.microsoft.com/library/9522bc8d-1a41-480a-aa11-c389a4ac2d2e)です。  
  
 パスワードの変更が成功すると、コードは、SMTP を使用して、変更の確認をユーザーに電子メール メッセージを送信しようとします。 これには、`SendingMail`イベント ハンドラー。 SMTP サーバーを構成する方法については、次を参照してください。 [NIB: 方法: インストールと構成内の SMTP 仮想サーバー IIS 6.0](http://msdn.microsoft.com/en-us/ed204b58-24af-47d0-9687-60e5df5f17f8)です。 この例の目的で、必要はありません。 SMTP サーバーを構成するには電子メール メッセージを送信するエラーをテストする例が構築されます。  
  
 メール サーバーが正しく構成されていない場合またはその他のエラーが発生した電子メール メッセージを送信することはできません、`SendMailError`関数が呼び出されます。 メッセージがユーザーに表示されます。 さらに、イベントはイベント ソース MySamplesSite を既にという名前が存在することを想定して Windows アプリケーション イベント ログに記録されます。 指定したイベント ソースを作成するのには、次のコード例を参照してください。 イベント ソースの作成の詳細については、次を参照してください。[サーバーで ASP.NET Web フォーム ページのイベントの処理](http://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9)です。 <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A>のプロパティ、<xref:System.Web.UI.WebControls.SendMailErrorEventArgs>にオブジェクトが設定されている`true`エラーが処理されていることを示すためにします。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/CS/changepassword_cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/VB/changepassword_vb.aspx#1)]  
  
 プログラムによって、アプリケーション ログに MySamplesSite をという名前のイベント ソースを追加する必要がある場合は、次のコード例を使用します。 このイベント ソースは、最初のコード例を正しく動作するために存在する必要があります。 次のコード例では、管理者特権が必要です。  
  
 [!code-csharp[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/CS/createeventsource.cs#1)]
 [!code-vb[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/VB/createeventsource.vb#1)]  
  
 次のコード例は、前のコード例の ChangePasswordMail.htm ファイルとして使用できます。  
  
> [!IMPORTANT]
>  ユーザー アカウント名またはパスワードを電子メールで潜在的なセキュリティの脅威を送信しています。 電子メール メッセージでは、プレーン テキストで送信される通常と、アプリケーションを「見つけ出す」特殊なネットワークで読み取ることができます。  セキュリティを強化するに記載されている緩和策を使用して[ログイン コントロールのセキュリティで保護する](http://msdn.microsoft.com/library/d85075bc-9c1a-4453-8a0c-539b10853c9c)です。  
  
```  
<html>  
<head><title></title></head>  
<body>  
<form>  
  
  <h1>Your password for the account named &quot;<%Username%>&quot; has changed.</h1>  
  
  <p>  
  If you did not initiate this change, please call 1-206-555-0100.  
  </p>  
  
  <p>  
  <a href="http://www.contoso.com/login.aspx">  
    <img src="cid:LoginGif" alt="Log In" />  
  </a>   
  </p>  
  
  <p>  
  Please read our attached Privacy Notice.  
  </p>  
  
</form>  
</body>  
</html>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SendMailError">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SendMailErrorEventHandler SendMailError;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SendMailErrorEventHandler SendMailError" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ChangePassword.SendMailError" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SendMailErrorEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザーに電子メール メッセージを送信する SMTP エラーがある場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ChangePassword.SendMailError>イベントは、SMTP メール プロバイダーは、ユーザーがパスワードの変更後に、電子メール メッセージを送信しようとするときに例外をスローします。 このイベントが発生する最も一般的な理由は、 `smtp` Web.config ファイルのセクションが正しくありません。 詳細については、`smtp`セクションを参照してください。  
  
 既定値<xref:System.Web.UI.WebControls.ChangePassword.SendMailError>イベント ハンドラーがキャッチまたはメール システムから SMTP エラーを処理していません。 <xref:System.Web.UI.WebControls.ChangePassword.SendMailError>イベント ハンドラーを設定する必要があります、<xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A>のプロパティ、<xref:System.Web.UI.WebControls.SendMailErrorEventArgs>オブジェクトを`true`がユーザーに表示されるエラーを停止するためにします。  
  
 イベント処理の詳細については、次を参照してください。[イベント](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)です。  
  
   
  
## Examples  
 次のコード例を使用する ASP.NET ページを示しています、 <xref:System.Web.UI.WebControls.ChangePassword> Web コントロール、およびイベント ハンドラーが含まれています、<xref:System.Web.UI.WebControls.ChangePassword.SendingMail>という名前のイベント`SendingMail`です。 このコード例では、ASP.NET メンバーシップとフォーム認証、および、名とパスワードがわかっているユーザーが作成されたを使用する ASP.NET Web サイトが構成されていると仮定します。 詳細については、次を参照してください。[する方法: 単純なフォーム認証を実装する](http://msdn.microsoft.com/library/9522bc8d-1a41-480a-aa11-c389a4ac2d2e)です。  
  
 パスワードの変更が成功すると、コードは、SMTP を使用して、変更の確認をユーザーに電子メール メッセージを送信しようとします。 これには、`SendingMail`イベント ハンドラー。 SMTP サーバーを構成する方法については、次を参照してください。 [NIB: 方法: インストールと構成内の SMTP 仮想サーバー IIS 6.0](http://msdn.microsoft.com/en-us/ed204b58-24af-47d0-9687-60e5df5f17f8)です。 この例の目的で、必要はありません。 SMTP サーバーを構成するには電子メール メッセージを送信するエラーをテストする例が構築されます。  
  
 メール サーバーが正しく構成されていない場合またはその他のエラーが発生した電子メール メッセージを送信することはできません、`SendMailError`関数が呼び出されます。 メッセージがユーザーに表示されます。 さらに、イベントはイベント ソース MySamplesSite を既にという名前が存在することを想定して Windows アプリケーション イベント ログに記録されます。 指定したイベント ソースを作成するのには、次のコード例を参照してください。 イベント ソースの作成の詳細については、次を参照してください。[サーバーで ASP.NET Web フォーム ページのイベントの処理](http://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9)です。 <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A>のプロパティ、<xref:System.Web.UI.WebControls.SendMailErrorEventArgs>にオブジェクトが設定されている`true`エラーが処理されていることを示すためにします。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/CS/changepassword_cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/VB/changepassword_vb.aspx#1)]  
  
 プログラムによって、アプリケーション ログに MySamplesSite をという名前のイベント ソースを追加する必要がある場合は、次のコード例を使用します。 このイベント ソースは、最初のコード例を正しく動作するために存在する必要があります。 次のコード例では、管理者特権が必要です。  
  
 [!code-csharp[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/CS/createeventsource.cs#1)]
 [!code-vb[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/VB/createeventsource.vb#1)]  
  
 次のコード例は、前のコード例の ChangePasswordMail.htm ファイルとして使用できます。  
  
> [!IMPORTANT]
>  ユーザー アカウント名またはパスワードを電子メールで潜在的なセキュリティの脅威を送信しています。 電子メール メッセージでは、プレーン テキストで送信される通常と、アプリケーションを「見つけ出す」特殊なネットワークで読み取ることができます。  セキュリティを強化するに記載されている緩和策を使用して[ログイン コントロールのセキュリティで保護する](http://msdn.microsoft.com/library/d85075bc-9c1a-4453-8a0c-539b10853c9c)です。  
  
```  
<html>  
<head><title></title></head>  
<body>  
<form>  
  
  <h1>Your password for the account named &quot;<%Username%>&quot; has changed.</h1>  
  
  <p>  
  If you did not initiate this change, please call 1-206-555-0100.  
  </p>  
  
  <p>  
  <a href="http://www.contoso.com/login.aspx">  
    <img src="cid:LoginGif" alt="Log In" />  
  </a>   
  </p>  
  
  <p>  
  Please read our attached Privacy Notice.  
  </p>  
  
</form>  
</body>  
</html>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDesignModeState">
      <MemberSignature Language="C#" Value="protected override void SetDesignModeState (System.Collections.IDictionary data);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetDesignModeState(class System.Collections.IDictionary data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ChangePassword.SetDesignModeState(System.Collections.IDictionary)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="data">コントロールのデザイン時データを格納する <see cref="T:System.Collections.IDictionary" />。</param>
        <summary>コントロールのデザイン時データを設定します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SuccessPageUrl">
      <MemberSignature Language="C#" Value="public virtual string SuccessPageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SuccessPageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.SuccessPageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または自分のパスワードが正常に変更した後、ユーザーに表示されるページの URL を設定します。</summary>
        <value>パスワードが変更された後、移行先ページの URL です。 既定値は、<see cref="F:System.String.Empty" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 設定、<xref:System.Web.UI.WebControls.ChangePassword.SuccessPageUrl%2A>プロパティが正常に自分のパスワードを変更した後、Web サイトの特定のページにリダイレクトされるようにするときにします。 場合、<xref:System.Web.UI.WebControls.ChangePassword.SuccessPageUrl%2A>プロパティが設定されていない (セットが既定値)、ページを含む、<xref:System.Web.UI.WebControls.ChangePassword>コントロールが更新されると、<xref:System.Web.UI.WebControls.ChangePassword.SuccessText%2A>プロパティが表示されます。 場合、<xref:System.Web.UI.WebControls.ChangePassword.SuccessPageUrl%2A>プロパティが設定されて、成功ビューは表示されません。  
  
 テーマまたはスタイル シート テーマによっては、このプロパティを設定できません。 詳細については、次を参照してください。<xref:System.Web.UI.ThemeableAttribute>と[ASP.NET のテーマとスキン](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SuccessTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate SuccessTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate SuccessTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.SuccessTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.ChangePassword))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定、<see cref="T:System.Web.UI.ITemplate" />の成功とパスワードの変更の表示を表示するために使用できるオブジェクト、<see cref="T:System.Web.UI.WebControls.ChangePassword" />コントロール。</summary>
        <value><see cref="T:System.Web.UI.ITemplate" />の成功とパスワードの変更の表示を表示するためのテンプレートを格納しているオブジェクト、<see cref="T:System.Web.UI.WebControls.ChangePassword" />コントロール。 既定値は、<see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ChangePassword.SuccessTemplate%2A>プロパティを指定します、<xref:System.Web.UI.ITemplate>オブジェクトによって使用される、<xref:System.Web.UI.WebControls.ChangePassword>コントロール。 <xref:System.Web.UI.WebControls.ChangePassword.SuccessTemplate%2A>プロパティは、分離コード ファイルを使用する場合にのみアクセスできます。 詳細については、次を参照してください。[操作方法: 作成する ASP.NET Web サーバー コントロールのテンプレートに動的に](http://msdn.microsoft.com/library/8d7aef0c-d9e3-444b-b3f7-ca0c157eb8b4)です。  
  
 テンプレートは、HTML 要素とコントロールの特定の部分のレイアウトを構成するコントロールのセットです。 テンプレート スタイルが異なります。  
  
-   テンプレートは、コントロールのセクションの内容を定義します。  
  
-   スタイルは、コントロール内の要素の外観を指定します。  
  
 詳細については、次を参照してください。 [Web サーバー コントロールのテンプレート](http://msdn.microsoft.com/library/f769d290-fd04-4084-85fc-4ea30dd2e8ae)と[ASP.NET のテーマとスキン](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)です。  
  
 <xref:System.Web.UI.WebControls.ChangePassword>コントロールは、対応するコントロールのビューに適用される次のテンプレートをサポートしています。  
  
|テンプレート名|コントロール ビュー|  
|-------------------|------------------|  
|<xref:System.Web.UI.WebControls.ChangePassword.ChangePasswordTemplate%2A>|パスワードの変更ビュー|  
|<xref:System.Web.UI.WebControls.ChangePassword.SuccessTemplate%2A>|成功ビュー|  
  
 作成または、.aspx ファイルでコントロールのテンプレートを変更することができますも。 詳細については、次を参照してください。[する方法: 作成する ASP.NET Web コントロール テンプレート宣言によって](http://msdn.microsoft.com/library/4977e1d5-c53a-4908-83be-bba0ad37357a)です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SuccessTemplateContainer">
      <MemberSignature Language="C#" Value="public System.Web.UI.Control SuccessTemplateContainer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Control SuccessTemplateContainer" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.SuccessTemplateContainer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コンテナーを取得、<see cref="T:System.Web.UI.WebControls.ChangePassword" />のインスタンスを作成するためのコントロール、<see cref="P:System.Web.UI.WebControls.ChangePassword.SuccessTemplate" />テンプレート。 これは、子コントロールにプログラムでアクセスを提供します。</summary>
        <value><see cref="T:System.Web.UI.Control" /> を格納している <see cref="P:System.Web.UI.WebControls.ChangePassword.SuccessTemplate" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SuccessText">
      <MemberSignature Language="C#" Value="public virtual string SuccessText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SuccessText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.SuccessText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定間成功ビューに表示されるテキスト、<see cref="P:System.Web.UI.WebControls.ChangePassword.SuccessTitleText" />し、[続行] ボタン。</summary>
        <value>成功ビューの間に表示するテキスト、<see cref="P:System.Web.UI.WebControls.ChangePassword.SuccessTitleText" />し、[続行] ボタン。 既定値は、<see cref="F:System.String.Empty" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ChangePassword.SuccessText%2A>プロパティを取得または成功ビューに表示されるテキストを設定します。 既定値は、「パスワードが更新されました。」です。  
  
 このプロパティの値を設定すると、デザイナーのツールを使用して、リソース ファイルに自動的に保存できます。 詳細については、次を参照してください。<xref:System.ComponentModel.LocalizableAttribute>と[グローバリゼーションとローカリゼーション](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SuccessTextStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle SuccessTextStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle SuccessTextStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.SuccessTextStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コレクションを取得<see cref="T:System.Web.UI.WebControls.Style" />成功ビュー上のテキストの外観を定義するプロパティです。</summary>
        <value>A<see cref="T:System.Web.UI.WebControls.TableItemStyle" />オブジェクトを含む、<see cref="T:System.Web.UI.WebControls.Style" />に含まれているテキストの外観を定義するプロパティ、<see cref="P:System.Web.UI.WebControls.ChangePassword.SuccessText" />プロパティです。 既定値は、<see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 次の表に、スタイルの設定を使用したカスタマイズで利用可能な<xref:System.Web.UI.WebControls.ChangePassword.SuccessTextStyle%2A>プロパティです。  
  
|設定|説明|  
|-------------|-----------------|  
|`BackColor`|成功ビューのテキストの背景色です。 色には、いずれかを指定できる、<xref:System.Drawing.Color>プロパティです。|  
|`BorderColor`|成功ビューのテキストを囲む境界線の色。 色には、いずれかを指定できる、<xref:System.Drawing.Color>プロパティです。|  
|`BorderStyle`|成功ビューのテキストを囲む罫線のスタイルです。 スタイルを指定できます`"None"`、 `"Dotted"`、 `"Dashed"`、 `"Solid"`、 `"Double"`、 `"Groove"`、 `"Ridge"`、 `"Inset"`、または`"Outset"`です。 既定値は、`"NotSet"` です。 一部のスタイルを明確に表示しない場合を除き、`BorderWidth`値が 2 より大きい。|  
|`BorderWidth`|成功ビューのテキストを囲む罫線の幅。|  
|`CssClass`|成功ビューのテキストを表示するために使用されるカスケード スタイル シート (CSS)。 その他の設定を指定するとスタイル シートの設定よりも優先されます。|  
|`Font-Bold`|`true`成功ビューのテキストを太字で表示します。|  
|`Font-Italic`|`true`斜体で成功ビューのテキストを表示します。|  
|`Font-Names`|フォントのフォント フェイスの名前。|  
|`Font-Overline`|`true`その上の行と成功ビューのテキストを表示します。|  
|`Font-Size`|成功ビューのテキストとしてのテキストのサイズ、<xref:System.Web.UI.WebControls.FontUnit>オブジェクト。|  
|`Font-Strikeout`|`true`取り消しは、成功の表示のテキストを表示します。|  
|`Font-Underline`|`true`成功ビューのテキストに下線を表示します。|  
|`ForeColor`|成功ビューのテキスト内のテキストの色。 色には、いずれかを指定できる、<xref:System.Drawing.Color>プロパティです。|  
|`Height`|A<xref:System.Web.UI.WebControls.Unit>成功ビューのテキストの高さを表すです。|  
|`Width`|A<xref:System.Web.UI.WebControls.Unit>成功ビューのテキストの幅を表すです。|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SuccessTitleText">
      <MemberSignature Language="C#" Value="public virtual string SuccessTitleText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SuccessTitleText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.SuccessTitleText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または成功ビューのタイトルを設定します。</summary>
        <value>成功ビューのタイトルとして表示されるテキストを<see cref="T:System.Web.UI.WebControls.ChangePassword" />コントロール。 既定値は「変更パスワード完了」です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ChangePassword.SuccessTitleText%2A>プロパティを取得または成功ビューのタイトルを設定します。 既定値は「変更パスワード完了」です。  
  
 このプロパティの値を設定すると、デザイナーのツールを使用して、リソース ファイルに自動的に保存できます。 詳細については、次を参照してください。<xref:System.ComponentModel.LocalizableAttribute>と[グローバリゼーションとローカリゼーション](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TagKey">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.HtmlTextWriterTag TagKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.HtmlTextWriterTag TagKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.TagKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterTag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.HtmlTextWriterTag" /> コントロールに対応する <see cref="T:System.Web.UI.WebControls.ChangePassword" /> 値を取得します。 このプロパティは、主にコントロールの開発者によって使用されます。</summary>
        <value><see cref="T:System.Web.UI.WebControls.ChangePassword" /> コントロールの <see cref="T:System.Web.UI.HtmlTextWriterTag" /> 値。 常に返します<see langword="HtmlTextWriterTag.Table." /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.ChangePassword.TagKey%2A>を決定するプロパティ、<xref:System.Web.UI.HtmlTextWriterTag>に関連付けられている値、<xref:System.Web.UI.WebControls.ChangePassword>コントロール。  
  
 <xref:System.Web.UI.WebControls.ChangePassword.TagKey%2A>プロパティでは、出力ストリームの適切な HTML マークアップを記述する、<xref:System.Web.UI.WebControls.ChangePassword>コントロール。  
  
 このプロパティは、主にコントロールの開発者によって使用されます。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>指定するには、このプロパティをオーバーライドすることができます<see cref="T:System.Web.UI.HtmlTextWriterTag" />派生したコントロールに使用する値。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="TextBoxStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style TextBoxStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style TextBoxStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.TextBoxStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コレクションへの参照を取得<see cref="T:System.Web.UI.WebControls.Style" />のテキストの外観を定義するプロパティでは、コントロールをボックスに、<see cref="T:System.Web.UI.WebControls.ChangePassword" />コントロール。</summary>
        <value>A<see cref="T:System.Web.UI.WebControls.Style" />のテキスト ボックス コントロールの外観を定義するオブジェクト、<see cref="T:System.Web.UI.WebControls.ChangePassword" />コントロール。 既定値は、<see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 次の表に、スタイルの設定を使用したカスタマイズで利用可能な<xref:System.Web.UI.WebControls.ChangePassword.TextBoxStyle%2A>プロパティです。  
  
|設定|説明|  
|-------------|-----------------|  
|`BackColor`|テキスト ボックスの背景色です。 色には、いずれかを指定できる、<xref:System.Drawing.Color>プロパティです。|  
|`BorderColor`|テキスト ボックスの境界線の色。 色には、いずれかを指定できる、<xref:System.Drawing.Color>プロパティです。|  
|`BorderStyle`|テキスト ボックスの境界線のスタイルです。 スタイルを指定できます`"None"`、 `"Dotted"`、 `"Dashed"`、 `"Solid"`、 `"Double"`、 `"Groove"`、 `"Ridge"`、 `"Inset"`、または`"Outset"`です。 既定値は、`"NotSet"` です。 一部のスタイルを明確に表示しない場合を除き、`BorderWidth`値が 2 より大きい。|  
|`BorderWidth`|テキスト ボックスの境界線の幅。|  
|`CssClass`|テキスト ボックスを表示するために使用されるカスケード スタイル シート (CSS)。 その他の設定を指定するとスタイル シートの設定よりも優先されます。|  
|`Font-Bold`|`true`テキスト ボックスのテキストを太字で表示します。|  
|`Font-Italic`|`true`斜体のテキスト ボックスのテキストを表示します。|  
|`Font-Names`|フォントのフォント フェイスの名前。|  
|`Font-Overline`|`true`その上の行のテキスト ボックスのテキストを表示します。|  
|`Font-Size`|としてテキスト ボックス内のテキストのサイズ、<xref:System.Web.UI.WebControls.FontUnit>オブジェクト。|  
|`Font-Strikeout`|`true`取り消しは、テキスト ボックスのテキストを表示します。|  
|`Font-Underline`|`true`テキスト ボックスのテキストに下線を表示します。|  
|`ForeColor`|テキスト ボックス内のテキストの色。 色には、いずれかを指定できる、<xref:System.Drawing.Color>プロパティです。|  
|`Height`|A<xref:System.Web.UI.WebControls.Unit>テキスト ボックスの高さを表すです。|  
|`Width`|A<xref:System.Web.UI.WebControls.Unit>テキスト ボックスの幅を表すです。|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TitleTextStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle TitleTextStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle TitleTextStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.TitleTextStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コレクションへの参照を取得<see cref="T:System.Web.UI.WebControls.Style" />のタイトルの外観を定義するプロパティ、<see cref="T:System.Web.UI.WebControls.ChangePassword" />コントロール。</summary>
        <value>A<see cref="T:System.Web.UI.WebControls.TableItemStyle" />オブジェクトを含む、<see cref="T:System.Web.UI.WebControls.Style" />でエラー メッセージのタイトルの外観を定義するプロパティ、<see cref="T:System.Web.UI.WebControls.ChangePassword" />コントロール。 既定値は、<see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 次の表に、スタイルの設定を使用したカスタマイズで利用可能な<xref:System.Web.UI.WebControls.ChangePassword.TitleTextStyle%2A>プロパティです。  
  
|設定|説明|  
|-------------|-----------------|  
|`BackColor`|タイトルの背景色です。 色には、いずれかを指定できる、<xref:System.Drawing.Color>プロパティです。|  
|`BorderColor`|タイトルの境界線の色。 色には、いずれかを指定できる、<xref:System.Drawing.Color>プロパティです。|  
|`BorderStyle`|タイトルの境界線のスタイルです。 スタイルを指定できます`"None"`、 `"Dotted"`、 `"Dashed"`、 `"Solid"`、 `"Double"`、 `"Groove"`、 `"Ridge"`、 `"Inset"`、または`"Outset"`です。 既定値は、`"NotSet"` です。 一部のスタイルを明確に表示しない場合を除き、`BorderWidth`値が 2 より大きい。|  
|`BorderWidth`|タイトルの境界線の幅。|  
|`CssClass`|タイトルを表示するために使用されるカスケード スタイル シート (CSS)。 その他の設定を指定するとスタイル シートの設定よりも優先されます。|  
|`Font-Bold`|`true`タイトルのテキストを太字で表示します。|  
|`Font-Italic`|`true`斜体でタイトルのテキストを表示します。|  
|`Font-Names`|フォントのフォント フェイスの名前。|  
|`Font-Overline`|`true`タイトルのテキストに上線を表示します。|  
|`Font-Size`|としてタイトルのテキストのサイズ、<xref:System.Web.UI.WebControls.FontUnit>オブジェクト。|  
|`Font-Strikeout`|`true`取り消しは、タイトルのテキストを表示します。|  
|`Font-Underline`|`true`タイトルのテキストに下線を表示します。|  
|`ForeColor`|タイトルのテキストの色。 色には、いずれかを指定できる、<xref:System.Drawing.Color>プロパティです。|  
|`Height`|A<xref:System.Web.UI.WebControls.Unit>タイトルの高さを表すです。|  
|`Width`|A<xref:System.Web.UI.WebControls.Unit>見出しの幅を表すです。|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ChangePassword.TrackViewState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>により、サーバー コントロールの保存できるように、サーバー コントロールにビュー ステートの変更の追跡<see cref="T:System.Web.UI.StateBag" />オブジェクト。 このオブジェクトは、<see cref="P:System.Web.UI.Control.ViewState" /> プロパティによってアクセスできます。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UserName">
      <MemberSignature Language="C#" Value="public virtual string UserName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.UserName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはパスワードを変更する対象の Web サイトのユーザー名を設定します。</summary>
        <value>パスワードを変更する対象のユーザー名。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ChangePassword.UserName%2A>プロパティは、パスワードを変更する対象の Web サイトのユーザー名を取得します。 使用することも、<xref:System.Web.UI.WebControls.ChangePassword.UserName%2A>内から、ユーザー名を取得するには、同じプロパティ、<xref:System.Web.UI.WebControls.ChangePassword>コントロール、せずに、パスワードを変更します。 さらに、<xref:System.Web.UI.WebControls.ChangePassword.UserName%2A>プロパティは、電子メールの送信に作成されている電子メール メッセージ内から使用できます、<xref:System.Web.UI.WebControls.ChangePassword>文字列を使用してコントロール"\<%username% >"電子メール メッセージの本文にします。  
  
 ユーザー名を入力するユーザーを許可する設定、<xref:System.Web.UI.WebControls.ChangePassword.DisplayUserName%2A>プロパティを`true`です。 ユーザーが既に認証されている場合そのユーザーはユーザー名を入力する必要ありません。  
  
   
  
## Examples  
 次のコード例を使用する ASP.NET ページを示しています、 <xref:System.Web.UI.WebControls.ChangePassword> Web コントロール、およびイベント ハンドラーが含まれています、<xref:System.Web.UI.WebControls.ChangePassword.SendingMail>という名前のイベント`SendingMail`です。 このコード例では、ASP.NET メンバーシップとフォーム認証、および、名とパスワードがわかっているユーザーが作成されたを使用する ASP.NET Web サイトが構成されていると仮定します。 詳細については、次を参照してください。[する方法: 単純なフォーム認証を実装する](http://msdn.microsoft.com/library/9522bc8d-1a41-480a-aa11-c389a4ac2d2e)です。  
  
 パスワードの変更が成功すると、コードは、SMTP を使用して、変更の確認をユーザーに電子メール メッセージを送信しようとします。 これには、`SendingMail`イベント ハンドラー。 SMTP サーバーを構成する方法については、次を参照してください。 [NIB: 方法: インストールと構成内の SMTP 仮想サーバー IIS 6.0](http://msdn.microsoft.com/en-us/ed204b58-24af-47d0-9687-60e5df5f17f8)です。 この例の目的で、必要はありません。 SMTP サーバーを構成するには電子メール メッセージを送信するエラーをテストする例が構築されます。  
  
 メール サーバーが正しく構成されていない場合またはその他のエラーが発生した電子メール メッセージを送信することはできません、`SendMailError`関数が呼び出されます。 メッセージがユーザーに表示されます。 さらに、イベントはイベント ソース MySamplesSite を既にという名前が存在することを想定して Windows アプリケーション イベント ログに記録されます。 指定したイベント ソースを作成するのには、次のコード例を参照してください。 イベント ソースの作成の詳細については、次を参照してください。[サーバーで ASP.NET Web フォーム ページのイベントの処理](http://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9)です。 <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A>のプロパティ、<xref:System.Web.UI.WebControls.SendMailErrorEventArgs>にオブジェクトが設定されている`true`エラーが処理されていることを示すためにします。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/CS/changepassword_cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/VB/changepassword_vb.aspx#1)]  
  
 プログラムによって、アプリケーション ログに MySamplesSite をという名前のイベント ソースを追加する必要がある場合は、次のコード例を使用します。 このイベント ソースは、最初のコード例を正しく動作するために存在する必要があります。 次のコード例では、管理者特権が必要です。  
  
 [!code-csharp[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/CS/createeventsource.cs#1)]
 [!code-vb[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/VB/createeventsource.vb#1)]  
  
 次のコード例は、前のコード例の ChangePasswordMail.htm ファイルとして使用できます。  
  
> [!IMPORTANT]
>  ユーザー アカウント名またはパスワードを電子メールで潜在的なセキュリティの脅威を送信しています。 電子メール メッセージでは、プレーン テキストで送信される通常と、アプリケーションを「見つけ出す」特殊なネットワークで読み取ることができます。  セキュリティを強化するに記載されている緩和策を使用して[ログイン コントロールのセキュリティで保護する](http://msdn.microsoft.com/library/d85075bc-9c1a-4453-8a0c-539b10853c9c)です。  
  
```  
<html>  
<head><title></title></head>  
<body>  
<form>  
  
  <h1>Your password for the account named &quot;<%Username%>&quot; has changed.</h1>  
  
  <p>  
  If you did not initiate this change, please call 1-206-555-0100.  
  </p>  
  
  <p>  
  <a href="http://www.contoso.com/login.aspx">  
    <img src="cid:LoginGif" alt="Log In" />  
  </a>   
  </p>  
  
  <p>  
  Please read our attached Privacy Notice.  
  </p>  
  
</form>  
</body>  
</html>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UserNameLabelText">
      <MemberSignature Language="C#" Value="public virtual string UserNameLabelText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserNameLabelText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.UserNameLabelText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはユーザー名 テキスト ボックスのラベルを設定します。</summary>
        <value>ユーザー名 ボックスの横に表示するテキスト。 既定値は、"ユーザー名:"です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティの値を設定すると、デザイナーのツールを使用して、リソース ファイルに自動的に保存できます。 詳細については、次を参照してください。<xref:System.ComponentModel.LocalizableAttribute>と[グローバリゼーションとローカリゼーション](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UserNameRequiredErrorMessage">
      <MemberSignature Language="C#" Value="public virtual string UserNameRequiredErrorMessage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserNameRequiredErrorMessage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.UserNameRequiredErrorMessage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはユーザーがユーザー名 テキスト ボックスを空のままと表示されるエラー メッセージを設定します。</summary>
        <value>ユーザーがユーザー名 テキスト ボックスを空のままにした場合に表示するエラー メッセージ。 既定値は、「ユーザー名が必要」です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティの値を設定すると、デザイナーのツールを使用して、リソース ファイルに自動的に保存できます。 詳細については、次を参照してください。<xref:System.ComponentModel.LocalizableAttribute>と[グローバリゼーションとローカリゼーション](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidatorTextStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style ValidatorTextStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style ValidatorTextStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.ValidatorTextStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コレクションへの参照を取得<see cref="T:System.Web.UI.WebControls.Style" />いずれかに関連付けられているエラー メッセージの外観を定義するプロパティの入力で使用される検証、<see cref="T:System.Web.UI.WebControls.ChangePassword" />コントロール。</summary>
        <value>A<see cref="T:System.Web.UI.WebControls.Style" />いずれかに関連付けられているエラー メッセージの外観を定義するオブジェクトの入力で使用される検証、<see cref="T:System.Web.UI.WebControls.ChangePassword" />コントロール。 既定値は、<see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 次の表に、スタイルの設定を使用したカスタマイズで利用可能な<xref:System.Web.UI.WebControls.ChangePassword.ValidatorTextStyle%2A>プロパティです。  
  
|設定|説明|  
|-------------|-----------------|  
|`BackColor`|エラー メッセージの背景色です。 色には、いずれかを指定できる、<xref:System.Drawing.Color>プロパティです。|  
|`BorderColor`|エラー メッセージの周りの境界線の色。 色には、いずれかを指定できる、<xref:System.Drawing.Color>プロパティです。|  
|`BorderStyle`|エラー メッセージの周りの境界線のスタイルです。 指定できます"None"、「点線」、「点線」、「ソリッド」、"Double"、「グルーブ」、「ねじ山」、「埋め込み」または「現段階」です。 既定値は、"NotSet"です。 一部のスタイルを明確に表示しない場合を除き、`BorderWidth`値が 2 より大きい。|  
|`BorderWidth`|エラー メッセージの周りの境界線の幅。|  
|`CssClass`|エラー メッセージを表示するために使用されるカスケード スタイル シート (CSS)。  その他の設定を指定するとスタイル シートの設定よりも優先されます。|  
|`Font-Bold`|`true`エラー メッセージ テキストを太字で表示します。|  
|`Font-Italic`|`true`斜体でエラー メッセージ テキストを表示します。|  
|`Font-Names`|フォントのフォント フェイスの名前。|  
|`Font-Overline`|`true`エラー メッセージ テキストに上線を表示します。|  
|`Font-Size`|エラー メッセージとしてのテキストのサイズ、<xref:System.Web.UI.WebControls.FontUnit>オブジェクト。|  
|`Font-Strikeout`|`true`エラーを表示するテキストに取り消しメッセージします。|  
|`Font-Underline`|`true`エラー メッセージ テキストに下線を表示します。|  
|`ForeColor`|エラー メッセージのテキストの色。 色には、いずれかを指定できる、<xref:System.Drawing.Color>プロパティです。|  
|`Height`|A<xref:System.Web.UI.WebControls.Unit>のエラー メッセージの高さを表すです。|  
|`Width`|A<xref:System.Web.UI.WebControls.Unit>のエラー メッセージの幅を表すです。|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
