<Type Name="DataGridColumnCollection" FullName="System.Web.UI.WebControls.DataGridColumnCollection">
  <TypeSignature Language="C#" Value="public sealed class DataGridColumnCollection : System.Collections.ICollection, System.Web.UI.IStateManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DataGridColumnCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Web.UI.IStateManager" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.DataGridColumnCollection" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IStateManager</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><see cref="T:System.Web.UI.WebControls.DataGrid" /> コントロール内の列を表す、<see cref="T:System.Web.UI.WebControls.DataGridColumn" /> 派生の列オブジェクトのコレクション。 このクラスは継承できません。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.DataGridColumnCollection>プログラムでのコレクションを管理するコレクション<xref:System.Web.UI.WebControls.DataGridColumn>-派生の列オブジェクトです。 これらのオブジェクト内の列を表す、<xref:System.Web.UI.WebControls.DataGrid>コントロール。 追加、削除、または内の列を挿入することができます、<xref:System.Web.UI.WebControls.DataGridColumnCollection>コレクション。  
  
> [!NOTE]
>  ときに、<xref:System.Web.UI.WebControls.DataGrid.AutoGenerateColumns%2A>プロパティに設定されている`true,`によって作成される列、<xref:System.Web.UI.WebControls.DataGrid>にコントロールが追加されていない、<xref:System.Web.UI.WebControls.DataGrid.Columns%2A>コレクション。  
  
 <xref:System.Web.UI.WebControls.DataGrid>コントロールの内容は保存されません、<xref:System.Web.UI.WebControls.DataGrid.Columns%2A>ビュー ステート内のコレクション。 追加または列を動的に削除する、プログラムで追加またはページが更新されるたびに、列を削除する必要があります。 提供、`Page_Init`関数を追加または削除する前に、列、<xref:System.Web.UI.WebControls.DataGrid>コントロールの状態が再度読み込まれ、コントロールが再構築されます。 それ以外の場合への変更、<xref:System.Web.UI.WebControls.DataGrid.Columns%2A>コレクションは反映されず、<xref:System.Web.UI.WebControls.DataGrid>の表示を制御します。  
  
> [!NOTE]
>  プログラムで列を追加またはから列を削除できますが、<xref:System.Web.UI.WebControls.DataGrid.Columns%2A>のコレクション、<xref:System.Web.UI.WebControls.DataGrid>コントロールする方が簡単に静的に列を一覧表示し、使用して、<xref:System.Web.UI.WebControls.DataGridColumn.Visible%2A>プロパティを表示または各列を非表示にします。  
  
 コレクション内の列の順序で列が表示される順序を決定、<xref:System.Web.UI.WebControls.DataGrid>コントロール。  
  
 次の表に、別の列のクラスから派生する、<xref:System.Web.UI.WebControls.DataGridColumn>クラスです。  
  
|Column クラス|説明|  
|------------------|-----------------|  
|<xref:System.Web.UI.WebControls.BoundColumn>|データ ソースのフィールドにバインドされている列です。 フィールドにテキストとして各項目を表示します。 これは、既定の列の型、<xref:System.Web.UI.WebControls.DataGrid>コントロール。|  
|<xref:System.Web.UI.WebControls.ButtonColumn>|列の各項目のコマンド ボタンを表示する列。 これにより、追加または削除するボタンなどのカスタム ボタン コントロールの列を作成することができます。|  
|<xref:System.Web.UI.WebControls.EditCommandColumn>|列内の各項目の編集コマンドを含む列。|  
|<xref:System.Web.UI.WebControls.HyperLinkColumn>|ハイパーリンクとして、列内の各項目を表示する列。 列の内容は、データ ソースのフィールド、または静的なテキストにバインドできます。|  
|<xref:System.Web.UI.WebControls.TemplateColumn>|指定したテンプレートに応じて列の各項目を表示する列。 これにより、画像を表示する例については、列のコンテンツを制御することができます。|  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.DataGridColumn>クラスは記載されている列のクラスの基本クラスです。 直接使用されていない、<xref:System.Web.UI.WebControls.DataGridColumnCollection>コレクション。  
  
   
  
## Examples  
 次のコード例を使用する方法を示しています、<xref:System.Web.UI.WebControls.DataGridColumnCollection>に列を動的に追加するコレクション、<xref:System.Web.UI.WebControls.DataGrid>コントロール。 なお、<xref:System.Web.UI.WebControls.DataGrid.Columns%2A>のプロパティ、<xref:System.Web.UI.WebControls.DataGrid>コントロールがのインスタンス、<xref:System.Web.UI.WebControls.DataGridColumnCollection>クラスです。  
  
 [!code-aspx-csharp[DataGridCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridCtor/CS/datagridctorcs.aspx#1)]
 [!code-aspx-vb[DataGridCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridCtor/VB/datagridctorvb.aspx#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataGridColumnCollection (System.Web.UI.WebControls.DataGrid owner, System.Collections.ArrayList columns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.WebControls.DataGrid owner, class System.Collections.ArrayList columns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataGridColumnCollection.#ctor(System.Web.UI.WebControls.DataGrid,System.Collections.ArrayList)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.Web.UI.WebControls.DataGrid" />
        <Parameter Name="columns" Type="System.Collections.ArrayList" />
      </Parameters>
      <Docs>
        <param name="owner"><see cref="T:System.Web.UI.WebControls.DataGrid" />このコレクションに対応するコントロール。</param>
        <param name="columns">A<see cref="T:System.Collections.ArrayList" />列のコレクションを格納します。</param>
        <summary><see cref="T:System.Web.UI.WebControls.DataGridColumnCollection" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このコンス トラクターを使用して作成しの新しいインスタンスを初期化、<xref:System.Web.UI.WebControls.DataGridColumnCollection>クラスです。  
  
   
  
## Examples  
 次のコード例を作成しの新しいインスタンスを初期化する方法を示しています、<xref:System.Web.UI.WebControls.DataGridColumnCollection>クラスです。  
  
 [!code-csharp[Classic DataGridColumnCollection.DataGridColumnCollection Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGridColumnCollection.DataGridColumnCollection Example/CS/source.cs#1)]
 [!code-vb[Classic DataGridColumnCollection.DataGridColumnCollection Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGridColumnCollection.DataGridColumnCollection Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Web.UI.WebControls.DataGridColumn column);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Web.UI.WebControls.DataGridColumn column) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataGridColumnCollection.Add(System.Web.UI.WebControls.DataGridColumn)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Web.UI.WebControls.DataGridColumn" />
      </Parameters>
      <Docs>
        <param name="column"><see cref="T:System.Web.UI.WebControls.DataGridColumn" />-派生列のオブジェクトに追加する、<see cref="T:System.Web.UI.WebControls.DataGridColumnCollection" />です。</param>
        <summary>指定した追加<see cref="T:System.Web.UI.WebControls.DataGridColumn" />-列オブジェクトを派生クラスの末尾から、<see cref="T:System.Web.UI.WebControls.DataGridColumnCollection" />コレクション。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドを使用して、 <xref:System.Web.UI.WebControls.DataGridColumn>-列オブジェクトを派生クラスの末尾から、<xref:System.Web.UI.WebControls.DataGridColumnCollection>コレクション。  
  
 <xref:System.Web.UI.WebControls.DataGrid>コントロールの内容は保存されません、<xref:System.Web.UI.WebControls.DataGrid.Columns%2A>ビュー ステート内のコレクション。 追加または列を動的に削除する、プログラムで追加またはページが更新されるたびに、列を削除する必要があります。 提供、`Page_Init`関数を追加または削除する前に、列、<xref:System.Web.UI.WebControls.DataGrid>コントロールがその状態を再読み込みし、自動的に再構築します。 それ以外の場合への変更、<xref:System.Web.UI.WebControls.DataGrid.Columns%2A>コレクションは反映されず、<xref:System.Web.UI.WebControls.DataGrid>の表示を制御します。  
  
> [!NOTE]
>  プログラムで列を追加またはから列を削除できますが、<xref:System.Web.UI.WebControls.DataGrid.Columns%2A>のコレクション、<xref:System.Web.UI.WebControls.DataGrid>コントロールする方が簡単に静的に列を一覧表示し、使用して、<xref:System.Web.UI.WebControls.DataGridColumn.Visible%2A>プロパティを表示または各列を非表示にします。  
  
   
  
## Examples  
 次のコード例を使用する方法を示しています、<xref:System.Web.UI.WebControls.DataGridColumnCollection.Add%2A>に列を動的に追加する方法、<xref:System.Web.UI.WebControls.DataGrid>コントロール。 なお、<xref:System.Web.UI.WebControls.DataGrid.Columns%2A>のプロパティ、<xref:System.Web.UI.WebControls.DataGrid>コントロールがのインスタンス、<xref:System.Web.UI.WebControls.DataGridColumnCollection>クラスです。  
  
 [!code-aspx-csharp[DataGridCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridCtor/CS/datagridctorcs.aspx#1)]
 [!code-aspx-vb[DataGridCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridCtor/VB/datagridctorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAt">
      <MemberSignature Language="C#" Value="public void AddAt (int index, System.Web.UI.WebControls.DataGridColumn column);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAt(int32 index, class System.Web.UI.WebControls.DataGridColumn column) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataGridColumnCollection.AddAt(System.Int32,System.Web.UI.WebControls.DataGridColumn)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="column" Type="System.Web.UI.WebControls.DataGridColumn" />
      </Parameters>
      <Docs>
        <param name="index">内のインデックス位置、<see cref="T:System.Web.UI.WebControls.DataGridColumnCollection" />を挿入する位置を示す、 <see cref="T:System.Web.UI.WebControls.DataGridColumn" />-列を派生します。</param>
        <param name="column"><see cref="T:System.Web.UI.WebControls.DataGridColumn" />-派生列に挿入する、<see cref="T:System.Web.UI.WebControls.DataGridColumnCollection" />です。</param>
        <summary>挿入、 <see cref="T:System.Web.UI.WebControls.DataGridColumn" />-派生の列オブジェクト、<see cref="T:System.Web.UI.WebControls.DataGridColumnCollection" />コレクション内の指定したインデックス位置。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドを使用して、挿入、 <xref:System.Web.UI.WebControls.DataGridColumn>-派生で指定したインデックス位置にある列オブジェクト、<xref:System.Web.UI.WebControls.DataGridColumnCollection>コレクション。  
  
 <xref:System.Web.UI.WebControls.DataGrid>コントロールの内容は保存されません、<xref:System.Web.UI.WebControls.DataGrid.Columns%2A>ビュー ステート内のコレクション。 追加または列を動的に削除する、プログラムで追加またはページが更新されるたびに、列を削除する必要があります。 提供、`Page_Init`関数を追加または削除する前に、列、<xref:System.Web.UI.WebControls.DataGrid>コントロールがその状態を再読み込みし、自動的に再構築します。 それ以外の場合への変更、<xref:System.Web.UI.WebControls.DataGrid.Columns%2A>コレクションは反映されず、<xref:System.Web.UI.WebControls.DataGrid>の表示を制御します。  
  
> [!NOTE]
>  プログラムで列を追加またはから列を削除できますが、<xref:System.Web.UI.WebControls.DataGrid.Columns%2A>のコレクション、<xref:System.Web.UI.WebControls.DataGrid>コントロールする方が簡単に静的に列を一覧表示し、使用して、<xref:System.Web.UI.WebControls.DataGridColumn.Visible%2A>プロパティを表示または各列を非表示にします。  
  
   
  
## Examples  
 次のコード例を使用する方法を示しています、<xref:System.Web.UI.WebControls.DataGridColumnCollection.AddAt%2A>に列を動的に追加する方法、<xref:System.Web.UI.WebControls.DataGrid>コントロール。 なお、<xref:System.Web.UI.WebControls.DataGrid.Columns%2A>のプロパティ、<xref:System.Web.UI.WebControls.DataGrid>コントロールのインスタンスである、<xref:System.Web.UI.WebControls.DataGridColumnCollection>コレクション。  
  
 [!code-aspx-csharp[Classic DataGridColumnCollection.AddAt Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGridColumnCollection.AddAt Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic DataGridColumnCollection.AddAt Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGridColumnCollection.AddAt Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="column" /> は <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataGridColumnCollection.Clear" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>すべて削除<see cref="T:System.Web.UI.WebControls.DataGridColumn" />-派生の列のオブジェクトから、<see cref="T:System.Web.UI.WebControls.DataGridColumnCollection" />コレクション。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドを使用して、すべて削除<xref:System.Web.UI.WebControls.DataGridColumn>-派生の列のオブジェクトから、<xref:System.Web.UI.WebControls.DataGridColumnCollection>コレクション。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.TableRowCollection.Count%2A>プロパティに設定されて自動的に`0`後、このメソッドを使用します。  
  
   
  
## Examples  
 次のコード例を使用する方法を示しています、<xref:System.Web.UI.WebControls.DataGridColumnCollection.Clear%2A>を空のメソッド、<xref:System.Web.UI.WebControls.DataGridColumnCollection>コレクションに新しい列を追加する前にコレクション。  
  
 [!code-aspx-csharp[Classic DataGridColumnCollection.Clear Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGridColumnCollection.Clear Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic DataGridColumnCollection.Clear Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGridColumnCollection.Clear Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataGridColumnCollection.CopyTo(System.Array,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><see cref="T:System.Web.UI.WebControls.DataGridColumnCollection" /> からコピーされた項目を受け取る、0 から始まる <see cref="T:System.Array" />。</param>
        <param name="index">指定した最初の位置<see cref="T:System.Array" />内容のコピーを受信します。</param>
        <summary>項目をコピー、<see cref="T:System.Web.UI.WebControls.DataGridColumnCollection" />を指定したコレクション<see cref="T:System.Array" />で指定したインデックスから始まる、<see cref="T:System.Array" />です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 内容をコピーするには、このメソッドを使用して、<xref:System.Web.UI.WebControls.DataGridColumnCollection>に指定されたコレクション<xref:System.Array?displayProperty=nameWithType>、指定したインデックスから始まります。  
  
> [!NOTE]
>  `array`パラメーターは、0 から始まるである必要があります<xref:System.Array?displayProperty=nameWithType>です。  
  
   
  
## Examples  
 次のコード例を使用する方法を示しています、<xref:System.Web.UI.WebControls.DataGridColumnCollection.CopyTo%2A>の内容をコピーする方法、<xref:System.Web.UI.WebControls.DataGridColumnCollection>の配列にコレクション<xref:System.Web.UI.WebControls.DataGridColumn>オブジェクト。  
  
 [!code-aspx-csharp[Classic DataGridColumnCollection.CopyTo Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGridColumnCollection.CopyTo Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic DataGridColumnCollection.CopyTo Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGridColumnCollection.CopyTo Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="array" /> は <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataGridColumnCollection.Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>内の列の数を取得、<see cref="T:System.Web.UI.WebControls.DataGridColumnCollection" />コレクション。</summary>
        <value>内の列の数、<see cref="T:System.Web.UI.WebControls.DataGridColumnCollection" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 内の列の数を決定するこのプロパティを使用して、<xref:System.Web.UI.WebControls.DataGridColumnCollection>コレクション。 <xref:System.Web.UI.WebControls.DataGridColumnCollection.Count%2A>プロパティは通常、コレクションのバインド上の決定にコレクションを反復処理する場合に使用します。  
  
   
  
## Examples  
 次のコード例を使用する方法を示しています、<xref:System.Web.UI.WebControls.DataGridColumnCollection.Count%2A>の上限を決定するプロパティ、<xref:System.Web.UI.WebControls.DataGridColumnCollection>コレクション。 この値は、コレクションを反復処理する場合は使用されます。  
  
 [!code-aspx-csharp[classic datagridcolumncollection.this example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGridColumnCollection.this Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[classic datagridcolumncollection.this example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGridColumnCollection.this Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataGridColumnCollection.GetEnumerator" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返します、<see cref="T:System.Collections.IEnumerator" />すべて含まれているインターフェイス、 <see cref="T:System.Web.UI.WebControls.DataGridColumn" />-派生の列のオブジェクトで、<see cref="T:System.Web.UI.WebControls.DataGridColumnCollection" />コレクション。</summary>
        <returns>A<see cref="T:System.Collections.IEnumerator" />すべてを含むインターフェイス<see cref="T:System.Web.UI.WebControls.DataGridColumn" />-派生の列のオブジェクトで、<see cref="T:System.Web.UI.WebControls.DataGridColumnCollection" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドを使用して、作成、<xref:System.Collections.IEnumerator?displayProperty=nameWithType>できます反復簡単各項目を取得するインターフェイス、<xref:System.Web.UI.WebControls.DataGridColumnCollection>コレクション。  
  
 使用して、<xref:System.Collections.IEnumerator.Current%2A?displayProperty=nameWithType>コレクションで示される現在の項目を取得するプロパティです。  
  
 使用して、<xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=nameWithType>コレクション内の次の項目に移動します。  
  
 使用して、<xref:System.Collections.IEnumerator.Reset%2A?displayProperty=nameWithType>列挙子を初期位置に移動するメソッド。  
  
> [!NOTE]
>  <xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=nameWithType>を作成した後、メソッドを呼び出す必要があります、<xref:System.Collections.IEnumerator?displayProperty=nameWithType>オブジェクト、またはを使用した後、<xref:System.Collections.IEnumerator.Reset%2A?displayProperty=nameWithType>列挙子をコレクションの最初の項目に移動します。 によって表される項目のそれ以外の場合、<xref:System.Collections.IEnumerator.Current%2A?displayProperty=nameWithType>プロパティが定義されていません。  
  
   
  
## Examples  
 次のコード例を使用する方法を示しています、<xref:System.Web.UI.WebControls.DataGridColumnCollection.GetEnumerator%2A>メソッドを作成、<xref:System.Collections.IEnumerator?displayProperty=nameWithType>の内容を表示する、反復処理できるインターフェイス、<xref:System.Web.UI.WebControls.DataGridColumnCollection>コレクション。  
  
 [!code-aspx-csharp[Classic DataGridColumnCollection.GetEnumerator Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGridColumnCollection.GetEnumerator Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic DataGridColumnCollection.GetEnumerator Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGridColumnCollection.GetEnumerator Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Web.UI.WebControls.DataGridColumn column);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Web.UI.WebControls.DataGridColumn column) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataGridColumnCollection.IndexOf(System.Web.UI.WebControls.DataGridColumn)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Web.UI.WebControls.DataGridColumn" />
      </Parameters>
      <Docs>
        <param name="column"><see cref="T:System.Web.UI.WebControls.DataGridColumn" />-派生内で検索する列、<see cref="T:System.Web.UI.WebControls.DataGridColumnCollection" />です。</param>
        <summary>指定したインデックスを返します<see cref="T:System.Web.UI.WebControls.DataGridColumn" />-派生列のオブジェクトから、<see cref="T:System.Web.UI.WebControls.DataGridColumnCollection" />コレクション。</summary>
        <returns>指定したインデックス位置<see cref="T:System.Web.UI.WebControls.DataGridColumn" />-派生列に、<see cref="T:System.Web.UI.WebControls.DataGridColumnCollection" />です。 既定値は<see langword="-1" />、ことを示します、指定した<see cref="T:System.Web.UI.WebControls.DataGridColumn" />-派生オブジェクトが見つかりません。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドを使用して、指定したインデックス番号を特定する<xref:System.Web.UI.WebControls.DataGridColumn>-派生の列オブジェクト、<xref:System.Web.UI.WebControls.DataGridColumnCollection>コレクション。 場合、指定した<xref:System.Web.UI.WebControls.DataGridColumn>-派生列オブジェクトが見つからない、インデックスの`-1`が返されます。  
  
   
  
## Examples  
 次のコード例を使用する方法を示しています、<xref:System.Web.UI.WebControls.DataGridColumnCollection.IndexOf%2A>のインデックスを確認するメソッド、 <xref:System.Web.UI.WebControls.DataGridColumn>-内のオブジェクトの派生、<xref:System.Web.UI.WebControls.DataGridColumnCollection>コレクション。  
  
 [!code-aspx-csharp[Classic DataGridColumnCollection.IndexOf Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGridColumnCollection.IndexOf Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic DataGridColumnCollection.IndexOf Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGridColumnCollection.IndexOf Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataGridColumnCollection.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>示す値を取得するかどうかの列、<see cref="T:System.Web.UI.WebControls.DataGridColumnCollection" />コレクションを変更することができます。</summary>
        <value>
          常に <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティは常に返します`false`ことを示す、<xref:System.Web.UI.WebControls.DataGridColumnCollection>コレクションは常に書き込むことができます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataGridColumnCollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>アクセスをするかどうかを示す値を取得、<see cref="T:System.Web.UI.WebControls.DataGridColumnCollection" />コレクションが同期されている (スレッド セーフである)。</summary>
        <value>
          常に <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティはから派生した、<xref:System.Collections.ICollection?displayProperty=nameWithType>クラスし、常にオーバーライド`false`です。  
  
 詳細については、<xref:System.Web.UI.WebControls.DataGridColumnCollection.IsSynchronized%2A>プロパティを参照してください、<xref:System.Collections.ICollection.IsSynchronized%2A?displayProperty=nameWithType>のプロパティ、<xref:System.Collections.ICollection?displayProperty=nameWithType>インターフェイスです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.DataGridColumn this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataGridColumn Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataGridColumnCollection.Item(System.Int32)" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataGridColumn</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">インデックス、 <see cref="T:System.Web.UI.WebControls.DataGridColumn" />-派生列に、<see cref="T:System.Web.UI.WebControls.DataGridColumnCollection" />を取得します。</param>
        <summary>取得、 <see cref="T:System.Web.UI.WebControls.DataGridColumn" />-派生列のオブジェクトから、<see cref="T:System.Web.UI.WebControls.DataGridColumnCollection" />コレクション内の指定したインデックス位置。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.DataGridColumn" />-派生列に、<see cref="T:System.Web.UI.WebControls.DataGridColumnCollection" />指定したインデックス位置。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このインデクサーを使用して、取得、 <xref:System.Web.UI.WebControls.DataGridColumn>-派生列のオブジェクトから、<xref:System.Web.UI.WebControls.DataGridColumnCollection>配列表記を使用して指定したインデックス位置のコレクション。  
  
   
  
## Examples  
 次のコード例は、インデクサーを使用して取得する方法を示します、 <xref:System.Web.UI.WebControls.DataGridColumn>-派生列のオブジェクトから、<xref:System.Web.UI.WebControls.DataGridColumnCollection>コレクション。 見出しのテキストを<xref:System.Web.UI.WebControls.DataGridColumn>-派生列オブジェクトがコレクション内の各項目は、Web ページに表示されます。  
  
 [!code-aspx-csharp[classic datagridcolumncollection.this example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGridColumnCollection.this Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[classic datagridcolumncollection.this example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGridColumnCollection.this Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Web.UI.WebControls.DataGridColumn column);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Web.UI.WebControls.DataGridColumn column) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataGridColumnCollection.Remove(System.Web.UI.WebControls.DataGridColumn)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Web.UI.WebControls.DataGridColumn" />
      </Parameters>
      <Docs>
        <param name="column"><see cref="T:System.Web.UI.WebControls.DataGridColumn" />-から削除する列を派生、<see cref="T:System.Web.UI.WebControls.DataGridColumnCollection" />です。</param>
        <summary>指定された削除<see cref="T:System.Web.UI.WebControls.DataGridColumn" />-派生列のオブジェクトから、<see cref="T:System.Web.UI.WebControls.DataGridColumnCollection" />コレクション。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドを使用して、指定された削除<xref:System.Web.UI.WebControls.DataGridColumn>-派生列のオブジェクトから、<xref:System.Web.UI.WebControls.DataGridColumnCollection>コレクション。  
  
 <xref:System.Web.UI.WebControls.DataGrid>コントロールの内容は保存されません、<xref:System.Web.UI.WebControls.DataGrid.Columns%2A>ビュー ステート内のコレクション。 追加または列を動的に削除する、プログラムで追加またはページが更新されるたびに、列を削除する必要があります。 提供、`Page_Init`関数を追加または削除する前に、列、<xref:System.Web.UI.WebControls.DataGrid>コントロールがその状態を再読み込みし、自動的に再構築します。 それ以外の場合への変更、<xref:System.Web.UI.WebControls.DataGrid.Columns%2A>コレクションは反映されず、<xref:System.Web.UI.WebControls.DataGrid>の表示を制御します。  
  
> [!NOTE]
>  プログラムで列を追加またはから列を削除できますが、<xref:System.Web.UI.WebControls.DataGrid.Columns%2A>のコレクション、<xref:System.Web.UI.WebControls.DataGrid>コントロールする方が簡単に静的に列を一覧表示し、使用して、<xref:System.Web.UI.WebControls.DataGridColumn.Visible%2A>プロパティを表示または各列を非表示にします。  
  
   
  
## Examples  
 次のコード例を使用する方法を示しています、<xref:System.Web.UI.WebControls.DataGridColumnCollection.Remove%2A>から列を削除する方法、<xref:System.Web.UI.WebControls.DataGridColumnCollection>コレクション。 なお、<xref:System.Web.UI.WebControls.DataGrid.Columns%2A>のプロパティ、<xref:System.Web.UI.WebControls.DataGrid>コントロールは、<xref:System.Web.UI.WebControls.DataGridColumnCollection>コレクション。  
  
 [!code-aspx-csharp[Classic DataGridColumnCollection.Remove Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGridColumnCollection.Remove Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic DataGridColumnCollection.Remove Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGridColumnCollection.Remove Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataGridColumnCollection.RemoveAt(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">インデックス、 <see cref="T:System.Web.UI.WebControls.DataGridColumn" />-派生列に、<see cref="T:System.Web.UI.WebControls.DataGridColumnCollection" />を削除します。</param>
        <summary>削除、 <see cref="T:System.Web.UI.WebControls.DataGridColumn" />-派生列のオブジェクトから、<see cref="T:System.Web.UI.WebControls.DataGridColumnCollection" />コレクション内の指定したインデックス位置。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドを使用して、削除、 <xref:System.Web.UI.WebControls.DataGridColumn>-派生列のオブジェクトから、<xref:System.Web.UI.WebControls.DataGridColumnCollection>コレクション内の指定したインデックス位置。  
  
 <xref:System.Web.UI.WebControls.DataGrid>コントロールの内容は保存されません、<xref:System.Web.UI.WebControls.DataGrid.Columns%2A>ビュー ステート内のコレクション。 追加または列を動的に削除する、プログラムで追加またはページが更新されるたびに、列を削除する必要があります。 提供、`Page_Init`関数を追加または削除する前に、列、<xref:System.Web.UI.WebControls.DataGrid>コントロールがその状態を再読み込みし、自動的に再構築します。 それ以外の場合への変更、<xref:System.Web.UI.WebControls.DataGrid.Columns%2A>コレクションは反映されず、<xref:System.Web.UI.WebControls.DataGrid>の表示を制御します。  
  
> [!NOTE]
>  プログラムで列を追加またはから列を削除できますが、<xref:System.Web.UI.WebControls.DataGrid.Columns%2A>のコレクション、<xref:System.Web.UI.WebControls.DataGrid>コントロールする方が簡単に静的に列を一覧表示し、使用して、<xref:System.Web.UI.WebControls.DataGridColumn.Visible%2A>プロパティを表示または各列を非表示にします。  
  
   
  
## Examples  
 次のコード例を使用する方法を示しています、<xref:System.Web.UI.WebControls.DataGridColumnCollection.RemoveAt%2A>から列を削除する方法、<xref:System.Web.UI.WebControls.DataGridColumnCollection>コレクション。 なお、<xref:System.Web.UI.WebControls.DataGrid.Columns%2A>のプロパティ、<xref:System.Web.UI.WebControls.DataGrid>コントロールは、<xref:System.Web.UI.WebControls.DataGridColumnCollection>コレクション。  
  
 [!code-aspx-csharp[Classic DataGridColumnCollection.RemoveAt Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGridColumnCollection.RemoveAt Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic DataGridColumnCollection.RemoveAt Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGridColumnCollection.RemoveAt Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> は <see langword="0" /> 未満か、または <see cref="P:System.Web.UI.WebControls.DataGridColumnCollection.Count" /> を超えています。</exception>
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataGridColumnCollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>アクセスを同期するために使用できるオブジェクトを取得、<see cref="T:System.Web.UI.WebControls.DataGridColumnCollection" />コレクション。</summary>
        <value>A<see cref="T:System.Object" />コレクションへのアクセスを同期するために使用できます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この実装で返されるオブジェクトは、<xref:System.Web.UI.WebControls.DataGridColumnCollection>オブジェクト。  
  
 詳細については、<xref:System.Web.UI.WebControls.DataGridColumnCollection.SyncRoot%2A>プロパティを参照してください、<xref:System.Collections.ICollection.SyncRoot%2A?displayProperty=nameWithType>のプロパティ、<xref:System.Collections.ICollection?displayProperty=nameWithType>インターフェイスです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.IsTrackingViewState">
      <MemberSignature Language="C#" Value="bool System.Web.UI.IStateManager.IsTrackingViewState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Web.UI.IStateManager.IsTrackingViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataGridColumnCollection.System#Web#UI#IStateManager#IsTrackingViewState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コレクションがビューステートの変更を追跡しているかどうかを示す値を取得します。</summary>
        <value>
          <see langword="true" />場合、<see cref="T:System.Web.UI.WebControls.DataGridColumnCollection" />ビュー ステートの変更を追跡しているオブジェクト、それ以外の<see langword="false" />します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataGridColumnCollection.System%23Web%23UI%23IStateManager%23IsTrackingViewState%2A>メンバーは、明示的なインターフェイス メンバーの実装です。 使用する場合にのみ、<xref:System.Web.UI.WebControls.DataGridColumnCollection>にインスタンスをキャスト、<xref:System.Web.UI.IStateManager>インターフェイスです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.LoadViewState">
      <MemberSignature Language="C#" Value="void IStateManager.LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IStateManager.LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataGridColumnCollection.System#Web#UI#IStateManager#LoadViewState(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">保存したコントロールのビュー ステートの値を格納している <see cref="T:System.Object" />。</param>
        <summary>以前に保存された状態を読み込みます。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.SaveViewState">
      <MemberSignature Language="C#" Value="object IStateManager.SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.Web.UI.IStateManager.SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataGridColumnCollection.System#Web#UI#IStateManager#SaveViewState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>状態の変更を含むオブジェクトを返します。</summary>
        <returns>保存したコントロールのビュー ステートの値を格納している <see cref="T:System.Object" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.TrackViewState">
      <MemberSignature Language="C#" Value="void IStateManager.TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IStateManager.TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataGridColumnCollection.System#Web#UI#IStateManager#TrackViewState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>状態変化の追跡を開始します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
