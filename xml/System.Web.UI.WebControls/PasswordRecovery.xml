<Type Name="PasswordRecovery" FullName="System.Web.UI.WebControls.PasswordRecovery">
  <TypeSignature Language="C#" Value="public class PasswordRecovery : System.Web.UI.WebControls.CompositeControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PasswordRecovery extends System.Web.UI.WebControls.CompositeControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.PasswordRecovery" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.CompositeControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("SendingMail")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.PasswordRecoveryDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>ユーザーが紛失したパスワードを回復またはリセットし、電子メールで受信することを可能にするユーザー インターフェイス (UI) 要素を提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このトピックの内容  
  
-   [はじめに](#introduction)  
  
-   [ビュー](#views)  
  
-   [スタイルおよびテンプレート](#styles_and_templates)  
  
-   [検証のグループ化](#validation_groupings)  
  
-   [CSS スタイルを適用します。](#applying_styles)  
  
-   [ユーザー補助](#accessibility)  
  
-   [宣言型の構文](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>はじめに  
 <xref:System.Web.UI.WebControls.PasswordRecovery>コントロールが自分のパスワードを忘れたユーザーを支援します。 これにより、新しいパスワードまたはユーザー名に関連付けられているパスワードを含む電子メール メッセージを要求できます。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.PasswordRecovery> Web コントロールがユーザーに回復または新しいパスワードを送信するインターネット電子メール サービスを使用します。 電子メールでパスワードの送信に特有のセキュリティ リスクがあります。 これらのセキュリティ リスクが、サイトに許容されるかどうかを決定する必要があります。  
  
> [!NOTE]
>  ASP.NET で使用できるログイン コントロールのセットに慣れていない場合は、次を参照してください。 [ASP.NET ログイン コントロールの概要](http://msdn.microsoft.com/library/ac032230-6469-4b03-b68d-03ef2643a24d)続行する前にします。 ログイン コントロールおよびメンバーシップに関連するその他のトピックの一覧は、次を参照してください。[メンバーシップを使用したユーザーを管理する](http://msdn.microsoft.com/library/824c3a24-f0af-427c-a652-0d2d1e9397cd)です。  
  
 メンバーシップ プロバイダーがで定義されている場合にのみ、ユーザーがパスワードを回復できる、<xref:System.Web.UI.WebControls.PasswordRecovery.MembershipProvider%2A>プロパティはクリア テキストや暗号化されたパスワードをサポートします。 ハッシュされたパスワードを回復できないために、ハッシュされたパスワードを使用するサイトのユーザーには、パスワードをリセットするはのみです。  
  
> [!IMPORTANT]
>  ユーザー入力を受け付けるは、潜在的なセキュリティ脅威です。 悪意のあるユーザーは、上の脆弱性を公開するか、またはプログラムを実行するためのものでは、データは、自動生成されたパスワードを再試行してください。 送信できます。 セキュリティを向上させるには、ユーザー入力を使用する場合をするには、コントロールの検証機能を使用し、コントロール用に構成されているすべてのデータ プロバイダーをセキュリティで保護します。 詳細については、次を参照してください。[ログイン コントロールのセキュリティで保護する](http://msdn.microsoft.com/library/d85075bc-9c1a-4453-8a0c-539b10853c9c)、 [Web アプリケーション用の基本的なセキュリティ プラクティス](http://msdn.microsoft.com/library/3eeeee9e-b09f-4c7f-8ce5-d9ca1f9322ad)、および[セキュリティで保護するメンバーシップ](http://msdn.microsoft.com/library/2dab2012-c278-426a-bb0d-93b260c428a7)です。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.PasswordRecovery>メンバーシップ ユーザーが承認されていない場合、コントロールを使用できます (<xref:System.Web.Security.MembershipUser.IsApproved%2A?displayProperty=nameWithType>に設定されている`false`)、メンバーシップ ユーザーがロックアウトされているときに使用することはできませんが、(<xref:System.Web.Security.MembershipUser.IsLockedOut%2A?displayProperty=nameWithType>に設定されている`true`)。  
  
 使用して電子メール メッセージを送信、<xref:System.Web.UI.WebControls.MailDefinition>クラスです。 ユーザーに電子メールを送信できるようにするには、アプリケーションの Web.config ファイルで、メール サーバーを構成する必要があります。 カスタム メッセージを設定して、ユーザーに送信する電子メールの内容を変更することができます、<xref:System.Web.UI.WebControls.PasswordRecovery.MailDefinition%2A>プロパティです。  
  
> [!NOTE]
>  ユーザーが受信または電子メール メッセージを表示することを保証することはできません。 ユーザーが電子メールで通知を受信したことを確認するには、ユーザーに通知を受信したことを確認できるように、メッセージに確認のリンクを提供することを検討してください。  
  
<a name="views"></a>   
## <a name="views"></a>ビュー  
 <xref:System.Web.UI.WebControls.PasswordRecovery>コントロールが 3 つの状態、またはビュー。  
  
-   ユーザー名ビュー: 登録済みのユーザー名をユーザーに要求します。  
  
-   質問ビュー: ユーザー パスワードをリセットするストアドの質問に対する答を入力する必要があります。  
  
-   成功ビュー - は、パスワードの回復またはリセットが成功したかどうかをユーザーに通知します。  
  
 <xref:System.Web.UI.WebControls.PasswordRecovery>でメンバーシップ プロバイダーが定義されている場合にのみ、コントロールが質問ビューを表示、<xref:System.Web.UI.WebControls.PasswordRecovery.MembershipProvider%2A>プロパティには、パスワードの質問と回答がサポートしています。  
  
 次の表に、各スタイル プロパティの<xref:System.Web.UI.WebControls.PasswordRecovery>制御し、影響を表示することを示します。  
  
|プロパティ|ユーザー名ビュー|質問ビュー|成功ビュー|  
|--------------|-------------------|-------------------|------------------|  
|<xref:System.Web.UI.WebControls.PasswordRecovery.SubmitButtonStyle%2A>|はい|はい|はい|  
|<xref:System.Web.UI.WebControls.PasswordRecovery.FailureTextStyle%2A>|はい|はい|いいえ|  
|<xref:System.Web.UI.WebControls.PasswordRecovery.HyperLinkStyle%2A>|はい|はい|いいえ|  
|<xref:System.Web.UI.WebControls.PasswordRecovery.InstructionTextStyle%2A>|はい|はい|いいえ|  
|<xref:System.Web.UI.WebControls.PasswordRecovery.LabelStyle%2A>|はい|はい|いいえ|  
|<xref:System.Web.UI.WebControls.PasswordRecovery.SuccessTextStyle%2A>|いいえ|いいえ|はい|  
|<xref:System.Web.UI.WebControls.PasswordRecovery.TextBoxStyle%2A>|はい|はい|いいえ|  
|<xref:System.Web.UI.WebControls.PasswordRecovery.TitleTextStyle%2A>|はい|はい|はい|  
  
<a name="styles_and_templates"></a>   
## <a name="styles-and-templates"></a>スタイルおよびテンプレート  
 外観をカスタマイズする、幅広いスタイル プロパティのセットを使用することができます、<xref:System.Web.UI.WebControls.PasswordRecovery>コントロール。 代わりに、コントロールの外観を制御を完了する必要がある場合は、3 つのビューにカスタム テンプレートを適用できます。 使用することができます、 <xref:System.Web.UI.WebControls.PasswordRecovery.QuestionTemplate%2A>、<xref:System.Web.UI.WebControls.PasswordRecovery.SuccessTemplate%2A>と<xref:System.Web.UI.WebControls.PasswordRecovery.UserNameTemplate%2A>これらのビューのテンプレートを作成するプロパティです。 ビューのスタイル プロパティのテンプレートを定義するかどうかは<xref:System.Web.UI.WebControls.PasswordRecovery>がある影響しません。  
  
 次の表、<xref:System.Web.UI.WebControls.PasswordRecovery>スタイル プロパティを制御し、各スタイル プロパティに影響する UI 要素について説明します。 各スタイルが適用されるプロパティの一覧は、個々 のスタイル プロパティのマニュアルを参照してください。  
  
|スタイル プロパティ|影響を受ける UI 要素|  
|--------------------|-------------------------|  
|<xref:System.Web.UI.WebControls.PasswordRecovery.SubmitButtonStyle%2A>|すべてのビューのボタンを送信します。|  
|<xref:System.Web.UI.WebControls.PasswordRecovery.FailureTextStyle%2A>|ユーザーに表示されるエラー テキスト。|  
|<xref:System.Web.UI.WebControls.PasswordRecovery.HyperLinkStyle%2A>|他のページにリンクします。|  
|<xref:System.Web.UI.WebControls.PasswordRecovery.InstructionTextStyle%2A>|ユーザー コントロールを使用する方法を説明するページ上の説明テキストです。|  
|<xref:System.Web.UI.WebControls.PasswordRecovery.LabelStyle%2A>|テキスト ボックスなどのすべての入力フィールドのラベル。|  
|<xref:System.Web.UI.WebControls.PasswordRecovery.TextBoxStyle%2A>|テキスト入力の入力フィールド|  
|<xref:System.Web.UI.WebControls.PasswordRecovery.TitleTextStyle%2A>|各ビューのタイトル テキスト。|  
|<xref:System.Web.UI.WebControls.PasswordRecovery.SuccessTextStyle%2A>|パスワードの回復またはリセットの試行が成功すると、ユーザーに表示されるテキスト。|  
  
 次の表をテンプレートのプロパティ内の各ビューに適用、<xref:System.Web.UI.WebControls.PasswordRecovery>コントロール。 各テンプレートで設定する必要があるコントロールの一覧は、各テンプレートのプロパティのマニュアルを参照してください。  
  
|表示|テンプレートのプロパティ|  
|----------|-----------------------|  
|UserName|<xref:System.Web.UI.WebControls.PasswordRecovery.UserNameTemplate%2A>|  
|質問|<xref:System.Web.UI.WebControls.PasswordRecovery.QuestionTemplate%2A>|  
|成功|<xref:System.Web.UI.WebControls.PasswordRecovery.SuccessTemplate%2A>|  
  
 ときに、<xref:System.Web.UI.WebControls.PasswordRecovery>コントロールは、テンプレートと、カスタマイズされていない、<xref:System.Web.UI.WebControls.WebControl.AccessKey%2A>のプロパティ、<xref:System.Web.UI.WebControls.PasswordRecovery>コントロールは、コントロール内の最初のテキスト ボックスに適用されます、<xref:System.Web.UI.WebControls.WebControl.TabIndex%2A>プロパティ、コントロールのすべてのテキスト ボックスに適用されます。 場合、<xref:System.Web.UI.WebControls.PasswordRecovery>テンプレートと、コントロールをカスタマイズする、<xref:System.Web.UI.WebControls.WebControl.AccessKey%2A>プロパティおよび<xref:System.Web.UI.WebControls.WebControl.TabIndex%2A>プロパティは無視されます。 この場合、設定、<xref:System.Web.UI.WebControls.WebControl.AccessKey%2A>プロパティおよび<xref:System.Web.UI.WebControls.WebControl.TabIndex%2A>直接各テンプレート子コントロールのプロパティです。  
  
 <xref:System.Web.UI.WebControls.PasswordRecovery>コントロールのプロパティなどのテキスト ボックス、によって表される<xref:System.Web.UI.WebControls.PasswordRecovery.Answer%2A>と<xref:System.Web.UI.WebControls.PasswordRecovery.Question%2A>はページのライフ サイクルのすべてのフェーズ中にアクセスします。 コントロールのエンド ユーザーによって行われた変更を取得、<xref:System.Web.UI.WebControls.TextBox.TextChanged>のテキスト ボックスによってトリガーされるイベント。  
  
<a name="validation_groupings"></a>   
## <a name="validation-groupings"></a>検証のグループ化  
 <xref:System.Web.UI.WebControls.PasswordRecovery>を検証して、ページ上のコントロールの入力を他のため、コントロール内のすべての必須フィールド検証コントロールを受けませんのコントロールが検証グループを作成、<xref:System.Web.UI.WebControls.PasswordRecovery>コントロール。 既定では、<xref:System.Web.UI.Control.ID%2A>のプロパティ、<xref:System.Web.UI.WebControls.PasswordRecovery>コントロールは、検証グループの名前として使用します。 たとえば、 <xref:System.Web.UI.WebControls.PasswordRecovery> "PasswordRecovery1"の ID を持つコントロールが"PasswordRecovery1"の検証グループ名を使用します。 場合は、<xref:System.Web.UI.WebControls.PasswordRecovery>別の検証グループに参加するコントロールをコントロール テンプレートを作成する必要があります。  
  
<a name="applying_styles"></a>   
## <a name="applying-css-styles"></a>CSS スタイルを適用します。  
 <xref:System.Web.UI.WebControls.PasswordRecovery>コントロールでは、マークアップで CSS スタイル規則を指定することができます。 外観をカスタマイズするテンプレートを使用する場合、<xref:System.Web.UI.WebControls.PasswordRecovery>コントロール、テンプレートのマークアップで CSS スタイルを指定できます。 その場合は、他の外側のテーブルは必要ありません。 テーブルが設定して表示されないように、<xref:System.Web.UI.WebControls.PasswordRecovery.RenderOuterTable%2A>プロパティを`false`です。  
  
<a name="accessibility"></a>   
## <a name="accessibility"></a>ユーザー補助  
 ユーザー補助の標準に準拠するマークアップを生成するように、このコントロールを構成する方法については、次を参照してください。 [Visual Studio と ASP.NET のユーザー補助機能](http://msdn.microsoft.com/library/7e3ce9c4-6b7d-4fb1-94b5-72cf2a44fe13)と[ASP.NET コントロールやアクセシビリティ](http://msdn.microsoft.com/library/847a37e3-ce20-41da-b0d3-7dfb0fdae9a0)です。  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>宣言型の構文  
  
```  
<asp:PasswordRecovery  
    AccessKey="string"  
    AnswerLabelText="string"  
    AnswerRequiredErrorMessage="string"  
    BackColor="color name|#dddddd"  
    BorderColor="color name|#dddddd"  
    BorderPadding="integer"  
    BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|  
        Inset|Outset"  
    BorderWidth="size"  
    CssClass="string"  
    Enabled="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    Font-Bold="True|False"  
    Font-Italic="True|False"  
    Font-Names="string"  
    Font-Overline="True|False"  
    Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|Medium|  
        Large|X-Large|XX-Large"  
    Font-Strikeout="True|False"  
    Font-Underline="True|False"  
    ForeColor="color name|#dddddd"  
    GeneralFailureText="string"  
    Height="size"  
    HelpPageIconUrl="uri"  
    HelpPageText="string"  
    HelpPageUrl="uri"  
    ID="string"  
    MailDefinition-BodyFileName="uri"  
    MailDefinition-CC="string"  
    MailDefinition-From="string"  
    MailDefinition-IsBodyHtml="True|False"  
    MailDefinition-Priority="Normal|Low|High"  
    MailDefinition-Subject="string"  
    MembershipProvider="string"  
    OnAnswerLookupError="AnswerLookupError event handler"  
    OnDataBinding="DataBinding event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnSendingMail="SendingMail event handler"  
    OnSendMailError="SendMailError event handler"  
    OnUnload="Unload event handler"  
    OnUserLookupError="UserLookupError event handler"  
    OnVerifyingAnswer="VerifyingAnswer event handler"  
    OnVerifyingUser="VerifyingUser event handler"  
    QuestionFailureText="string"  
    QuestionInstructionText="string"  
    QuestionLabelText="string"  
    QuestionTitleText="string"  
    runat="server"  
    SkinID="string"  
    Style="string"  
    SubmitButtonImageUrl="uri"  
    SubmitButtonText="string"  
    SubmitButtonType="Button|Image|Link"  
    SuccessPageUrl="uri"  
    SuccessText="string"  
    TabIndex="integer"  
    TextLayout="TextOnLeft|TextOnTop"  
    ToolTip="string"  
    UserName="string"  
    UserNameFailureText="string"  
    UserNameInstructionText="string"  
    UserNameLabelText="string"  
    UserNameRequiredErrorMessage="string"  
    UserNameTitleText="string"  
    Visible="True|False"  
    Width="size"  
>  
        <FailureTextStyle />  
        <HyperLinkStyle />  
        <InstructionTextStyle />  
        <LabelStyle />  
        <MailDefinition  
            BodyFileName="uri"  
            CC="string"  
            From="string"  
            IsBodyHtml="True|False"  
            Priority="Normal|Low|High"  
            Subject="string"  
>  
                <EmbeddedObjects>  
                        <asp:EmbeddedMailObject  
                            Name="string"  
                            Path="uri"  
                        />  
                </EmbeddedObjects>  
        </MailDefinition>  
        <QuestionTemplate>  
            <!-- child controls -->  
        </QuestionTemplate>  
        <SubmitButtonStyle />  
        <SuccessTemplate>  
            <!-- child controls -->  
        </SuccessTemplate>  
        <SuccessTextStyle />  
        <TextBoxStyle />  
        <TitleTextStyle />  
        <UserNameTemplate>  
            <!-- child controls -->  
        </UserNameTemplate>  
        <ValidatorTextStyle />  
</asp:PasswordRecovery>  
```  
  
   
  
## Examples  
 次のコード例では、使用方法を示します、<xref:System.Web.UI.WebControls.PasswordRecovery>コントロール。  
  
 [!code-aspx-csharp[PasswordRecoveryClass#1](~/samples/snippets/csharp/VS_Snippets_WebNet/PasswordRecoveryClass/CS/passwordrecoveryclasscs.aspx#1)]
 [!code-aspx-vb[PasswordRecoveryClass#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/PasswordRecoveryClass/VB/passwordrecoveryclassvb.aspx#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PasswordRecovery ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.PasswordRecovery.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.PasswordRecovery" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このコンス トラクターを使用して作成しの新しいインスタンスを初期化、<xref:System.Web.UI.WebControls.PasswordRecovery>クラスです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Answer">
      <MemberSignature Language="C#" Value="public virtual string Answer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Answer" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PasswordRecovery.Answer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Filterable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザーが入力したパスワードの回復確認質問に対する回答を取得します。</summary>
        <value>ユーザーが入力したパスワードの回復の確認質問の回答。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.PasswordRecovery.Answer%2A>プロパティには、ユーザーが入力した確認の質問に対する回答が含まれています。 <xref:System.Web.UI.WebControls.PasswordRecovery.Answer%2A>プロパティが有効では、ページがサーバーにポストされてからのみです。  
  
 テーマまたはスタイル シート テーマによっては、このプロパティを設定できません。 詳細については、次を参照してください。<xref:System.Web.UI.ThemeableAttribute>と[ASP.NET のテーマとスキン](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AnswerLabelText">
      <MemberSignature Language="C#" Value="public virtual string AnswerLabelText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AnswerLabelText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PasswordRecovery.AnswerLabelText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはパスワードの確認応答のテキスト ボックスのラベルのテキストを設定します。</summary>
        <value>パスワードの確認応答のテキスト ボックスのラベルです。 既定値は"応答:"</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.PasswordRecovery.AnswerLabelText%2A>プロパティには、パスワードの回復の確認応答テキスト ボックスのラベル テキストが含まれています。  
  
 スタイルの設定、<xref:System.Web.UI.WebControls.PasswordRecovery.LabelStyle%2A>プロパティで指定したテキストの外観を定義する、<xref:System.Web.UI.WebControls.PasswordRecovery.AnswerLabelText%2A>プロパティです。  
  
 テンプレートを割り当てる場合、<xref:System.Web.UI.WebControls.PasswordRecovery.QuestionTemplate%2A>プロパティ、<xref:System.Web.UI.WebControls.PasswordRecovery.AnswerLabelText%2A>プロパティは影響を与えません。  
  
 プロパティの既定のテキストは、サーバーのロケール設定に基づくローカライズされます。  
  
 このプロパティの値を設定すると、デザイナーのツールを使用して、リソース ファイルに自動的に保存できます。 詳細については、次を参照してください。<xref:System.ComponentModel.LocalizableAttribute>と[グローバリゼーションとローカリゼーション](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)です。  
  
   
  
## Examples  
 次のコード例のセット、<xref:System.Web.UI.WebControls.PasswordRecovery.AnswerLabelText%2A>プロパティを文字列に"の質問の答え:"です。  
  
 [!code-aspx-csharp[PasswordRecoveryLabelText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/PasswordRecoveryLabelText/CS/passwordrecoverylabeltextcs.aspx#1)]
 [!code-aspx-vb[PasswordRecoveryLabelText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/PasswordRecoveryLabelText/VB/passwordrecoverylabeltextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AnswerLookupError">
      <MemberSignature Language="C#" Value="public event EventHandler AnswerLookupError;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler AnswerLookupError" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.PasswordRecovery.AnswerLookupError" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザーがパスワードの回復の確認の質問への不適切な回答を入力したときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.PasswordRecovery.AnswerLookupError>イベントはで定義されているメンバーシップ プロバイダーによって回復パスワードの質問に対する回答が未検証、<xref:System.Web.UI.WebControls.PasswordRecovery.MembershipProvider%2A>プロパティです。  
  
 メンバーシップ プロバイダーがパスワードの回復の質問と解答をサポートしていない場合、<xref:System.Web.UI.WebControls.PasswordRecovery.AnswerLookupError>イベントは生成されません。  
  
 イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.WebControls.PasswordRecovery.AnswerLookupError>をリセットするイベント、<xref:System.Web.UI.WebControls.PasswordRecovery.QuestionTitleText%2A>プロパティの場合は、ユーザーがパスワードの確認の質問に対する無効な回答を入力します。  
  
 [!code-aspx-csharp[PasswordRecoveryTitle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/PasswordRecoveryTitle/CS/passwordrecoverytitlecs.aspx#1)]
 [!code-aspx-vb[PasswordRecoveryTitle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/PasswordRecoveryTitle/VB/passwordrecoverytitlevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AnswerRequiredErrorMessage">
      <MemberSignature Language="C#" Value="public virtual string AnswerRequiredErrorMessage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AnswerRequiredErrorMessage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PasswordRecovery.AnswerRequiredErrorMessage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または応答のテキスト ボックスが空白である場合、ユーザーに表示するエラー メッセージを設定します。</summary>
        <value>応答テキスト ボックスが空の場合に表示されるエラー メッセージ。 既定値は「応答します」</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.PasswordRecovery.AnswerRequiredErrorMessage%2A>いずれかで表示するエラー メッセージを含む<xref:System.Web.UI.WebControls.ValidationSummary>と同じページ上のコントロール、<xref:System.Web.UI.WebControls.PasswordRecovery>コントロール。  
  
 プロパティの既定のテキストは、サーバーのロケール設定に基づくローカライズされます。  
  
 このプロパティの値を設定すると、デザイナーのツールを使用して、リソース ファイルに自動的に保存できます。 詳細については、次を参照してください。<xref:System.ComponentModel.LocalizableAttribute>と[グローバリゼーションとローカリゼーション](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)です。  
  
   
  
## Examples  
 次のコード例の変更、<xref:System.Web.UI.WebControls.PasswordRecovery.AnswerRequiredErrorMessage%2A>プロパティに表示される、<xref:System.Web.UI.WebControls.ValidationSummary>ページ上のコントロールです。  
  
 [!code-aspx-csharp[PasswordRecoveryRequiredErrorMessage#1](~/samples/snippets/csharp/VS_Snippets_WebNet/PasswordRecoveryRequiredErrorMessage/CS/passwordrecoveryrequirederrrormessagecs.aspx#1)]
 [!code-aspx-vb[PasswordRecoveryRequiredErrorMessage#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/PasswordRecoveryRequiredErrorMessage/VB/passwordrecoveryrequirederrrormessagevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderPadding">
      <MemberSignature Language="C#" Value="public virtual int BorderPadding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BorderPadding" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PasswordRecovery.BorderPadding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の余白の罫線の内側、<see cref="T:System.Web.UI.WebControls.PasswordRecovery" />コントロール。</summary>
        <value>までの間隔 (ピクセル単位) の内容の量、<see cref="T:System.Web.UI.WebControls.PasswordRecovery" />コントロールと<see cref="T:System.Web.UI.WebControls.PasswordRecovery" />コントロールの境界線です。 既定値は 1 です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 値、<xref:System.Web.UI.WebControls.PasswordRecovery.BorderPadding%2A>プロパティは viewstate に格納されます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">値、<see cref="P:System.Web.UI.WebControls.PasswordRecovery.BorderPadding" />プロパティが-1 より小さい値に設定します。</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateChildControls">
      <MemberSignature Language="C#" Value="protected override void CreateChildControls ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void CreateChildControls() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.PasswordRecovery.CreateChildControls" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>構成する個々 のコントロールを作成、<see cref="T:System.Web.UI.WebControls.PasswordRecovery" />コントロール。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.PasswordRecovery.CreateChildControls%2A>メソッドを構成するコントロールのインスタンスを作成する、<xref:System.Web.UI.WebControls.PasswordRecovery>を制御し、既定のイベントのイベント ハンドラーを作成します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FailureTextStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle FailureTextStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle FailureTextStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PasswordRecovery.FailureTextStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>エラー テキストの外観を定義するプロパティのコレクションへの参照を取得、<see cref="T:System.Web.UI.WebControls.PasswordRecovery" />コントロール。</summary>
        <value>参照、<see cref="T:System.Web.UI.WebControls.TableItemStyle" />エラー テキストの外観を定義するプロパティを格納します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.PasswordRecovery.FailureTextStyle%2A>プロパティ内のエラー メッセージの外観を定義する、<xref:System.Web.UI.WebControls.PasswordRecovery>コントロール。 このプロパティは読み取り専用です。ただしのプロパティを設定することができます、<xref:System.Web.UI.WebControls.Style>オブジェクトを返します。 フォームで宣言によってこれらのプロパティを設定することができます`Property-Subproperty`ここで、`Subproperty`のプロパティを表す、<xref:System.Web.UI.WebControls.Style>クラス (たとえば、 `FailureTextStyle-ForeColor`)。 プロパティをプログラムで設定するには、フォームで`Property.Subproperty`(たとえば、 `FailureTextStyle.ForeColor`)。  
  
 一般的な設定には、カスタムの背景色には、テキストの色、フォントのプロパティが含まれます。 <xref:System.Web.UI.WebControls.PasswordRecovery.FailureTextStyle%2A>プロパティは、次のプロパティの外観を定義します。  
  
-   <xref:System.Web.UI.WebControls.PasswordRecovery.GeneralFailureText%2A>  
  
-   <xref:System.Web.UI.WebControls.PasswordRecovery.QuestionFailureText%2A>  
  
-   <xref:System.Web.UI.WebControls.PasswordRecovery.UserNameFailureText%2A>  
  
 スタイルの設定、<xref:System.Web.UI.WebControls.PasswordRecovery.FailureTextStyle%2A>のスタイルの設定とプロパティがマージされます、<xref:System.Web.UI.WebControls.PasswordRecovery>コントロール。 行った設定はすべて、<xref:System.Web.UI.WebControls.PasswordRecovery.FailureTextStyle%2A>プロパティは、対応するプロパティの設定を上書き、<xref:System.Web.UI.WebControls.PasswordRecovery>コントロール。  
  
 次<xref:System.Web.UI.WebControls.PasswordRecovery>スタイル プロパティは<xref:System.Web.UI.WebControls.PasswordRecovery.FailureTextStyle%2A>設定。  
  
-   <xref:System.Web.UI.WebControls.WebControl.BackColor%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.BorderColor%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.BorderStyle%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.BorderWidth%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.Enabled%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.Font%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.ForeColor%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.Height%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.ToolTip%2A>  
  
-   <xref:System.Web.UI.Control.Visible%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.Width%2A>  
  
 外観を定義するテンプレートを使用する場合、<xref:System.Web.UI.WebControls.PasswordRecovery>コントロール、<xref:System.Web.UI.WebControls.PasswordRecovery.FailureTextStyle%2A>プロパティは影響を与えません。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.WebControls.PasswordRecovery.FailureTextStyle%2A>内のエラー メッセージのスタイル プロパティを設定するプロパティ、<xref:System.Web.UI.WebControls.PasswordRecovery>コントロール。  
  
 [!code-aspx-csharp[PasswordRecoveryFailureText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/PasswordRecoveryFailureText/CS/passwordrecoveryfailuretextcs.aspx#1)]
 [!code-aspx-vb[PasswordRecoveryFailureText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/PasswordRecoveryFailureText/VB/passwordrecoveryfailuretextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GeneralFailureText">
      <MemberSignature Language="C#" Value="public virtual string GeneralFailureText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string GeneralFailureText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PasswordRecovery.GeneralFailureText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定のメンバーシップ プロバイダーに問題があるときに表示されるエラー メッセージ、<see cref="T:System.Web.UI.WebControls.PasswordRecovery" />コントロール。</summary>
        <value>メンバーシップ プロバイダーとの問題のために、ユーザーのパスワードが電子メールで送信されない場合に表示されるエラー メッセージ。 既定値は"、パスワードの取得に失敗しました。 もう一度やり直してください。"</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.PasswordRecovery.GeneralFailureText%2A>のユーザー情報を管理するメンバーシップ プロバイダーに問題がある場合、プロパティが、ユーザーに表示される、<xref:System.Web.UI.WebControls.PasswordRecovery>コントロール。 通常、<xref:System.Web.UI.WebControls.PasswordRecovery.GeneralFailureText%2A>メンバーシップ プロバイダーがユーザー情報を含むデータ ストアに接続できないときにプロパティが表示されます。  
  
 指定したテキスト、<xref:System.Web.UI.WebControls.PasswordRecovery.UserNameFailureText%2A>プロバイダーでは、データベースで指定されたユーザー名が見つからない場合に、ユーザー名ビューでプロパティを表示します。 <xref:System.Web.UI.WebControls.PasswordRecovery.QuestionFailureText%2A>ユーザーが入力した答えが格納されている解答と一致しない場合に、質問ビューでプロパティを表示します。 <xref:System.Web.UI.WebControls.PasswordRecovery.GeneralFailureText%2A>他のすべてのエラーのプロパティが表示されます。  
  
 外観、<xref:System.Web.UI.WebControls.PasswordRecovery.GeneralFailureText%2A>のスタイルの設定によってプロパティが定義されている、<xref:System.Web.UI.WebControls.PasswordRecovery.FailureTextStyle%2A>プロパティです。  
  
 外観を定義するテンプレートを設定すると、<xref:System.Web.UI.WebControls.PasswordRecovery>コントロール、<xref:System.Web.UI.WebControls.PasswordRecovery.GeneralFailureText%2A>で省略可能なプロパティの表示<xref:System.Web.UI.WebControls.Literal>"FailureText"に設定されたコントロール ID を持つコントロール。  
  
 プロパティの既定のテキストは、サーバーのロケール設定に基づくローカライズされます。  
  
 このプロパティの値を設定すると、デザイナーのツールを使用して、リソース ファイルに自動的に保存できます。 詳細については、次を参照してください。<xref:System.ComponentModel.LocalizableAttribute>と[グローバリゼーションとローカリゼーション](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)です。  
  
   
  
## Examples  
 次のコード例のセット、<xref:System.Web.UI.WebControls.PasswordRecovery.GeneralFailureText%2A>プロパティです。  
  
 [!code-aspx-csharp[PasswordRecoveryFailureText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/PasswordRecoveryFailureText/CS/passwordrecoveryfailuretextcs.aspx#1)]
 [!code-aspx-vb[PasswordRecoveryFailureText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/PasswordRecoveryFailureText/VB/passwordrecoveryfailuretextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HelpPageIconUrl">
      <MemberSignature Language="C#" Value="public virtual string HelpPageIconUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HelpPageIconUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PasswordRecovery.HelpPageIconUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはヘルプ ページへのリンクの横に表示するイメージの URL を設定します。</summary>
        <value>ヘルプ ページへのリンクの横に表示するイメージの URL。 既定値は、空の文字列 ("") です。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HelpPageText">
      <MemberSignature Language="C#" Value="public virtual string HelpPageText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HelpPageText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PasswordRecovery.HelpPageText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはパスワードの回復のヘルプ ページへのリンク テキストを設定します。</summary>
        <value>パスワードの回復のヘルプ ページへのリンク テキストです。 既定値は、<see cref="F:System.String.Empty" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.PasswordRecovery.HelpPageText%2A>プロパティには、パスワードの回復のヘルプ ページのリンク テキストが含まれています。 URL が指定されている場合、 <xref:System.Web.UI.WebControls.PasswordRecovery.HelpPageText%2A> 、プロパティ、<xref:System.Web.UI.WebControls.PasswordRecovery>コントロール成功ビューではなく、ユーザー名ビューと質問ビューで、パスワードの回復に関する情報へのリンクが表示されます。  
  
 場合、<xref:System.Web.UI.WebControls.PasswordRecovery.HelpPageUrl%2A>プロパティに設定されている<xref:System.String.Empty>リンクは表示されません。  
  
 ヘルプ ページのリンクの外観がによって定義された、<xref:System.Web.UI.WebControls.PasswordRecovery.HyperLinkStyle%2A>プロパティです。  
  
 外観を定義するテンプレートを使用する場合、<xref:System.Web.UI.WebControls.PasswordRecovery>コントロール、<xref:System.Web.UI.WebControls.PasswordRecovery.HelpPageText%2A>と<xref:System.Web.UI.WebControls.PasswordRecovery.HelpPageUrl%2A>プロパティがある影響しません。  
  
 このプロパティの値を設定すると、デザイナーのツールを使用して、リソース ファイルに自動的に保存できます。 詳細については、次を参照してください。<xref:System.ComponentModel.LocalizableAttribute>と[グローバリゼーションとローカリゼーション](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)です。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.WebControls.PasswordRecovery.HelpPageText%2A>ヘルプ ページにリンクするプロパティです。 ユーザーが自分のユーザー名を正しく入力しなかった場合、<xref:System.Web.UI.WebControls.PasswordRecovery.UserLookupError>イベント ハンドラーを使用して、リンクを強調表示します。  
  
 [!code-aspx-csharp[PasswordRecoveryHelp#1](~/samples/snippets/csharp/VS_Snippets_WebNet/PasswordRecoveryHelp/CS/passwordrecoveryhelpcs.aspx#1)]
 [!code-aspx-vb[PasswordRecoveryHelp#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/PasswordRecoveryHelp/VB/passwordrecoveryhelpvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HelpPageUrl">
      <MemberSignature Language="C#" Value="public virtual string HelpPageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HelpPageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PasswordRecovery.HelpPageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはパスワードの回復のヘルプ ページの URL を設定します。</summary>
        <value>パスワードの回復のヘルプ ページの URL です。 既定値は、<see cref="F:System.String.Empty" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.PasswordRecovery.HelpPageUrl%2A>プロパティには、パスワードの回復のヘルプ ページの URL が含まれています。 <xref:System.Web.UI.WebControls.PasswordRecovery>コントロールが正常に完了ビューではなく、ユーザー名ビューと質問ビューでパスワードの回復のヘルプ ページへのリンクを表示します。  
  
 場合、<xref:System.Web.UI.WebControls.PasswordRecovery.HelpPageText%2A>プロパティに設定されている<xref:System.String.Empty>リンクは表示されません。  
  
 ヘルプ ページのリンクの外観がによって定義された、<xref:System.Web.UI.WebControls.PasswordRecovery.HyperLinkStyle%2A>プロパティです。  
  
 外観を定義するテンプレートを使用する場合、<xref:System.Web.UI.WebControls.PasswordRecovery>コントロール、<xref:System.Web.UI.WebControls.PasswordRecovery.HelpPageText%2A>と<xref:System.Web.UI.WebControls.PasswordRecovery.HelpPageUrl%2A>プロパティがある影響しません。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.WebControls.PasswordRecovery.HelpPageUrl%2A>ヘルプ ページにリンクするプロパティです。 ユーザーが自分のユーザー名を正しく入力しなかった場合、<xref:System.Web.UI.WebControls.PasswordRecovery.UserLookupError>イベントが発生して、リンクが強調表示されます。  
  
 [!code-aspx-csharp[PasswordRecoveryHelp#1](~/samples/snippets/csharp/VS_Snippets_WebNet/PasswordRecoveryHelp/CS/passwordrecoveryhelpcs.aspx#1)]
 [!code-aspx-vb[PasswordRecoveryHelp#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/PasswordRecoveryHelp/VB/passwordrecoveryhelpvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HyperLinkStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle HyperLinkStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle HyperLinkStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PasswordRecovery.HyperLinkStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ハイパーリンクの外観を定義するプロパティのコレクションへの参照を取得、<see cref="T:System.Web.UI.WebControls.PasswordRecovery" />コントロール。</summary>
        <value>参照、<see cref="T:System.Web.UI.WebControls.TableItemStyle" />ハイパーリンクの外観を定義する設定を格納しています。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.PasswordRecovery.HyperLinkStyle%2A>プロパティの外観を定義する、<xref:System.Web.UI.WebControls.PasswordRecovery.HelpPageText%2A>プロパティです。 このプロパティは読み取り専用です。ただしのプロパティを設定することができます、<xref:System.Web.UI.WebControls.Style>オブジェクトを返します。 フォームのプロパティを宣言して設定されることができます`Property-Subproperty`ここで、`Subproperty`のプロパティを表す、<xref:System.Web.UI.WebControls.Style>クラス (たとえば、 `HyperLinkStyle-ForeColor`)。 プログラムでは、フォームにもプロパティを設定することができます`Property.Subproperty`(たとえば、 `HyperLinkStyle.ForeColor`)。  
  
 一般的な設定には、カスタムの背景色には、テキストの色、フォントのプロパティが含まれます。  
  
 スタイルの設定、<xref:System.Web.UI.WebControls.PasswordRecovery.HyperLinkStyle%2A>プロパティにマージする<xref:System.Web.UI.WebControls.PasswordRecovery>スタイル設定を制御します。 行った設定はすべて、<xref:System.Web.UI.WebControls.PasswordRecovery.HyperLinkStyle%2A>プロパティは、対応するプロパティの設定を上書き、<xref:System.Web.UI.WebControls.PasswordRecovery>コントロール。  
  
 次のプロパティはによってオーバーライドされる<xref:System.Web.UI.WebControls.PasswordRecovery.HyperLinkStyle%2A>設定。  
  
-   <xref:System.Web.UI.WebControls.WebControl.BackColor%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.BorderColor%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.BorderStyle%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.BorderWidth%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.Enabled%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.Font%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.ForeColor%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.Height%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.ToolTip%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.Width%2A>  
  
-   <xref:System.Web.UI.Control.Visible%2A>  
  
 外観を定義するテンプレートを使用する場合、<xref:System.Web.UI.WebControls.PasswordRecovery>コントロールのユーザー名ビューまたは質問ビュー、<xref:System.Web.UI.WebControls.PasswordRecovery.HyperLinkStyle%2A>プロパティは影響を与えません。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.WebControls.PasswordRecovery.HyperLinkStyle%2A>プロパティをユーザーのデータ ストアに含まれていないユーザー名を入力したときに、ヘルプ ページのリンクを強調表示、<xref:System.Web.UI.WebControls.PasswordRecovery>コントロール。  
  
 [!code-aspx-csharp[PasswordRecoveryHelp#1](~/samples/snippets/csharp/VS_Snippets_WebNet/PasswordRecoveryHelp/CS/passwordrecoveryhelpcs.aspx#1)]
 [!code-aspx-vb[PasswordRecoveryHelp#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/PasswordRecoveryHelp/VB/passwordrecoveryhelpvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InstructionTextStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle InstructionTextStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle InstructionTextStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PasswordRecovery.InstructionTextStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>説明のテキストの外観を定義するスタイル プロパティのコレクションへの参照を取得、<see cref="T:System.Web.UI.WebControls.PasswordRecovery" />コントロール。</summary>
        <value>参照、<see cref="T:System.Web.UI.WebControls.TableItemStyle" />説明テキストの外観を定義するプロパティを格納します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.PasswordRecovery.InstructionTextStyle%2A>プロパティの説明のテキストの外観を定義する、<xref:System.Web.UI.WebControls.PasswordRecovery>コントロール。 このプロパティは読み取り専用です。ただしのプロパティを設定することができます、<xref:System.Web.UI.WebControls.Style>オブジェクトを返します。 フォームで宣言によってプロパティを設定することができます`Property-Subproperty`ここで、`Subproperty`のプロパティを表す、<xref:System.Web.UI.WebControls.Style>クラス (たとえば、 `InstructionTextStyle-ForeColor`)。 プログラムでは、フォームにもプロパティを設定することができます`Property.Subproperty`(たとえば、 `InstructionTextStyle.ForeColor`)。  
  
 一般的な設定には、カスタムの背景色には、テキストの色、フォントのプロパティが含まれます。 <xref:System.Web.UI.WebControls.PasswordRecovery.InstructionTextStyle%2A>プロパティは、次のプロパティの外観を定義します。  
  
-   <xref:System.Web.UI.WebControls.PasswordRecovery.QuestionInstructionText%2A>  
  
-   <xref:System.Web.UI.WebControls.PasswordRecovery.UserNameInstructionText%2A>  
  
 スタイル設定に加え、<xref:System.Web.UI.WebControls.PasswordRecovery.InstructionTextStyle%2A>のスタイルの設定とプロパティがマージされます、<xref:System.Web.UI.WebControls.PasswordRecovery>コントロール。 行った設定はすべて、<xref:System.Web.UI.WebControls.PasswordRecovery.InstructionTextStyle%2A>プロパティは、対応するプロパティの設定を上書き、<xref:System.Web.UI.WebControls.PasswordRecovery>コントロール。  
  
 次<xref:System.Web.UI.WebControls.PasswordRecovery>コントロールのプロパティはによってオーバーライドされる<xref:System.Web.UI.WebControls.PasswordRecovery.InstructionTextStyle%2A>プロパティ。  
  
-   <xref:System.Web.UI.WebControls.WebControl.BackColor%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.BorderColor%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.BorderStyle%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.BorderWidth%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.Enabled%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.Font%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.ForeColor%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.Height%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.ToolTip%2A>  
  
-   <xref:System.Web.UI.Control.Visible%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.Width%2A>  
  
 外観を定義するテンプレートを使用する場合、<xref:System.Web.UI.WebControls.PasswordRecovery>コントロールのユーザー名ビューまたは質問ビュー、<xref:System.Web.UI.WebControls.PasswordRecovery.InstructionTextStyle%2A>プロパティは影響を与えません。  
  
   
  
## Examples  
 <xref:System.Web.UI.WebControls.PasswordRecovery.InstructionTextStyle%2A> プロパティを設定する方法を次のコード例に示します。  
  
 [!code-aspx-csharp[PasswordRecoveryInstructionText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/PasswordRecoveryInstructionText/CS/passwordrecoveryinstructiontextcs.aspx#1)]
 [!code-aspx-vb[PasswordRecoveryInstructionText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/PasswordRecoveryInstructionText/VB/passwordrecoveryinstructiontextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LabelStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle LabelStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle LabelStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PasswordRecovery.LabelStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>テキスト ボックスのラベルの外観を定義するスタイル プロパティのコレクションへの参照を取得、<see cref="T:System.Web.UI.WebControls.PasswordRecovery" />コントロール。</summary>
        <value>参照、<see cref="T:System.Web.UI.WebControls.TableItemStyle" />テキスト ボックスのラベルの外観を定義するプロパティを格納します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.PasswordRecovery.LabelStyle%2A>プロパティ内のテキスト ボックスのラベルの外観を定義する、<xref:System.Web.UI.WebControls.PasswordRecovery>コントロール。 このプロパティは読み取り専用です。ただしのプロパティを設定することができます、<xref:System.Web.UI.WebControls.Style>オブジェクトを返します。 これらのプロパティの設定は、フォームで宣言によって缶`Property-Subproperty`ここで、`Subproperty`のプロパティを表します、<xref:System.Web.UI.WebControls.Style>クラス (たとえば、 `LabelStyle-ForeColor`)。 プログラムでは、フォームにもプロパティを設定することができます`Property.Subproperty`(たとえば、 `LabelStyle.ForeColor`)。  
  
 一般的な設定には、カスタムの背景色には、テキストの色、フォントのプロパティが含まれます。  
  
 <xref:System.Web.UI.WebControls.PasswordRecovery.LabelStyle%2A>プロパティは、次のプロパティの外観を定義します。  
  
-   <xref:System.Web.UI.WebControls.PasswordRecovery.AnswerLabelText%2A>  
  
-   <xref:System.Web.UI.WebControls.PasswordRecovery.QuestionLabelText%2A>  
  
-   <xref:System.Web.UI.WebControls.PasswordRecovery.UserNameLabelText%2A>  
  
 スタイル設定に加え、<xref:System.Web.UI.WebControls.PasswordRecovery.LabelStyle%2A>のスタイルの設定とプロパティがマージされます、<xref:System.Web.UI.WebControls.PasswordRecovery>コントロール。 行った設定はすべて、<xref:System.Web.UI.WebControls.PasswordRecovery.LabelStyle%2A>プロパティは、対応するプロパティの設定を上書き、<xref:System.Web.UI.WebControls.PasswordRecovery>コントロール。  
  
 次<xref:System.Web.UI.WebControls.PasswordRecovery>プロパティは<xref:System.Web.UI.WebControls.PasswordRecovery.LabelStyle%2A>設定。  
  
-   <xref:System.Web.UI.WebControls.WebControl.BackColor%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.BorderColor%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.BorderStyle%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.BorderWidth%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.Enabled%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.Font%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.ForeColor%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.Height%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.ToolTip%2A>  
  
-   <xref:System.Web.UI.Control.Visible%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.Width%2A>  
  
 外観を定義するテンプレートを使用する場合、<xref:System.Web.UI.WebControls.PasswordRecovery>コントロールのユーザー名ビューと質問ビュー、<xref:System.Web.UI.WebControls.PasswordRecovery.LabelStyle%2A>プロパティは影響を与えません。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.WebControls.PasswordRecovery.LabelStyle%2A>内のテキスト ボックスのラベルの外観を変更するプロパティ、<xref:System.Web.UI.WebControls.PasswordRecovery>コントロール。  
  
 [!code-aspx-csharp[PasswordRecoveryLabelText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/PasswordRecoveryLabelText/CS/passwordrecoverylabeltextcs.aspx#1)]
 [!code-aspx-vb[PasswordRecoveryLabelText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/PasswordRecoveryLabelText/VB/passwordrecoverylabeltextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadControlState">
      <MemberSignature Language="C#" Value="protected override void LoadControlState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void LoadControlState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.PasswordRecovery.LoadControlState(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">復元するコントロールの状態を表すオブジェクト。</param>
        <summary>基本の実装<see cref="M:System.Web.UI.Control.LoadControlState(System.Object)" />メソッドです。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.PasswordRecovery.LoadViewState(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">復元するコントロールの状態を表すオブジェクト。</param>
        <summary>基本の実装<see cref="M:System.Web.UI.Control.LoadViewState(System.Object)" />メソッドです。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">ビュー ステートが無効です。</exception>
      </Docs>
    </Member>
    <Member MemberName="MailDefinition">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MailDefinition MailDefinition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.MailDefinition MailDefinition" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PasswordRecovery.MailDefinition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MailDefinition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>電子メール メッセージが新しいを送信するために使用または回復パスワードをユーザーの特性を定義するプロパティのコレクションへの参照を取得します。</summary>
        <value>参照、<see cref="T:System.Web.UI.WebControls.MailDefinition" />ユーザーに自分のパスワードを送信するために使用する電子メール メッセージの特性を定義するプロパティを格納します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.PasswordRecovery.MailDefinition%2A>プロパティを使用して書式を定義するプロパティのグループとユーザーに送信されるパスワードの電子メール メッセージのコンテンツへの参照を返します。 一般的な設定には、件名、および送信者のリターン アドレスが含まれます。 プロパティの完全な一覧を参照してください、<xref:System.Web.UI.WebControls.MailDefinition>クラスです。  
  
 このプロパティは読み取り専用です。ただしのプロパティを設定することができます、<xref:System.Web.UI.WebControls.MailDefinition>オブジェクトを返します。 フォームで宣言によってこれらのプロパティを設定することができます`Property-Subproperty`ここで、`Subproperty`のプロパティを表す、<xref:System.Web.UI.WebControls.MailDefinition>クラス (たとえば、 `MailDefinition-Subject`)。 プログラムでは、フォームにもプロパティを設定することができます`Property.Subproperty`(たとえば、 `MailDefinition.Subject`)。  
  
 テーマまたはスタイル シート テーマによっては、このプロパティを設定できません。 詳細については、次を参照してください。<xref:System.Web.UI.ThemeableAttribute>と[ASP.NET のテーマとスキン](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)です。  
  
 電子メール メッセージを作成するとき、<xref:System.Web.UI.WebControls.MailDefinition>オブジェクトを次の表に示すように置換を行うことができます。 置換テキストは区別されません。  
  
|置換テキスト|置き換えられます|  
|-----------------------|-------------------|  
|**<%** `UserName` **%>**|ユーザーの Web サイトのユーザー名。|  
|**\<%***パスワード***%>**|ユーザーの回復パスワードです。|  
  
 場合、<xref:System.Web.UI.WebControls.MailDefinition.IsBodyHtml%2A>のプロパティ、<xref:System.Web.UI.WebControls.MailDefinition>オブジェクトが`true`、メール メッセージの内容を HTML エンコード メッセージの受信者のクロス サイト スクリプティング セキュリティの脆弱性を防ぐとなります。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.WebControls.PasswordRecovery.SendingMail>のサブプロパティを設定してパスワードの電子メール メッセージを定義するイベント、<xref:System.Web.UI.WebControls.PasswordRecovery.MailDefinition%2A>プロパティです。  
  
 [!code-aspx-csharp[PasswordRecoveryMail#1](~/samples/snippets/csharp/VS_Snippets_WebNet/PasswordRecoveryMail/CS/passwordrecoverymailcs.aspx#1)]
 [!code-aspx-vb[PasswordRecoveryMail#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/PasswordRecoveryMail/VB/passwordrecoverymailvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MembershipProvider">
      <MemberSignature Language="C#" Value="public virtual string MembershipProvider { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MembershipProvider" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PasswordRecovery.MembershipProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはユーザー情報を検索するために使用するメンバーシップ プロバイダーを設定します。</summary>
        <value>メンバーシップ プロバイダーは、ユーザー情報を検索するために使用します。 既定値は <see cref="F:System.String.Empty" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.PasswordRecovery.MembershipProvider%2A>プロパティに入力されたユーザー情報を確認するために使用するメンバーシップ プロバイダーを識別する、<xref:System.Web.UI.WebControls.PasswordRecovery>コントロール。  
  
 メンバーシップ プロバイダーが Web.config ファイルで定義されている、<`membership`> セクションでします。  
  
 設定、<xref:System.Web.UI.WebControls.PasswordRecovery.MembershipProvider%2A>プロパティが使用されるプロバイダーに変更されます。 設定しない場合、<xref:System.Web.UI.WebControls.PasswordRecovery.MembershipProvider%2A>プロパティが常に返されます<xref:System.String.Empty>です。  
  
 テーマまたはスタイル シート テーマによっては、このプロパティを設定できません。 詳細については、次を参照してください。<xref:System.Web.UI.ThemeableAttribute>と[ASP.NET のテーマとスキン](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)です。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.WebControls.PasswordRecovery.VerifyingUser>を変更するイベント、<xref:System.Web.UI.WebControls.PasswordRecovery.MembershipProvider%2A>プロパティです。  
  
> [!IMPORTANT]
>  この例には、潜在的なセキュリティの脅威は、ユーザー入力を受け付けるテキスト ボックスが含まれています。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、次を参照してください。[スクリプト悪用概要](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)です。  
  
 [!code-aspx-csharp[PasswordRecoveryMembershipProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/PasswordRecoveryMembershipProvider/CS/passwordrecoverymembershipprovidercs.aspx#1)]
 [!code-aspx-vb[PasswordRecoveryMembershipProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/PasswordRecoveryMembershipProvider/VB/passwordrecoverymembershipprovidervb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAnswerLookupError">
      <MemberSignature Language="C#" Value="protected virtual void OnAnswerLookupError (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAnswerLookupError(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.PasswordRecovery.OnAnswerLookupError(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary><see cref="E:System.Web.UI.WebControls.PasswordRecovery.AnswerLookupError" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.PasswordRecovery.OnAnswerLookupError%2A>ユーザーの質問の答えをパスワードの回復の確認が Web サイトのデータ ストアに格納されている応答と一致しない場合、メソッドが呼び出されます。 既定の実装が発生し、<xref:System.Web.UI.WebControls.PasswordRecovery.AnswerLookupError>イベント。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントとデリゲート](http://msdn.microsoft.com/en-us/d98fd58b-fa4f-4598-8378-addf4355a115)です。  
  
 <xref:System.Web.UI.WebControls.PasswordRecovery.OnAnswerLookupError%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
   
  
## Examples  
 次のコード例は、カスタムを作成<xref:System.Web.UI.WebControls.PasswordRecovery>オーバーライド コントロール、<xref:System.Web.UI.WebControls.PasswordRecovery.OnAnswerLookupError%2A>を変更するメソッド、<xref:System.Web.UI.WebControls.PasswordRecovery.QuestionTitleText%2A>プロパティの場合は、ユーザーがパスワードの確認の質問への不適切な回答を入力します。  
  
 [!code-aspx-csharp[PasswordRecoveryOnAnswerLookupError#1](~/samples/snippets/csharp/VS_Snippets_WebNet/PasswordRecoveryOnAnswerLookupError/CS/passwordrecoveryonanswerlookuperrorcs.aspx#1)]
 [!code-aspx-vb[PasswordRecoveryOnAnswerLookupError#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/PasswordRecoveryOnAnswerLookupError/VB/passwordrecoveryonanswerlookuperrorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>派生クラスで <see cref="M:System.Web.UI.WebControls.PasswordRecovery.OnAnswerLookupError(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Web.UI.WebControls.PasswordRecovery.OnAnswerLookupError(System.EventArgs)" /> メソッドを呼び出してください。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnBubbleEvent">
      <MemberSignature Language="C#" Value="protected override bool OnBubbleEvent (object source, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool OnBubbleEvent(object source, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.PasswordRecovery.OnBubbleEvent(System.Object,System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="source">イベントのソース。</param>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" /> オブジェクト。</param>
        <summary>サーバー コントロールのイベントをページの UI サーバー コントロールの階層構造に渡すかどうかを決定します。</summary>
        <returns>
          イベントがキャンセルされた場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.PasswordRecovery.OnInit(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベントのデータ。</param>
        <summary>基本の実装<see cref="M:System.Web.UI.Control.OnInit(System.EventArgs)" />メソッドです。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.PasswordRecovery.OnPreRender(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベントのデータ。</param>
        <summary>基本の実装<see cref="M:System.Web.UI.Control.OnPreRender(System.EventArgs)" />メソッドです。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSendingMail">
      <MemberSignature Language="C#" Value="protected virtual void OnSendingMail (System.Web.UI.WebControls.MailMessageEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSendingMail(class System.Web.UI.WebControls.MailMessageEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.PasswordRecovery.OnSendingMail(System.Web.UI.WebControls.MailMessageEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.MailMessageEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Web.UI.WebControls.MailMessageEventArgs" />。</param>
        <summary><see cref="E:System.Web.UI.WebControls.PasswordRecovery.SendingMail" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.PasswordRecovery.OnSendingMail%2A>メンバーシップ プロバイダーが、ユーザーが Web サイトの有効なメンバーと、パスワードがユーザーに電子メールで送信される、回復する前に、または新しいことを確認した後にメソッドが呼び出されます。 既定の実装が発生し、<xref:System.Web.UI.WebControls.PasswordRecovery.SendingMail>イベント。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントとデリゲート](http://msdn.microsoft.com/en-us/d98fd58b-fa4f-4598-8378-addf4355a115)です。  
  
 <xref:System.Web.UI.WebControls.PasswordRecovery.OnSendingMail%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
   
  
## Examples  
 次のコード例を作成するカスタム<xref:System.Web.UI.WebControls.PasswordRecovery>を実装するコントロール、<xref:System.Web.UI.WebControls.PasswordRecovery.OnSendingMail%2A>のプロパティを設定するメソッドを<xref:System.Web.UI.WebControls.PasswordRecovery.MailDefinition%2A>Web サイトのユーザーに新しいパスワードを送信する前にプロパティです。  
  
 [!code-aspx-csharp[PasswordRecoveryOnBeforeSendMail#1](~/samples/snippets/csharp/VS_Snippets_WebNet/PasswordRecoveryOnBeforeSendMail/CS/passwordrecoveryonbeforesendmailcs.aspx#1)]
 [!code-aspx-vb[PasswordRecoveryOnBeforeSendMail#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/PasswordRecoveryOnBeforeSendMail/VB/passwordrecoveryonbeforesendmailvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>派生クラスで <see cref="M:System.Web.UI.WebControls.PasswordRecovery.OnSendingMail(System.Web.UI.WebControls.MailMessageEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Web.UI.WebControls.PasswordRecovery.OnSendingMail(System.Web.UI.WebControls.MailMessageEventArgs)" /> メソッドを呼び出してください。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnSendMailError">
      <MemberSignature Language="C#" Value="protected virtual void OnSendMailError (System.Web.UI.WebControls.SendMailErrorEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSendMailError(class System.Web.UI.WebControls.SendMailErrorEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.PasswordRecovery.OnSendMailError(System.Web.UI.WebControls.SendMailErrorEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.SendMailErrorEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Web.UI.WebControls.SendMailErrorEventArgs" />。</param>
        <summary>発生させる、<see cref="E:System.Web.UI.WebControls.PasswordRecovery.SendMailError" />イベントをユーザーに電子メール メッセージを送信できない場合。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.PasswordRecovery.OnSendMailError%2A>メソッドが呼び出されて、SMTP メール サービスは例外をスローします。 既定の実装が発生し、<xref:System.Web.UI.WebControls.PasswordRecovery.SendMailError>エラーと、例外が処理されない場合は、呼び出し履歴を維持しながら例外を再スローします。  
  
 確認、<xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Exception%2A>のプロパティ、<xref:System.Web.UI.WebControls.SendMailErrorEventArgs>として渡されるオブジェクト、`e`実際の例外の原因を特定のパラメーターです。 開発中は、最も一般的な理由を<xref:System.Web.UI.WebControls.PasswordRecovery.SendMailError>されるイベントが発生した、 `<smtpMail>` Web.config ファイルのセクションが正しくありません。 配置後、さまざまな理由から、電子メール アドレスでのエラーを行うにはほとんどがこのイベントは発生します。  
  
 設定する必要があります、<xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A>として渡されるオブジェクトのプロパティ、`e`パラメーターを`true`をそれ以外の処理には、例外が発生しました、例外が再度スローされたことを通知します。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[サーバーで ASP.NET Web フォーム ページのイベントの処理](http://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9)です。  
  
 <xref:System.Web.UI.WebControls.PasswordRecovery.OnSendMailError%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>オーバーライドする場合、<see cref="M:System.Web.UI.WebControls.PasswordRecovery.OnSendMailError(System.Web.UI.WebControls.SendMailErrorEventArgs)" />を呼び出して派生クラスでメソッドが必ず、<see cref="M:System.Web.UI.WebControls.PasswordRecovery.OnSendMailError(System.Web.UI.WebControls.SendMailErrorEventArgs)" />デリゲートを登録するための基本クラスのメソッドは、イベントを受信します。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnUserLookupError">
      <MemberSignature Language="C#" Value="protected virtual void OnUserLookupError (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUserLookupError(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.PasswordRecovery.OnUserLookupError(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary><see cref="E:System.Web.UI.WebControls.PasswordRecovery.UserLookupError" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.PasswordRecovery.OnUserLookupError%2A>メンバーシップ プロバイダーが最初の画面で入力したユーザー名を検索できない場合、メソッドが呼び出されます。 既定の実装が発生し、<xref:System.Web.UI.WebControls.PasswordRecovery.UserLookupError>イベント。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)です。  
  
 <xref:System.Web.UI.WebControls.PasswordRecovery.OnUserLookupError%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
   
  
## Examples  
 次のコード例を定義するカスタム<xref:System.Web.UI.WebControls.PasswordRecovery>をオーバーライドするコントロール、<xref:System.Web.UI.WebControls.PasswordRecovery.OnUserLookupError%2A>を変更するメソッド、<xref:System.Web.UI.WebControls.PasswordRecovery.UserNameTitleText%2A>プロパティの場合は、ユーザーがパスワードの確認の質問への不適切な回答を入力します。  
  
 [!code-aspx-csharp[PasswordRecoveryOnAnswerLookupError#1](~/samples/snippets/csharp/VS_Snippets_WebNet/PasswordRecoveryOnAnswerLookupError/CS/passwordrecoveryonanswerlookuperrorcs.aspx#1)]
 [!code-aspx-vb[PasswordRecoveryOnAnswerLookupError#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/PasswordRecoveryOnAnswerLookupError/VB/passwordrecoveryonanswerlookuperrorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>派生クラスで <see cref="M:System.Web.UI.WebControls.PasswordRecovery.OnUserLookupError(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Web.UI.WebControls.PasswordRecovery.OnUserLookupError(System.EventArgs)" /> メソッドを呼び出してください。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnVerifyingAnswer">
      <MemberSignature Language="C#" Value="protected virtual void OnVerifyingAnswer (System.Web.UI.WebControls.LoginCancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnVerifyingAnswer(class System.Web.UI.WebControls.LoginCancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.PasswordRecovery.OnVerifyingAnswer(System.Web.UI.WebControls.LoginCancelEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.LoginCancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.ComponentModel.CancelEventArgs" />。</param>
        <summary><see cref="E:System.Web.UI.WebControls.PasswordRecovery.VerifyingAnswer" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.PasswordRecovery.OnVerifyingAnswer%2A>メンバーシップ プロバイダーを検証するユーザーの質問の答えをパスワードの回復の確認が送信される前に、メソッドが呼び出されます。 既定の実装が発生し、<xref:System.Web.UI.WebControls.PasswordRecovery.VerifyingAnswer>イベント。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントとデリゲート](http://msdn.microsoft.com/en-us/d98fd58b-fa4f-4598-8378-addf4355a115)です。  
  
 <xref:System.Web.UI.WebControls.PasswordRecovery.OnVerifyingAnswer%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
   
  
## Examples  
 次のコード例を作成するカスタム<xref:System.Web.UI.WebControls.PasswordRecovery>を実装するコントロール、<xref:System.Web.UI.WebControls.PasswordRecovery.OnVerifyingAnswer%2A>メソッドです。 カスタム クラスの基本実装を呼び出すだけで、<xref:System.Web.UI.WebControls.PasswordRecovery.OnVerifyingAnswer%2A>メソッドです。  
  
 [!code-aspx-csharp[PasswordRecoveryOnBeforeAnswerLookup#1](~/samples/snippets/csharp/VS_Snippets_WebNet/PasswordRecoveryOnBeforeAnswerLookup/CS/passwordrecoveryonbeforeanswerlookupcs.aspx#1)]
 [!code-aspx-vb[PasswordRecoveryOnBeforeAnswerLookup#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/PasswordRecoveryOnBeforeAnswerLookup/VB/passwordrecoveryonbeforeanswerlookupvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>派生クラスで <see cref="M:System.Web.UI.WebControls.PasswordRecovery.OnVerifyingAnswer(System.Web.UI.WebControls.LoginCancelEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Web.UI.WebControls.PasswordRecovery.OnVerifyingAnswer(System.Web.UI.WebControls.LoginCancelEventArgs)" /> メソッドを呼び出してください。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnVerifyingUser">
      <MemberSignature Language="C#" Value="protected virtual void OnVerifyingUser (System.Web.UI.WebControls.LoginCancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnVerifyingUser(class System.Web.UI.WebControls.LoginCancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.PasswordRecovery.OnVerifyingUser(System.Web.UI.WebControls.LoginCancelEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.LoginCancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.ComponentModel.CancelEventArgs" />。</param>
        <summary><see cref="E:System.Web.UI.WebControls.PasswordRecovery.VerifyingUser" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.PasswordRecovery.OnVerifyingUser%2A>メソッドは、ユーザーが最初の画面上のユーザー名を送信し、メンバーシップ プロバイダーがユーザー名を検証します。 既定の実装が発生し、<xref:System.Web.UI.WebControls.PasswordRecovery.VerifyingUser>イベント。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントとデリゲート](http://msdn.microsoft.com/en-us/d98fd58b-fa4f-4598-8378-addf4355a115)です。  
  
 <xref:System.Web.UI.WebControls.PasswordRecovery.OnVerifyingUser%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
   
  
## Examples  
 次のコード例を作成するカスタム<xref:System.Web.UI.WebControls.PasswordRecovery>を実装するコントロール、<xref:System.Web.UI.WebControls.PasswordRecovery.OnVerifyingUser%2A>メソッドです。 カスタム クラスの基本実装を呼び出すだけで、<xref:System.Web.UI.WebControls.PasswordRecovery.OnVerifyingUser%2A>メソッドです。  
  
 [!code-aspx-csharp[PasswordRecoveryOnBeforeUserLookup#1](~/samples/snippets/csharp/VS_Snippets_WebNet/PasswordRecoveryOnBeforeUserLookup/CS/passwordrecoveryonbeforeuserlookupcs.aspx#1)]
 [!code-aspx-vb[PasswordRecoveryOnBeforeUserLookup#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/PasswordRecoveryOnBeforeUserLookup/VB/passwordrecoveryonbeforeuserlookupvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>派生クラスで <see cref="M:System.Web.UI.WebControls.PasswordRecovery.OnVerifyingUser(System.Web.UI.WebControls.LoginCancelEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Web.UI.WebControls.PasswordRecovery.OnVerifyingUser(System.Web.UI.WebControls.LoginCancelEventArgs)" /> メソッドを呼び出してください。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Question">
      <MemberSignature Language="C#" Value="public string Question { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Question" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PasswordRecovery.Question" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Filterable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Web サイト上のユーザーによって確立されたパスワードの回復確認の質問を取得します。</summary>
        <value>パスワードの回復の確認の質問。 既定値は <see cref="F:System.String.Empty" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.PasswordRecovery.Question%2A>プロパティには、Web サイトで、ユーザーが以前に確立回復の確認のパスワードの質問が含まれています。 <xref:System.Web.UI.WebControls.PasswordRecovery.Question%2A>質問ビューでのみプロパティが表示されます。 メンバーシップ プロバイダーがで指定されている場合、<xref:System.Web.UI.WebControls.PasswordRecovery.MembershipProvider%2A>パスワードの質問と答え、プロパティはサポートされていません、質問ビューが表示されていないと<xref:System.Web.UI.WebControls.PasswordRecovery.Question%2A>プロパティは使用されません。  
  
 メンバーシップ プロバイダーは、ユーザーが有効なユーザー名を入力するまでに、質問を返します。 ユーザーが、有効なユーザー名を入力するまで、<xref:System.Web.UI.WebControls.PasswordRecovery.Question%2A>プロパティは<xref:System.String.Empty>します。  
  
 スタイルの設定、<xref:System.Web.UI.WebControls.PasswordRecovery.TextBoxStyle%2A>プロパティの外観を定義する、<xref:System.Web.UI.WebControls.PasswordRecovery.Question%2A>プロパティです。  
  
 使用する場合、<xref:System.Web.UI.WebControls.PasswordRecovery.QuestionTemplate%2A>質問ビューの外観を定義するプロパティ、<xref:System.Web.UI.WebControls.PasswordRecovery.Question%2A>で省略可能なプロパティの表示<xref:System.Web.UI.WebControls.Literal>コントロールを<xref:System.Web.UI.Control.ID%2A>プロパティを「質問」に設定します。  
  
 テーマまたはスタイル シート テーマによっては、このプロパティを設定できません。 詳細については、次を参照してください。<xref:System.Web.UI.ThemeableAttribute>と[ASP.NET のテーマとスキン](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QuestionFailureText">
      <MemberSignature Language="C#" Value="public virtual string QuestionFailureText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string QuestionFailureText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PasswordRecovery.QuestionFailureText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはユーザーの質問の答えをパスワードの回復の確認が Web サイトのデータ ストアに格納されている応答と一致しないときに表示されるテキストを設定します。</summary>
        <value>ユーザーの質問の答えをパスワードの回復の確認が Web サイトのデータ ストアに格納されている応答と一致しないときに表示されるテキストです。 既定値は"、解答を確認できませんでした。 もう一度やり直してください。"</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.PasswordRecovery.QuestionFailureText%2A>プロパティには、パスワードの回復の確認の質問に対する回答が Web サイトのデータ ストアに格納されている応答と一致しない場合に表示されるエラー メッセージが含まれています。  
  
 スタイルの設定、<xref:System.Web.UI.WebControls.PasswordRecovery.FailureTextStyle%2A>プロパティの外観を定義する、<xref:System.Web.UI.WebControls.PasswordRecovery.QuestionFailureText%2A>プロパティです。  
  
 外観を定義するテンプレートを使用する場合、<xref:System.Web.UI.WebControls.PasswordRecovery>コントロール、<xref:System.Web.UI.WebControls.PasswordRecovery.QuestionFailureText%2A>で省略可能なプロパティが表示されます<xref:System.Web.UI.WebControls.Literal>コントロールを<xref:System.Web.UI.Control.ID%2A>プロパティを"FailureText"に設定します。  
  
 プロパティの既定のテキストは、サーバーのロケール設定に基づくローカライズされます。  
  
 このプロパティの値を設定すると、デザイナーのツールを使用して、リソース ファイルに自動的に保存できます。 詳細については、次を参照してください。<xref:System.ComponentModel.LocalizableAttribute>と[グローバリゼーションとローカリゼーション](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)です。  
  
   
  
## Examples  
 次のコード例のセット、<xref:System.Web.UI.WebControls.PasswordRecovery.QuestionFailureText%2A>プロパティです。  
  
 [!code-aspx-csharp[PasswordRecoveryFailureText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/PasswordRecoveryFailureText/CS/passwordrecoveryfailuretextcs.aspx#1)]
 [!code-aspx-vb[PasswordRecoveryFailureText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/PasswordRecoveryFailureText/VB/passwordrecoveryfailuretextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QuestionInstructionText">
      <MemberSignature Language="C#" Value="public virtual string QuestionInstructionText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string QuestionInstructionText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PasswordRecovery.QuestionInstructionText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはパスワードの回復の確認の質問に回答するように指示する質問ビューに表示するテキストを設定します。</summary>
        <value>質問ビューに表示する指示テキストです。 既定値は「の次の質問に対する回答、パスワードを受け取ります」</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.PasswordRecovery.QuestionInstructionText%2A>回復確認のパスワードの質問に回答するように指示する質問ビューでプロパティを表示します。  
  
 スタイルの設定、<xref:System.Web.UI.WebControls.PasswordRecovery.InstructionTextStyle%2A>プロパティの外観を定義する、<xref:System.Web.UI.WebControls.PasswordRecovery.QuestionInstructionText%2A>プロパティです。  
  
 使用すると、<xref:System.Web.UI.WebControls.PasswordRecovery.QuestionTemplate%2A>質問ビューの外観を定義するプロパティ、<xref:System.Web.UI.WebControls.PasswordRecovery.QuestionInstructionText%2A>プロパティは影響を与えません。  
  
 プロパティの既定のテキストは、サーバーのロケール設定に基づくローカライズされます。  
  
 このプロパティの値を設定すると、デザイナーのツールを使用して、リソース ファイルに自動的に保存できます。 詳細については、次を参照してください。<xref:System.ComponentModel.LocalizableAttribute>と[グローバリゼーションとローカリゼーション](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)です。  
  
   
  
## Examples  
 次のコード例のセット、<xref:System.Web.UI.WebControls.PasswordRecovery.QuestionInstructionText%2A>プロパティです。  
  
 [!code-aspx-csharp[PasswordRecoveryInstructionText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/PasswordRecoveryInstructionText/CS/passwordrecoveryinstructiontextcs.aspx#1)]
 [!code-aspx-vb[PasswordRecoveryInstructionText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/PasswordRecoveryInstructionText/VB/passwordrecoveryinstructiontextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QuestionLabelText">
      <MemberSignature Language="C#" Value="public virtual string QuestionLabelText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string QuestionLabelText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PasswordRecovery.QuestionLabelText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定のラベルのテキスト、<see cref="P:System.Web.UI.WebControls.PasswordRecovery.Question" />テキスト ボックス。</summary>
        <value>ラベル、<see cref="P:System.Web.UI.WebControls.PasswordRecovery.Question" />テキスト ボックス。 既定値は"質問:"</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.PasswordRecovery.QuestionLabelText%2A>プロパティには、パスワードの回復の確認質問テキスト ボックスのラベル テキストが含まれています。  
  
 含まれるスタイル設定、<xref:System.Web.UI.WebControls.PasswordRecovery.LabelStyle%2A>プロパティの外観を定義する、<xref:System.Web.UI.WebControls.PasswordRecovery.QuestionLabelText%2A>プロパティです。  
  
 使用すると、<xref:System.Web.UI.WebControls.PasswordRecovery.QuestionTemplate%2A>質問ビューの外観を定義するプロパティ、<xref:System.Web.UI.WebControls.PasswordRecovery.QuestionLabelText%2A>プロパティは影響を与えません。  
  
 プロパティの既定のテキストは、サーバーのロケール設定に基づくローカライズされます。  
  
 このプロパティの値を設定すると、デザイナーのツールを使用して、リソース ファイルに自動的に保存できます。 詳細については、次を参照してください。<xref:System.ComponentModel.LocalizableAttribute>と[グローバリゼーションとローカリゼーション](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)です。  
  
   
  
## Examples  
 次のコード例のセット、<xref:System.Web.UI.WebControls.PasswordRecovery.QuestionLabelText%2A>プロパティです。  
  
 [!code-aspx-csharp[PasswordRecoveryLabelText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/PasswordRecoveryLabelText/CS/passwordrecoverylabeltextcs.aspx#1)]
 [!code-aspx-vb[PasswordRecoveryLabelText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/PasswordRecoveryLabelText/VB/passwordrecoverylabeltextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QuestionTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate QuestionTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate QuestionTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PasswordRecovery.QuestionTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.PasswordRecovery))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の質問のビューを表示するために使用するテンプレート、<see cref="T:System.Web.UI.WebControls.PasswordRecovery" />コントロール。</summary>
        <value><see cref="T:System.Web.UI.ITemplate" />を表示するためのテンプレートを含む、<see cref="T:System.Web.UI.WebControls.PasswordRecovery" />問題の表示を制御します。 既定値は、<see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.PasswordRecovery.QuestionTemplate%2A>プロパティには外観を定義するテンプレートが含まれています、<xref:System.Web.UI.WebControls.PasswordRecovery>問題の表示を制御します。  
  
 次の表には、質問ビューのテンプレートで使用する必須および省略可能なコントロールが一覧表示します。  
  
|ID またはコマンドの名前|コントロールの種類|必須/オプション|  
|------------------------|------------------|------------------------|  
|`Answer`|実装する任意のコントロール<xref:System.Web.UI.IEditableTextControl>です。|必須|  
|`Submit`|イベントのバブルの原因となるコントロールです。|省略可能|  
  
 送信コントロールが原因となるイベント バブルなど、任意のコントロールを指定できます<xref:System.Web.UI.WebControls.Button>、 <xref:System.Web.UI.WebControls.LinkButton>、または<xref:System.Web.UI.WebControls.ImageButton>です。 コントロールのコマンド名のプロパティは、"Submit"に設定する必要があります。  
  
 <xref:System.Web.UI.WebControls.PasswordRecovery>スローを制御する<xref:System.Web.HttpException>質問ビューには、必要なコントロールが含まれていない場合は例外です。 間違った型; のコントロールにオプションのコントロール ID を提供する場合に例外がスローされません。ただし、コントロール、その後では無視されます、<xref:System.Web.UI.WebControls.PasswordRecovery>コントロール。  
  
 質問ビューの外観を定義するテンプレートを使用するときに、次のプロパティのみが、コントロールの動作に影響します。  
  
-   すべてのプロパティが継承<xref:System.Web.UI.WebControls.WebControl>(詳細については、次を参照してください。、<xref:System.Web.UI.WebControls.PasswordRecovery>制御メンバー テーブル)。  
  
-   <xref:System.Web.UI.WebControls.PasswordRecovery.Answer%2A>。  
  
-   <xref:System.Web.UI.WebControls.PasswordRecovery.GeneralFailureText%2A>。  
  
-   <xref:System.Web.UI.WebControls.PasswordRecovery.MailDefinition%2A>。  
  
-   <xref:System.Web.UI.WebControls.PasswordRecovery.MembershipProvider%2A>。  
  
-   <xref:System.Web.UI.WebControls.PasswordRecovery.Question%2A>。  
  
-   <xref:System.Web.UI.WebControls.PasswordRecovery.QuestionFailureText%2A>。  
  
-   <xref:System.Web.UI.WebControls.PasswordRecovery.SuccessPageUrl%2A>。  
  
-   <xref:System.Web.UI.WebControls.PasswordRecovery.SuccessTemplate%2A>。  
  
-   <xref:System.Web.UI.WebControls.PasswordRecovery.UserName%2A>。  
  
-   <xref:System.Web.UI.WebControls.PasswordRecovery.UserNameFailureText%2A>。  
  
-   <xref:System.Web.UI.WebControls.PasswordRecovery.UserNameTemplate%2A>。  
  
 質問ビューのテンプレートを使用する場合、その他のすべてのプロパティはアクティブではできません。  
  
   
  
## Examples  
 次のコード例では、質問ビューの既定のテンプレートを示します。  
  
> [!IMPORTANT]
>  この例には、潜在的なセキュリティの脅威は、ユーザー入力を受け付けるテキスト ボックスが含まれています。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、次を参照してください。[スクリプト悪用概要](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)です。  
  
 [!code-aspx-csharp[PasswordRecoveryQuestionTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/PasswordRecoveryQuestionTemplate/CS/passwordrecoveryquestiontemplatecs.aspx#1)]
 [!code-aspx-vb[PasswordRecoveryQuestionTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/PasswordRecoveryQuestionTemplate/VB/passwordrecoveryquestiontemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QuestionTemplateContainer">
      <MemberSignature Language="C#" Value="public System.Web.UI.Control QuestionTemplateContainer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Control QuestionTemplateContainer" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PasswordRecovery.QuestionTemplateContainer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コンテナーを取得、<see cref="T:System.Web.UI.WebControls.PasswordRecovery" />のインスタンスを作成するためのコントロール、<see cref="P:System.Web.UI.WebControls.PasswordRecovery.QuestionTemplate" />テンプレート。 このプロパティは、子コントロールにプログラムでアクセスを提供します。</summary>
        <value>A<see cref="T:System.Web.UI.Control" />を格納している、<see cref="P:System.Web.UI.WebControls.PasswordRecovery.QuestionTemplate" />テンプレート。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QuestionTitleText">
      <MemberSignature Language="C#" Value="public virtual string QuestionTitleText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string QuestionTitleText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PasswordRecovery.QuestionTitleText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の質問ビューのタイトル、<see cref="T:System.Web.UI.WebControls.PasswordRecovery" />コントロール。</summary>
        <value>質問ビューのタイトルです。 既定値は、「Id の確認」です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.PasswordRecovery.QuestionTitleText%2A>プロパティには、パスワードの確認の質問に回答を求める質問のビューのタイトルとして表示するテキストが含まれています。  
  
 スタイルの設定、<xref:System.Web.UI.WebControls.PasswordRecovery.TitleTextStyle%2A>プロパティ内のテキストの外観を定義する、<xref:System.Web.UI.WebControls.PasswordRecovery.QuestionTitleText%2A>プロパティです。  
  
 使用すると、<xref:System.Web.UI.WebControls.PasswordRecovery.QuestionTemplate%2A>質問ビューの外観を定義するプロパティ、<xref:System.Web.UI.WebControls.PasswordRecovery.QuestionTitleText%2A>プロパティは影響を与えません。  
  
 プロパティの既定のテキストは、サーバーのロケール設定に基づくローカライズされます。  
  
 このプロパティの値を設定すると、デザイナーのツールを使用して、リソース ファイルに自動的に保存できます。 詳細については、次を参照してください。<xref:System.ComponentModel.LocalizableAttribute>と[グローバリゼーションとローカリゼーション](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)です。  
  
   
  
## Examples  
 次のコード例のセット、<xref:System.Web.UI.WebControls.PasswordRecovery.QuestionTitleText%2A>プロパティです。 ユーザーが、有効なユーザー名を入力していない場合、<xref:System.Web.UI.WebControls.PasswordRecovery.QuestionTitleText%2A>でプロパティをリセット、<xref:System.Web.UI.WebControls.PasswordRecovery.AnswerLookupError>イベント。  
  
 [!code-aspx-csharp[PasswordRecoveryTitle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/PasswordRecoveryTitle/CS/passwordrecoverytitlecs.aspx#1)]
 [!code-aspx-vb[PasswordRecoveryTitle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/PasswordRecoveryTitle/VB/passwordrecoverytitlevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.PasswordRecovery.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><see cref="T:System.Web.UI.HtmlTextWriter" />表示される出力を受け取る。</param>
        <summary>書き込みます、<see cref="T:System.Web.UI.WebControls.CompositeControl" />を指定したコンテンツ<see cref="T:System.Web.UI.HtmlTextWriter" />クライアントに表示するためのオブジェクト。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderOuterTable">
      <MemberSignature Language="C#" Value="public virtual bool RenderOuterTable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RenderOuterTable" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PasswordRecovery.RenderOuterTable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはコントロールがでレンダリングされる HTML を囲むかどうかを示す値を設定、<see langword="table" />インライン スタイルを適用するために要素。</summary>
        <value>
          <see langword="true" />コントロールは、レンダリングされた HTML の場合、<see langword="table" />要素、それ以外の<see langword="false" />します。 既定値は、<see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ようなインライン スタイル プロパティを設定するために<xref:System.Web.UI.WebControls.WebControl.ForeColor%2A>コントロールに表示されるすべての HTML に適用されます、ASP.NET を囲むでレンダリングされる HTML、`table`要素。 場合は、外側しないようにする`table`レンダリングされる要素では、このプロパティを設定`false`です。 その場合は、インライン コントロール全体に適用されるスタイル プロパティを設定しようとすると、例外がスローされます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveControlState">
      <MemberSignature Language="C#" Value="protected override object SaveControlState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance object SaveControlState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.PasswordRecovery.SaveControlState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ページがサーバーにポスト バックされた時間以降に発生したすべてのサーバー コントロール状態の変化を保存します。</summary>
        <returns>サーバー コントロールの現在の状態を返します。 このコントロールに関連付けられている状態がない場合、このメソッドは <see langword="null" /> を返します。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.PasswordRecovery.SaveViewState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="M:System.Web.UI.WebControls.Style.TrackViewState" /> メソッドが呼び出された後に変更された状態を保存します。</summary>
        <returns>コントロールの現在のビュー ステートを格納するオブジェクト。このコントロールに関連付けられたビュー ステートがない場合は <see langword="null" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendingMail">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.MailMessageEventHandler SendingMail;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.MailMessageEventHandler SendingMail" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.PasswordRecovery.SendingMail" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MailMessageEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザーは、パスワード、電子メールで送信する前に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.PasswordRecovery.SendingMail>イベントは、ユーザーが新しいまたは回復パスワードを要求し、パスワードの確認の質問に (、メンバーシップ プロバイダーには、パスワードの質問と回答がサポートされている) 場合、正しい解答を送信後、パスワードは、電子メールでユーザーに送信される前に、サーバーで発生します。 設定するなど、電子メール メッセージを送信する前に必要な特別な処理を行うには、このイベントを使用して<xref:System.Web.Mail.MailMessage>プロパティです。  
  
 有効なユーザー名を入力後し、該当する場合、有効な応答、<xref:System.Web.UI.WebControls.PasswordRecovery>制御が発生し、<xref:System.Web.UI.WebControls.PasswordRecovery.SendingMail>イベント、し、電子メールでユーザーにパスワードの情報を送信します。 電子メールで定義されている設定を使用して、`<smtpMail>`構成ファイルの要素。  
  
 イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.WebControls.PasswordRecovery.SendingMail>イベントのプロパティを設定する、<xref:System.Web.Mail.MailMessage>電子メール メッセージを含むオブジェクトです。  
  
 [!code-aspx-csharp[PasswordRecoveryMail#1](~/samples/snippets/csharp/VS_Snippets_WebNet/PasswordRecoveryMail/CS/passwordrecoverymailcs.aspx#1)]
 [!code-aspx-vb[PasswordRecoveryMail#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/PasswordRecoveryMail/VB/passwordrecoverymailvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SendMailError">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SendMailErrorEventHandler SendMailError;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SendMailErrorEventHandler SendMailError" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.PasswordRecovery.SendMailError" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SendMailErrorEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>SMTP メール システムに電子メール メッセージを送信中にエラーをスローした場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.PasswordRecovery.SendMailError>イベントは、SMTP メール サーバーは、電子メール メッセージを送信しようとするときに例外をスローします。  
  
 既定値<xref:System.Web.UI.WebControls.PasswordRecovery.SendMailError>イベントがメール システムから SMTP エラーを処理しません。 処理するメソッド、<xref:System.Web.UI.WebControls.PasswordRecovery.SendMailError>イベントを設定する必要があります、<xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A>のプロパティ、<xref:System.Web.UI.WebControls.SendMailErrorEventArgs>オブジェクトを`true`に、エラーを処理しがユーザーに表示されるようにします。  
  
 イベント処理の詳細については、次を参照してください。[イベント](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDesignModeState">
      <MemberSignature Language="C#" Value="protected override void SetDesignModeState (System.Collections.IDictionary data);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetDesignModeState(class System.Collections.IDictionary data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.PasswordRecovery.SetDesignModeState(System.Collections.IDictionary)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="data">コントロールのデザイン時のデータ。</param>
        <summary>基本の実装<see cref="M:System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)" />メソッドです。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SubmitButtonCommandName">
      <MemberSignature Language="C#" Value="public static readonly string SubmitButtonCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string SubmitButtonCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.PasswordRecovery.SubmitButtonCommandName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>[送信] ボタンがクリックされたときに実行するコマンドを表します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このフィールドは、[送信] ボタンがクリックされたときに実行するコマンドを表す文字列です。 既定値は、"Submit"です。 このフィールドは読み取り専用です。 テンプレートを使用する場合、<xref:System.Web.UI.WebControls.PasswordRecovery>コントロール、フォームを送信するために実行するアクションの場合は、このコマンド名を使用する必要がありますまたはコントロールが正しく機能しません。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SubmitButtonImageUrl">
      <MemberSignature Language="C#" Value="public virtual string SubmitButtonImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SubmitButtonImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PasswordRecovery.SubmitButtonImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または送信 ボタンとして使用するイメージの URL を設定します。</summary>
        <value>[送信] ボタンとして使用するイメージの URL です。 既定値は、<see cref="F:System.String.Empty" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.PasswordRecovery.SubmitButtonImageUrl%2A>プロパティには、送信に使用するイメージの URL が含まれています。 ときにボタン、<xref:System.Web.UI.WebControls.PasswordRecovery.SubmitButtonType%2A>プロパティがに設定されている<xref:System.Web.UI.WebControls.ButtonType.Image>です。  
  
 <xref:System.Web.UI.WebControls.PasswordRecovery.SubmitButtonText%2A>プロパティは、イメージを表示できないのブラウザーでイメージの代替テキストとして使用します。  
  
 使用する場合、<xref:System.Web.UI.WebControls.PasswordRecovery.UserNameTemplate%2A>または<xref:System.Web.UI.WebControls.PasswordRecovery.QuestionTemplate%2A>、プロパティ、<xref:System.Web.UI.WebControls.PasswordRecovery.SubmitButtonImageUrl%2A>プロパティは影響を与えません。  
  
   
  
## Examples  
 次のコード例のセット、<xref:System.Web.UI.WebControls.PasswordRecovery.SubmitButtonImageUrl%2A>プロパティ宣言の構文を使用します。 このコード例に示されている例の一部である、<xref:System.Web.UI.WebControls.PasswordRecovery.SubmitButtonType%2A>プロパティです。  
  
 [!code-aspx-csharp[PasswordRecoveryButton#2](~/samples/snippets/csharp/VS_Snippets_WebNet/PasswordRecoveryButton/CS/passwordrecoverybuttoncs.aspx#2)]
 [!code-aspx-vb[PasswordRecoveryButton#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/PasswordRecoveryButton/VB/passwordrecoverybuttonvb.aspx#2)]  
  
 次のコード例は、設定する方法を示します、<xref:System.Web.UI.WebControls.PasswordRecovery.SubmitButtonImageUrl%2A>プロパティ プログラムでします。 このコード例に示されている例の一部である、<xref:System.Web.UI.WebControls.PasswordRecovery.SubmitButtonType%2A>プロパティです。  
  
 [!code-csharp[PasswordRecoveryButton#3](~/samples/snippets/csharp/VS_Snippets_WebNet/PasswordRecoveryButton/CS/passwordrecoverybuttoncs.aspx#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SubmitButtonStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style SubmitButtonStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style SubmitButtonStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PasswordRecovery.SubmitButtonStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>[送信] ボタンの外観を定義するプロパティのコレクションへの参照を取得、<see cref="T:System.Web.UI.WebControls.PasswordRecovery" />コントロール。</summary>
        <value>参照、<see cref="T:System.Web.UI.WebControls.Style" />送信 ボタンの外観を定義するプロパティを格納します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.PasswordRecovery.SubmitButtonStyle%2A>プロパティで [送信] ボタンの外観を定義する、<xref:System.Web.UI.WebControls.PasswordRecovery>コントロール。 このプロパティは読み取り専用です。ただしのプロパティを設定することができます、<xref:System.Web.UI.WebControls.Style>オブジェクトを返します。 フォームで宣言によってこれらのプロパティを設定することができます`Property-Subproperty`ここで、`Subproperty`のプロパティを表す、<xref:System.Web.UI.WebControls.Style>クラス (たとえば、 `SubmitButtonStyle-ForeColor`)。 プログラムでは、フォームにもプロパティを設定することができます`Property.Subproperty`(たとえば、 `SubmitButtonStyle.ForeColor`)。  
  
 一般的な設定には、カスタムの背景色には、テキストの色、フォントのプロパティが含まれます。  
  
 スタイルの設定、<xref:System.Web.UI.WebControls.PasswordRecovery.SubmitButtonStyle%2A>のスタイルの設定とプロパティがマージされます、<xref:System.Web.UI.WebControls.PasswordRecovery>コントロール。 行った設定はすべて、<xref:System.Web.UI.WebControls.PasswordRecovery.SubmitButtonStyle%2A>プロパティは、対応するプロパティの設定を上書き、<xref:System.Web.UI.WebControls.PasswordRecovery>コントロール。  
  
 次<xref:System.Web.UI.WebControls.PasswordRecovery>プロパティは<xref:System.Web.UI.WebControls.PasswordRecovery.SubmitButtonStyle%2A>設定。  
  
-   <xref:System.Web.UI.WebControls.WebControl.BackColor%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.BorderColor%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.BorderStyle%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.BorderWidth%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.Enabled%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.Font%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.ForeColor%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.Height%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.ToolTip%2A>  
  
-   <xref:System.Web.UI.Control.Visible%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.Width%2A>  
  
 最初の外観または質問ビューの定義にテンプレートを使用すると、<xref:System.Web.UI.WebControls.PasswordRecovery>コントロール、<xref:System.Web.UI.WebControls.PasswordRecovery.SubmitButtonStyle%2A>プロパティは影響を与えません。  
  
   
  
## Examples  
 次のコード例は、設定の効果を示しています。<xref:System.Web.UI.WebControls.PasswordRecovery.SubmitButtonStyle%2A>で送信 ボタンのさまざまな種類のプロパティ、<xref:System.Web.UI.WebControls.PasswordRecovery>コントロール。  
  
 [!code-aspx-csharp[PasswordRecoveryButton#1](~/samples/snippets/csharp/VS_Snippets_WebNet/PasswordRecoveryButton/CS/passwordrecoverybuttoncs.aspx#1)]
 [!code-aspx-vb[PasswordRecoveryButton#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/PasswordRecoveryButton/VB/passwordrecoverybuttonvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SubmitButtonText">
      <MemberSignature Language="C#" Value="public virtual string SubmitButtonText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SubmitButtonText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PasswordRecovery.SubmitButtonText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはフォームを送信するボタンのテキストを設定します。</summary>
        <value>ボタンのテキストです。 既定値は、"Submit"です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.PasswordRecovery.SubmitButtonText%2A>プロパティには、表示されるテキストが含まれています、<xref:System.Web.UI.WebControls.PasswordRecovery>コントロールの Submit ボタンをクリックします。  
  
 どのように<xref:System.Web.UI.WebControls.PasswordRecovery.SubmitButtonText%2A>プロパティを使用しての設定によって異なります、<xref:System.Web.UI.WebControls.PasswordRecovery.SubmitButtonType%2A>プロパティです。 詳細については、「<xref:System.Web.UI.WebControls.PasswordRecovery.SubmitButtonType%2A>」を参照してください。  
  
 外観を定義するテンプレートを使用する場合、<xref:System.Web.UI.WebControls.PasswordRecovery>コントロール、<xref:System.Web.UI.WebControls.PasswordRecovery.SubmitButtonText%2A>プロパティは影響を与えません。  
  
 プロパティの既定のテキストは、サーバーのロケール設定に基づくローカライズされます。  
  
 このプロパティの値を設定すると、デザイナーのツールを使用して、リソース ファイルに自動的に保存できます。 詳細については、次を参照してください。<xref:System.ComponentModel.LocalizableAttribute>と[グローバリゼーションとローカリゼーション](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)です。  
  
   
  
## Examples  
 次のコード例のセット、<xref:System.Web.UI.WebControls.PasswordRecovery.SubmitButtonText%2A>プロパティ宣言の構文を使用します。 このコード例に示されている例の一部である、<xref:System.Web.UI.WebControls.PasswordRecovery.SubmitButtonType%2A>プロパティです。  
  
 [!code-aspx-csharp[PasswordRecoveryButton#2](~/samples/snippets/csharp/VS_Snippets_WebNet/PasswordRecoveryButton/CS/passwordrecoverybuttoncs.aspx#2)]
 [!code-aspx-vb[PasswordRecoveryButton#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/PasswordRecoveryButton/VB/passwordrecoverybuttonvb.aspx#2)]  
  
 次のコード例のセット、<xref:System.Web.UI.WebControls.PasswordRecovery.SubmitButtonText%2A>プロパティ プログラムでします。 このコード例に示されている例の一部である、<xref:System.Web.UI.WebControls.PasswordRecovery.SubmitButtonType%2A>プロパティです。  
  
 [!code-csharp[PasswordRecoveryButton#4](~/samples/snippets/csharp/VS_Snippets_WebNet/PasswordRecoveryButton/CS/passwordrecoverybuttoncs.aspx#4)]
 [!code-vb[PasswordRecoveryButton#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/PasswordRecoveryButton/VB/passwordrecoverybuttonvb.aspx#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SubmitButtonType">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.ButtonType SubmitButtonType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.ButtonType SubmitButtonType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PasswordRecovery.SubmitButtonType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ButtonType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定を表示するときに使用する送信ボタンの種類、<see cref="T:System.Web.UI.WebControls.PasswordRecovery" />コントロール。</summary>
        <value><see cref="T:System.Web.UI.WebControls.ButtonType" /> 値のいずれか。 既定値は、<see cref="F:System.Web.UI.WebControls.ButtonType.Button" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.PasswordRecovery.SubmitButtonType%2A>プロパティを決定するエントリを送信するボタンの種類が使用される、<xref:System.Web.UI.WebControls.PasswordRecovery>コントロール。  
  
 次の表に、ボタンの種類の各値に対して使用される、<xref:System.Web.UI.WebControls.PasswordRecovery.SubmitButtonType%2A>プロパティです。  
  
|SubmitButtonType 値|使用されるボタン|  
|----------------------------|-----------------|  
|<xref:System.Web.UI.WebControls.ButtonType.Button>|標準の HTML ボタン。 <xref:System.Web.UI.WebControls.PasswordRecovery.SubmitButtonText%2A>プロパティは、ボタンのテキストを提供します。|  
|<xref:System.Web.UI.WebControls.ButtonType.Image>|格納されている場所でイメージ、<xref:System.Web.UI.WebControls.PasswordRecovery.SubmitButtonImageUrl%2A>プロパティです。 <xref:System.Web.UI.WebControls.PasswordRecovery.SubmitButtonText%2A>プロパティは、イメージの代替テキストを提供します。|  
|<xref:System.Web.UI.WebControls.ButtonType.Link>|HTML リンクします。 <xref:System.Web.UI.WebControls.PasswordRecovery.SubmitButtonText%2A>プロパティは、このリンク テキストを提供します。|  
  
 外観を定義するテンプレートを使用する場合、<xref:System.Web.UI.WebControls.PasswordRecovery>コントロール、<xref:System.Web.UI.WebControls.PasswordRecovery.SubmitButtonType%2A>プロパティは影響を与えません。  
  
   
  
## Examples  
 次のコード例は、送信 ボタンの外観を示しています、<xref:System.Web.UI.WebControls.PasswordRecovery>の異なる設定の制御、<xref:System.Web.UI.WebControls.PasswordRecovery.SubmitButtonType%2A>プロパティです。  
  
 [!code-aspx-csharp[PasswordRecoveryButton#1](~/samples/snippets/csharp/VS_Snippets_WebNet/PasswordRecoveryButton/CS/passwordrecoverybuttoncs.aspx#1)]
 [!code-aspx-vb[PasswordRecoveryButton#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/PasswordRecoveryButton/VB/passwordrecoverybuttonvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><see cref="P:System.Web.UI.WebControls.PasswordRecovery.SubmitButtonType" />プロパティが有効に設定されていない<see cref="T:System.Web.UI.WebControls.ButtonType" />値。</exception>
      </Docs>
    </Member>
    <Member MemberName="SuccessPageUrl">
      <MemberSignature Language="C#" Value="public virtual string SuccessPageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SuccessPageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PasswordRecovery.SuccessPageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはパスワードが正常に送信後に表示するページの URL を設定します。</summary>
        <value>パスワードの成功ページの URL です。 既定値は、<see cref="F:System.String.Empty" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.PasswordRecovery.SuccessPageUrl%2A>プロパティには、ユーザーに、パスワードは正常に送信された後に表示されるページの URL が含まれています。  
  
 場合、<xref:System.Web.UI.WebControls.PasswordRecovery.SuccessPageUrl%2A>プロパティは使用されません`null`で定義されているページへユーザーを誘導、<xref:System.Web.UI.WebControls.PasswordRecovery.SuccessPageUrl%2A>プロパティ以外の場合、ページを含む、<xref:System.Web.UI.WebControls.PasswordRecovery>コントロールが更新されます。  
  
 テーマまたはスタイル シート テーマによっては、このプロパティを設定できません。 詳細については、次を参照してください。<xref:System.Web.UI.ThemeableAttribute>と[ASP.NET のテーマとスキン](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)です。  
  
   
  
## Examples  
 次のコード例のセット、<xref:System.Web.UI.WebControls.PasswordRecovery>コントロールで定義されているページにユーザーをリダイレクトする、<xref:System.Web.UI.WebControls.PasswordRecovery.SuccessPageUrl%2A>後、新しいパスワードを送信するには、ユーザーのプロパティです。  
  
 [!code-aspx-csharp[PasswordRecoverySuccessAction#1](~/samples/snippets/csharp/VS_Snippets_WebNet/PasswordRecoverySuccessAction/CS/passwordrecoverysuccessactioncs.aspx#1)]
 [!code-aspx-vb[PasswordRecoverySuccessAction#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/PasswordRecoverySuccessAction/VB/passwordrecoverysuccessactionvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SuccessTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate SuccessTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate SuccessTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PasswordRecovery.SuccessTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.PasswordRecovery))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の成功を表示するために使用するテンプレート、<see cref="T:System.Web.UI.WebControls.PasswordRecovery" />コントロール。</summary>
        <value><see cref="T:System.Web.UI.ITemplate" />を表示するためのテンプレートを含む、<see cref="T:System.Web.UI.WebControls.PasswordRecovery" />成功ビューのコントロールです。 既定値は、<see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.PasswordRecovery.SuccessTemplate%2A>プロパティには外観を定義するテンプレートが含まれています、<xref:System.Web.UI.WebControls.PasswordRecovery>成功ビューのコントロールです。  
  
 必須またはオプションのフィールドが存在しない、<xref:System.Web.UI.WebControls.PasswordRecovery>成功ビュー テンプレート。  
  
 成功ビューの外観を定義するテンプレートを使用するときに、次のプロパティのみが、コントロールの動作に影響します。  
  
-   すべてのプロパティが継承<xref:System.Web.UI.WebControls.WebControl>(を参照してください、<xref:System.Web.UI.WebControls.PasswordRecovery>制御メンバー テーブル)。  
  
-   <xref:System.Web.UI.WebControls.PasswordRecovery.Answer%2A>。  
  
-   <xref:System.Web.UI.WebControls.PasswordRecovery.GeneralFailureText%2A>。  
  
-   <xref:System.Web.UI.WebControls.PasswordRecovery.MailDefinition%2A>。  
  
-   <xref:System.Web.UI.WebControls.PasswordRecovery.MembershipProvider%2A>。  
  
-   <xref:System.Web.UI.WebControls.PasswordRecovery.Question%2A>。  
  
-   <xref:System.Web.UI.WebControls.PasswordRecovery.QuestionFailureText%2A>。  
  
-   <xref:System.Web.UI.WebControls.PasswordRecovery.QuestionTemplate%2A>。  
  
-   <xref:System.Web.UI.WebControls.PasswordRecovery.SuccessPageUrl%2A>。  
  
-   <xref:System.Web.UI.WebControls.PasswordRecovery.UserName%2A>。  
  
-   <xref:System.Web.UI.WebControls.PasswordRecovery.UserNameFailureText%2A>。  
  
-   <xref:System.Web.UI.WebControls.PasswordRecovery.UserNameTemplate%2A>。  
  
 その他のすべてのプロパティは、の成功ビューのテンプレートを使用するときに、アクティブ、<xref:System.Web.UI.WebControls.PasswordRecovery>コントロール。  
  
   
  
## Examples  
 次のコード例では、成功ビューの既定のテンプレートを示します。  
  
 [!code-aspx-csharp[PasswordRecoverySuccessTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/PasswordRecoverySuccessTemplate/CS/passwordrecoverysuccesstemplatecs.aspx#1)]
 [!code-aspx-vb[PasswordRecoverySuccessTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/PasswordRecoverySuccessTemplate/VB/passwordrecoverysuccesstemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SuccessTemplateContainer">
      <MemberSignature Language="C#" Value="public System.Web.UI.Control SuccessTemplateContainer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Control SuccessTemplateContainer" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PasswordRecovery.SuccessTemplateContainer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コンテナーを取得、<see cref="T:System.Web.UI.WebControls.PasswordRecovery" />のインスタンスを作成するためのコントロール、<see cref="P:System.Web.UI.WebControls.PasswordRecovery.SuccessTemplate" />テンプレート。 このプロパティは、子コントロールにプログラムでアクセスを提供します。</summary>
        <value><see cref="T:System.Web.UI.Control" /> を格納している <see cref="P:System.Web.UI.WebControls.PasswordRecovery.SuccessTemplate" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティは、プログラムにアクセスする子コントロール テンプレートを使用するときに使用できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SuccessText">
      <MemberSignature Language="C#" Value="public virtual string SuccessText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SuccessText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PasswordRecovery.SuccessText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはパスワードが正常に送信した後に表示するテキストを設定します。</summary>
        <value>パスワードが正常に送信されるときに表示されるテキストです。 既定値は「パスワードが送信されましたする」</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.PasswordRecovery.SuccessText%2A>パスワードがユーザーに正常に送信されるときに、成功ビューでプロパティを表示します。  
  
 スタイルの設定、<xref:System.Web.UI.WebControls.PasswordRecovery.SuccessTextStyle%2A>プロパティの外観を定義する、<xref:System.Web.UI.WebControls.PasswordRecovery.SuccessText%2A>プロパティです。  
  
 割り当てられたテンプレートを使用すると、 <xref:System.Web.UI.WebControls.PasswordRecovery.SuccessTemplate%2A> 、プロパティ、<xref:System.Web.UI.WebControls.PasswordRecovery.SuccessText%2A>プロパティは影響を与えません。  
  
 場合、<xref:System.Web.UI.WebControls.PasswordRecovery.SuccessPageUrl%2A>プロパティは使用されません`null`、ユーザーがで定義されているページにリダイレクト、<xref:System.Web.UI.WebControls.PasswordRecovery.SuccessPageUrl%2A>プロパティ、および<xref:System.Web.UI.WebControls.PasswordRecovery>コントロールの成功のビューは、ユーザーに表示されません。  
  
 プロパティの既定のテキストは、サーバーのロケール設定に基づくローカライズされます。  
  
 このプロパティの値を設定すると、デザイナーのツールを使用して、リソース ファイルに自動的に保存できます。 詳細については、次を参照してください。<xref:System.ComponentModel.LocalizableAttribute>と[グローバリゼーションとローカリゼーション](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)です。  
  
   
  
## Examples  
 次のコード例のセット、<xref:System.Web.UI.WebControls.PasswordRecovery.SuccessText%2A>プロパティを「パスワードは、ファイル内の電子メール アドレスに送信されましたが」。  
  
 [!code-aspx-csharp[PasswordRecoverySuccessText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/PasswordRecoverySuccessText/CS/passwordrecoverysuccesstextcs.aspx#1)]
 [!code-aspx-vb[PasswordRecoverySuccessText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/PasswordRecoverySuccessText/VB/passwordrecoverysuccesstextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SuccessTextStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle SuccessTextStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle SuccessTextStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PasswordRecovery.SuccessTextStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>成功のビューに表示されるテキストの外観を定義するスタイル プロパティのコレクションへの参照を取得、<see cref="T:System.Web.UI.WebControls.PasswordRecovery" />コントロール。</summary>
        <value>参照、<see cref="T:System.Web.UI.WebControls.TableItemStyle" />成功ビューに表示されるテキストの外観を定義するプロパティを格納します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.PasswordRecovery.SuccessTextStyle%2A>プロパティの成功ビュー内のテキストの外観を定義する、<xref:System.Web.UI.WebControls.PasswordRecovery>コントロール。 このプロパティは読み取り専用です。ただしのプロパティを設定することができます、<xref:System.Web.UI.WebControls.Style>オブジェクトを返します。 フォームで宣言によってこれらのプロパティを設定することができます`Property-Subproperty`ここで、`Subproperty`のプロパティを表す、<xref:System.Web.UI.WebControls.Style>クラス (たとえば、 `SuccessTextStyle-ForeColor`)。 プログラムでは、フォームにもプロパティを設定することができます`Property.Subproperty`(たとえば、 `SuccessTextStyle.ForeColor`)。  
  
 一般的な設定には、カスタムの背景色には、テキストの色、フォントのプロパティが含まれます。  
  
 スタイルの設定、<xref:System.Web.UI.WebControls.PasswordRecovery.SuccessTextStyle%2A>のスタイルの設定とプロパティがマージされます、<xref:System.Web.UI.WebControls.PasswordRecovery>コントロール。 行った設定はすべて、<xref:System.Web.UI.WebControls.PasswordRecovery.SuccessTextStyle%2A>プロパティは、対応するプロパティの設定を上書き、<xref:System.Web.UI.WebControls.PasswordRecovery>コントロール。  
  
 次<xref:System.Web.UI.WebControls.PasswordRecovery>プロパティは<xref:System.Web.UI.WebControls.PasswordRecovery.SuccessTextStyle%2A>設定。  
  
-   <xref:System.Web.UI.WebControls.WebControl.BackColor%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.BorderColor%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.BorderStyle%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.BorderWidth%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.Enabled%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.Font%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.ForeColor%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.Height%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.ToolTip%2A>  
  
-   <xref:System.Web.UI.Control.Visible%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.Width%2A>  
  
 成功ビューの外観を定義するテンプレートを使用する場合、<xref:System.Web.UI.WebControls.PasswordRecovery>コントロール、<xref:System.Web.UI.WebControls.PasswordRecovery.SuccessTextStyle%2A>プロパティは影響を与えません。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.WebControls.PasswordRecovery.SuccessTextStyle%2A>の外観を変更するプロパティ、<xref:System.Web.UI.WebControls.PasswordRecovery.SuccessText%2A>プロパティです。  
  
 [!code-aspx-csharp[PasswordRecoverySuccessText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/PasswordRecoverySuccessText/CS/passwordrecoverysuccesstextcs.aspx#1)]
 [!code-aspx-vb[PasswordRecoverySuccessText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/PasswordRecoverySuccessText/VB/passwordrecoverysuccesstextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TagKey">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.HtmlTextWriterTag TagKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.HtmlTextWriterTag TagKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PasswordRecovery.TagKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterTag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.HtmlTextWriterTag" /> コントロールに対応する <see cref="T:System.Web.UI.WebControls.PasswordRecovery" /> 値を取得します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.PasswordRecovery" /> コントロールの <see cref="T:System.Web.UI.HtmlTextWriterTag" /> 値。 常に返します<see langword="HtmlTextWriterTag.Table." /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.PasswordRecovery.TagKey%2A>を決定するプロパティ、<xref:System.Web.UI.HtmlTextWriterTag>に関連付けられている値、<xref:System.Web.UI.WebControls.PasswordRecovery>コントロール。  
  
 <xref:System.Web.UI.WebControls.PasswordRecovery.TagKey%2A>プロパティでは、出力ストリームの適切な HTML マークアップを記述する、<xref:System.Web.UI.WebControls.PasswordRecovery>コントロール。  
  
 このプロパティは、主にコントロールの開発者によって使用されます。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>指定するには、このプロパティをオーバーライドすることができます<see cref="T:System.Web.UI.HtmlTextWriterTag" />派生したコントロールに使用する値。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="TextBoxStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style TextBoxStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style TextBoxStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PasswordRecovery.TextBoxStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ボックスのテキストの外観を定義するスタイル プロパティのコレクションへの参照を取得、<see cref="T:System.Web.UI.WebControls.PasswordRecovery" />コントロール。</summary>
        <value>参照、<see cref="T:System.Web.UI.WebControls.Style" />内のテキスト ボックスの外観を定義するプロパティを格納している、<see cref="T:System.Web.UI.WebControls.PasswordRecovery" />コントロール。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.PasswordRecovery.TextBoxStyle%2A>プロパティ内のテキスト ボックスの外観を定義する、<xref:System.Web.UI.WebControls.PasswordRecovery>コントロール。 このプロパティは読み取り専用です。ただしのプロパティを設定することができます、<xref:System.Web.UI.WebControls.Style>オブジェクトを返します。 フォームで宣言によってこれらのプロパティを設定することができます`Property-Subproperty`ここで、`Subproperty`のプロパティを表す、<xref:System.Web.UI.WebControls.Style>クラス (たとえば、 `TextBoxStyle-ForeColor`)。 プログラムでは、フォームにもプロパティを設定することができます`Property.Subproperty`(たとえば、 `TextBoxStyle.ForeColor`)。  
  
 一般的な設定には、カスタムの背景色には、テキストの色、フォントのプロパティが含まれます。  
  
 スタイルの設定、<xref:System.Web.UI.WebControls.PasswordRecovery.TextBoxStyle%2A>のスタイルの設定とプロパティがマージされます、<xref:System.Web.UI.WebControls.PasswordRecovery>コントロール。 行った設定はすべて、<xref:System.Web.UI.WebControls.PasswordRecovery.TextBoxStyle%2A>プロパティは、対応するプロパティの設定を上書き、<xref:System.Web.UI.WebControls.PasswordRecovery>コントロール。  
  
 次<xref:System.Web.UI.WebControls.PasswordRecovery>プロパティは<xref:System.Web.UI.WebControls.PasswordRecovery.TextBoxStyle%2A>設定。  
  
-   <xref:System.Web.UI.WebControls.WebControl.BackColor%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.BorderColor%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.BorderStyle%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.BorderWidth%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.Enabled%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.Font%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.ForeColor%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.Height%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.ToolTip%2A>  
  
-   <xref:System.Web.UI.Control.Visible%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.Width%2A>  
  
 外観を定義するテンプレートを使用する場合、<xref:System.Web.UI.WebControls.PasswordRecovery>コントロール、<xref:System.Web.UI.WebControls.PasswordRecovery.TextBoxStyle%2A>プロパティは影響を与えません。  
  
   
  
## Examples  
 次のコード例では、ユーザーが自分のユーザー名を入力する間違いを行う場合にユーザー名 テキスト ボックスの外観が変わります。  
  
> [!IMPORTANT]
>  この例には、潜在的なセキュリティの脅威は、ユーザー入力を受け付けるテキスト ボックスが含まれています。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、次を参照してください。[スクリプト悪用概要](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)です。  
  
 [!code-aspx-csharp[PasswordRecoveryTextBoxStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/PasswordRecoveryTextBoxStyle/CS/passwordrecoverytextboxstylecs.aspx#1)]
 [!code-aspx-vb[PasswordRecoveryTextBoxStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/PasswordRecoveryTextBoxStyle/VB/passwordrecoverytextboxstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextLayout">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.LoginTextLayout TextLayout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.LoginTextLayout TextLayout" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PasswordRecovery.TextLayout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.LoginTextLayout</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定を表示するかどうかを指定する値、<see cref="T:System.Web.UI.WebControls.PasswordRecovery" />水平または垂直レイアウトで制御します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.LoginTextLayout" /> 列挙値のいずれか。 既定値は、<see cref="F:System.Web.UI.WebControls.LoginTextLayout.TextOnLeft" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.PasswordRecovery.TextLayout%2A>プロパティは、場所を指定、<xref:System.Web.UI.WebControls.PasswordRecovery>コントロールには、応答、質問、およびユーザー名テキスト ボックスのフィールドのラベルが表示されます。 ときに、<xref:System.Web.UI.WebControls.PasswordRecovery.TextLayout%2A>プロパティに設定されている<xref:System.Web.UI.WebControls.LoginTextLayout.TextOnLeft>(既定)、フィールド ラベルは、テキスト ボックスの左側に表示されます。 ときに<xref:System.Web.UI.WebControls.PasswordRecovery.TextLayout%2A>に設定されている<xref:System.Web.UI.WebControls.LoginTextLayout.TextOnTop>、テキスト ボックス上のフィールド ラベルに表示されます。  
  
 ラベルのテキストが指定された、 <xref:System.Web.UI.WebControls.PasswordRecovery.AnswerLabelText%2A>、 <xref:System.Web.UI.WebControls.PasswordRecovery.QuestionLabelText%2A>、および<xref:System.Web.UI.WebControls.PasswordRecovery.UserNameLabelText%2A>プロパティ、それぞれします。 フィールドのラベルのスタイルの設定がで指定された、<xref:System.Web.UI.WebControls.PasswordRecovery.LabelStyle%2A>プロパティです。  
  
   
  
## Examples  
 次のコード例はどのように変化する、<xref:System.Web.UI.WebControls.PasswordRecovery.TextLayout%2A>プロパティの外観に影響を与える、<xref:System.Web.UI.WebControls.PasswordRecovery>コントロール。  
  
 [!code-aspx-csharp[PasswordRecoveryTextLayout#1](~/samples/snippets/csharp/VS_Snippets_WebNet/PasswordRecoveryTextLayout/CS/passwordrecoverytextlayoutcs.aspx#1)]
 [!code-aspx-vb[PasswordRecoveryTextLayout#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/PasswordRecoveryTextLayout/VB/passwordrecoverytextlayoutvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><see cref="P:System.Web.UI.WebControls.PasswordRecovery.TextLayout" />プロパティが有効に設定されていない<see cref="T:System.Web.UI.WebControls.LoginTextLayout" />列挙値。</exception>
      </Docs>
    </Member>
    <Member MemberName="TitleTextStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle TitleTextStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle TitleTextStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PasswordRecovery.TitleTextStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>表示されるタイトルのテキストの外観を定義するスタイル プロパティのコレクションへの参照を取得、<see cref="T:System.Web.UI.WebControls.PasswordRecovery" />コントロール。</summary>
        <value>参照、<see cref="T:System.Web.UI.WebControls.TableItemStyle" />のタイトル テキストの外観を定義するプロパティを格納している、<see cref="T:System.Web.UI.WebControls.PasswordRecovery" />コントロール。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.PasswordRecovery.TitleTextStyle%2A>プロパティの表示タイトル テキストの外観を定義する、<xref:System.Web.UI.WebControls.PasswordRecovery>コントロール。 このプロパティは読み取り専用です。ただしのプロパティを設定することができます、<xref:System.Web.UI.WebControls.Style>オブジェクトを返します。 フォームで宣言によってこれらのプロパティを設定することができます`Property-Subproperty`ここで、`Subproperty`のプロパティを表す、<xref:System.Web.UI.WebControls.Style>クラス (たとえば、 `TitleTextStyle-ForeColor`)。 プログラムでは、フォームにもプロパティを設定することができます`Property.Subproperty`(たとえば、 `TitleTextStyle.ForeColor`)。  
  
 一般的な設定には、カスタムの背景色には、テキストの色、フォントのプロパティが含まれます。  
  
 スタイルの設定、<xref:System.Web.UI.WebControls.PasswordRecovery.TitleTextStyle%2A>のスタイルの設定とプロパティがマージされます、<xref:System.Web.UI.WebControls.PasswordRecovery>コントロール。 行った設定はすべて、<xref:System.Web.UI.WebControls.PasswordRecovery.TitleTextStyle%2A>プロパティは、対応するプロパティの設定を上書き、<xref:System.Web.UI.WebControls.PasswordRecovery>コントロール。  
  
 次<xref:System.Web.UI.WebControls.PasswordRecovery>プロパティは<xref:System.Web.UI.WebControls.PasswordRecovery.TitleTextStyle%2A>設定。  
  
-   <xref:System.Web.UI.WebControls.WebControl.BackColor%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.BorderColor%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.BorderStyle%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.BorderWidth%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.Enabled%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.Font%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.ForeColor%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.Height%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.ToolTip%2A>  
  
-   <xref:System.Web.UI.Control.Visible%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.Width%2A>  
  
 外観を定義するテンプレートを使用する場合、<xref:System.Web.UI.WebControls.PasswordRecovery>コントロール、<xref:System.Web.UI.WebControls.PasswordRecovery.TitleTextStyle%2A>プロパティは影響を与えません。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.WebControls.PasswordRecovery.TitleTextStyle%2A>の外観を変更するプロパティ、<xref:System.Web.UI.WebControls.PasswordRecovery.UserNameTitleText%2A>と<xref:System.Web.UI.WebControls.PasswordRecovery.QuestionTitleText%2A>プロパティです。  
  
 [!code-aspx-csharp[PasswordRecoveryTitle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/PasswordRecoveryTitle/CS/passwordrecoverytitlecs.aspx#1)]
 [!code-aspx-vb[PasswordRecoveryTitle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/PasswordRecoveryTitle/VB/passwordrecoverytitlevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.PasswordRecovery.TrackViewState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>基本の実装<see cref="M:System.Web.UI.Control.TrackViewState" />メソッドです。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UserLookupError">
      <MemberSignature Language="C#" Value="public event EventHandler UserLookupError;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler UserLookupError" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.PasswordRecovery.UserLookupError" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>メンバーシップ プロバイダーは、ユーザーが入力したユーザー名を検索できない場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.PasswordRecovery.UserLookupError>イベントは、メンバーシップ プロバイダーは、ユーザーが入力したユーザー名を検索できない場合に発生します。  
  
 イベント処理の詳細については、次を参照してください。 [NIB: イベントとデリゲート](http://msdn.microsoft.com/en-us/d98fd58b-fa4f-4598-8378-addf4355a115)です。  
  
   
  
## Examples  
 次のコード例のハンドル、<xref:System.Web.UI.WebControls.PasswordRecovery.UserLookupError>イベントおよびリセット、<xref:System.Web.UI.WebControls.PasswordRecovery.UserNameTitleText%2A>プロパティの場合は、ユーザーが無効なユーザー名を入力します。  
  
 [!code-aspx-csharp[PasswordRecoveryTitle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/PasswordRecoveryTitle/CS/passwordrecoverytitlecs.aspx#1)]
 [!code-aspx-vb[PasswordRecoveryTitle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/PasswordRecoveryTitle/VB/passwordrecoverytitlevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UserName">
      <MemberSignature Language="C#" Value="public virtual string UserName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PasswordRecovery.UserName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはユーザー名 テキスト ボックスに表示されるテキストを設定します。</summary>
        <value>ユーザーが入力したユーザー名。 既定値は <see cref="F:System.String.Empty" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.PasswordRecovery.UserName%2A>プロパティは、ユーザーが入力したユーザー名を含むまたは<xref:System.String.Empty>ユーザーが名前を入力していない場合。 <xref:System.Web.UI.WebControls.PasswordRecovery.UserName%2A>プロパティは、ユーザー名ビューでのみ使用します。  
  
 <xref:System.Web.UI.WebControls.PasswordRecovery.UserName%2A>プロパティに保存されて、<xref:System.Web.UI.WebControls.PasswordRecovery>ページのビュー状態がになっている場合でも、サーバーへのラウンド トリップ間の値を保持するコントロールのコントロールの状態。 <xref:System.Web.UI.WebControls.PasswordRecovery>コントロールのプロパティなどのテキスト ボックス、によって表される<xref:System.Web.UI.WebControls.PasswordRecovery.UserName%2A>は、ページのライフ サイクルのすべてのフェーズ中にアクセスします。 コントロールのエンド ユーザーによって行われた変更を取得、<xref:System.Web.UI.WebControls.TextBox.TextChanged>のテキスト ボックスによってトリガーされるイベント。  
  
 スタイルの設定、<xref:System.Web.UI.WebControls.PasswordRecovery.TextBoxStyle%2A>プロパティ内のテキストの外観を定義する、<xref:System.Web.UI.WebControls.PasswordRecovery.UserName%2A>プロパティです。  
  
 テンプレートを割り当てると、<xref:System.Web.UI.WebControls.PasswordRecovery.UserName%2A>ユーザー名ビューを表示するプロパティ、<xref:System.Web.UI.WebControls.PasswordRecovery.UserName%2A>プロパティには、必須の入力値が割り当てられます<xref:System.Web.UI.WebControls.TextBox>コントロールを<xref:System.Web.UI.Control.ID%2A>プロパティが"UserName"に設定します。  
  
 このプロパティの値を設定すると、デザイナーのツールを使用して、リソース ファイルに自動的に保存できます。 詳細については、次を参照してください。<xref:System.ComponentModel.LocalizableAttribute>と[グローバリゼーションとローカリゼーション](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)です。  
  
   
  
## Examples  
 次のコード例の変更、<xref:System.Web.UI.WebControls.PasswordRecovery.UserName%2A>特定のメンバーシップ プロバイダーのプロパティです。  
  
> [!IMPORTANT]
>  この例には、潜在的なセキュリティの脅威は、ユーザー入力を受け付けるテキスト ボックスが含まれています。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、次を参照してください。[スクリプト悪用概要](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)です。  
  
 [!code-aspx-csharp[PasswordRecoveryMembershipProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/PasswordRecoveryMembershipProvider/CS/passwordrecoverymembershipprovidercs.aspx#1)]
 [!code-aspx-vb[PasswordRecoveryMembershipProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/PasswordRecoveryMembershipProvider/VB/passwordrecoverymembershipprovidervb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UserNameFailureText">
      <MemberSignature Language="C#" Value="public virtual string UserNameFailureText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserNameFailureText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PasswordRecovery.UserNameFailureText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または、ユーザーが入力したユーザー名が Web サイトの有効なユーザー名である場合に表示されるテキストを設定します。</summary>
        <value>ユーザーが入力したユーザー名が Web サイトの有効なユーザー名である場合に表示されるテキストです。 既定値は"できませんでした、情報にアクセスします。 もう一度やり直してください。"</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.PasswordRecovery.UserNameFailureText%2A>プロパティにはで定義されたメンバーシップ プロバイダーで認識されないユーザー名が入力されたときに表示されるエラー メッセージが含まれています、<xref:System.Web.UI.WebControls.PasswordRecovery.MembershipProvider%2A>プロパティです。  
  
 スタイルの設定、<xref:System.Web.UI.WebControls.PasswordRecovery.FailureTextStyle%2A>プロパティ内のテキストの外観を定義する、<xref:System.Web.UI.WebControls.PasswordRecovery.UserNameFailureText%2A>プロパティです。  
  
 テンプレートを割り当てると、<xref:System.Web.UI.WebControls.PasswordRecovery.UserNameTemplate%2A>プロパティ、<xref:System.Web.UI.WebControls.PasswordRecovery.UserNameFailureText%2A>で省略可能なプロパティが表示されます<xref:System.Web.UI.WebControls.Literal>コントロールを<xref:System.Web.UI.Control.ID%2A>プロパティを"FailureText"に設定します。  
  
 プロパティの既定のテキストは、サーバーのロケール設定に基づくローカライズされます。  
  
 このプロパティの値を設定すると、デザイナーのツールを使用して、リソース ファイルに自動的に保存できます。 詳細については、次を参照してください。<xref:System.ComponentModel.LocalizableAttribute>と[グローバリゼーションとローカリゼーション](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)です。  
  
   
  
## Examples  
 次のコード例のセット、<xref:System.Web.UI.WebControls.PasswordRecovery.UserNameFailureText%2A>プロパティを"ユーザー名が見つかりませんでした。 もう一度やり直してください。"  
  
 [!code-aspx-csharp[PasswordRecoveryFailureText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/PasswordRecoveryFailureText/CS/passwordrecoveryfailuretextcs.aspx#1)]
 [!code-aspx-vb[PasswordRecoveryFailureText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/PasswordRecoveryFailureText/VB/passwordrecoveryfailuretextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UserNameInstructionText">
      <MemberSignature Language="C#" Value="public virtual string UserNameInstructionText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserNameInstructionText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PasswordRecovery.UserNameInstructionText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定のユーザー名ビューに表示されるテキストを<see cref="T:System.Web.UI.WebControls.PasswordRecovery" />コントロールをユーザー名を入力するように指示します。</summary>
        <value>ユーザー名ビューに表示する指示テキストです。 既定値は「ユーザー名を入力パスワードを取得します」</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.PasswordRecovery.UserNameInstructionText%2A>プロパティ ビューに表示されて、ユーザー名を使用する方法をユーザーに説明する、<xref:System.Web.UI.WebControls.PasswordRecovery>コントロール。  
  
 スタイルの設定、<xref:System.Web.UI.WebControls.PasswordRecovery.InstructionTextStyle%2A>プロパティ内のテキストの外観を定義する、<xref:System.Web.UI.WebControls.PasswordRecovery.UserNameInstructionText%2A>プロパティです。  
  
 割り当てられたテンプレートを使用する場合、 <xref:System.Web.UI.WebControls.PasswordRecovery.UserNameTemplate%2A> 、プロパティ、<xref:System.Web.UI.WebControls.PasswordRecovery.UserNameInstructionText%2A>プロパティは表示されません。  
  
 プロパティの既定のテキストは、サーバーのロケール設定に基づくローカライズされます。  
  
 このプロパティの値を設定すると、デザイナーのツールを使用して、リソース ファイルに自動的に保存できます。 詳細については、次を参照してください。<xref:System.ComponentModel.LocalizableAttribute>と[グローバリゼーションとローカリゼーション](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)です。  
  
   
  
## Examples  
 次のコード例のセット、<xref:System.Web.UI.WebControls.PasswordRecovery.UserNameInstructionText%2A>プロパティを「Web サイトのユーザー名を入力します」。  
  
 [!code-aspx-csharp[PasswordRecoveryInstructionText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/PasswordRecoveryInstructionText/CS/passwordrecoveryinstructiontextcs.aspx#1)]
 [!code-aspx-vb[PasswordRecoveryInstructionText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/PasswordRecoveryInstructionText/VB/passwordrecoveryinstructiontextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UserNameLabelText">
      <MemberSignature Language="C#" Value="public virtual string UserNameLabelText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserNameLabelText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PasswordRecovery.UserNameLabelText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはユーザー名 テキスト ボックスのラベルのテキストを設定します。</summary>
        <value>ユーザー名 テキスト ボックスのラベルです。 既定値は"ユーザー名:"です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.PasswordRecovery.UserNameLabelText%2A>プロパティにはラベル テキストが含まれています、<xref:System.Web.UI.WebControls.PasswordRecovery.UserName%2A>テキスト ボックス。  
  
 スタイルの設定、<xref:System.Web.UI.WebControls.PasswordRecovery.LabelStyle%2A>プロパティの外観を定義する、<xref:System.Web.UI.WebControls.PasswordRecovery.UserNameLabelText%2A>プロパティです。  
  
 テンプレートを割り当てると、<xref:System.Web.UI.WebControls.PasswordRecovery.UserNameTemplate%2A>プロパティ、<xref:System.Web.UI.WebControls.PasswordRecovery.UserNameLabelText%2A>プロパティは影響を与えません。  
  
 プロパティの既定のテキストは、サーバーのロケール設定に基づくローカライズされます。  
  
 このプロパティの値を設定すると、デザイナーのツールを使用して、リソース ファイルに自動的に保存できます。 詳細については、次を参照してください。<xref:System.ComponentModel.LocalizableAttribute>と[グローバリゼーションとローカリゼーション](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)です。  
  
   
  
## Examples  
 次のコード例のセット、<xref:System.Web.UI.WebControls.PasswordRecovery.UserNameLabelText%2A>プロパティを"ユーザー名:"です。  
  
 [!code-aspx-csharp[PasswordRecoveryLabelText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/PasswordRecoveryLabelText/CS/passwordrecoverylabeltextcs.aspx#1)]
 [!code-aspx-vb[PasswordRecoveryLabelText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/PasswordRecoveryLabelText/VB/passwordrecoverylabeltextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UserNameRequiredErrorMessage">
      <MemberSignature Language="C#" Value="public virtual string UserNameRequiredErrorMessage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserNameRequiredErrorMessage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PasswordRecovery.UserNameRequiredErrorMessage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定、ユーザーがユーザー名 テキスト ボックスを空のまま表示されるエラー メッセージ。</summary>
        <value>ユーザー名 テキスト ボックスが空の場合に表示されるエラー メッセージ。 既定値は、「ユーザー名」です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.PasswordRecovery.UserNameRequiredErrorMessage%2A>プロパティには、いずれかで表示するエラー メッセージが含まれています。<xref:System.Web.UI.WebControls.ValidationSummary>と同じページ上のコントロール、<xref:System.Web.UI.WebControls.PasswordRecovery>コントロール。  
  
 プロパティの既定のテキストは、サーバーのロケール設定に基づくローカライズされます。  
  
 このプロパティの値を設定すると、デザイナーのツールを使用して、リソース ファイルに自動的に保存できます。 詳細については、次を参照してください。<xref:System.ComponentModel.LocalizableAttribute>と[グローバリゼーションとローカリゼーション](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)です。  
  
   
  
## Examples  
 次のコード例の変更、<xref:System.Web.UI.WebControls.PasswordRecovery.UserNameRequiredErrorMessage%2A>プロパティに表示される、<xref:System.Web.UI.WebControls.ValidationSummary>パスワードの回復 ページで制御します。  
  
 [!code-aspx-csharp[PasswordRecoveryRequiredErrorMessage#1](~/samples/snippets/csharp/VS_Snippets_WebNet/PasswordRecoveryRequiredErrorMessage/CS/passwordrecoveryrequirederrrormessagecs.aspx#1)]
 [!code-aspx-vb[PasswordRecoveryRequiredErrorMessage#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/PasswordRecoveryRequiredErrorMessage/VB/passwordrecoveryrequirederrrormessagevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UserNameTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate UserNameTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate UserNameTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PasswordRecovery.UserNameTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.PasswordRecovery))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定のユーザー名ビューを表示するために使用するテンプレート、<see cref="T:System.Web.UI.WebControls.PasswordRecovery" />コントロール。</summary>
        <value><see cref="T:System.Web.UI.ITemplate" />を表示するためのテンプレートを含む、<see cref="T:System.Web.UI.WebControls.PasswordRecovery" />ユーザー名ビュー内のコントロールです。 既定値は、<see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.PasswordRecovery.UserNameTemplate%2A>プロパティには外観を定義するテンプレートが含まれています、<xref:System.Web.UI.WebControls.PasswordRecovery>ユーザー名ビュー内のコントロールです。  
  
 次の表には、ユーザー名ビューのテンプレートで使用されている必須および省略可能なコントロールが一覧表示します。  
  
|ID またはコマンドの名前|コントロールの種類|必須/オプション|  
|------------------------|------------------|------------------------|  
|`UserName`|実装する任意のコントロール<xref:System.Web.UI.IEditableTextControl>です。|Optional|  
|`Submit`|イベントのバブルの原因となるコントロールです。|省略可能|  
  
 送信コントロールが原因となるイベント バブルなど、任意のコントロールを指定できます<xref:System.Web.UI.WebControls.Button>、 <xref:System.Web.UI.WebControls.LinkButton>、または<xref:System.Web.UI.WebControls.ImageButton>です。 コントロールの`CommandName`プロパティを"Submit"に設定する必要があります。  
  
 <xref:System.Web.UI.WebControls.PasswordRecovery>スローを制御、<xref:System.Web.HttpException>ユーザー名ビューには、必要なコントロールが含まれていない場合は例外です。 間違った型; のコントロールにオプションのコントロール ID を提供する場合に例外がスローされません。ただし、コントロール、その後では無視されます、<xref:System.Web.UI.WebControls.PasswordRecovery>コントロール。  
  
 ユーザー名ビューの外観を定義するテンプレートを使用するときに、次のプロパティのみがコントロールの動作に影響します。  
  
-   すべてのプロパティが継承<xref:System.Web.UI.WebControls.WebControl>(を参照してください、<xref:System.Web.UI.WebControls.PasswordRecovery>制御メンバー テーブル)。  
  
-   <xref:System.Web.UI.WebControls.PasswordRecovery.GeneralFailureText%2A>。  
  
-   <xref:System.Web.UI.WebControls.PasswordRecovery.MailDefinition%2A>。  
  
-   <xref:System.Web.UI.WebControls.PasswordRecovery.MembershipProvider%2A>。  
  
-   <xref:System.Web.UI.WebControls.PasswordRecovery.SuccessPageUrl%2A>。  
  
-   <xref:System.Web.UI.WebControls.PasswordRecovery.SuccessTemplate%2A>。  
  
-   <xref:System.Web.UI.WebControls.PasswordRecovery.UserName%2A>。  
  
-   <xref:System.Web.UI.WebControls.PasswordRecovery.UserNameFailureText%2A>。  
  
 その他のすべてのプロパティは、のユーザー名ビューのテンプレートを使用するときに、アクティブ、<xref:System.Web.UI.WebControls.PasswordRecovery>コントロール。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.WebControls.PasswordRecovery.UserNameTemplate%2A>のユーザー名ビューのテンプレートを定義するプロパティ、<xref:System.Web.UI.WebControls.PasswordRecovery>コントロールをユーザーが自分のログイン情報を含むドメインを選択できるようにします。  
  
> [!IMPORTANT]
>  この例には、潜在的なセキュリティの脅威は、ユーザー入力を受け付けるテキスト ボックスが含まれています。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、次を参照してください。[スクリプト悪用概要](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)です。  
  
 [!code-aspx-csharp[PasswordRecoveryMembershipProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/PasswordRecoveryMembershipProvider/CS/passwordrecoverymembershipprovidercs.aspx#1)]
 [!code-aspx-vb[PasswordRecoveryMembershipProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/PasswordRecoveryMembershipProvider/VB/passwordrecoverymembershipprovidervb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UserNameTemplateContainer">
      <MemberSignature Language="C#" Value="public System.Web.UI.Control UserNameTemplateContainer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Control UserNameTemplateContainer" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PasswordRecovery.UserNameTemplateContainer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コンテナーを取得、<see cref="T:System.Web.UI.WebControls.PasswordRecovery" />のインスタンスを作成するためのコントロール、<see cref="P:System.Web.UI.WebControls.PasswordRecovery.UserNameTemplate" />テンプレート。 このプロパティは、子コントロールにプログラムでアクセスを提供します。</summary>
        <value><see cref="T:System.Web.UI.Control" /> を格納している <see cref="P:System.Web.UI.WebControls.PasswordRecovery.UserNameTemplate" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティは、プログラムにアクセスする子コントロール テンプレートを使用するときに使用できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UserNameTitleText">
      <MemberSignature Language="C#" Value="public virtual string UserNameTitleText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserNameTitleText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PasswordRecovery.UserNameTitleText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定のユーザー名ビューのタイトル、<see cref="T:System.Web.UI.WebControls.PasswordRecovery" />コントロール。</summary>
        <value>ユーザー名ビューのタイトル。 既定値は「パスワードを忘れた場合ですか?」</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.PasswordRecovery.UserNameTitleText%2A>プロパティには、ユーザーに自分のユーザー名の入力を要求するユーザー名ビューのタイトルとして表示するテキストが含まれています。  
  
 スタイルの設定、<xref:System.Web.UI.WebControls.PasswordRecovery.TitleTextStyle%2A>プロパティ内のテキストの外観を定義する、<xref:System.Web.UI.WebControls.PasswordRecovery.UserNameTitleText%2A>プロパティです。  
  
 使用すると、<xref:System.Web.UI.WebControls.PasswordRecovery.UserNameTemplate%2A>ユーザー名ビューの外観を定義するプロパティ、<xref:System.Web.UI.WebControls.PasswordRecovery.UserNameTitleText%2A>プロパティは影響を与えません。  
  
 プロパティの既定のテキストは、サーバーのロケール設定に基づくローカライズされます。  
  
 このプロパティの値を設定すると、デザイナーのツールを使用して、リソース ファイルに自動的に保存できます。 詳細については、次を参照してください。<xref:System.ComponentModel.LocalizableAttribute>と[グローバリゼーションとローカリゼーション](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)です。  
  
   
  
## Examples  
 次のコード例のセット、<xref:System.Web.UI.WebControls.PasswordRecovery.UserNameTitleText%2A>プロパティです。 ユーザーが、有効なユーザー名を入力していない場合、<xref:System.Web.UI.WebControls.PasswordRecovery.UserNameTitleText%2A>でプロパティをリセット、<xref:System.Web.UI.WebControls.PasswordRecovery.UserLookupError>イベント。  
  
 [!code-aspx-csharp[PasswordRecoveryTitle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/PasswordRecoveryTitle/CS/passwordrecoverytitlecs.aspx#1)]
 [!code-aspx-vb[PasswordRecoveryTitle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/PasswordRecoveryTitle/VB/passwordrecoverytitlevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidatorTextStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style ValidatorTextStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style ValidatorTextStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PasswordRecovery.ValidatorTextStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コレクションへの参照を取得<see cref="T:System.Web.UI.WebControls.Style" />いずれかに関連付けられているエラー メッセージの外観を定義するプロパティの入力で使用される検証、<see cref="T:System.Web.UI.WebControls.PasswordRecovery" />コントロール。</summary>
        <value>参照、<see cref="T:System.Web.UI.WebControls.Style" />によって使用される入力の検証に関連付けられているエラー メッセージの外観を定義する、<see cref="T:System.Web.UI.WebControls.PasswordRecovery" />コントロール。 既定値は、<see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.PasswordRecovery.ValidatorTextStyle%2A>プロパティで検証エラー メッセージの外観を定義する、<xref:System.Web.UI.WebControls.PasswordRecovery>コントロール。 このプロパティは読み取り専用です。ただしのプロパティを設定することができます、<xref:System.Web.UI.WebControls.Style>オブジェクトを返します。 フォームで宣言によってこれらのプロパティを設定することができます`Property-Subproperty`ここで、`Subproperty`のプロパティを表す、<xref:System.Web.UI.WebControls.Style>クラス (たとえば、 `FailureTextStyle-ForeColor`)。 プロパティをプログラムで設定するには、フォームで`Property.Subproperty`(たとえば、 `FailureTextStyle.ForeColor`)。  
  
 一般的な設定には、カスタムの背景色には、テキストの色、フォントのプロパティが含まれます。  
  
 スタイルの設定、<xref:System.Web.UI.WebControls.PasswordRecovery.ValidatorTextStyle%2A>のスタイルの設定とプロパティがマージされます、<xref:System.Web.UI.WebControls.PasswordRecovery>コントロール。 行った設定はすべて、<xref:System.Web.UI.WebControls.PasswordRecovery.ValidatorTextStyle%2A>プロパティは、対応するプロパティの設定を上書き、<xref:System.Web.UI.WebControls.PasswordRecovery>コントロール。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VerifyingAnswer">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.LoginCancelEventHandler VerifyingAnswer;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.LoginCancelEventHandler VerifyingAnswer" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.PasswordRecovery.VerifyingAnswer" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.LoginCancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザーがパスワードの回復の確認の質問に対する回答を送信されるときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.PasswordRecovery.VerifyingAnswer>イベントは、ユーザーがパスワードの確認の質問に対する回答を送信した後、サーバーで発生します。 このイベントを使用して、ユーザーによって送信、メンバーシップ プロバイダーの例をすべて大文字または小文字に変換することで応答を準備することができます。  
  
 <xref:System.Web.UI.WebControls.PasswordRecovery>最初の発生を制御、<xref:System.Web.UI.WebControls.PasswordRecovery.VerifyingAnswer>でメンバーシップ プロバイダーが指定されたイベント、および使用して、 <xref:System.Web.UI.WebControls.PasswordRecovery.MembershipProvider%2A> Web サイトに格納されているパスワードを使用して、ユーザーが入力した答えを比較するプロパティです。  
  
 イベント処理の詳細については、次を参照してください。 [NIB: イベントとデリゲート](http://msdn.microsoft.com/en-us/d98fd58b-fa4f-4598-8378-addf4355a115)です。  
  
   
  
## Examples  
 次のコード例のハンドル、<xref:System.Web.UI.WebControls.PasswordRecovery.VerifyingAnswer>イベントと、表示されている変更<xref:System.Web.UI.WebControls.PasswordRecovery.UserName%2A>プロパティです。  
  
> [!IMPORTANT]
>  この例には、潜在的なセキュリティの脅威は、ユーザー入力を受け付けるテキスト ボックスが含まれています。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、次を参照してください。[スクリプト悪用概要](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)です。  
  
 [!code-aspx-csharp[PasswordRecoveryMembershipProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/PasswordRecoveryMembershipProvider/CS/passwordrecoverymembershipprovidercs.aspx#1)]
 [!code-aspx-vb[PasswordRecoveryMembershipProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/PasswordRecoveryMembershipProvider/VB/passwordrecoverymembershipprovidervb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VerifyingUser">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.LoginCancelEventHandler VerifyingUser;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.LoginCancelEventHandler VerifyingUser" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.PasswordRecovery.VerifyingUser" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.LoginCancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>メンバーシップ プロバイダーがユーザー名を検証する前に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.PasswordRecovery.VerifyingUser>ユーザー名は、ユーザー名が有効かどうかを判断するメンバーシップ プロバイダーに送信される前に、サーバーにイベントが発生します。 このイベントを使用して、変換することをすべて大文字または小文字、またはユーザー名が電子メール アドレスなどの特定の形式であることを確認するなど、ユーザー名で必要な処理を実行します。  
  
 <xref:System.Web.UI.WebControls.PasswordRecovery>最初の発生を制御、<xref:System.Web.UI.WebControls.PasswordRecovery.VerifyingUser>でメンバーシップ プロバイダーが指定されたイベント、および使用して、<xref:System.Web.UI.WebControls.PasswordRecovery.MembershipProvider%2A>プロパティを入力したユーザー名が Web サイトの有効なユーザー名であるかどうかを判別します。 有効期限、およびパスワード検証の質問は、メンバーシップ プロバイダーは、パスワードの質問と回答をサポートする Web サイトから返される場合、<xref:System.Web.UI.WebControls.PasswordRecovery>コントロール質問ビューが表示されます。 ユーザー名が有効でない場合のテキスト、<xref:System.Web.UI.WebControls.PasswordRecovery.GeneralFailureText%2A>ユーザーが別のユーザー名を入力できるように、ユーザー名ビューのプロパティが表示されます。  
  
 メンバーシップ プロバイダーがパスワードの質問と回答をサポートしていない場合、<xref:System.Web.UI.WebControls.PasswordRecovery.SendingMail>イベントが発生し、新規または回復パスワードを持つユーザーに電子メールを送信します。  
  
 イベント処理の詳細については、次を参照してください。 [NIB: イベントとデリゲート](http://msdn.microsoft.com/en-us/d98fd58b-fa4f-4598-8378-addf4355a115)です。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.WebControls.PasswordRecovery.VerifyingUser>送信されたユーザー名が有効な電子メール アドレスとして書式設定するかどうかをチェックするイベントです。 ユーザー名が正しくフォーマットされていない場合、<xref:System.Web.UI.WebControls.PasswordRecovery.UserNameInstructionText%2A>エラーを表示するプロパティを変更します。  
  
 [!code-aspx-csharp[PasswordRecoveryBeforeUserLookup#1](~/samples/snippets/csharp/VS_Snippets_WebNet/PasswordRecoveryBeforeUserLookup/CS/passwordrecoverybeforeuserlookupcs.aspx#1)]
 [!code-aspx-vb[PasswordRecoveryBeforeUserLookup#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/PasswordRecoveryBeforeUserLookup/VB/passwordrecoverybeforeuserlookupvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
