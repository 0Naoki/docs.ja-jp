<Type Name="EntityDataSourceContextCreatingEventArgs" FullName="System.Web.UI.WebControls.EntityDataSourceContextCreatingEventArgs">
  <TypeSignature Language="C#" Value="public class EntityDataSourceContextCreatingEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EntityDataSourceContextCreatingEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.EntityDataSourceContextCreatingEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Entity</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><see cref="E:System.Web.UI.WebControls.EntityDataSource.ContextCreating" /> イベントのデータを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.EntityDataSourceContextCreatingEventArgs>オブジェクトには、<xref:System.Web.UI.WebControls.EntityDataSourceContextCreatingEventArgs.Context%2A>実行時間の長いに割り当てることができるプロパティ<xref:System.Data.Objects.ObjectContext>のハンドラーで、<xref:System.Web.UI.WebControls.EntityDataSourceView.ContextCreating>イベント。 詳細については、次を参照してください。[オブジェクト コンテキストのライフ サイクル管理 (EntityDataSource)](http://msdn.microsoft.com/en-us/67bc2486-112c-47c3-b23f-0297f7ac2160)です。  
  
   
  
## Examples  
 次の例では、作成、<xref:System.Data.Objects.ObjectContext>の変数、<xref:System.Web.UI.Page>オブジェクトおよびへの割り当て、<xref:System.Web.UI.WebControls.EntityDataSourceContextCreatingEventArgs.Context%2A>のプロパティ、<xref:System.Web.UI.WebControls.EntityDataSourceContextCreatingEventArgs>オブジェクト。  
  
```  
public partial class _Default : System.Web.UI.Page  
    {  
        AdventureWorksModel.AdventureWorksEntities objCtx =  
            new AdventureWorksModel.AdventureWorksEntities();  
  
        protected void EntityDataSource2_ContextCreating(object sender,   
            EntityDataSourceContextCreatingEventArgs e)  
        {  
            e.Context = objCtx;  
        }  
    }  
  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectContext Context { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Objects.ObjectContext Context" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EntityDataSourceContextCreatingEventArgs.Context" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得、<see cref="T:System.Data.Objects.ObjectContext" />データ ソースで使用されています。</summary>
        <value>データ ソースによって使用されるオブジェクトのコンテキスト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.EntityDataSourceContextCreatingEventArgs.Context%2A>プロパティは、実行時間の長いに割り当てることが<xref:System.Data.Objects.ObjectContext>のハンドラーで、<xref:System.Web.UI.WebControls.EntityDataSourceView.ContextCreating>イベント。 詳細については、次を参照してください。[オブジェクト コンテキストのライフ サイクル管理 (EntityDataSource)](http://msdn.microsoft.com/en-us/67bc2486-112c-47c3-b23f-0297f7ac2160)です。  
  
   
  
## Examples  
 次の例では、作成、<xref:System.Data.Objects.ObjectContext>の変数、<xref:System.Web.UI.Page>オブジェクトおよびへの割り当て、<xref:System.Web.UI.WebControls.EntityDataSourceContextCreatingEventArgs.Context%2A>のプロパティ、<xref:System.Web.UI.WebControls.EntityDataSourceContextCreatingEventArgs>オブジェクト。  
  
```  
public partial class _Default : System.Web.UI.Page  
    {  
        AdventureWorksModel.AdventureWorksEntities objCtx =  
            new AdventureWorksModel.AdventureWorksEntities();  
  
        protected void EntityDataSource2_ContextCreating(object sender,   
            EntityDataSourceContextCreatingEventArgs e)  
        {  
            e.Context = objCtx;  
        }  
    }  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
