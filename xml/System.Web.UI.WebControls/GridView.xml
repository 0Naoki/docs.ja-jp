<Type Name="GridView" FullName="System.Web.UI.WebControls.GridView">
  <TypeSignature Language="C#" Value="public class GridView : System.Web.UI.WebControls.CompositeDataBoundControl, System.Web.UI.ICallbackEventHandler, System.Web.UI.IDataKeysControl, System.Web.UI.IPostBackEventHandler, System.Web.UI.WebControls.ICallbackContainer, System.Web.UI.WebControls.IDataBoundListControl, System.Web.UI.WebControls.IFieldControl, System.Web.UI.WebControls.IPersistedSelector, System.Web.UI.WebControls.IPostBackContainer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit GridView extends System.Web.UI.WebControls.CompositeDataBoundControl implements class System.Web.UI.ICallbackEventHandler, class System.Web.UI.IDataKeysControl, class System.Web.UI.IPostBackEventHandler, class System.Web.UI.WebControls.ICallbackContainer, class System.Web.UI.WebControls.IDataBoundControl, class System.Web.UI.WebControls.IDataBoundListControl, class System.Web.UI.WebControls.IFieldControl, class System.Web.UI.WebControls.IPersistedSelector, class System.Web.UI.WebControls.IPostBackContainer" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.GridView" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.CompositeDataBoundControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.ICallbackEventHandler</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IDataKeysControl</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackEventHandler</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.ICallbackContainer</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.IDataBoundListControl</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.IFieldControl</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.IPersistedSelector</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.IPostBackContainer</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("SelectedIndexChanged")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.GridViewDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ControlValueProperty("SelectedValue")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.DataKeyProperty("SelectedPersistedDataKey")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.SupportsEventValidation</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>各列がフィールドを表し、各行がレコードを表す表にデータ ソースの値を表示します。 <see cref="T:System.Web.UI.WebControls.GridView" />コントロールでは、選択、並べ替え、およびこれらの項目を編集することができます。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このトピックの内容  
  
-   [はじめに](#introduction)  
  
-   [列フィールド](#column_fields)  
  
-   [データへのバインド](#binding_to_data)  
  
-   [データ操作](#data_operations)  
  
-   [ユーザー インターフェイスのカスタマイズ](#customizing_the_user_interface)  
  
-   [イベント](#events)  
  
-   [ユーザー補助](#accessibility)  
  
-   [宣言型の構文](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>はじめに  
 <xref:System.Web.UI.WebControls.GridView>テーブルにデータ ソースの値を表示するコントロールを使用します。 各列は、フィールドを表し、各行がレコードを表します。 <xref:System.Web.UI.WebControls.GridView>コントロールは、次の機能をサポートします。  
  
-   など、データ ソース コントロールにバインド<xref:System.Web.UI.WebControls.SqlDataSource>です。  
  
-   組み込みの並べ替え機能します。  
  
-   組み込みは、更新し、機能を削除します。  
  
-   組み込みのページング機能。  
  
-   組み込みの行の選択機能。  
  
-   プログラムによるアクセスを<xref:System.Web.UI.WebControls.GridView>オブジェクト モデルを動的にプロパティを設定、イベントを処理します。  
  
-   複数のキー フィールドです。  
  
-   ハイパーリンク列の複数のデータ フィールドです。  
  
-   テーマとスタイルを使用した外観のカスタマイズ。  
  
-   ASP.NET で使用できるその他のデータ バインド コントロールの概要については、次を参照してください。[データ バインドされた Web サーバー コントロール](http://msdn.microsoft.com/library/f9cf026e-d8b8-49f8-a3c4-64de2edbbb96)です。  
  
> [!NOTE]
>  慣れている場合、<xref:System.Web.UI.WebControls.DataGrid>から .NET Framework version 1.0 では、コントロール、<xref:System.Web.UI.WebControls.GridView>コントロールの後継となるは、<xref:System.Web.UI.WebControls.DataGrid>コントロール。  
  
<a name="column_fields"></a>   
## <a name="column-fields"></a>列フィールド  
 内の各列、<xref:System.Web.UI.WebControls.GridView>コントロールがによって表される、<xref:System.Web.UI.WebControls.DataControlField>オブジェクト。 既定では、<xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A>プロパティに設定されている`true`、作成する、<xref:System.Web.UI.WebControls.AutoGeneratedField>オブジェクト データ ソース内の各フィールドです。 各フィールドが内の列として表示し、<xref:System.Web.UI.WebControls.GridView>データ ソース内の各フィールドが表示される順序で制御します。  
  
 フィールドに表示する列を制御することができますも手動で、<xref:System.Web.UI.WebControls.GridView>コントロールを設定して、<xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A>プロパティを`false`と列のフィールド コレクションを定義します。 別の列フィールドの種類は、コントロール内の列の動作を決定します。 次の表は、使用できる別の列フィールドの種類を一覧表示します。  
  
|列フィールドの種類|説明|  
|-----------------------|-----------------|  
|<xref:System.Web.UI.WebControls.BoundField>|データ ソースのフィールドの値を表示します。 これは、既定の列の種類、<xref:System.Web.UI.WebControls.GridView>コントロール。|  
|<xref:System.Web.UI.WebControls.ButtonField>|内の各項目のコマンド ボタンを表示、<xref:System.Web.UI.WebControls.GridView>コントロール。 これにより、追加または削除 ボタンなどのカスタム ボタン コントロールの列を作成することができます。|  
|<xref:System.Web.UI.WebControls.CheckBoxField>|内の各項目のチェック ボックスを表示、<xref:System.Web.UI.WebControls.GridView>コントロール。 通常、この列フィールドの種類は、ブール値を持つフィールドを表示する場合に使用されます。|  
|<xref:System.Web.UI.WebControls.CommandField>|定義済みの選択 を実行するコマンド ボタンの表示、編集または削除操作です。|  
|<xref:System.Web.UI.WebControls.HyperLinkField>|ハイパーリンクとして、データ ソースのフィールドの値を表示します。 この列のフィールド型では、2 番目のフィールドをハイパーリンクの URL にバインドすることができます。|  
|<xref:System.Web.UI.WebControls.ImageField>|内の各項目のイメージを表示、<xref:System.Web.UI.WebControls.GridView>コントロール。|  
|<xref:System.Web.UI.WebControls.TemplateField>|項目ごとにユーザー定義のコンテンツを表示、<xref:System.Web.UI.WebControls.GridView>指定したテンプレートに応じてコントロール。 この列のフィールド型では、列のカスタム フィールドを作成することができます。|  
  
 列のフィールド コレクションを宣言して定義するに最初に追加の開閉`<Columns>`タグ、開始タグと終了タグの間、<xref:System.Web.UI.WebControls.GridView>コントロール。 次に、開始タグと終了の間に挿入する列フィールドを一覧表示`<Columns>`タグ。 指定された列を追加、<xref:System.Web.UI.WebControls.GridView.Columns%2A>順序でコレクションが一覧表示します。 <xref:System.Web.UI.WebControls.GridView.Columns%2A>コレクションはすべて、列が、コントロール内のフィールドし、列のフィールドをプログラムで管理することができます、格納、<xref:System.Web.UI.WebControls.GridView>コントロール。  
  
 明示的に宣言された列のフィールドは、自動的に生成された列のフィールドと共に表示できます。 両方を使用する場合に最初に明示的に宣言された列のフィールドがレンダリング後に自動的に生成される列フィールドがされます。  
  
> [!NOTE]
>  自動的に生成される列フィールドは追加されません、<xref:System.Web.UI.WebControls.GridView.Columns%2A>コレクション。  
  
<a name="binding_to_data"></a>   
## <a name="binding-to-data"></a>データへのバインド  
 <xref:System.Web.UI.WebControls.GridView>コントロールをデータ ソース コントロールにバインドできる (など、<xref:System.Web.UI.WebControls.SqlDataSource>コントロールまたは<xref:System.Web.UI.WebControls.ObjectDataSource>コントロール) を実装する任意のデータ ソースのコレクションに、または、<xref:System.Collections.IEnumerable?displayProperty=nameWithType>インターフェイスは、よう<xref:System.Data.DataView?displayProperty=nameWithType>、 <xref:System.Collections.ArrayList?displayProperty=nameWithType>、 <xref:System.Collections.Generic.List%601?displayProperty=nameWithType>、または他のコレクション型。 使用して次のいずれかのバインド、<xref:System.Web.UI.WebControls.GridView>適切なデータ ソースの種類を制御します。  
  
-   データ ソース コントロールにバインドするには、設定、<xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A>のプロパティ、<xref:System.Web.UI.WebControls.GridView>コントロールを<xref:System.Web.UI.Control.ID%2A>データ ソース コントロールの値。 <xref:System.Web.UI.WebControls.GridView>コントロールに自動的に指定されたデータ ソース コントロールにバインドできますを利用してデータ ソースの並べ替え、更新、削除、およびページングを実行するコントロールの機能です。 これは、データにバインドする推奨される方法です。  
  
-   実装するデータ ソースにバインドする、<xref:System.Collections.IEnumerable?displayProperty=nameWithType>インターフェイス、プログラムで設定、<xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A>のプロパティ、<xref:System.Web.UI.WebControls.GridView>データ ソースを制御し、呼び出す、<xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A>メソッドです。 このメソッドを使用する場合、<xref:System.Web.UI.WebControls.GridView>コントロールでは組み込みの並べ替え、update、delete、およびページング機能を提供しません。 適切なイベントを使用してこの機能を提供する必要があります。  
  
 データ バインディングの詳細については、次を参照してください。 [ASP.NET データ アクセス コンテンツ マップ](http://msdn.microsoft.com/en-us/f9219396-a0fa-481f-894d-e3d9c67d64f2)です。  
  
> [!NOTE]
>  このコントロールは、悪意のあるクライアント スクリプトが含まれる可能性があります、ユーザー入力を表示する使用できます。 スクリプトの実行可能ファイル、SQL ステートメント、またはその他のコードをアプリケーションに表示する前に、クライアントから送信される情報を確認します。 可能な限り、値が HTML でエンコードされたこのコントロールに表示される前に強くお勧め (、<xref:System.Web.UI.WebControls.BoundField>クラスの既定値を HTML エンコード)。 ASP.NET は、入力要求の検証機能があり、ユーザー入力の中のスクリプトのブロックと HTML を提供します。 検証サーバー コントロールは、ユーザー入力を評価するも提供されます。 詳細については、次を参照してください。[検証コントロールの概要](http://msdn.microsoft.com/en-us/3c0e7514-cff2-4bed-936d-ee3f7b740190)です。  
  
<a name="data_operations"></a>   
## <a name="data-operations"></a>データ操作  
 <xref:System.Web.UI.WebControls.GridView>コントロールは、並べ替え、更新、削除、選択、およびコントロール内の項目を複数のページをユーザーに許可する多くの組み込み機能を提供します。 ときに、<xref:System.Web.UI.WebControls.GridView>コントロールがデータ ソース コントロールにバインドされている、<xref:System.Web.UI.WebControls.GridView>コントロールは、データ ソース コントロールの機能を活用し、自動を指定の並べ替え、更新、および機能を削除します。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.GridView>コントロールは、並べ替え、更新、およびその他の種類のデータ ソースを使用した削除のサポートを提供できます。 ただし、これらの操作の実装に適切なイベント ハンドラーを提供する必要があります。  
  
 並べ替えにより、ユーザーを内の項目を並べ替える、<xref:System.Web.UI.WebControls.GridView>列のヘッダーをクリックして、特定の列に関して制御します。 並べ替えを有効にするには設定、<xref:System.Web.UI.WebControls.GridView.AllowSorting%2A>プロパティを`true`です。  
  
 ときにボタン、自動更新、削除、および選択機能を有効にする<xref:System.Web.UI.WebControls.ButtonField>または<xref:System.Web.UI.WebControls.TemplateField>"Edit"、「削除」、"Select"のコマンド名で、列のフィールドが、それぞれをクリックします。 <xref:System.Web.UI.WebControls.GridView>自動的にコントロールを追加、<xref:System.Web.UI.WebControls.CommandField>と編集、削除、または [選択] ボタンの列がフィールドの場合、 <xref:System.Web.UI.WebControls.GridView.AutoGenerateEditButton%2A>、 <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A>、または<xref:System.Web.UI.WebControls.GridView.AutoGenerateSelectButton%2A>プロパティに設定されている`true`、それぞれします。  
  
> [!NOTE]
>  レコードを挿入するデータ ソースに直接でサポートされていない、<xref:System.Web.UI.WebControls.GridView>コントロール。 ただしを使用してレコードを挿入することは、<xref:System.Web.UI.WebControls.GridView>コントロールと組み合わせて、`DetailsView`または`FormView`コントロール。 詳細については、次を参照してください。<xref:System.Web.UI.WebControls.DetailsView>または<xref:System.Web.UI.WebControls.FormView>、それぞれします。  
  
 同時に、データ ソース内のすべてのレコードを表示する代わりに、<xref:System.Web.UI.WebControls.GridView>コントロールはページをレコードを自動的に分割できます。 ページングを有効にするには設定、<xref:System.Web.UI.WebControls.GridView.AllowPaging%2A>プロパティを`true`です。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.GridView>コントロールがポストバックに格納されている情報に基づいてで再作成<xref:System.Web.UI.PageStatePersister.ViewState%2A>です。 場合、<xref:System.Web.UI.WebControls.GridView>コントロールが含まれています、<xref:System.Web.UI.WebControls.TemplateField>または<xref:System.Web.UI.WebControls.CommandField>で、<xref:System.Web.UI.WebControls.CommandField.CausesValidation%2A>プロパティに設定`true`、<xref:System.Web.UI.Page.EnableViewState%2A>プロパティ設定することも必要があります`true`同時実行データを更新や削除などの操作が該当する行に適用します。  
  
<a name="customizing_the_user_interface"></a>   
## <a name="customizing-the-user-interface"></a>ユーザー インターフェイスのカスタマイズ  
 外観をカスタマイズすることができます、<xref:System.Web.UI.WebControls.GridView>コントロールのさまざまな部分のスタイル プロパティを設定して制御します。 次の表は、異なるスタイル プロパティを一覧表示します。  
  
|スタイル プロパティ|説明|  
|--------------------|-----------------|  
|<xref:System.Web.UI.WebControls.GridView.AlternatingRowStyle%2A>|代替のデータ行のスタイルの設定、<xref:System.Web.UI.WebControls.GridView>コントロール。 間で切り替えるデータ行を表示するこのプロパティが設定されている場合、<xref:System.Web.UI.WebControls.GridView.RowStyle%2A>設定と<xref:System.Web.UI.WebControls.GridView.AlternatingRowStyle%2A>設定します。|  
|<xref:System.Web.UI.WebControls.GridView.EditRowStyle%2A>|編集されている行のスタイルの設定、<xref:System.Web.UI.WebControls.GridView>コントロール。|  
|<xref:System.Web.UI.WebControls.GridView.EmptyDataRowStyle%2A>|表示される空のデータ行のスタイルの設定、<xref:System.Web.UI.WebControls.GridView>データ ソースにいくつかのレコードが含まれていない場合を制御します。|  
|<xref:System.Web.UI.WebControls.GridView.FooterStyle%2A>|フッター行のスタイルの設定、<xref:System.Web.UI.WebControls.GridView>コントロール。|  
|<xref:System.Web.UI.WebControls.GridView.HeaderStyle%2A>|ヘッダー行のスタイルの設定、<xref:System.Web.UI.WebControls.GridView>コントロール。|  
|<xref:System.Web.UI.WebControls.GridView.PagerStyle%2A>|ページャー行のスタイルの設定、<xref:System.Web.UI.WebControls.GridView>コントロール。|  
|<xref:System.Web.UI.WebControls.GridView.RowStyle%2A>|内のデータ行のスタイルの設定、<xref:System.Web.UI.WebControls.GridView>コントロール。 ときに、<xref:System.Web.UI.WebControls.GridView.AlternatingRowStyle%2A>でもプロパティが設定、データ行の間で切り替えると表示、<xref:System.Web.UI.WebControls.GridView.RowStyle%2A>設定と<xref:System.Web.UI.WebControls.GridView.AlternatingRowStyle%2A>設定します。|  
|<xref:System.Web.UI.WebControls.GridView.SelectedRowStyle%2A>|選択した行のスタイルの設定、<xref:System.Web.UI.WebControls.GridView>コントロール。|  
|<xref:System.Web.UI.WebControls.GridView.SortedAscendingCellStyle%2A>|データ列のデータは、の順のスタイル設定、<xref:System.Web.UI.WebControls.GridView>コントロール。 このスタイルが設定されている場合は、データが昇順で並べ替えられたときにセルに (たとえば、強調表示された列) のスタイルが適用されます。|  
|<xref:System.Web.UI.WebControls.GridView.SortedAscendingHeaderStyle%2A>|データ列のデータは、の順のスタイル設定、<xref:System.Web.UI.WebControls.GridView>コントロール。 このスタイルが設定されている場合、データの並べ替えが昇順を示す矢印が配置されてのヘッダー、<xref:System.Web.UI.WebControls.GridView>制御とデータが昇順に並べ替えられます。|  
|<xref:System.Web.UI.WebControls.GridView.SortedDescendingCellStyle%2A>|データ列のデータは、の順のスタイル設定、<xref:System.Web.UI.WebControls.GridView>コントロール。 このスタイルが設定されている場合は、データを降順に並べ替えるときにセルに (たとえば、強調表示された列) のスタイルが適用されます。|  
|<xref:System.Web.UI.WebControls.GridView.SortedDescendingHeaderStyle%2A>|データ列のデータは、の順のスタイル設定、<xref:System.Web.UI.WebControls.GridView>コントロール。 このスタイルが設定されている場合、矢印をポイント下に配置のヘッダー、<xref:System.Web.UI.WebControls.GridView>ときに、データが降順で並べ替えられます。|  
  
 コントロールのさまざまな部分を非表示を切り替えることができますも。 次の表は、どの部分を表示または非表示を制御するプロパティを一覧表示します。  
  
|プロパティ|説明|  
|--------------|-----------------|  
|<xref:System.Web.UI.WebControls.GridView.ShowFooter%2A>|フッター セクションの表示と非表示を切り替えます、<xref:System.Web.UI.WebControls.GridView>コントロール。|  
|<xref:System.Web.UI.WebControls.GridView.ShowHeader%2A>|表示またはのヘッダー セクションを非表示、<xref:System.Web.UI.WebControls.GridView>コントロール。|  
  
<a name="events"></a>   
## <a name="events"></a>イベント  
 <xref:System.Web.UI.WebControls.GridView>コントロールには、ユーザーがプログラムをいくつかのイベントが用意されています。 これにより、イベントが発生するたびに、カスタムのルーチンを実行することができます。 次の表でサポートされているイベントの一覧、<xref:System.Web.UI.WebControls.GridView>コントロール。  
  
|イベント|説明|  
|-----------|-----------------|  
|<xref:System.Web.UI.WebControls.GridView.PageIndexChanged>|ページャー ボタンのいずれかをクリックすると、後に発生する、<xref:System.Web.UI.WebControls.GridView>コントロールは、ページング操作を処理します。 このイベントは通常、ユーザーがコントロール内の別のページに移動した後にタスクを実行する必要がある場合に使用します。|  
|<xref:System.Web.UI.WebControls.GridView.PageIndexChanging>|ページャー ボタンのいずれかをクリックすると、その前に発生する、<xref:System.Web.UI.WebControls.GridView>コントロールは、ページング操作を処理します。 このイベントは、ページング操作を取り消すよく使用されます。|  
|<xref:System.Web.UI.WebControls.GridView.RowCancelingEdit>|その前に、行の [キャンセル] ボタンがクリックされたときに発生、<xref:System.Web.UI.WebControls.GridView>終了します。 コントロールが編集モードです。 このイベントは、キャンセル操作を停止するよく使用されます。|  
|<xref:System.Web.UI.WebControls.GridView.RowCommand>|ボタンがクリックされたときに発生、<xref:System.Web.UI.WebControls.GridView>コントロール。 このイベントは、コントロールにボタンがクリックされたときにタスクを実行する多くの場合、使用します。|  
|<xref:System.Web.UI.WebControls.GridView.RowCreated>|新しい行が作成されたときに発生、<xref:System.Web.UI.WebControls.GridView>コントロール。 このイベントは内容を変更する、行の行が作成されたときによく使用されます。|  
|<xref:System.Web.UI.WebControls.GridView.RowDataBound>|データ行がデータにバインドされているときに発生、<xref:System.Web.UI.WebControls.GridView>コントロール。 このイベントは、行がデータにバインドされている場合、行の内容を変更するのによく使用されます。|  
|<xref:System.Web.UI.WebControls.GridView.RowDeleted>|後で、行の削除 ボタンがクリックされたときに発生、<xref:System.Web.UI.WebControls.GridView>コントロールがデータ ソースからレコードを削除します。 このイベントは、削除操作の結果の確認によく使用されます。|  
|<xref:System.Web.UI.WebControls.GridView.RowDeleting>|その前に、行の削除 ボタンがクリックされたときに発生、<xref:System.Web.UI.WebControls.GridView>コントロールがデータ ソースからレコードを削除します。 このイベントは削除操作をキャンセルによく使用されます。|  
|<xref:System.Web.UI.WebControls.GridView.RowEditing>|その前に、行の編集 ボタンがクリックされたときに発生、<xref:System.Web.UI.WebControls.GridView>コントロールが編集モードに入ります。 このイベントは、編集操作を取り消すよく使用されます。|  
|<xref:System.Web.UI.WebControls.GridView.RowUpdated>|後で、行の更新ボタンがクリックされたときに発生、<xref:System.Web.UI.WebControls.GridView>コントロールは、行を更新します。 このイベントは、更新操作の結果の確認によく使用されます。|  
|<xref:System.Web.UI.WebControls.GridView.RowUpdating>|その前に、行の更新 ボタンがクリックされたときに発生、<xref:System.Web.UI.WebControls.GridView>コントロールは、行を更新します。 このイベントは、更新操作を取り消すよく使用されます。|  
|<xref:System.Web.UI.WebControls.GridView.SelectedIndexChanged>|後で、行の選択 ボタンがクリックされたときに発生、<xref:System.Web.UI.WebControls.GridView>コントロールは、select 操作を処理します。 このイベントは、コントロールで行を選択した後にタスクを実行する多くの場合、使用します。|  
|<xref:System.Web.UI.WebControls.GridView.SelectedIndexChanging>|その前に、行の選択 ボタンがクリックされたときに発生、<xref:System.Web.UI.WebControls.GridView>コントロールは、select 操作を処理します。 このイベントは、選択操作を取り消すよく使用されます。|  
|<xref:System.Web.UI.WebControls.GridView.Sorted>|後で、列を並べ替えるハイパーリンクがクリックされたときに発生、<xref:System.Web.UI.WebControls.GridView>コントロールは、並べ替え操作を処理します。 このイベントは、ユーザーが列を並べ替えるへのハイパーリンクをクリックした後にタスクを実行する通常使用されます。|  
|<xref:System.Web.UI.WebControls.GridView.Sorting>|その前に列を並べ替えるへのハイパーリンクがクリックされたときに発生、<xref:System.Web.UI.WebControls.GridView>コントロールは、並べ替え操作を処理します。 このイベントは、並べ替え操作を取り消すまたはカスタムの並べ替えルーチンを実行するによく使用されます。|  
  
<a name="accessibility"></a>   
## <a name="accessibility"></a>ユーザー補助  
 ユーザー補助の標準に準拠するマークアップを生成するように、このコントロールを構成する方法については、次を参照してください。 [Visual Studio と ASP.NET のユーザー補助機能](http://msdn.microsoft.com/library/7e3ce9c4-6b7d-4fb1-94b5-72cf2a44fe13)と[ASP.NET コントロールやアクセシビリティ](http://msdn.microsoft.com/library/847a37e3-ce20-41da-b0d3-7dfb0fdae9a0)です。  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>宣言型の構文  
  
```  
<asp:GridView  
    AccessKey="string"  
    AllowPaging="True|False"  
    AllowSorting="True|False"  
    AutoGenerateColumns="True|False"  
    AutoGenerateDeleteButton="True|False"  
    AutoGenerateEditButton="True|False"  
    AutoGenerateSelectButton="True|False"  
    BackColor="color name|#dddddd"  
    BackImageUrl="uri"  
    BorderColor="color name|#dddddd"  
    BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|  
        Inset|Outset"  
    BorderWidth="size"  
    Caption="string"  
    CaptionAlign="NotSet|Top|Bottom|Left|Right"  
    CellPadding="integer"  
    CellSpacing="integer"  
    CssClass="string"  
    DataKeyNames="string"  
    DataMember="string"  
    DataSource="string"  
    DataSourceID="string"  
    EditIndex="integer"  
    EmptyDataText="string"  
    Enabled="True|False"  
    EnableSortingAndPagingCallbacks="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    Font-Bold="True|False"  
    Font-Italic="True|False"  
    Font-Names="string"  
    Font-Overline="True|False"  
    Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|Medium|  
        Large|X-Large|XX-Large"  
    Font-Strikeout="True|False"  
    Font-Underline="True|False"  
    ForeColor="color name|#dddddd"  
    GridLines="None|Horizontal|Vertical|Both"  
    Height="size"  
    HorizontalAlign="NotSet|Left|Center|Right|Justify"  
    ID="string"  
    OnDataBinding="DataBinding event handler"  
    OnDataBound="DataBound event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnLoad="Load event handler"  
    OnPageIndexChanged="PageIndexChanged event handler"  
    OnPageIndexChanging="PageIndexChanging event handler"  
    OnPreRender="PreRender event handler"  
    OnRowCancelingEdit="RowCancelingEdit event handler"  
    OnRowCommand="RowCommand event handler"  
    OnRowCreated="RowCreated event handler"  
    OnRowDataBound="RowDataBound event handler"  
    OnRowDeleted="RowDeleted event handler"  
    OnRowDeleting="RowDeleting event handler"  
    OnRowEditing="RowEditing event handler"  
    OnRowUpdated="RowUpdated event handler"  
    OnRowUpdating="RowUpdating event handler"  
    OnSelectedIndexChanged="SelectedIndexChanged event handler"  
    OnSelectedIndexChanging="SelectedIndexChanging event handler"  
    OnSorted="Sorted event handler"  
    OnSorting="Sorting event handler"  
    OnUnload="Unload event handler"  
    PageIndex="integer"  
    PagerSettings-FirstPageImageUrl="uri"  
    PagerSettings-FirstPageText="string"  
    PagerSettings-LastPageImageUrl="uri"  
    PagerSettings-LastPageText="string"  
    PagerSettings-Mode="NextPrevious|Numeric|NextPreviousFirstLast|  
        NumericFirstLast"  
    PagerSettings-NextPageImageUrl="uri"  
    PagerSettings-NextPageText="string"  
    PagerSettings-PageButtonCount="integer"  
    PagerSettings-Position="Bottom|Top|TopAndBottom"  
    PagerSettings-PreviousPageImageUrl="uri"  
    PagerSettings-PreviousPageText="string"  
    PagerSettings-Visible="True|False"  
    PageSize="integer"  
    RowHeaderColumn="string"  
    runat="server"  
    SelectedIndex="integer"  
    ShowFooter="True|False"  
    ShowHeader="True|False"  
    SkinID="string"  
    Style="string"  
    TabIndex="integer"  
    ToolTip="string"  
    UseAccessibleHeader="True|False"  
    Visible="True|False"  
    Width="size"  
>  
        <AlternatingRowStyle />  
        <Columns>  
                <asp:BoundField  
                    AccessibleHeaderText="string"  
                    ApplyFormatInEditMode="True|False"  
                    ConvertEmptyStringToNull="True|False"  
                    DataField="string"  
                    DataFormatString="string"  
                    FooterText="string"  
                    HeaderImageUrl="uri"  
                    HeaderText="string"  
                    HtmlEncode="True|False"  
                    InsertVisible="True|False"  
                    NullDisplayText="string"  
                    ReadOnly="True|False"  
                    ShowHeader="True|False"  
                    SortExpression="string"  
                    Visible="True|False"  
>  
                        <ControlStyle />  
                        <FooterStyle />  
                        <HeaderStyle />  
                        <ItemStyle />  
                </asp:BoundField>  
                <asp:ButtonField  
                    AccessibleHeaderText="string"  
                    ButtonType="Button|Image|Link"  
                    CausesValidation="True|False"  
                    CommandName="string"  
                    DataTextField="string"  
                    DataTextFormatString="string"  
                    FooterText="string"  
                    HeaderImageUrl="uri"  
                    HeaderText="string"  
                    ImageUrl="uri"  
                    InsertVisible="True|False"  
                    ShowHeader="True|False"  
                    SortExpression="string"  
                    Text="string"  
                    ValidationGroup="string"  
                    Visible="True|False"  
>  
                        <ControlStyle />  
                        <FooterStyle />  
                        <HeaderStyle />  
                        <ItemStyle />  
                </asp:ButtonField>  
                <asp:CheckBoxField  
                    AccessibleHeaderText="string"  
                    DataField="string"  
                    FooterText="string"  
                    HeaderImageUrl="uri"  
                    HeaderText="string"  
                    InsertVisible="True|False"  
                    ReadOnly="True|False"  
                    ShowHeader="True|False"  
                    SortExpression="string"  
                    Text="string"  
                    Visible="True|False"  
>  
                        <ControlStyle />  
                        <FooterStyle />  
                        <HeaderStyle />  
                        <ItemStyle />  
                </asp:CheckBoxField>  
                <asp:CommandField  
                    AccessibleHeaderText="string"  
                    ButtonType="Button|Image|Link"  
                    CancelImageUrl="uri"  
                    CancelText="string"  
                    CausesValidation="True|False"  
                    DeleteImageUrl="uri"  
                    DeleteText="string"  
                    EditImageUrl="uri"  
                    EditText="string"  
                    FooterText="string"  
                    HeaderImageUrl="uri"  
                    HeaderText="string"  
                    InsertImageUrl="uri"  
                    InsertText="string"  
                    InsertVisible="True|False"  
                    NewImageUrl="uri"  
                    NewText="string"  
                    SelectImageUrl="uri"  
                    SelectText="string"  
                    ShowCancelButton="True|False"  
                    ShowDeleteButton="True|False"  
                    ShowEditButton="True|False"  
                    ShowHeader="True|False"  
                    ShowInsertButton="True|False"  
                    ShowSelectButton="True|False"  
                    SortExpression="string"  
                    UpdateImageUrl="uri"  
                    UpdateText="string"  
                    ValidationGroup="string"  
                    Visible="True|False"  
>  
                        <ControlStyle />  
                        <FooterStyle />  
                        <HeaderStyle />  
                        <ItemStyle />  
                </asp:CommandField>  
                <asp:DynamicField  
                    AccessibleHeaderText="string"  
                    ApplyFormatInEditMode="True|False"  
                    ConvertEmptyStringToNull="True|False"  
                    DataField="string"  
                    DataFormatString="string"  
                    FooterText="string"  
                    HeaderImageUrl="uri"  
                    HeaderText="string"  
                    HtmlEncode="True|False"  
                    InsertVisible="True|False"  
                    NullDisplayText="string"  
                    ShowHeader="True|False"  
                    UIHint="string"  
                    Visible="True|False"  
>  
                        <ControlStyle />  
                        <FooterStyle />  
                        <HeaderStyle />  
                        <ItemStyle />  
                </asp:DynamicField>  
                <asp:HyperLinkField  
                    AccessibleHeaderText="string"  
                    DataNavigateUrlFields="string"  
                    DataNavigateUrlFormatString="string"  
                    DataTextField="string"  
                    DataTextFormatString="string"  
                    FooterText="string"  
                    HeaderImageUrl="uri"  
                    HeaderText="string"  
                    InsertVisible="True|False"  
                    NavigateUrl="uri"  
                    ShowHeader="True|False"  
                    SortExpression="string"  
                    Target="string|_blank|_parent|_search|_self|_top"  
                    Text="string"  
                    Visible="True|False"  
>  
                        <ControlStyle />  
                        <FooterStyle />  
                        <HeaderStyle />  
                        <ItemStyle />  
                </asp:HyperLinkField>  
                <asp:ImageField  
                    AccessibleHeaderText="string"  
                    AlternateText="string"  
                    ConvertEmptyStringToNull="True|False"  
                    DataAlternateTextField="string"  
                    DataAlternateTextFormatString="string"  
                    DataImageUrlField="string"  
                    DataImageUrlFormatString="string"  
                    FooterText="string"  
                    HeaderImageUrl="uri"  
                    HeaderText="string"  
                    InsertVisible="True|False"  
                    NullDisplayText="string"  
                    NullImageUrl="uri"  
                    ReadOnly="True|False"  
                    ShowHeader="True|False"  
                    SortExpression="string"  
                    Visible="True|False"  
>  
                        <ControlStyle />  
                        <FooterStyle />  
                        <HeaderStyle />  
                        <ItemStyle />  
                </asp:ImageField>  
                <asp:TemplateField  
                    AccessibleHeaderText="string"  
                    ConvertEmptyStringToNull="True|False"  
                    FooterText="string"  
                    HeaderImageUrl="uri"  
                    HeaderText="string"  
                    InsertVisible="True|False"  
                    ShowHeader="True|False"  
                    SortExpression="string"  
                    Visible="True|False"  
>  
                            <ControlStyle />  
                            <FooterStyle />  
                            <HeaderStyle />  
                            <ItemStyle />  
                        <AlternatingItemTemplate>  
                            <!-- child controls -->  
                        </AlternatingItemTemplate>  
                        <EditItemTemplate>  
                            <!-- child controls -->  
                        </EditItemTemplate>  
                        <FooterTemplate>  
                            <!-- child controls -->  
                        </FooterTemplate>  
                        <HeaderTemplate>  
                            <!-- child controls -->  
                        </HeaderTemplate>  
                        <InsertItemTemplate>  
                            <!-- child controls -->  
                        </InsertItemTemplate>  
                        <ItemTemplate>  
                            <!-- child controls -->  
                        </ItemTemplate>  
                </asp:TemplateField>  
        </Columns>  
        <EditRowStyle />  
        <EmptyDataRowStyle />  
        <EmptyDataTemplate>  
            <!-- child controls -->  
        </EmptyDataTemplate>  
        <FooterStyle />  
        <HeaderStyle />  
        <PagerSettings  
            FirstPageImageUrl="uri"  
            FirstPageText="string"  
            LastPageImageUrl="uri"  
            LastPageText="string"  
            Mode="NextPrevious|Numeric|NextPreviousFirstLast|  
                NumericFirstLast"  
            NextPageImageUrl="uri"  
            NextPageText="string"  
            OnPropertyChanged="PropertyChanged event handler"  
            PageButtonCount="integer"  
            Position="Bottom|Top|TopAndBottom"  
            PreviousPageImageUrl="uri"  
            PreviousPageText="string"  
            Visible="True|False"  
        />  
        <PagerStyle />  
        <PagerTemplate>  
            <!-- child controls -->  
        </PagerTemplate>  
        <RowStyle />  
        <SelectedRowStyle />  
</asp:GridView>  
```  
  
   
  
## Examples  
 Visual Studio の Web サイト プロジェクトとソース コードは、このトピックで使用可能な:[ダウンロード](http://go.microsoft.com/fwlink/?LinkId=191882)です。  
  
 次の例で使用方法、 <xref:System.Web.UI.WebControls.GridView> SQL Server では、AdventureWorksLT サンプル データベースの Customers テーブルから値を表示するコントロール。 使用して、値を取得、<xref:System.Web.UI.WebControls.SqlDataSource>コントロール。  
  
 [!code-aspx-csharp[GridViewSimple#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewSimple/CS/displaycustomers.aspx#1)]
 [!code-aspx-vb[GridViewSimple#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewSimple/VB/displaycustomers.aspx#1)]  
  
 次の例で使用する方法、<xref:System.Web.UI.WebControls.GridView>コントロールと<xref:System.Web.UI.WebControls.LinqDataSource>制御レコードを編集できるようにします。  
  
 [!code-aspx-csharp[GridViewEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewEdit/CS/editorders.aspx#1)]
 [!code-aspx-vb[GridViewEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewEdit/VB/editorders.aspx#1)]  
  
 セルの値にアクセスする方法を示す例では、次を参照してください。<xref:System.Web.UI.WebControls.GridViewRow>です。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GridView ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.GridView" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 新しいインスタンスを初期化するためにこのコンス トラクターを使用して、<xref:System.Web.UI.WebControls.GridView>クラスです。 動的に追加する、<xref:System.Web.UI.WebControls.GridView>ページにコントロールを新規作成<xref:System.Web.UI.WebControls.GridView>オブジェクト、そのプロパティを設定し、追加するに、<xref:System.Web.UI.Control.Controls%2A?displayProperty=nameWithType>コンテナーのコレクションを制御するように<xref:System.Web.UI.WebControls.PlaceHolder>です。  
  
   
  
## Examples  
 次の例では、コンス トラクターを使用して動的に追加する方法、<xref:System.Web.UI.WebControls.GridView>ページにコントロールできます。  
  
 [!code-aspx-csharp[GridViewCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewCtor/CS/gridviewctorcs.aspx#1)]
 [!code-aspx-vb[GridViewCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewCtor/VB/gridviewctorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowCustomPaging">
      <MemberSignature Language="C#" Value="public virtual bool AllowCustomPaging { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowCustomPaging" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.AllowCustomPaging" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはカスタム ページングが有効になっているかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" />カスタム ページングが有効である場合それ以外の場合、<see langword="false" />です。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ページングでは、内容を表示することができます、<xref:System.Web.UI.WebControls.GridView>チャンク単位で制御します。 ページ上の項目の数がによって決まりますが、<xref:System.Web.UI.WebControls.GridView.PageSize%2A>プロパティです。 通常は、データ ソース内のすべての行が毎回を読み取り、<xref:System.Web.UI.WebControls.GridView>コントロールが別のページに移動します。 データ ソース内の項目の合計数が非常に大きい場合は、多くのリソースが使用できます。 カスタム ページングを使用すると、データ ソースから特定のページで必要な項目だけを読み取ることができます。  
  
 カスタム ページングを有効にするには、両方を設定、<xref:System.Web.UI.WebControls.GridView.AllowPaging%2A>と<xref:System.Web.UI.WebControls.GridView.AllowCustomPaging%2A>プロパティ`true`です。 ハンドラーで、<xref:System.Web.UI.WebControls.GridView.PageIndexChanging>イベント、設定、<xref:System.Web.UI.WebControls.GridView.PageIndex%2A>プロパティ、新しいページ インデックス値を設定、<xref:System.Web.UI.WebControls.GridView.VirtualItemCount%2A>プロパティ、データ ソース内のアイテムの合計数を設定、データ ソースを現在のページと呼び出しに必要な行のみを返す、<xref:System.Web.UI.WebControls.GridView.DataBind%2A>メソッドです。 <xref:System.Web.UI.WebControls.GridView.VirtualItemCount%2A>プロパティ ページの合計数を決定するコントロールを使用して以外のすべての項目を読み取ることによってこの値が自動的に通常決定されます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowPaging">
      <MemberSignature Language="C#" Value="public virtual bool AllowPaging { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowPaging" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.AllowPaging" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはページング機能が有効になっているかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" />ページング機能が有効である場合それ以外の場合、<see langword="false" />です。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 同時に、データ ソース内のすべてのレコードを表示する代わりに、<xref:System.Web.UI.WebControls.GridView>コントロールはページをレコードを自動的に分割できます。 データ ソースは、ページング機能をサポートしている場合、<xref:System.Web.UI.WebControls.GridView>コントロールが有効に活用して組み込みのページング機能を提供します。 サポートするデータ ソース オブジェクトでページング機能を使用できます、<xref:System.Collections.ICollection?displayProperty=nameWithType>インターフェイスまたはページング機能をサポートするデータ ソース。  
  
 ページング機能を有効にするには設定、<xref:System.Web.UI.WebControls.GridView.AllowPaging%2A>プロパティを`true`です。 既定では、<xref:System.Web.UI.WebControls.GridView>コントロールがページに一度に 10 個のレコードを表示します。 設定して、ページに表示されるレコードの数を変更することができます、<xref:System.Web.UI.WebControls.GridView.PageSize%2A>プロパティです。 データ ソースの内容を表示するために必要なページの合計数を確認するには<xref:System.Web.UI.WebControls.GridView.PageCount%2A>プロパティです。 使用して、現在表示されているページのインデックスを確認することができます、<xref:System.Web.UI.WebControls.GridView.PageIndex%2A>プロパティです。  
  
 ページングが有効になっているページャー行と呼ばれる追加の行が自動的に表示される、<xref:System.Web.UI.WebControls.GridView>コントロール。 ページャー行には、ユーザーが他のページに移動できるようにするコントロールが含まれています。 使用して、ページャー (ポケットベル表示モードで、時刻、およびページャー コントロールのテキスト ラベルに表示するページへのリンクの数) などの設定を管理することができます、<xref:System.Web.UI.WebControls.GridView.PagerSettings%2A>プロパティです。 設定して、上部、下部、または両方の上部と下部コントロールのページャー行を表示できます、<xref:System.Web.UI.WebControls.PagerSettings.Position%2A>プロパティです。 設定して 4 つの組み込みのページャー表示モードのいずれかから選択することもできます、<xref:System.Web.UI.WebControls.PagerSettings.Mode%2A>プロパティです。 次の表では、組み込みの表示モードについて説明します。  
  
|モード|説明|  
|----------|-----------------|  
|`PagerButton.NextPrevious`|戻るボタンと [次へ] ボタンで構成される改ページ調整コントロールのセット。|  
|`PagerButton.NextPreviousFirstLast`|次に、最初と最後のボタンの前で構成される改ページ調整コントロール、A が設定されます。|  
|`PagerButton.Numeric`|構成される改ページ調整コントロールのセットは、アクセス ページへのリンク ボタンを直接番号。 これは、既定のモードです。|  
|`PagerButton.NumericFirstLast`|番号付き、先頭と末尾のリンク ボタンで構成される改ページ調整コントロールのセット。|  
  
 (背景色、フォントの色、位置など)、ページャーの外観を制御する、<xref:System.Web.UI.WebControls.GridView.PagerStyle%2A>プロパティです。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.GridView>コントロールに自動的に非表示にページャー行のデータ ソースには、レコードの 1 つだけのページが含まれている場合。  
  
 <xref:System.Web.UI.WebControls.GridView>コントロールでは、ページャー用のカスタム テンプレートを定義することもできます。 カスタムのページャー行テンプレートの作成の詳細については、次を参照してください。<xref:System.Web.UI.WebControls.GridView.PagerTemplate%2A>です。  
  
 <xref:System.Web.UI.WebControls.GridView>コントロールには、ページングが発生したときに、カスタム アクションを実行に使用できるいくつかのイベントが用意されています。 次の表には、使用可能なイベントが一覧表示します。  
  
|イベント|説明|  
|-----------|-----------------|  
|<xref:System.Web.UI.WebControls.GridView.PageIndexChanged>|ページャー ボタンのいずれかをクリックすると、後に発生する、<xref:System.Web.UI.WebControls.GridView>コントロールは、ページング操作を処理します。 このイベントは通常、ユーザーがコントロール内の別のページに移動した後にタスクを実行する必要がある場合に使用します。|  
|<xref:System.Web.UI.WebControls.GridView.PageIndexChanging>|ページャー ボタンのいずれかをクリックすると、その前に発生する、<xref:System.Web.UI.WebControls.GridView>コントロールは、ページング操作を処理します。 このイベントは、ページング操作を取り消すよく使用されます。|  
  
   
  
## Examples  
 次の例で使用する方法、<xref:System.Web.UI.WebControls.GridView.AllowPaging%2A>プロパティ宣言でページング機能を有効にする、<xref:System.Web.UI.WebControls.GridView>コントロール。  
  
 [!code-aspx-csharp[GridViewAllowPaging#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewAllowPaging/CS/gridviewallowpagingcs.aspx#1)]
 [!code-aspx-vb[GridViewAllowPaging#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewAllowPaging/VB/gridviewallowpagingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowSorting">
      <MemberSignature Language="C#" Value="public virtual bool AllowSorting { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowSorting" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.AllowSorting" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または並べ替えの機能が有効になっているかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" />並べ替え機能が有効である場合それ以外の場合、<see langword="false" />です。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 並べ替えをサポートするデータ ソース コントロールをバインドするときに、<xref:System.Web.UI.WebControls.GridView>コントロール、<xref:System.Web.UI.WebControls.GridView>コントロールは、データ ソース コントロールの機能を活用し、自動並べ替え機能を提供します。 ときに、<xref:System.Web.UI.WebControls.GridView>を設定して、データ ソースにコントロールがバインドされている、<xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A>プロパティ、プログラムである必要があります機能を提供する並べ替えを使用して、<xref:System.Web.UI.WebControls.GridView.Sorting>イベント。  
  
> [!NOTE]
>  さまざまなデータ ソースには、並べ替え機能を有効にするための異なる要件があります。 要件を確認するのには、特定のデータ ソースのマニュアルを参照してください。  
  
 並べ替えを有効にするには設定、<xref:System.Web.UI.WebControls.GridView.AllowSorting%2A>プロパティを`true`です。 並べ替えを有効にすると、見出しのテキストの各列のフィールドをその<xref:System.Web.UI.WebControls.DataControlField.SortExpression%2A>プロパティ セットはリンク ボタンとして表示されます。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.DataControlField.SortExpression%2A>自動的に生成される列フィールドのプロパティが自動的に設定されます。 独自の列を定義する場合、<xref:System.Web.UI.WebControls.GridView.Columns%2A>設定する必要があります、コレクション、 <xref:System.Web.UI.WebControls.DataControlField.SortExpression%2A> ; 各列のプロパティをそれ以外の場合、列を表示しませんリンク ボタン ヘッダー。  
  
 列により内の項目のリンクをクリックして、<xref:System.Web.UI.WebControls.GridView>並べ替えコントロールが、並べ替え式に基づいています。 通常、これにより、列に表示されるフィールドの名前だけでは、並べ替え式、<xref:System.Web.UI.WebControls.GridView>その列にします。 複数のフィールドで並べ替えるには、するには、フィールド名のコンマ区切りの一覧を含んだ並べ替え式を使用します。 並べ替え式を指定できますを<xref:System.Web.UI.WebControls.GridView>を使用してコントロールを適用する、<xref:System.Web.UI.WebControls.GridView.SortExpression%2A>プロパティです。 列のリンク ボタンを繰り返しクリックすると、昇順と降順の並べ替え方向を切り替えます。 現在の並べ替え方向を確認するには<xref:System.Web.UI.WebControls.GridView.SortDirection%2A>プロパティです。  
  
 <xref:System.Web.UI.WebControls.GridView>コントロールには、並べ替えが実行時に、カスタム アクションを実行するのに使用できるいくつかのイベントが用意されています。 次の表には、使用可能なイベントが一覧表示します。  
  
|イベント|説明|  
|-----------|-----------------|  
|<xref:System.Web.UI.WebControls.GridView.Sorted>|後で、列を並べ替えるハイパーリンクがクリックされたときに発生、<xref:System.Web.UI.WebControls.GridView>コントロールは、並べ替え操作を処理します。 このイベントは、ユーザーが列を並べ替えるへのハイパーリンクをクリックした後にタスクを実行する通常使用されます。|  
|<xref:System.Web.UI.WebControls.GridView.Sorting>|その前に列を並べ替えるへのハイパーリンクがクリックされたときに発生、<xref:System.Web.UI.WebControls.GridView>コントロールは、並べ替え操作を処理します。 このイベントは、並べ替え操作を取り消すまたはカスタムの並べ替えルーチンを実行するによく使用されます。|  
  
   
  
## Examples  
 次の例で使用する方法、<xref:System.Web.UI.WebControls.GridView.AllowSorting%2A>で並べ替えを有効にするプロパティ、<xref:System.Web.UI.WebControls.GridView>自動的に生成された列を使用する場合を制御します。  
  
 [!code-aspx-csharp[GridViewAllowSorting#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewAllowSorting/CS/gridviewallowsortingcs.aspx#1)]
 [!code-aspx-vb[GridViewAllowSorting#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewAllowSorting/VB/gridviewallowsortingvb.aspx#1)]  
  
 次の例で使用する方法、<xref:System.Web.UI.WebControls.GridView.AllowSorting%2A>で並べ替えを有効にするプロパティ、<xref:System.Web.UI.WebControls.GridView>タイミングを制御、<xref:System.Web.UI.WebControls.GridView.Columns%2A>コレクションが定義されています。 イメージは、並べ替えの方向を示すために並べ替えられる列のヘッダーにもプログラムによって追加されます。 このサンプルを動作させるため、独自のイメージを指定する必要があります。  
  
 [!code-aspx-csharp[GridViewAllowSortingColumns#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewAllowSortingColumns/CS/GridViewAllowSortingColumnscs.aspx#1)]
 [!code-aspx-vb[GridViewAllowSortingColumns#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewAllowSortingColumns/VB/GridViewAllowSortingColumnsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AlternatingRowStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle AlternatingRowStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle AlternatingRowStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.AlternatingRowStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>参照を取得、<see cref="T:System.Web.UI.WebControls.TableItemStyle" />オブジェクト内のデータ行の代替の外観を設定することができます、<see cref="T:System.Web.UI.WebControls.GridView" />コントロール。</summary>
        <value>参照、<see cref="T:System.Web.UI.WebControls.TableItemStyle" />内のデータ行の代替のスタイルを表す、<see cref="T:System.Web.UI.WebControls.GridView" />コントロール。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.GridView.AlternatingRowStyle%2A>内のデータ行の代替の外観を制御するプロパティ、<xref:System.Web.UI.WebControls.GridView>コントロール。 間で切り替えるデータ行を表示するこのプロパティが設定されている場合、<xref:System.Web.UI.WebControls.GridView.RowStyle%2A>設定と<xref:System.Web.UI.WebControls.GridView.AlternatingRowStyle%2A>設定します。 このプロパティは読み取り専用です。ただしのプロパティを設定することができます、<xref:System.Web.UI.WebControls.TableItemStyle>オブジェクトを返します。 プロパティを設定するには、次のいずれかを使用して宣言します。  
  
-   開始タグに属性を配置、<xref:System.Web.UI.WebControls.GridView>フォームでコントロール`Property-Subproperty`ここで、`Subproperty`のプロパティ、<xref:System.Web.UI.WebControls.TableItemStyle>オブジェクト (たとえば、 `AlternatingRowStyle-ForeColor`)。  
  
-   入れ子、`<AlternatingRowStyle>`要素開始タグと終了タグの間、<xref:System.Web.UI.WebControls.GridView>コントロール。  
  
 プロパティがフォームにプログラムで設定することもできます`Property.Subproperty`(たとえば、 `AlternatingRowStyle.ForeColor`)。 通常、一般的な設定には、カスタムの背景色、前景色、およびフォントのプロパティが含まれます。  
  
   
  
## Examples  
 次の例で使用する方法、<xref:System.Web.UI.WebControls.GridView.AlternatingRowStyle%2A>宣言内のデータ行を交互にスタイルを定義するプロパティ、<xref:System.Web.UI.WebControls.GridView>コントロール。  
  
 [!code-aspx-csharp[GridViewRowStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewRowStyle/CS/gridviewrowstylecs.aspx#1)]
 [!code-aspx-vb[GridViewRowStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewRowStyle/VB/gridviewrowstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoGenerateColumns">
      <MemberSignature Language="C#" Value="public virtual bool AutoGenerateColumns { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoGenerateColumns" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.AutoGenerateColumns" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはバインドされたフィールドがデータ ソース内の各フィールドに対して自動的に作成するかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" />データ ソース内の各フィールドにバインドされたフィールドを自動的に作成するにはそれ以外の場合、<see langword="false" />です。 既定値は、<see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ときに、<xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A>プロパティに設定されている`true`、<xref:System.Web.UI.WebControls.AutoGeneratedField>オブジェクトは、データ ソース内の各フィールドに対して自動的に作成します。 各フィールド内の列として表示されます、<xref:System.Web.UI.WebControls.GridView>データ ソースのフィールドの順序で制御します。 このオプションは、データ ソース内のすべてのフィールドを表示する便利な手段を提供します。ただし、自動的に生成される列フィールドの表示または動作を制御する制限します。  
  
 ではなく、<xref:System.Web.UI.WebControls.GridView>コントロールは、列フィールドを自動的に生成、手動で設定して列フィールドを定義することができます、<xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A>プロパティを`false`作成し、カスタム`Columns`コレクション。 バインドされた列のフィールドだけでなくするもボタン列フィールド、または表示できます、チェック ボックス列のフィールド、コマンドのフィールド、ハイパーリンク列フィールド、イメージ フィールドでは、独自のカスタム定義のテンプレートに基づいて、列のフィールドです。  
  
 明示的に宣言された列のフィールドを自動的に生成された列のフィールドを組み合わせることもできます。 両方を使用する場合に最初に明示的に宣言された列のフィールドがレンダリング後に自動的に生成される列フィールドがされます。 バインドされた列が自動的に生成されたフィールドは追加されません、<xref:System.Web.UI.WebControls.GridView.Columns%2A>コレクション。 詳細については、「<xref:System.Web.UI.WebControls.GridView.Columns%2A>」を参照してください。  
  
 このプロパティを設定する場合`true`設定と、<xref:System.Web.UI.WebControls.DataBoundControl.ItemType%2A>プロパティ、モデルの種類を<xref:System.Web.DynamicData.DynamicField>コントロールが生成されます。 設定しない場合、<xref:System.Web.UI.WebControls.DataBoundControl.ItemType%2A>プロパティ、<xref:System.Web.UI.WebControls.BoundField>コントロールが生成されます。 たくない場合<xref:System.Web.DynamicData.DynamicField>コントロールでは、次のオプションがあります。  
  
-   設定、<xref:System.Web.UI.WebControls.GridView.ColumnsGenerator%2A>プロパティを`null`で、`Page_Load`イベント ハンドラー。 その場合は、<xref:System.Web.UI.WebControls.BoundField>コントロールが生成されます。  
  
-   独自の割り当てを作成してフィールドを自動的に生成するカスタム コードを記述<xref:System.Web.UI.WebControls.GridView.ColumnsGenerator%2A>クラスとコントロールをそのインスタンスを割り当てます。  
  
-   <xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A> を `false` に設定します。 その場合は、フィールドは生成されず、およびフィールドなどのコントロールを使用して手動で指定する必要があります<xref:System.Web.UI.WebControls.BoundField>または<xref:System.Web.UI.WebControls.ImageField>です。  
  
-   <xref:System.Web.UI.WebControls.DataBoundControl.ItemType%2A> プロパティを設定しないでください。 その場合は、<xref:System.Web.UI.WebControls.BoundField>コントロールが生成されます。  
  
   
  
## Examples  
 次の例で使用する方法、<xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A>自動的にバインドされるフィールドの列を作成するプロパティ、<xref:System.Web.UI.WebControls.GridView>データ ソース内の各フィールドのコントロールです。  
  
 [!code-aspx-csharp[GridViewSimple#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewSimple/CS/displaycustomers.aspx#1)]
 [!code-aspx-vb[GridViewSimple#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewSimple/VB/displaycustomers.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoGenerateDeleteButton">
      <MemberSignature Language="C#" Value="public virtual bool AutoGenerateDeleteButton { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoGenerateDeleteButton" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定を示す値かどうか、<see cref="T:System.Web.UI.WebControls.CommandField" />に各データ行の削除 ボタンとフィールドの列が自動的に追加、<see cref="T:System.Web.UI.WebControls.GridView" />コントロール。</summary>
        <value>
          <see langword="true" />自動的に追加する、<see cref="T:System.Web.UI.WebControls.CommandField" />フィールド列です。 各データ行の削除 ボタンとそれ以外の場合、<see langword="false" />です。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 サポートしているデータ ソース コントロールがバインドされているときに、<xref:System.Web.UI.WebControls.GridView>コントロール、<xref:System.Web.UI.WebControls.GridView>コントロールは、データ ソース コントロールの機能を活用し、削除機能を提供します。  
  
> [!NOTE]
>  データ ソース コントロールがデータを削除するには、データを削除して構成する必要があります。 レコードを削除するデータ ソース コントロールを構成するのには、特定のデータ ソース コントロールのドキュメントを参照してください。  
  
 ときに、<xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A>プロパティに設定されている`true`、列 (によって表される、<xref:System.Web.UI.WebControls.CommandField>オブジェクト) の各データの削除 ボタンで行が自動的に追加、<xref:System.Web.UI.WebControls.GridView>コントロール。 永続的に、行の削除 ボタンをクリックすると、データ ソースからそのレコードを削除します。  
  
> [!NOTE]
>  設定する必要も、<xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A>キー フィールドまたは自動削除機能を使用するには、データ ソースのフィールドを識別するプロパティです。  
  
 <xref:System.Web.UI.WebControls.GridView>コントロールに行が削除されるときに、カスタム アクションを実行するのに使用できるいくつかのイベントが用意されています。 次の表には、使用可能なイベントが一覧表示します。  
  
|イベント|説明|  
|-----------|-----------------|  
|<xref:System.Web.UI.WebControls.GridView.RowDeleted>|後で、行の削除 ボタンがクリックされたときに発生、<xref:System.Web.UI.WebControls.GridView>コントロールがデータ ソースからレコードを削除します。 このイベントは、削除操作の結果の確認によく使用されます。|  
|<xref:System.Web.UI.WebControls.GridView.RowDeleting>|その前に、行の削除 ボタンがクリックされたときに発生、<xref:System.Web.UI.WebControls.GridView>コントロールがデータ ソースからレコードを削除します。 このイベントは削除操作をキャンセルによく使用されます。|  
  
   
  
## Examples  
 次の例で使用する方法、<xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A>の自動削除機能を有効にするプロパティ、<xref:System.Web.UI.WebControls.GridView>コントロール。  
  
 [!code-aspx-csharp[GridViewEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewEdit/CS/editorders.aspx#1)]
 [!code-aspx-vb[GridViewEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewEdit/VB/editorders.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoGenerateEditButton">
      <MemberSignature Language="C#" Value="public virtual bool AutoGenerateEditButton { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoGenerateEditButton" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.AutoGenerateEditButton" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定を示す値かどうか、<see cref="T:System.Web.UI.WebControls.CommandField" />に各データ行の編集 ボタンとフィールドの列が自動的に追加、<see cref="T:System.Web.UI.WebControls.GridView" />コントロール。</summary>
        <value>
          <see langword="true" />自動的に追加する、<see cref="T:System.Web.UI.WebControls.CommandField" />フィールド列です。 各データ行の編集 ボタンとそれ以外の場合、<see langword="false" />です。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 更新をサポートするデータ ソース コントロールをバインドするときに、<xref:System.Web.UI.WebControls.GridView>コントロール、<xref:System.Web.UI.WebControls.GridView>コントロールは、データ ソース コントロールの機能を活用し、自動更新機能を提供します。  
  
> [!NOTE]
>  データ ソース コントロールがデータを更新するには、データ更新を構成する必要があります。 レコードを更新するデータ ソース コントロールを構成するのには、特定のデータ ソース コントロールのドキュメントを参照してください。  
  
 ときに、<xref:System.Web.UI.WebControls.GridView.AutoGenerateEditButton%2A>プロパティに設定されている`true`、列 (によって表される、<xref:System.Web.UI.WebControls.CommandField>オブジェクト) の各データの編集 ボタンに行が自動的に追加、<xref:System.Web.UI.WebControls.GridView>コントロール。 行の編集 ボタンをクリックするとは、その行を編集モードにします。 行は、編集モードでは、読み取り専用ではない行の場合は、各列フィールドが表示されます、適切な入力コントロールなど、<xref:System.Web.UI.WebControls.TextBox>フィールドのデータ型の制御します。 これにより、ユーザーがフィールドの値を変更できます。  
  
 クリックすると、[編集] ボタンは、[更新] ボタンと [キャンセル] ボタンも置換されます。 [更新] ボタンをクリックするの値が変更データ ソース内の行を更新し、モードを表示する行を返します。 [キャンセル] ボタンをクリックすると、値の変更を破棄し、モードを表示する行を返します。  
  
> [!NOTE]
>  設定して、編集モードに行を配置できるプログラムで、<xref:System.Web.UI.WebControls.GridView.EditIndex%2A>行のインデックスを持つプロパティです。 プログラムで終了するには編集モードを設定、<xref:System.Web.UI.WebControls.GridView.EditIndex%2A>プロパティを-1 にします。  
  
 設定する必要があります組み込みの更新機能を使用する場合、<xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A>主キー フィールドまたはデータ ソースのフィールドを識別するフィールドのコンマ区切りのリストを持つプロパティの名前です。 それ以外の場合、組み込みの更新機能によって適切なレコードを更新できません。 フィールド列を使用して自動的に生成する (設定して、<xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A>プロパティを`true`) では、<xref:System.Web.UI.WebControls.GridView>コントロールに自動的に確実に、フィールドで指定されたフィールドに対応する自動的に生成されたフィールドの列は、<xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A>プロパティは読み取り専用です。  
  
 使用して編集モードになっている行の外観を制御することができます、<xref:System.Web.UI.WebControls.GridView.EditRowStyle%2A>プロパティです。 通常、一般的な設定には、カスタムの背景色、前景色、およびフォントのプロパティが含まれます。  
  
 <xref:System.Web.UI.WebControls.GridView>コントロールに行が更新されたときに、カスタム アクションを実行するのに使用できるいくつかのイベントが用意されています。 次の表には、使用可能なイベントが一覧表示します。  
  
|イベント|説明|  
|-----------|-----------------|  
|<xref:System.Web.UI.WebControls.GridView.RowCancelingEdit>|その前に、行の [キャンセル] ボタンがクリックされたときに発生、<xref:System.Web.UI.WebControls.GridView>コントロールが編集モードを終了をキャンセルします。 このイベントは、キャンセル操作を停止するよく使用されます。|  
|<xref:System.Web.UI.WebControls.GridView.RowEditing>|その前に、行の編集 ボタンがクリックされたときに発生、<xref:System.Web.UI.WebControls.GridView>コントロールが編集モードに入ります。 このイベントは、編集操作を取り消すよく使用されます。|  
|<xref:System.Web.UI.WebControls.GridView.RowUpdated>|後で、行の更新ボタンがクリックされたときに発生、<xref:System.Web.UI.WebControls.GridView>コントロールは、行を更新します。 このイベントは、更新操作の結果の確認によく使用されます。|  
|<xref:System.Web.UI.WebControls.GridView.RowUpdating>|その前に、行の更新 ボタンがクリックされたときに発生、<xref:System.Web.UI.WebControls.GridView>コントロールは、行を更新します。 このイベントは、更新操作を取り消すよく使用されます。|  
  
   
  
## Examples  
 次の例で使用する方法、<xref:System.Web.UI.WebControls.GridView.AutoGenerateEditButton%2A>の自動編集機能を有効にするプロパティ、<xref:System.Web.UI.WebControls.GridView>コントロール。  
  
 [!code-aspx-csharp[GridViewEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewEdit/CS/editorders.aspx#1)]
 [!code-aspx-vb[GridViewEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewEdit/VB/editorders.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoGenerateSelectButton">
      <MemberSignature Language="C#" Value="public virtual bool AutoGenerateSelectButton { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoGenerateSelectButton" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.AutoGenerateSelectButton" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定を示す値かどうか、<see cref="T:System.Web.UI.WebControls.CommandField" />に各データ行の選択 ボタンとフィールドの列が自動的に追加、<see cref="T:System.Web.UI.WebControls.GridView" />コントロール。</summary>
        <value>
          <see langword="true" />自動的に追加する、 <see cref="T:System.Web.UI.WebControls.CommandField" /> ; の各データ行の選択 ボタンのフィールド列それ以外の場合、<see langword="false" />です。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ときに、<xref:System.Web.UI.WebControls.GridView.AutoGenerateSelectButton%2A>プロパティに設定されている`true`、列 (によって表される、<xref:System.Web.UI.WebControls.CommandField>オブジェクト) と各データの選択ボタンに行が自動的に追加、<xref:System.Web.UI.WebControls.GridView>コントロール。 行コントロール内の該当する行を選択するには、[選択] ボタンをクリックすると、設定、<xref:System.Web.UI.WebControls.GridView.SelectedIndex%2A>プロパティを行のインデックス。 取得する、<xref:System.Web.UI.WebControls.GridViewRow>を使用して、選択した行を表すオブジェクト、<xref:System.Web.UI.WebControls.GridView.SelectedRow%2A>プロパティです。 使用して、選択したレコードの主キーの値を取得することもできます、<xref:System.Web.UI.WebControls.GridView.SelectedValue%2A>プロパティです。 <xref:System.Web.UI.WebControls.GridView.SelectedValue%2A>プロパティにはで指定されたキー フィールドの値が含まれています、<xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A>プロパティです。  
  
> [!NOTE]
>  プログラムで設定して行を選択することができます、<xref:System.Web.UI.WebControls.GridView.SelectedIndex%2A>プロパティです。 行の選択を取り消す場合に、設定、<xref:System.Web.UI.WebControls.GridView.SelectedIndex%2A>プロパティを-1 にします。  
  
 使用して、選択した行の外観を制御することができます、<xref:System.Web.UI.WebControls.GridView.SelectedRowStyle%2A>プロパティです。 通常、一般的な設定には、カスタムの背景色、前景色、およびフォントのプロパティが含まれます。  
  
 <xref:System.Web.UI.WebControls.GridView>コントロールは、行が選択されているときに、カスタム アクションを実行するのに使用できるいくつかのイベントを提供します。 次の表には、使用可能なイベントが一覧表示します。  
  
|イベント|説明|  
|-----------|-----------------|  
|<xref:System.Web.UI.WebControls.GridView.SelectedIndexChanged>|後で、行の選択 ボタンがクリックされたときに発生、<xref:System.Web.UI.WebControls.GridView>コントロールは、select 操作を処理します。 このイベントは、コントロールで行を選択した後にタスクを実行する多くの場合、使用します。|  
|<xref:System.Web.UI.WebControls.GridView.SelectedIndexChanging>|その前に、行の選択 ボタンがクリックされたときに発生、<xref:System.Web.UI.WebControls.GridView>コントロールは、select 操作を処理します。 このイベントを選択すると、操作を取り消すよく使用されます。|  
  
   
  
## Examples  
 次の例で使用する方法、<xref:System.Web.UI.WebControls.GridView.AutoGenerateSelectButton%2A>の自動選択機能を有効にするプロパティ、<xref:System.Web.UI.WebControls.GridView>コントロール。  
  
 [!code-aspx-csharp[GridViewSelect#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewSelect/CS/gridviewselectcs.aspx#1)]
 [!code-aspx-vb[GridViewSelect#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewSelect/VB/gridviewselectvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackImageUrl">
      <MemberSignature Language="C#" Value="public virtual string BackImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BackImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.BackImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはの背景に表示するイメージへの URL を設定、<see cref="T:System.Web.UI.WebControls.GridView" />コントロール。</summary>
        <value>背景に表示するイメージの URL、<see cref="T:System.Web.UI.WebControls.GridView" />コントロール。 既定値は空の文字列 ("") です。このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.GridView.BackImageUrl%2A>の背景に表示するイメージの URL を指定するプロパティ、<xref:System.Web.UI.WebControls.GridView>コントロール。  
  
> [!NOTE]
>  指定したイメージがより小さい場合、<xref:System.Web.UI.WebControls.GridView>背景を埋めるためにコントロール、イメージを並べて表示します。 イメージ コントロールよりも大きい場合は、イメージをトリミングします。  
  
   
  
## Examples  
 次の例で使用する方法、<xref:System.Web.UI.WebControls.GridView.BackImageUrl%2A>のバック グラウンドでカスタム イメージを表示するプロパティを<xref:System.Web.UI.WebControls.GridView>コントロール。  
  
 [!code-aspx-csharp[GridViewBackImageUrl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewBackImageUrl/CS/gridviewbackimageurlcs.aspx#1)]
 [!code-aspx-vb[GridViewBackImageUrl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewBackImageUrl/VB/gridviewbackimageurlvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BottomPagerRow">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.GridViewRow BottomPagerRow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.GridViewRow BottomPagerRow" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.BottomPagerRow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridViewRow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得、 <see cref="T:System.Web.UI.WebControls.GridViewRow" /> 、下部のページャー行を表すオブジェクト、<see cref="T:System.Web.UI.WebControls.GridView" />コントロール。</summary>
        <value>A<see cref="T:System.Web.UI.WebControls.GridViewRow" />コントロールの下部のページャー行を表すです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ページングが有効な場合 (設定して、<xref:System.Web.UI.WebControls.GridView.AllowPaging%2A>プロパティを`true`)、ページャー行と呼ばれる追加の行がで自動的に表示されます、<xref:System.Web.UI.WebControls.GridView>コントロール。 ページャー行には、上部、下部、または両方の上部と下部コントロールの表示可能なユーザーが他のページに移動できるようにするコントロールが含まれています。 使用して、<xref:System.Web.UI.WebControls.GridView.BottomPagerRow%2A>プロパティにプログラムでアクセス、 <xref:System.Web.UI.WebControls.GridViewRow> 、下部のページャー行を表すオブジェクト、<xref:System.Web.UI.WebControls.GridView>コントロール。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.GridView.BottomPagerRow%2A>プロパティは、使用した場合にのみ、<xref:System.Web.UI.WebControls.GridView>コントロールは、下のページャー行を作成、<xref:System.Web.UI.WebControls.GridView.RowCreated>イベント。  
  
 カスタム コンテンツを追加する場合などの一番下のページャー行をプログラムで操作する必要がある場合、このプロパティは使用一般的です。 変更を加える、<xref:System.Web.UI.WebControls.GridView.BottomPagerRow%2A>プロパティは、後に実行する必要があります、<xref:System.Web.UI.WebControls.GridView>レンダリングされた、それ以外のコントロールが表示された、<xref:System.Web.UI.WebControls.GridView>コントロール変更は上書きされます。  
  
   
  
## Examples  
 次の例で使用する方法、 <xref:System.Web.UI.WebControls.GridView.BottomPagerRow%2A> 、下部のページャー行にアクセスするプロパティ、<xref:System.Web.UI.WebControls.GridView>コントロール。 <xref:System.Web.UI.WebControls.GridView.BottomPagerRow%2A>プロパティが取得に使用される、<xref:System.Web.UI.WebControls.DropDownList>ページャー行から制御します。  
  
 [!code-aspx-csharp[GridViewPagerTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewPagerTemplate/CS/gridviewpagertemplatecs.aspx#1)]
 [!code-aspx-vb[GridViewPagerTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewPagerTemplate/VB/gridviewpagertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Caption">
      <MemberSignature Language="C#" Value="public virtual string Caption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Caption" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.Caption" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の HTML caption 要素に表示するテキスト、<see cref="T:System.Web.UI.WebControls.GridView" />コントロール。 このプロパティは、コントロールを支援テクノロジ デバイスのユーザーにアクセスしやすくものです。</summary>
        <value>代わりに HTML caption 要素に表示するテキストを表す文字列、<see cref="T:System.Web.UI.WebControls.GridView" />コントロール。 既定値は、空の文字列 ("") です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.GridView.Caption%2A>プロパティの HTML caption 要素に表示するテキストを指定する、<xref:System.Web.UI.WebControls.GridView>コントロール。 指定したテキストは、支援テクノロジ デバイスでコントロールを使いやすくするために使用できるテーブルの説明を提供します。 使用して HTML caption 要素を表示する位置を指定することも、<xref:System.Web.UI.WebControls.GridView.CaptionAlign%2A>プロパティです。  
  
 このプロパティの値を設定すると、デザイナーのツールを使用して、リソース ファイルに自動的に保存できます。 詳細については、次を参照してください。<xref:System.ComponentModel.LocalizableAttribute>と[グローバリゼーションとローカリゼーション](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)です。  
  
   
  
## Examples  
 次の例で使用する方法、<xref:System.Web.UI.WebControls.GridView.Caption%2A>のキャプションを指定するプロパティ、<xref:System.Web.UI.WebControls.GridView>コントロール。  
  
 [!code-aspx-csharp[GridViewCaption#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewCaption/CS/gridviewcaptioncs.aspx#1)]
 [!code-aspx-vb[GridViewCaption#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewCaption/VB/gridviewcaptionvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CaptionAlign">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.TableCaptionAlign CaptionAlign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.TableCaptionAlign CaptionAlign" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.CaptionAlign" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableCaptionAlign</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定で HTML caption 要素の水平または垂直方向の位置、<see cref="T:System.Web.UI.WebControls.GridView" />コントロール。 このプロパティは、コントロールを支援テクノロジ デバイスのユーザーにアクセスしやすくものです。</summary>
        <value><see cref="T:System.Web.UI.WebControls.TableCaptionAlign" /> 値のいずれか。 既定値は<see langword="TableCaptionAlign.NotSet" />ブラウザーの既定の設定を使用します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.GridView.CaptionAlign%2A>で HTML caption 要素の水平方向または垂直方向の位置を指定するプロパティ、<xref:System.Web.UI.WebControls.GridView>コントロール。 このプロパティは、コントロールを支援テクノロジ デバイスのユーザーにアクセスしやすくものです。  
  
 このプロパティのいずれかを使用して、<xref:System.Web.UI.WebControls.TableCaptionAlign>列挙値。 次の表は、使用可能な値を一覧表示します。  
  
|値|説明|  
|-----------|-----------------|  
|`TableCaptionAlign.Bottom`|Caption 要素は、テーブルの下部に揃えられます。|  
|`TableCaptionAlign.Left`|Caption 要素は、テーブルの左側に揃えられます。|  
|`TableCaptionAlign.NotSet`|Caption 要素の配置が設定されていません。|  
|`TableCaptionAlign.Right`|Caption 要素は、テーブルの右側に揃えられます。|  
|`TableCaptionAlign.Top`|Caption 要素は、テーブルの上部に揃えられます。|  
  
> [!NOTE]
>  このプロパティに設定するときに`TableCaptionAlign.NotSet`ブラウザーの既定値が使用されます。  
  
 キャプションの HTML 要素のテキストを指定するには、使用、<xref:System.Web.UI.WebControls.GridView.Caption%2A>プロパティです。  
  
   
  
## Examples  
 次の例で使用する方法、<xref:System.Web.UI.WebControls.GridView.CaptionAlign%2A>ことを指定するプロパティの caption 要素、<xref:System.Web.UI.WebControls.GridView>コントロールは、コントロールの上部に揃えられます。  
  
 [!code-aspx-csharp[GridViewCaption#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewCaption/CS/gridviewcaptioncs.aspx#1)]
 [!code-aspx-vb[GridViewCaption#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewCaption/VB/gridviewcaptionvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定した値が、<see cref="T:System.Web.UI.WebControls.TableCaptionAlign" />列挙値。</exception>
      </Docs>
    </Member>
    <Member MemberName="CellPadding">
      <MemberSignature Language="C#" Value="public virtual int CellPadding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CellPadding" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.CellPadding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはセルの内容と、セルの境界線の間の領域の量を設定します。</summary>
        <value>(ピクセル単位) のセルの内容と、セルの境界線の間の領域の量。 既定値は、-1 で、このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.GridView.CellPadding%2A>セルの内容と、セルの境界線の間の余白を制御するプロパティです。 指定されたパディングの量は、セルの 4 つすべての側面に追加されます。  
  
 同じ列のすべてのセル、<xref:System.Web.UI.WebControls.GridView>コントロールが同じ幅を持ちます。 余白の量が最大幅のセルに適用され、列内の他のすべてのセルは、このセル幅を持ちます。 同様に、同じ行のすべてのセルには、同じ高さがあります。 余白の量は、行の行内のセルに適用され、他のすべてのセルの行にあるこのセルの高さ。 個々 のセルのサイズを指定することはできません。  
  
   
  
## Examples  
 次の例で使用する方法、<xref:System.Web.UI.WebControls.GridView.CellPadding%2A>プロパティを宣言して、セルの内容と、セルの境界線の間の領域の量を設定します。  
  
 [!code-aspx-csharp[GridViewCellPadding#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewCellPadding/CS/gridviewcellpaddingcs.aspx#1)]
 [!code-aspx-vb[GridViewCellPadding#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewCellPadding/VB/gridviewcellpaddingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CellSpacing">
      <MemberSignature Language="C#" Value="public virtual int CellSpacing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CellSpacing" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.CellSpacing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはセル間の領域の量を設定します。</summary>
        <value>セルの間隔をピクセル単位で指定します。 既定値は 0 です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.GridView.CellSpacing%2A>の隣接するセルの間隔を制御するプロパティ、<xref:System.Web.UI.WebControls.GridView>コントロール。 この間隔は、垂直および水平方向の両方に適用されます。 セルの間隔は、コントロール全体の統一されています。 行または列の個々 のセルの間隔を指定することはできません。  
  
> [!NOTE]
>  このプロパティを 0 より大きい値に設定し、し、設定するかどうか、<xref:System.Web.UI.WebControls.GridView.GridLines%2A>プロパティ セルの境界線が表示される値、ギャップは隣接するセルの境界線間に表示されます。 このような状況で、<xref:System.Web.UI.WebControls.Table.CellSpacing%2A>プロパティは、ギャップのサイズを制御します。  
  
   
  
## Examples  
 次の例で使用する方法、<xref:System.Web.UI.WebControls.GridView.CellSpacing%2A>プロパティのセル間の領域の量を宣言して設定を<xref:System.Web.UI.WebControls.GridView>コントロール。  
  
 [!code-aspx-csharp[GridViewCellPadding#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewCellPadding/CS/gridviewcellpaddingcs.aspx#1)]
 [!code-aspx-vb[GridViewCellPadding#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewCellPadding/VB/gridviewcellpaddingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientIDRowSuffix">
      <MemberSignature Language="C#" Value="public virtual string[] ClientIDRowSuffix { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] ClientIDRowSuffix" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.ClientIDRowSuffix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.StringArrayConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の値を持つに追加されます。 データ フィールドの名前、<see cref="P:System.Web.UI.Control.ClientID" />プロパティの値を、データ バインド コントロールの各インスタンスを一意に識別します。</summary>
        <value>ASP.NET によって生成されるときに、データ バインド コントロールの各インスタンスを一意に識別するための値を持つデータ フィールドの名前、<see cref="P:System.Web.UI.Control.ClientID" />値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 防ぐために、コントロールの複数のインスタンスが複数の行に表示される場合に名前付けの競合、<xref:System.Web.UI.WebControls.GridView>コントロール、ASP.NET を生成する一意<xref:System.Web.UI.Control.ClientID%2A>インスタンスごとの値。 指定する方法、<xref:System.Web.UI.Control.ClientID%2A>設定によって値が生成された、<xref:System.Web.UI.Control.ClientIDMode%2A>プロパティです。 設定した場合、<xref:System.Web.UI.Control.ClientIDMode%2A>プロパティを<xref:System.Web.UI.ClientIDMode.Predictable>、ASP.NET が生成されます、<xref:System.Web.UI.Control.ClientID%2A>またはで指定されている複数のデータ フィールドから派生したサフィックスを付加した<xref:System.Web.UI.WebControls.GridView.ClientIDRowSuffix%2A>です。 場合<xref:System.Web.UI.WebControls.GridView.ClientIDRowSuffix%2A>が設定されていない、サフィックスにシーケンス番号。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientIDRowSuffixDataKeys">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.DataKeyArray ClientIDRowSuffixDataKeys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataKeyArray ClientIDRowSuffixDataKeys" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.ClientIDRowSuffixDataKeys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataKeyArray</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ASP.NET によって生成されるときに、データ バインド コントロールの各インスタンスを一意に識別するために使用するデータ値を取得、<see cref="P:System.Web.UI.Control.ClientID" />値。</summary>
        <value>ASP.NET によって生成されるときに、データ バインド コントロールの各インスタンスを一意に識別するために使用されるデータ値、<see cref="P:System.Web.UI.Control.ClientID" />値。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Columns">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.DataControlFieldCollection Columns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataControlFieldCollection Columns" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.Columns" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.DataControlFieldTypeEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataControlFieldCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コレクションを取得<see cref="T:System.Web.UI.WebControls.DataControlField" />で列フィールドを表すオブジェクト、<see cref="T:System.Web.UI.WebControls.GridView" />コントロール。</summary>
        <value>A<see cref="T:System.Web.UI.WebControls.DataControlFieldCollection" />内のすべての列フィールドを含む、<see cref="T:System.Web.UI.WebControls.GridView" />コントロール。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 列のフィールド内の列を表す、<xref:System.Web.UI.WebControls.GridView>コントロール。 <xref:System.Web.UI.WebControls.GridView.Columns%2A>で描画されたすべての列を明示的に宣言されたフィールドを格納するプロパティ (コレクション) が使用される、<xref:System.Web.UI.WebControls.GridView>コントロール。 使用することも、<xref:System.Web.UI.WebControls.GridView.Columns%2A>プログラムで列フィールドのコレクションを管理するコレクション。  
  
> [!NOTE]
>  明示的に宣言された列のフィールドは、自動的に生成された列のフィールドと組み合わせて使用できます。 両方を使用する場合に最初に明示的に宣言された列のフィールドがレンダリング後に自動的に生成される列フィールドがされます。 自動的に生成される列フィールドは追加されません、<xref:System.Web.UI.WebControls.GridView.Columns%2A>コレクション。  
  
 表示される列フィールド、<xref:System.Web.UI.WebControls.GridView>コントロールに列フィールドが表示される順序で、<xref:System.Web.UI.WebControls.GridView.Columns%2A>コレクション。 次の表は、別の列から派生したクラスのフィールド、<xref:System.Web.UI.WebControls.DataControlField>クラスし、で使用できる、<xref:System.Web.UI.WebControls.GridView.Columns%2A>コレクション。  
  
|列フィールドの種類|説明|  
|-----------------------|-----------------|  
|<xref:System.Web.UI.WebControls.BoundField>|データ ソースのフィールドの値を表示します。 これは、既定の列の種類、<xref:System.Web.UI.WebControls.GridView>コントロール。|  
|<xref:System.Web.UI.WebControls.ButtonField>|内の各項目のコマンド ボタンを表示、<xref:System.Web.UI.WebControls.GridView>コントロール。 これにより、追加または削除 ボタンなどのカスタム ボタン コントロールの列を作成することができます。|  
|<xref:System.Web.UI.WebControls.CheckBoxField>|内の各項目のチェック ボックスを表示、<xref:System.Web.UI.WebControls.GridView>コントロール。 通常、この列フィールドの種類は、ブール値を持つフィールドを表示する場合に使用されます。|  
|<xref:System.Web.UI.WebControls.CommandField>|定義済みの選択 を実行するコマンド ボタンの表示、編集または削除操作です。|  
|<xref:System.Web.UI.WebControls.HyperLinkField>|ハイパーリンクとして、データ ソースのフィールドの値を表示します。 この列のフィールド型では、2 番目のフィールドをハイパーリンクの URL にバインドすることができます。|  
|<xref:System.Web.UI.WebControls.ImageField>|内の各項目のイメージを表示、<xref:System.Web.UI.WebControls.GridView>コントロール。|  
|<xref:System.Web.UI.WebControls.TemplateField>|項目ごとにユーザー定義のコンテンツを表示、<xref:System.Web.UI.WebControls.GridView>指定したテンプレートに応じて、コントロール。 この列のフィールド型では、列のカスタム フィールドを作成することができます。|  
  
 プログラムで列フィールドを追加することができますが、<xref:System.Web.UI.WebControls.GridView.Columns%2A>コレクション、宣言的に列フィールドが一覧に簡単には、<xref:System.Web.UI.WebControls.GridView>を制御し、使用して、<xref:System.Web.UI.WebControls.DataControlField.Visible%2A>または列の各フィールドを非表示には、各列フィールドのプロパティです。  
  
 場合、 <xref:System.Web.UI.WebControls.DataControlField.Visible%2A> 、列のフィールドのプロパティに設定されて`false`に、列が表示されていない、<xref:System.Web.UI.WebControls.GridView>コントロールと列のデータは行いませんラウンド トリップをクライアントにします。 ラウンド トリップに現在表示されていない列のデータを表示する場合は、フィールド名を追加、<xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A>プロパティです。  
  
   
  
## Examples  
 次の例では、設定する方法について、<xref:System.Web.UI.WebControls.GridView.Columns%2A>コレクション宣言します。  
  
 [!code-aspx-csharp[GridViewColumnFields#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewColumnFields/CS/gridviewcolumnfieldscs.aspx#1)]
 [!code-aspx-vb[GridViewColumnFields#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewColumnFields/VB/gridviewcolumnfieldsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnsGenerator">
      <MemberSignature Language="C#" Value="public System.Web.UI.IAutoFieldGenerator ColumnsGenerator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.IAutoFieldGenerator ColumnsGenerator" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.ColumnsGenerator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.IAutoFieldGenerator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の列が自動的に生成されるコントロール、 <see cref="T:System.Web.UI.WebControls.GridView" /> ASP.NET Dynamic Data 機能を使用するコントロール。</summary>
        <value>コントロールの列が自動的に生成される、 <see cref="T:System.Web.UI.WebControls.GridView" /> ASP.NET Dynamic Data 機能を使用するコントロール。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ページの ASP.NET Dynamic Data 機能を使用するために追加する必要があります、<xref:System.Web.DynamicData.DynamicDataManager>ページを制御します。 これは、ページ内のデータ バインド コントロールの ASP.NET Dynamic Data 機能などにより<xref:System.Web.UI.WebControls.GridView>コントロール。 個人を有効にする<xref:System.Web.UI.WebControls.GridView>Dynamic Data 機能を使用するコントロールを使用して関連付ける必要があります、<xref:System.Web.DynamicData.DynamicDataManager>コントロールを呼び出して、<xref:System.Web.DynamicData.DynamicDataManager.RegisterControl%2A?displayProperty=nameWithType>メソッド中に、`Page_Init`イベント。 このメソッドは自動的に設定、<xref:System.Web.UI.WebControls.GridView.ColumnsGenerator%2A>プロパティを<xref:System.Web.DynamicData.DynamicDataManager>オブジェクト。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAutoGeneratedColumn">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.AutoGeneratedField CreateAutoGeneratedColumn (System.Web.UI.WebControls.AutoGeneratedFieldProperties fieldProperties);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.AutoGeneratedField CreateAutoGeneratedColumn(class System.Web.UI.WebControls.AutoGeneratedFieldProperties fieldProperties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.CreateAutoGeneratedColumn(System.Web.UI.WebControls.AutoGeneratedFieldProperties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This is kept for backward compatibility - this API is no more used")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.AutoGeneratedField</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fieldProperties" Type="System.Web.UI.WebControls.AutoGeneratedFieldProperties" />
      </Parameters>
      <Docs>
        <param name="fieldProperties"><see cref="T:System.Web.UI.WebControls.AutoGeneratedFieldProperties" />を作成する自動生成される列フィールドのプロパティを表すです。</param>
        <summary>自動的に生成される列フィールドを作成します。</summary>
        <returns><see cref="T:System.Web.UI.WebControls.AutoGeneratedField" />で指定された列が自動的に生成されたフィールドを表す、<paramref name="fieldProperties" />パラメーター。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.CreateAutoGeneratedColumn%2A>メソッドは自動的に生成された列の作成に使用時にフィールド、<xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A>プロパティに設定されている`true`です。 自動的に生成される列フィールドのプロパティを使用して指定、<xref:System.Web.UI.WebControls.AutoGeneratedFieldProperties>に含まれているオブジェクト、`fieldProperties`パラメーター。  
  
> [!NOTE]
>  このメソッドが拡張するコントロールの開発者によって、主に使用、<xref:System.Web.UI.WebControls.GridView>コントロール。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateChildControls">
      <MemberSignature Language="C#" Value="protected override int CreateChildControls (System.Collections.IEnumerable dataSource, bool dataBinding);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance int32 CreateChildControls(class System.Collections.IEnumerable dataSource, bool dataBinding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.CreateChildControls(System.Collections.IEnumerable,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Collections.IEnumerable" />
        <Parameter Name="dataBinding" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="dataSource"><see cref="T:System.Collections.IEnumerable" />のデータ ソースを格納している、<see cref="T:System.Web.UI.WebControls.GridView" />コントロール。</param>
        <param name="dataBinding">
          <see langword="true" />子コントロールがデータにバインドされているを示すためにそれ以外の場合、<see langword="false" />です。</param>
        <summary>表示するために使用されるコントロールの階層を作成、<see cref="T:System.Web.UI.WebControls.GridView" />指定されたデータ ソースを使用して制御します。</summary>
        <returns>作成される行の数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.CreateChildControls%2A>のコントロールの階層構造を作成するメソッドが使用される、<xref:System.Web.UI.WebControls.GridView>コントロール。  
  
> [!NOTE]
>  このメソッドが拡張するコントロールの開発者によって、主に使用、<xref:System.Web.UI.WebControls.GridView>コントロール。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <paramref name="dataSource" />null を返して<see cref="T:System.Web.UI.DataSourceView" />です。  
  
 または  
  
 <paramref name="dataSource" />実装していません、<see cref="T:System.Collections.ICollection" />インターフェイスし、返すことはできません、<see cref="P:System.Web.UI.DataSourceSelectArguments.TotalRowCount" />です。  
  
 または  
  
 <see cref="P:System.Web.UI.WebControls.GridView.AllowPaging" /><see langword="true" />と<paramref name="dataSource" />を実装しません、<see cref="T:System.Collections.ICollection" />インターフェイスし、データ ソース ページングを実行できません。  
  
 または  
  
 <paramref name="dataSource" />実装していません、<see cref="T:System.Collections.ICollection" />インターフェイスと<paramref name="dataBinding" />に設定されている<see langword="false" />です。</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateChildTable">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.Table CreateChildTable ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.Table CreateChildTable() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.CreateChildTable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Table</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>新しい子テーブルを作成します。</summary>
        <returns>新しいは常に返します<see cref="T:System.Web.UI.WebControls.Table" />子テーブルを表すです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.CreateChildTable%2A>メソッドで使用されるヘルパー メソッド、<xref:System.Web.UI.WebControls.GridView>子テーブルを作成するコントロール。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateColumns">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.ICollection CreateColumns (System.Web.UI.WebControls.PagedDataSource dataSource, bool useDataSource);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.ICollection CreateColumns(class System.Web.UI.WebControls.PagedDataSource dataSource, bool useDataSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.CreateColumns(System.Web.UI.WebControls.PagedDataSource,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Web.UI.WebControls.PagedDataSource" />
        <Parameter Name="useDataSource" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="dataSource">A<see cref="T:System.Web.UI.WebControls.PagedDataSource" />データ ソースを表すです。</param>
        <param name="useDataSource">
          <see langword="true" />指定されたデータ ソースを使用する、<c>データソース</c>パラメーターです。 それ以外の場合、<see langword="false" />です。</param>
        <summary>コントロールの階層構造を構築するために使用する列フィールドのセットを作成します。</summary>
        <returns>A<see cref="T:System.Collections.ICollection" />コントロール階層の構築に使用するフィールドを格納しています。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ときに、<xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A>プロパティに設定されている`true`、データ ソースのフィールドごとに、バインドされた列のフィールドが自動的に作成します。 バインドされた列の各フィールド内の行として表示されます、<xref:System.Web.UI.WebControls.GridView>データ ソースのフィールドの順序で制御します。 <xref:System.Web.UI.WebControls.GridView.CreateColumns%2A>メソッドの使用を自動的に生成される列フィールドを作成します。  
  
> [!NOTE]
>  このメソッドが拡張するコントロールの開発者によって、主に使用、<xref:System.Web.UI.WebControls.GridView>コントロール。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateControlStyle">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.Style CreateControlStyle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.Style CreateControlStyle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.CreateControlStyle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>コントロールの既定のスタイルを作成します。</summary>
        <returns>A<see cref="T:System.Web.UI.WebControls.Style" />コントロールのスタイルを表すです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.CreateControlStyle%2A>コントロールの既定のスタイルを作成するメソッドを使用します。  
  
> [!NOTE]
>  このメソッドが拡張するコントロールの開発者によって、主に使用、<xref:System.Web.UI.WebControls.GridView>コントロール。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDataSourceSelectArguments">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.DataSourceSelectArguments CreateDataSourceSelectArguments ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.DataSourceSelectArguments CreateDataSourceSelectArguments() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.CreateDataSourceSelectArguments" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceSelectArguments</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>作成、<see cref="T:System.Web.UI.DataSourceSelectArguments" />処理のため、データ ソースに渡される引数を格納するオブジェクト。</summary>
        <returns>A<see cref="T:System.Web.UI.DataSourceSelectArguments" />データ ソースに渡された引数を格納しています。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.CreateDataSourceSelectArguments%2A>メソッドは、ヘルパー メソッドによって呼び出される、<xref:System.Web.UI.WebControls.GridView>コントロールを作成、<xref:System.Web.UI.DataSourceSelectArguments>データ ソースに渡される引数を格納するオブジェクト。 この実装では、<xref:System.Web.UI.DataSourceSelectArguments>オブジェクトには、ページング操作の引数が含まれています。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>拡張するとき、<see cref="T:System.Web.UI.WebControls.GridView" />クラス、データ ソースに渡される値を指定するには、このメソッドをオーバーライドすることができます。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="CreateRow">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.GridViewRow CreateRow (int rowIndex, int dataSourceIndex, System.Web.UI.WebControls.DataControlRowType rowType, System.Web.UI.WebControls.DataControlRowState rowState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.GridViewRow CreateRow(int32 rowIndex, int32 dataSourceIndex, valuetype System.Web.UI.WebControls.DataControlRowType rowType, valuetype System.Web.UI.WebControls.DataControlRowState rowState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.CreateRow(System.Int32,System.Int32,System.Web.UI.WebControls.DataControlRowType,System.Web.UI.WebControls.DataControlRowState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridViewRow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="dataSourceIndex" Type="System.Int32" />
        <Parameter Name="rowType" Type="System.Web.UI.WebControls.DataControlRowType" />
        <Parameter Name="rowState" Type="System.Web.UI.WebControls.DataControlRowState" />
      </Parameters>
      <Docs>
        <param name="rowIndex">作成するのには、行のインデックス。</param>
        <param name="dataSourceIndex">行のバインド先の項目をソース データのインデックス。</param>
        <param name="rowType"><see cref="T:System.Web.UI.WebControls.DataControlRowType" /> 値のいずれか。</param>
        <param name="rowState"><see cref="T:System.Web.UI.WebControls.DataControlRowState" /> 値のいずれか。</param>
        <summary>内の行を作成、<see cref="T:System.Web.UI.WebControls.GridView" />コントロール。</summary>
        <returns>A<see cref="T:System.Web.UI.WebControls.GridViewRow" />指定されたパラメーターを使用して作成します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.CreateRow%2A>内の行を作成するメソッドが使用される、<xref:System.Web.UI.WebControls.GridView>コントロール。  
  
> [!NOTE]
>  このメソッドが拡張するコントロールの開発者によって、主に使用、<xref:System.Web.UI.WebControls.GridView>コントロール。 データ バインドされた<xref:System.Web.UI.WebControls.GridView>コントロールは、ターゲット データを表示するために必要な行を自動的に生成されます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataBind">
      <MemberSignature Language="C#" Value="public override sealed void DataBind ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void DataBind() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.DataBind" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>データ ソースを <see cref="T:System.Web.UI.WebControls.GridView" /> コントロールにバインドします。 このメソッドは継承できません。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.GridView.DataBind>へのデータ ソースからデータをバインドするメソッド、<xref:System.Web.UI.WebControls.GridView>コントロール。 このメソッドは、コントロールの作業中のテンプレートのすべてのデータ バインディング式を解決します。  
  
 <xref:System.Web.UI.WebControls.GridView.DataBind%2A>場合、メソッドが自動的に呼び出されます、<xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A>のプロパティ、<xref:System.Web.UI.WebControls.GridView>コントロールは有効なデータ ソース コントロールを参照します。  
  
 手動でを呼び出す代わりに、<xref:System.Web.UI.WebControls.GridView.DataBind%2A>メソッド、バインディングを使用するモデルで、<xref:System.Web.UI.WebControls.GridView.DataBind%2A>コントロールを設定して、<xref:System.Web.UI.WebControls.DataBoundControl.SelectMethod%2A>プロパティのデータを返すメソッドの名前を<xref:System.Web.UI.WebControls.GridView>です。 <xref:System.Web.UI.WebControls.GridView> Select メソッドから返されるデータが自動的に設定されます。 モデル バインディングには、データを操作するため、コードが簡略化できます。 詳細については、次を参照してください。[モデル バインドと Web フォーム](http://go.microsoft.com/fwlink/?LinkId=286117)です。  
  
   
  
## Examples  
 次の例で使用する方法、<xref:System.Web.UI.WebControls.GridView.DataBind>をデータ ソースにバインドするメソッド、<xref:System.Web.UI.WebControls.GridView>コントロール。  
  
 [!code-aspx-csharp[GridViewDataBind#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewDataBind/CS/gridviewdatabindcs.aspx#1)]
 [!code-aspx-vb[GridViewDataBind#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewDataBind/VB/gridviewdatabindvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataKeyNames">
      <MemberSignature Language="C#" Value="public virtual string[] DataKeyNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] DataKeyNames" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.DataKeyNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.DataFieldEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.StringArrayConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定に表示されるアイテムの主キー フィールドの名前を含む配列、<see cref="T:System.Web.UI.WebControls.GridView" />コントロール。</summary>
        <value>表示される項目のフィールドの主キーの名前を含む配列、<see cref="T:System.Web.UI.WebControls.GridView" />コントロール。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A>プロパティ、フィールドまたはデータ ソースの主キーを表すフィールドを指定します。 各行を一意に識別するために必要なフィールドに、このプロパティを設定する必要がありますのみたとえば、整数値を一意に場合は、ID 列は、各行を識別します。 設定する必要があります、<xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A>自動の順序でプロパティが更新、および削除の機能、<xref:System.Web.UI.WebControls.GridView>動作を制御します。 これらのキー フィールドの値は、更新または削除する行を指定するために、データ ソース コントロールに渡されます。  
  
 データがキーの値を更新する場合または行の削除を使用して取得する必要がある場合、`Keys`いずれかのプロパティ、<xref:System.Web.UI.WebControls.GridViewUpdateEventArgs>または<xref:System.Web.UI.WebControls.GridViewDeleteEventArgs>クラスです。 たとえば、`e.Keys[0]`内の最初のデータ キーの値を保持する、<xref:System.Web.UI.WebControls.GridView.RowUpdating>または<xref:System.Web.UI.WebControls.GridView.RowDeleting>イベント ハンドラー。  
  
 使用して、行が選択されているときに、データ キーの値を取得する必要がある場合、<xref:System.Web.UI.WebControls.GridView.SelectedDataKey%2A>プロパティです。  
  
 ときに、<xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A>プロパティが設定されて、<xref:System.Web.UI.WebControls.GridView>コントロールを自動的に入力、<xref:System.Web.UI.WebControls.GridView.DataKeys%2A>各行の主キーにアクセスする便利な手段を提供する、指定したフィールドまたはフィールドから値を持つコレクション。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.GridView>コントロールがコントロールの状態でこれらのキー フィールドの値を格納します。 これらの値に機密情報が含まれている場合を設定して、ビュー ステートの暗号化を有効にすることを強くお勧め、<xref:System.Web.UI.Page.ViewStateEncryptionMode%2A>プロパティを`ViewStateEncryptionMode.Always`です。  
  
 フィールドの列を使用する場合に自動的に生成された (設定して、<xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A>プロパティを`true`) では、<xref:System.Web.UI.WebControls.GridView>コントロールを使用するのにまたは複数のフィールドに対応する列が指定されていることを確認して、<xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A>プロパティは読み取り専用です。  
  
 場合、 <xref:System.Web.UI.WebControls.DataControlField.Visible%2A> 、列のフィールドのプロパティに設定されて`false`に、列が表示されていない、<xref:System.Web.UI.WebControls.GridView>コントロールと列のデータは行いませんラウンド トリップをクライアントにします。 場合、データができるように、クライアントに表示されていない列に対して、追加、フィールド名を<xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A>プロパティです。  
  
   
  
## Examples  
 次の例で使用する方法、<xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A>プロパティをデータ ソースのキー フィールドを指定します。 例では、`DataKeyNames`の属性、`GridView`マークアップ内の要素名を区切るためにコンマを使用して、2 つのキー フィールドを指定します。 この例を実行するには、Web サイトは、次を作成します。  
  
-   AdventureWorksLT サンプル データベースとという接続文字列への接続を`AdventureWorksLTConnectionString`です。 AdventureWorksLT サンプル データベースを設定する方法については、次を参照してください。[する方法: an AdventureWorksLT サンプル データベースのセットアップの ASP.NET 開発](http://msdn.microsoft.com/library/2baad633-9d63-49cc-a6b2-917cafd35356)です。  
  
-   名前は、LINQ to SQL データ コンテキスト クラス`AdventureWorksLTDataClassesDataContext`です。 データ コンテキスト SalesOrderDetails テーブルのクラスが必要です。 LINQ to SQL クラスを作成する方法については、次を参照してください。 [LINQ to SQL](http://msdn.microsoft.com/library/73d13345-eece-471a-af40-4cc7a2f11655)です。  
  
 [!code-aspx-csharp[GridViewEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewEdit/CS/editorders.aspx#1)]
 [!code-aspx-vb[GridViewEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewEdit/VB/editorders.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataKeys">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.DataKeyArray DataKeys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataKeyArray DataKeys" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.DataKeys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataKeyArray</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コレクションを取得<see cref="T:System.Web.UI.WebControls.DataKey" />、データを表すオブジェクトのキー内の各行の値、<see cref="T:System.Web.UI.WebControls.GridView" />コントロール。</summary>
        <value>A<see cref="T:System.Web.UI.WebControls.DataKeyArray" />内の各行のデータ キーを格納している、<see cref="T:System.Web.UI.WebControls.GridView" />コントロール。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ときに、<xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A>プロパティが設定されて、<xref:System.Web.UI.WebControls.GridView>コントロールが自動的に作成、<xref:System.Web.UI.WebControls.DataKey>コントロール内の行ごとのオブジェクト。 <xref:System.Web.UI.WebControls.DataKey>オブジェクトにはで指定されたフィールドの値が含まれています、<xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A>プロパティです。 <xref:System.Web.UI.WebControls.DataKey>オブジェクトがコントロールの追加、<xref:System.Web.UI.WebControls.GridView.DataKeys%2A>コレクション。 使用して、<xref:System.Web.UI.WebControls.GridView.DataKeys%2A>取得するプロパティを<xref:System.Web.UI.WebControls.DataKey>オブジェクト内の特定のデータ行を<xref:System.Web.UI.WebControls.GridView>コントロール。  
  
> [!NOTE]
>  使用することができます、<xref:System.Web.UI.WebControls.GridView.SelectedDataKey%2A>取得するプロパティを<xref:System.Web.UI.WebControls.DataKey>現在選択されている行のオブジェクト。 使用することも、<xref:System.Web.UI.WebControls.GridView.SelectedValue%2A>現在選択されている行のデータ キーの値を直接取得するプロパティです。  
  
   
  
## Examples  
 次の例で使用する方法、<xref:System.Web.UI.WebControls.GridView.DataKeys%2A>で選択した行のデータのキー値を決定するプロパティ、<xref:System.Web.UI.WebControls.GridView>コントロール。  
  
 [!code-aspx-csharp[GridViewDataKeys#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewDataKeys/CS/gridviewdatakeyscs.aspx#1)]
 [!code-aspx-vb[GridViewDataKeys#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewDataKeys/VB/gridviewdatakeysvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteMethod">
      <MemberSignature Language="C#" Value="public virtual string DeleteMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DeleteMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.DeleteMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定にデータを削除するために呼び出すメソッドの名前。</summary>
        <value>メソッドの名前。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティを設定すると、データ バインディング メソッドとして使用するモデル バインドします。  
  
 Web フォーム モデル バインディングの使用に関するチュートリアル シリーズは、次を参照してください。[モデル バインディング機能と Web フォーム](http://go.microsoft.com/fwlink/?LinkId=286117)です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteRow">
      <MemberSignature Language="C#" Value="public virtual void DeleteRow (int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteRow(int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.DeleteRow(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rowIndex">削除する行のインデックス。</param>
        <summary>データ ソースから指定したインデックスにあるレコードを削除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.GridView.DeleteRow%2A>メソッドをプログラムによって、データ ソースから指定したインデックスにあるレコードを削除します。 このメソッドは通常、使用の外部からレコードを削除する必要がある場合、<xref:System.Web.UI.WebControls.GridView>を制御するなど、ページ上の異なるコントロールからです。 このメソッドもが発生し、<xref:System.Web.UI.WebControls.GridView.RowDeleted>と<xref:System.Web.UI.WebControls.GridView.RowDeleting>イベント。  
  
   
  
## Examples  
 次の例で使用する方法、<xref:System.Web.UI.WebControls.GridView.DeleteRow%2A>メソッド内のレコードをプログラムで削除する場合、<xref:System.Web.UI.WebControls.GridView>コントロール。  
  
 [!code-aspx-csharp[GridViewDeleteRow#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewDeleteRow/CS/GridViewDeleteRowcs.aspx#1)]
 [!code-aspx-vb[GridViewDeleteRow#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewDeleteRow/VB/GridViewDeleteRowvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><see cref="T:System.Web.UI.WebControls.GridView" />コントロールがデータ ソース コントロールにバインドされていません。</exception>
        <exception cref="T:System.NotSupportedException">データ ソースを制御する、<see cref="T:System.Web.UI.WebControls.GridView" />削除操作をサポートしていませんコントロールがバインドされているか、データ ソースに対して定義された delete コマンドはありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="EditIndex">
      <MemberSignature Language="C#" Value="public virtual int EditIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 EditIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.EditIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定を編集する行のインデックス。</summary>
        <value>編集する行の 0 から始まるインデックス。 既定では-1 で、行が編集されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 行インデックスは 0 から始まる (最初の行がゼロの行)。  
  
 このプロパティは通常、特定のイベント ハンドラーを含む、次のシナリオでのみ使用されます。  
  
-   か、<xref:System.Web.UI.WebControls.GridView>コントロールをページが表示される最初の時間を特定の行の編集モードで開きます。 これを行うには、設定することができます、<xref:System.Web.UI.WebControls.GridView.EditIndex%2A>のハンドラーのプロパティ、<xref:System.Web.UI.Control.Load>のイベント、<xref:System.Web.UI.Page>クラスであるかの<xref:System.Web.UI.WebControls.GridView>コントロール。  
  
-   行が更新された後に編集された行を確認するには。 これを行うから行のインデックスを取得することができます、<xref:System.Web.UI.WebControls.GridView.EditIndex%2A>プロパティに、<xref:System.Web.UI.WebControls.GridView.RowUpdated>イベント ハンドラー。  
  
-   バインドする、<xref:System.Web.UI.WebControls.GridView>を設定してデータ ソースへのコントロール、<xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A>プロパティ プログラムでします。 ここで設定する必要があります、<xref:System.Web.UI.WebControls.GridView.EditIndex%2A>プロパティに、<xref:System.Web.UI.WebControls.GridView.RowEditing>と<xref:System.Web.UI.WebControls.GridView.RowCancelingEdit>イベント ハンドラー。  
  
 設定した場合、<xref:System.Web.UI.WebControls.GridView.EditIndex%2A>プロパティはポストバック後に発生するイベントのハンドラーでよりも後、<xref:System.Web.UI.Control.Load>イベント、<xref:System.Web.UI.WebControls.GridView>コントロールの指定した行の編集モードに切り替わるいない可能性があります。 他のイベント ハンドラーでこのプロパティの値を読み取る場合、編集されている行を反映するように、インデックスは保証されません。  
  
 ユーザーが行を確認するのにはクリックして、**編集**ボタンまたはにハイパーリンクの前に、<xref:System.Web.UI.WebControls.GridView>コントロールが編集モードに入るから行のインデックスを取得することができます、<xref:System.Web.UI.WebControls.GridViewEditEventArgs.NewEditIndex%2A>のプロパティ、<xref:System.Web.UI.WebControls.GridViewEditEventArgs>内のオブジェクト、<xref:System.Web.UI.WebControls.GridView.RowEditing>イベント ハンドラー。  
  
 防ぐために、<xref:System.Web.UI.WebControls.GridView>入力からコントロールを編集モード、ユーザーがクリックした後、**編集**ボタンか、ハイパーリンク、セット、<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>のプロパティ、<xref:System.Web.UI.WebControls.GridViewEditEventArgs>オブジェクトを`true`で、<xref:System.Web.UI.WebControls.GridView.RowEditing>イベント ハンドラー。  
  
   
  
## Examples  
 次の例で使用する方法、<xref:System.Web.UI.WebControls.GridView.EditIndex%2A>で編集された後に、どの行が更新されたプロパティ、<xref:System.Web.UI.WebControls.GridView>コントロール。 更新プログラムが成功したことを示すために、メッセージが表示されます。  
  
 [!code-aspx-csharp[GridViewRows#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewRows/CS/gridviewrowscs.aspx#1)]
 [!code-aspx-vb[GridViewRows#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewRows/VB/gridviewrowsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定されたインデックスは、-1 未満です。</exception>
      </Docs>
    </Member>
    <Member MemberName="EditRowStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle EditRowStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle EditRowStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.EditRowStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>参照を取得、<see cref="T:System.Web.UI.WebControls.TableItemStyle" />で編集するために選択した行の外観を設定できるようにするオブジェクト、<see cref="T:System.Web.UI.WebControls.GridView" />コントロール。</summary>
        <value>参照、<see cref="T:System.Web.UI.WebControls.TableItemStyle" />で編集されている行のスタイルを表す、<see cref="T:System.Web.UI.WebControls.GridView" />コントロール。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.GridView.EditRowStyle%2A>プロパティは編集されている行の外観を制御する、<xref:System.Web.UI.WebControls.GridView>コントロール。 このプロパティは読み取り専用です。ただしのプロパティを設定することができます、<xref:System.Web.UI.WebControls.TableItemStyle>オブジェクトを返します。 プロパティを設定するには、次のいずれかを使用して宣言します。  
  
-   開始タグに属性を配置、<xref:System.Web.UI.WebControls.GridView>フォームでコントロール`Property-Subproperty`ここで、`Subproperty`のプロパティ、<xref:System.Web.UI.WebControls.TableItemStyle>オブジェクト (たとえば、 `EditRowStyle-ForeColor`)。  
  
-   入れ子、`<EditRowStyle>`要素開始タグと終了タグの間、<xref:System.Web.UI.WebControls.GridView>コントロール。  
  
 プロパティがフォームにプログラムで設定することもできます`Property.Subproperty`(たとえば、 `EditRowStyle.ForeColor`)。 通常、一般的な設定には、カスタムの背景色、前景色、およびフォントのプロパティが含まれます。  
  
   
  
## Examples  
 次の例で使用する方法、<xref:System.Web.UI.WebControls.GridView.EditRowStyle%2A>で編集されている行のカスタム スタイルを定義するプロパティ、<xref:System.Web.UI.WebControls.GridView>コントロール。  
  
 [!code-aspx-csharp[GridViewEditRowStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewEditRowStyle/CS/gridvieweditrowstylecs.aspx#1)]
 [!code-aspx-vb[GridViewEditRowStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewEditRowStyle/VB/gridvieweditrowstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EmptyDataRowStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle EmptyDataRowStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle EmptyDataRowStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.EmptyDataRowStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>参照を取得、<see cref="T:System.Web.UI.WebControls.TableItemStyle" />オブジェクトの空のデータ行の外観を設定することができますがレンダリングされるときに、<see cref="T:System.Web.UI.WebControls.GridView" />コントロールがいくつかのレコードがないデータ ソースにバインドされています。</summary>
        <value>参照、 <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> null の行の外観を設定することができます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、 <xref:System.Web.UI.WebControls.GridView.EmptyDataRowStyle%2A> null の行の外観を制御するプロパティ、<xref:System.Web.UI.WebControls.GridView>コントロール。 コントロールにバインドされているデータ ソースにいくつかのレコードが含まれていない場合は、null の行が表示されます。 このプロパティは読み取り専用です。ただしのプロパティを設定することができます、<xref:System.Web.UI.WebControls.TableItemStyle>オブジェクトを返します。 プロパティを設定するには、次のいずれかを使用して宣言します。  
  
-   開始タグに属性を配置、<xref:System.Web.UI.WebControls.GridView>フォームでコントロール`Property-Subproperty`ここで、`Subproperty`のプロパティ、<xref:System.Web.UI.WebControls.TableItemStyle>オブジェクト (たとえば、 `EmptyDataRowStyle-ForeColor`)。  
  
-   入れ子、`<EmptyDataRowStyle>`要素開始タグと終了タグの間、<xref:System.Web.UI.WebControls.GridView>コントロール。  
  
 プロパティがフォームにプログラムで設定することもできます`Property.Subproperty`(たとえば、 `EmptyDataRowStyle.ForeColor`)。 通常、一般的な設定には、カスタムの背景色、前景色、およびフォントのプロパティが含まれます。  
  
   
  
## Examples  
 次の例は、設定する方法を示します、<xref:System.Web.UI.WebControls.GridView.EmptyDataRowStyle%2A>明るい青色の背景と null の行の赤いフォントを指定するには、宣言によってプロパティです。  
  
 [!code-aspx-csharp[GridViewNullRowTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewNullRowTemplate/CS/gridviewnullrowtemplatecs.aspx#1)]
 [!code-aspx-vb[GridViewNullRowTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewNullRowTemplate/VB/gridviewnullrowtemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EmptyDataTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate EmptyDataTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate EmptyDataTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.EmptyDataTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.GridViewRow))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または空のデータ行が表示されるときに、ユーザー定義の内容を設定、<see cref="T:System.Web.UI.WebControls.GridView" />コントロールがいくつかのレコードがないデータ ソースにバインドされています。</summary>
        <value>A<see cref="T:System.Web.UI.ITemplate" />のカスタム コンテンツを空のデータ行を格納しています。 既定値は<see langword="null" />、このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 空のデータ行を表示する、<xref:System.Web.UI.WebControls.GridView>コントロールにバインドされているデータ ソースにいくつかのレコードが含まれていない場合を制御します。 使用して空のデータ行の独自のカスタム ユーザー インターフェイス (UI) を定義することができます、<xref:System.Web.UI.WebControls.GridView.EmptyDataTemplate%2A>プロパティです。  
  
 空のデータ行のカスタム テンプレートを指定するには、まず配置`<EmptyDataTemplate>`タグ、開始タグと終了タグの間、<xref:System.Web.UI.WebControls.GridView>コントロール。 開始タグと終了の間でテンプレートの内容の一覧を表示することができますし、`<EmptyDataTemplate>`タグ。 空のデータ行のスタイルを制御するを使用して、<xref:System.Web.UI.WebControls.GridView.EmptyDataRowStyle%2A>プロパティです。 設定して、空のデータ行の組み込み UI を使用することができます、<xref:System.Web.UI.WebControls.GridView.EmptyDataText%2A>このプロパティではなくプロパティです。  
  
 空のデータ テンプレートで宣言するコントロールをプログラムでアクセスする方法については、次を参照してください。[する方法: アクセス サーバーのコントロール ID によって](http://msdn.microsoft.com/library/59964ef8-72ef-4159-9f1a-5b230ff46fb3)です。  
  
> [!NOTE]
>  両方の<xref:System.Web.UI.WebControls.GridView.EmptyDataText%2A>と<xref:System.Web.UI.WebControls.GridView.EmptyDataTemplate%2A>プロパティを設定、<xref:System.Web.UI.WebControls.GridView.EmptyDataTemplate%2A>プロパティが優先されます。  
  
   
  
## Examples  
 次の例では、空のデータ行には、ときに表示されるは、カスタム テンプレートを定義する方法、<xref:System.Web.UI.WebControls.GridView>コントロールがいくつかのレコードがないデータ ソースにバインドされています。  
  
 [!code-aspx-csharp[GridViewNullRowTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewNullRowTemplate/CS/gridviewnullrowtemplatecs.aspx#1)]
 [!code-aspx-vb[GridViewNullRowTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewNullRowTemplate/VB/gridviewnullrowtemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EmptyDataText">
      <MemberSignature Language="C#" Value="public virtual string EmptyDataText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EmptyDataText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.EmptyDataText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定が空のデータ行に表示するテキストが表示されるときに、<see cref="T:System.Web.UI.WebControls.GridView" />コントロールがいくつかのレコードがないデータ ソースにバインドされています。</summary>
        <value>空のデータ行に表示するテキストです。 既定値は空の文字列 ("") です。このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 空のデータ行を表示する、<xref:System.Web.UI.WebControls.GridView>コントロールにバインドされているデータ ソースにいくつかのレコードが含まれていない場合を制御します。 使用して、<xref:System.Web.UI.WebControls.GridView.EmptyDataText%2A>プロパティを空のデータ行に表示するテキストを指定します。 空のデータ行のスタイルを制御するを使用して、<xref:System.Web.UI.WebControls.GridView.EmptyDataRowStyle%2A>プロパティです。 設定して、空のデータ行の独自のカスタム ユーザー インターフェイス (UI) を定義する代わりに、<xref:System.Web.UI.WebControls.GridView.EmptyDataTemplate%2A>このプロパティではなくプロパティです。  
  
> [!NOTE]
>  両方の<xref:System.Web.UI.WebControls.GridView.EmptyDataText%2A>と<xref:System.Web.UI.WebControls.GridView.EmptyDataTemplate%2A>プロパティを設定、<xref:System.Web.UI.WebControls.GridView.EmptyDataTemplate%2A>プロパティが優先されます。  
  
 このプロパティの値を設定すると、デザイナーのツールを使用して、リソース ファイルに自動的に保存できます。 詳細については、次を参照してください。<xref:System.ComponentModel.LocalizableAttribute>と[グローバリゼーションとローカリゼーション](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)です。  
  
   
  
## Examples  
 次の例で使用する方法、<xref:System.Web.UI.WebControls.GridView.EmptyDataText%2A>プロパティを空のデータ行に表示するテキストを指定します。  
  
 [!code-aspx-csharp[GridViewEmptyDataText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/gridviewemptydatatext/CS/gridviewemptydatatextcs.aspx#1)]
 [!code-aspx-vb[GridViewEmptyDataText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/gridviewemptydatatext/VB/gridviewemptydatatextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableModelValidation">
      <MemberSignature Language="C#" Value="public virtual bool EnableModelValidation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableModelValidation" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.EnableModelValidation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または検証コントロールが更新操作または挿入中に発生する例外を処理するかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" />検証コントロールが例外を挿入中に発生するまたは更新の操作を処理する場合それ以外の場合、<see langword="false" />です。 既定値は、<see langword="false" /> です。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnablePersistedSelection">
      <MemberSignature Language="C#" Value="public virtual bool EnablePersistedSelection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnablePersistedSelection" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.EnablePersistedSelection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または行の選択をインデックスまたはデータ キーの値に基づいて、かどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" />行の選択は、データ キーの値に基づいている場合それ以外の場合、<see langword="false" />です。 既定値は <see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティは、する場合`false`ことで、新しいページが別のデータを持っていて、新しいページが表示されるときに、同じ行が選択されて、行を選択します。 このプロパティを設定する場合`true`別のデータが含まれる、ページを表示するときに、行が選択されていません。 返す場合は、行が選択されているページに、その行が選択されたままです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableSortingAndPagingCallbacks">
      <MemberSignature Language="C#" Value="public virtual bool EnableSortingAndPagingCallbacks { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableSortingAndPagingCallbacks" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.EnableSortingAndPagingCallbacks" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または並べ替えとページング操作のクライアント側のコールバックを使用するかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" />並べ替えとページング操作です。 クライアント側のコールバックを使用するにはそれ以外の場合、<see langword="false" />です。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 既定では、並べ替えまたはページング操作を実行するとき、<xref:System.Web.UI.WebControls.GridView>コントロールは、操作を実行するサーバーに再度ポストします。 ときに、<xref:System.Web.UI.WebControls.GridView.EnableSortingAndPagingCallbacks%2A>プロパティに設定されている`true`、並べ替えを実行するクライアントでサービスが呼び出され、ページング操作は、投稿する必要があるが、サーバーをバックアップします。  
  
> [!NOTE]
>  すべてのブラウザーでは、この機能をサポートします。 ブラウザーがこの機能をサポートするかどうかを確認するには<xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A>プロパティです。  
  
 すべての列、<xref:System.Web.UI.WebControls.GridView.Columns%2A>コレクションは、この機能を利用するコールバックをサポートする必要があります。 場合、<xref:System.Web.UI.WebControls.GridView.Columns%2A>コレクションにはなど、コールバックをサポートしない列が含まれています<xref:System.Web.UI.WebControls.TemplateField>、<xref:System.NotSupportedException>例外が発生します。  
  
   
  
## Examples  
 次の例で使用する方法、<xref:System.Web.UI.WebControls.GridView.EnableSortingAndPagingCallbacks%2A>の並べ替えとページング操作のクライアント側のコールバックを有効にするプロパティです。  
  
 [!code-aspx-csharp[GridViewEnableSortingAndPagingCallbacks#1](~/samples/snippets/csharp/VS_Snippets_WebNet/gridviewenablesortingandpagingcallbacks/CS/gridviewenablesortingandpagingcallbackscs.aspx#1)]
 [!code-aspx-vb[GridViewEnableSortingAndPagingCallbacks#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/gridviewenablesortingandpagingcallbacks/VB/gridviewenablesortingandpagingcallbacksvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><see cref="P:System.Web.UI.WebControls.GridView.Columns" />コレクションにはなど、コールバックをサポートしない列が含まれています<see cref="T:System.Web.UI.WebControls.TemplateField" />です。</exception>
      </Docs>
    </Member>
    <Member MemberName="ExtractRowValues">
      <MemberSignature Language="C#" Value="protected virtual void ExtractRowValues (System.Collections.Specialized.IOrderedDictionary fieldValues, System.Web.UI.WebControls.GridViewRow row, bool includeReadOnlyFields, bool includePrimaryKey);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ExtractRowValues(class System.Collections.Specialized.IOrderedDictionary fieldValues, class System.Web.UI.WebControls.GridViewRow row, bool includeReadOnlyFields, bool includePrimaryKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.ExtractRowValues(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.GridViewRow,System.Boolean,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fieldValues" Type="System.Collections.Specialized.IOrderedDictionary" />
        <Parameter Name="row" Type="System.Web.UI.WebControls.GridViewRow" />
        <Parameter Name="includeReadOnlyFields" Type="System.Boolean" />
        <Parameter Name="includePrimaryKey" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="fieldValues"><see cref="T:System.Collections.Specialized.IOrderedDictionary" />フィールド値を格納するために使用します。</param>
        <param name="row"><see cref="T:System.Web.UI.WebControls.GridViewRow" />元となるフィールドの値を取得します。</param>
        <param name="includeReadOnlyFields">
          <see langword="true" />読み取り専用のフィールドを含めるそれ以外の場合、<see langword="false" />です。</param>
        <param name="includePrimaryKey">
          <see langword="true" />主キー フィールドまたはフィールドを含めるそれ以外の場合、<see langword="false" />です。</param>
        <summary>指定された行の中で宣言された各フィールドの値を取得し、指定したで格納する<see cref="T:System.Collections.Specialized.IOrderedDictionary" />オブジェクト。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.ExtractRowValues%2A>メソッドは、ヘルパー メソッドによって呼び出される、<xref:System.Web.UI.WebControls.GridView>内で指定される行で宣言されている各フィールドの値を取得するコントロール、`row`パラメーター。 抽出された値を使用して、読み取り専用のフィールドとキー フィールドを含めるかどうかを指定することができます、`includeReadOnlyFields`と`includePrimaryKey`パラメーター、それぞれします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>拡張するとき、<see cref="T:System.Web.UI.WebControls.GridView" />クラス、フィールドの値を取得する独自のルーチンを作成するには、このメソッドをオーバーライドすることができます。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="FooterRow">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.GridViewRow FooterRow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.GridViewRow FooterRow" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.FooterRow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridViewRow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得、<see cref="T:System.Web.UI.WebControls.GridViewRow" />のフッター行を表すオブジェクト、<see cref="T:System.Web.UI.WebControls.GridView" />コントロール。</summary>
        <value>A<see cref="T:System.Web.UI.WebControls.GridViewRow" />のフッター行を表す、<see cref="T:System.Web.UI.WebControls.GridView" />コントロール。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.GridView.FooterRow%2A>プロパティにプログラムでアクセス、<xref:System.Web.UI.WebControls.GridViewRow>のフッター行を表すオブジェクト、<xref:System.Web.UI.WebControls.GridView>コントロール。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.GridView.FooterRow%2A>プロパティは後にのみ使用可能な<xref:System.Web.UI.WebControls.GridView>コントロールのフッター行の作成、<xref:System.Web.UI.WebControls.GridView.RowCreated>イベント。  
  
 たとえば、カスタム コンテンツを追加するときに、フッター行をプログラムで操作する必要がある場合、このプロパティは使用一般的です。 変更を加える、<xref:System.Web.UI.WebControls.GridView.FooterRow%2A>プロパティは、後に実行する必要があります、<xref:System.Web.UI.WebControls.GridView>レンダリングされた、それ以外のコントロールが表示された、<xref:System.Web.UI.WebControls.GridView>コントロール変更は上書きされます。  
  
   
  
## Examples  
 次の例で使用する方法、<xref:System.Web.UI.WebControls.GridView.FooterRow%2A>フッター行の並べ替えの方向を表示するプロパティです。  
  
 [!code-aspx-csharp[GridViewFooterRow#1](~/samples/snippets/csharp/VS_Snippets_WebNet/gridviewfooterrow/CS/gridviewfooterrowcs.aspx#1)]
 [!code-aspx-vb[GridViewFooterRow#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/gridviewfooterrow/VB/gridviewfooterrowvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FooterStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle FooterStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle FooterStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.FooterStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>参照を取得、<see cref="T:System.Web.UI.WebControls.TableItemStyle" />オブジェクト内のフッター行の外観を設定することができます、<see cref="T:System.Web.UI.WebControls.GridView" />コントロール。</summary>
        <value>参照、<see cref="T:System.Web.UI.WebControls.TableItemStyle" />のフッター行のスタイルを表す、<see cref="T:System.Web.UI.WebControls.GridView" />コントロール。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.GridView.FooterStyle%2A>プロパティ内のフッター行の外観を制御する、<xref:System.Web.UI.WebControls.GridView>コントロール。 このプロパティは読み取り専用です。ただしのプロパティを設定することができます、<xref:System.Web.UI.WebControls.TableItemStyle>オブジェクトを返します。 プロパティを設定するには、次のいずれかを使用して宣言します。  
  
-   開始タグに属性を配置、<xref:System.Web.UI.WebControls.GridView>フォームでコントロール`Property-Subproperty`ここで、`Subproperty`のプロパティ、<xref:System.Web.UI.WebControls.TableItemStyle>オブジェクト (たとえば、 `FooterStyle-ForeColor`)。  
  
-   入れ子、`<FooterStyle>`要素開始タグと終了タグの間、<xref:System.Web.UI.WebControls.GridView>コントロール。  
  
 プロパティがフォームにプログラムで設定することもできます`Property.Subproperty`(たとえば、 `FooterStyle.ForeColor`)。 通常、一般的な設定には、カスタムの背景色、前景色、およびフォントのプロパティが含まれます。  
  
   
  
## Examples  
 次の例で使用する方法、<xref:System.Web.UI.WebControls.GridView.FooterStyle%2A>のフッター行のカスタム スタイルを定義するプロパティ、<xref:System.Web.UI.WebControls.GridView>コントロール。  
  
 [!code-aspx-csharp[GridViewShowHeader#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewShowHeader/CS/gridviewshowheadercs.aspx#1)]
 [!code-aspx-vb[GridViewShowHeader#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewShowHeader/VB/gridviewshowheadervb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCallbackResult">
      <MemberSignature Language="C#" Value="protected virtual string GetCallbackResult ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetCallbackResult() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.GetCallbackResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>コントロールを対象とするコールバック イベントの結果を返します。</summary>
        <returns>コールバックの結果。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView>制御を実装、<xref:System.Web.UI.ICallbackEventHandler>インターフェイスと使用、<xref:System.Web.UI.WebControls.GridView.RaisePostBackEvent%2A>を非同期的にデータを取得して<xref:System.Web.UI.WebControls.GridView.GetCallbackResult%2A>をコントロールに取得したデータを返すメソッド。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCallbackScript">
      <MemberSignature Language="C#" Value="protected virtual string GetCallbackScript (System.Web.UI.WebControls.IButtonControl buttonControl, string argument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetCallbackScript(class System.Web.UI.WebControls.IButtonControl buttonControl, string argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.GetCallbackScript(System.Web.UI.WebControls.IButtonControl,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buttonControl" Type="System.Web.UI.WebControls.IButtonControl" />
        <Parameter Name="argument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="buttonControl">コールバック スクリプトを作成する対象のボタン コントロールです。</param>
        <param name="argument">コールバック スクリプトに渡す引数。</param>
        <summary>並べ替え操作を実行するボタンのコールバック スクリプトを作成します。</summary>
        <returns>並べ替え操作を実行するボタンのコールバック スクリプトです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.GetCallbackScript%2A>メソッドで使用されるヘルパー メソッド、<xref:System.Web.UI.WebControls.GridView>並べ替え操作を実行するボタンのコールバック スクリプトを作成するコントロール。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GridLines">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.GridLines GridLines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.GridLines GridLines" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.GridLines" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridLines</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の枠線のスタイル、<see cref="T:System.Web.UI.WebControls.GridView" />コントロール。</summary>
        <value><see cref="T:System.Web.UI.WebControls.GridLines" /> 値のいずれか。 既定値は、<see langword="GridLines.Both" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.GridView.GridLines%2A>の枠線のスタイルを指定するプロパティ、<xref:System.Web.UI.WebControls.GridView>コントロール。 次の表は、使用できるスタイルを示します。  
  
|スタイル|説明|  
|-----------|-----------------|  
|`GridLines.None`|グリッド線は表示されません。|  
|`GridLines.Horizontal`|水平グリッド線のみが表示されます。|  
|`GridLines.Vertical`|垂直方向のグリッド線のみが表示されます。|  
|`GridLines.Both`|水平方向および垂直のグリッドの線を表示します。|  
  
   
  
## Examples  
 次の例で使用する方法、<xref:System.Web.UI.WebControls.GridView.GridLines%2A>のグリッド線を非表示にするプロパティ、<xref:System.Web.UI.WebControls.GridView>コントロール。  
  
 [!code-aspx-csharp[GridViewGridLines#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewGridLines/CS/gridviewgridlinescs.aspx#1)]
 [!code-aspx-vb[GridViewGridLines#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewGridLines/VB/gridviewgridlinesvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderRow">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.GridViewRow HeaderRow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.GridViewRow HeaderRow" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.HeaderRow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridViewRow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得、<see cref="T:System.Web.UI.WebControls.GridViewRow" />にヘッダー行を表すオブジェクト、<see cref="T:System.Web.UI.WebControls.GridView" />コントロール。</summary>
        <value>A<see cref="T:System.Web.UI.WebControls.GridViewRow" />にヘッダー行を表す、<see cref="T:System.Web.UI.WebControls.GridView" />コントロール。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.GridView.HeaderRow%2A>プロパティにプログラムでアクセス、<xref:System.Web.UI.WebControls.GridViewRow>にヘッダー行を表すオブジェクト、<xref:System.Web.UI.WebControls.GridView>コントロール。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.GridView.HeaderRow%2A>プロパティは、使用した場合にのみ、<xref:System.Web.UI.WebControls.GridView>コントロールのヘッダー行の作成、<xref:System.Web.UI.WebControls.GridView.RowCreated>イベント。  
  
 カスタム コンテンツを追加するときに、ヘッダー行をプログラムで操作する必要がある場合、このプロパティは使用一般的です。 変更を加える、<xref:System.Web.UI.WebControls.GridView.HeaderRow%2A>プロパティは、後に実行する必要があります、<xref:System.Web.UI.WebControls.GridView>レンダリングされた、それ以外のコントロールが表示された、<xref:System.Web.UI.WebControls.GridView>コントロール変更は上書きされます。  
  
   
  
## Examples  
 次の例で使用する方法、<xref:System.Web.UI.WebControls.GridView.HeaderRow%2A>並べ替えの方向に基づいてプロパティをプログラムでヘッダー行のフォントの色を変更します。  
  
 [!code-aspx-csharp[GridViewFooterRow#1](~/samples/snippets/csharp/VS_Snippets_WebNet/gridviewfooterrow/CS/gridviewfooterrowcs.aspx#1)]
 [!code-aspx-vb[GridViewFooterRow#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/gridviewfooterrow/VB/gridviewfooterrowvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle HeaderStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle HeaderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.HeaderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>参照を取得、<see cref="T:System.Web.UI.WebControls.TableItemStyle" />ヘッダー行の外観を設定できるようにするオブジェクト、<see cref="T:System.Web.UI.WebControls.GridView" />コントロール。</summary>
        <value>参照、<see cref="T:System.Web.UI.WebControls.TableItemStyle" />ヘッダー行のスタイルを表す、<see cref="T:System.Web.UI.WebControls.GridView" />コントロール。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.GridView.HeaderStyle%2A>ヘッダー行の外観を制御するプロパティ、<xref:System.Web.UI.WebControls.GridView>コントロール。 このプロパティは読み取り専用です。ただしのプロパティを設定することができます、<xref:System.Web.UI.WebControls.TableItemStyle>オブジェクトを返します。 プロパティを設定するには、次のいずれかを使用して宣言します。  
  
-   開始タグに属性を配置、<xref:System.Web.UI.WebControls.GridView>フォームでコントロール`Property-Subproperty`ここで、`Subproperty`のプロパティ、<xref:System.Web.UI.WebControls.TableItemStyle>オブジェクト (たとえば、 `HeaderStyle-ForeColor`)。  
  
-   入れ子、`<HeaderStyle>`要素開始タグと終了タグの間、<xref:System.Web.UI.WebControls.GridView>コントロール。  
  
 プロパティがフォームにプログラムで設定することもできます`Property.Subproperty`(たとえば、 `HeaderStyle.ForeColor`)。 通常、一般的な設定には、カスタムの背景色、前景色、およびフォントのプロパティが含まれます。  
  
   
  
## Examples  
 次の例で使用する方法、<xref:System.Web.UI.WebControls.GridView.HeaderStyle%2A>にヘッダー行のカスタム スタイルを定義するプロパティ、<xref:System.Web.UI.WebControls.GridView>コントロール。  
  
 [!code-aspx-csharp[GridViewShowHeader#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewShowHeader/CS/gridviewshowheadercs.aspx#1)]
 [!code-aspx-vb[GridViewShowHeader#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewShowHeader/VB/gridviewshowheadervb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HorizontalAlign">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.HorizontalAlign HorizontalAlign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.HorizontalAlign HorizontalAlign" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.HorizontalAlign" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Layout")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.HorizontalAlign</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の水平方向の配置、<see cref="T:System.Web.UI.WebControls.GridView" />ページ上のコントロールです。</summary>
        <value><see cref="T:System.Web.UI.WebControls.HorizontalAlign" /> 値のいずれか。 既定値は、<see langword="HorizontalAlign.NotSet" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.GridView.HorizontalAlign%2A>の水平方向の配置を指定するプロパティ、<xref:System.Web.UI.WebControls.GridView>ページ内のコントロールです。 次の表は、さまざまな水平方向の配置のスタイルを一覧表示します。  
  
|アラインメント値。|説明|  
|---------------------|-----------------|  
|`HorizontalAlign.NotSet`|水平方向の配置、<xref:System.Web.UI.WebControls.GridView>コントロールが設定されていません。|  
|`HorizontalAlign.Left`|<xref:System.Web.UI.WebControls.GridView>コントロールがページの左側に配置します。|  
|`HorizontalAlign.Center`|<xref:System.Web.UI.WebControls.GridView>コントロールがページの中央に配置します。|  
|`HorizontalAlign.Right`|<xref:System.Web.UI.WebControls.GridView>コントロールがページの右側に配置します。|  
|`HorizontalAlign.Justify`|<xref:System.Web.UI.WebControls.GridView>コントロールは、ページの左と右の余白に揃えられます。|  
  
   
  
## Examples  
 次の例で使用する方法、<xref:System.Web.UI.WebControls.GridView.HorizontalAlign%2A>プロパティに合わせて、<xref:System.Web.UI.WebControls.GridView>ページの右側にあるコントロールです。  
  
 [!code-aspx-csharp[GridViewHorizontalAlign#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewHorizontalAlign/CS/gridviewhorizontalaligncs.aspx#1)]
 [!code-aspx-vb[GridViewHorizontalAlign#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewHorizontalAlign/VB/gridviewhorizontalalignvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializePager">
      <MemberSignature Language="C#" Value="protected virtual void InitializePager (System.Web.UI.WebControls.GridViewRow row, int columnSpan, System.Web.UI.WebControls.PagedDataSource pagedDataSource);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InitializePager(class System.Web.UI.WebControls.GridViewRow row, int32 columnSpan, class System.Web.UI.WebControls.PagedDataSource pagedDataSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.InitializePager(System.Web.UI.WebControls.GridViewRow,System.Int32,System.Web.UI.WebControls.PagedDataSource)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="System.Web.UI.WebControls.GridViewRow" />
        <Parameter Name="columnSpan" Type="System.Int32" />
        <Parameter Name="pagedDataSource" Type="System.Web.UI.WebControls.PagedDataSource" />
      </Parameters>
      <Docs>
        <param name="row">A<see cref="T:System.Web.UI.WebControls.GridViewRow" />初期化するためにページャー行を表すです。</param>
        <param name="columnSpan">ページャー行に使用する列の数。</param>
        <param name="pagedDataSource">A<see cref="T:System.Web.UI.WebControls.PagedDataSource" />データ ソースを表すです。</param>
        <summary>ページング機能が有効になっているときに表示されるページャー行を初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.InitializePager%2A>ページング機能が有効になっているときに表示されるページャー行を初期化するためにメソッドを使用します。  
  
> [!NOTE]
>  このメソッドが拡張するコントロールの開発者によって、主に使用、<xref:System.Web.UI.WebControls.GridView>コントロール。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeRow">
      <MemberSignature Language="C#" Value="protected virtual void InitializeRow (System.Web.UI.WebControls.GridViewRow row, System.Web.UI.WebControls.DataControlField[] fields);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InitializeRow(class System.Web.UI.WebControls.GridViewRow row, class System.Web.UI.WebControls.DataControlField[] fields) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.InitializeRow(System.Web.UI.WebControls.GridViewRow,System.Web.UI.WebControls.DataControlField[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="System.Web.UI.WebControls.GridViewRow" />
        <Parameter Name="fields" Type="System.Web.UI.WebControls.DataControlField[]" />
      </Parameters>
      <Docs>
        <param name="row">A<see cref="T:System.Web.UI.WebControls.GridViewRow" />初期化するために行を表すです。</param>
        <param name="fields">配列<see cref="T:System.Web.UI.WebControls.DataControlField" />で列フィールドを表すオブジェクト、<see cref="T:System.Web.UI.WebControls.GridView" />コントロール。</param>
        <summary>内の行を初期化、<see cref="T:System.Web.UI.WebControls.GridView" />コントロール。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.InitializeRow%2A>メソッドが内の行を初期化するために使用される、<xref:System.Web.UI.WebControls.GridView>コントロール。  
  
> [!NOTE]
>  このメソッドが拡張するコントロールの開発者によって、主に使用、<xref:System.Web.UI.WebControls.GridView>コントロール。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBindableType">
      <MemberSignature Language="C#" Value="public virtual bool IsBindableType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsBindableType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.IsBindableType(System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">A<see cref="T:System.Type" />をテストするデータ型を表すです。</param>
        <summary>指定したデータ型を内の列にバインドできるかどうかを決定する<see cref="T:System.Web.UI.WebControls.GridView" />コントロール。</summary>
        <returns>
          <see langword="true" />指定されたデータ型を内の列にバインドすることができるかどうか、<see cref="T:System.Web.UI.WebControls.GridView" />コントロール。 それ以外の場合、<see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.IsBindableType%2A>メソッドは、プログラムで指定されたデータ型を内の列にバインドできるかどうかを決定するコントロールの開発者によってよく使用されるヘルパー メソッド、<xref:System.Web.UI.WebControls.GridView>コントロール。 次のデータ型の列にバインドできる、<xref:System.Web.UI.WebControls.GridView>コントロール。  
  
-   <xref:System.Boolean?displayProperty=nameWithType>  
  
-   <xref:System.Byte?displayProperty=nameWithType>  
  
-   <xref:System.Char?displayProperty=nameWithType>  
  
-   <xref:System.DateTime?displayProperty=nameWithType>  
  
-   <xref:System.Decimal?displayProperty=nameWithType>  
  
-   <xref:System.Double?displayProperty=nameWithType>  
  
-   <xref:System.Guid?displayProperty=nameWithType>  
  
-   <xref:System.Int16?displayProperty=nameWithType>  
  
-   <xref:System.Int32?displayProperty=nameWithType>  
  
-   <xref:System.Int64?displayProperty=nameWithType>  
  
-   <xref:System.SByte?displayProperty=nameWithType>  
  
-   <xref:System.Single?displayProperty=nameWithType>  
  
-   <xref:System.String?displayProperty=nameWithType>  
  
-   <xref:System.UInt16?displayProperty=nameWithType>  
  
-   <xref:System.UInt32?displayProperty=nameWithType>  
  
-   <xref:System.UInt64?displayProperty=nameWithType>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadControlState">
      <MemberSignature Language="C#" Value="protected override void LoadControlState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void LoadControlState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.LoadControlState(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState"><see cref="T:System.Object" />コントロールの保存されているコントロールの状態値を格納しています。</param>
        <summary>指定したプロパティの状態を読み込みます、<see cref="T:System.Web.UI.WebControls.GridView" />場合でも、永続化する必要があるコントロール、<see cref="P:System.Web.UI.Control.EnableViewState" />プロパティに設定されている<see langword="false" />です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドはプロパティの状態を読み込むために使用、<xref:System.Web.UI.WebControls.GridView>場合でも、永続化する必要があるコントロール、<xref:System.Web.UI.Control.EnableViewState%2A?displayProperty=nameWithType>プロパティに設定されている`false`です。  
  
> [!NOTE]
>  このメソッドが拡張するコントロールの開発者によって、主に使用、<xref:System.Web.UI.WebControls.GridView>コントロール。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.LoadViewState(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">保存したコントロールのビュー ステートの値を格納している <see cref="T:System.Object" />。</param>
        <summary>以前に保存した <see cref="T:System.Web.UI.WebControls.GridView" /> コントロールのビュー ステートを読み込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、主に、.NET Framework インフラストラクチャによって使用され、コードから直接使用するものではありません。 ただし、コントロールの開発者は、カスタム サーバー コントロールがそのビューステートを復元する方法を指定するには、このメソッドをオーバーライドすることができます。 詳細については、次を参照してください。 [ASP.NET 状態管理の概要](http://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce)です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBubbleEvent">
      <MemberSignature Language="C#" Value="protected override bool OnBubbleEvent (object source, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool OnBubbleEvent(object source, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.OnBubbleEvent(System.Object,System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="source">イベントのソース。</param>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>Web サーバー コントロールのイベントをページのユーザー インターフェイス (UI) サーバー コントロールの階層構造に渡すかどうかを判断します。</summary>
        <returns>
          イベントがキャンセルされた場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.OnBubbleEvent%2A>メソッドを実装して、<xref:System.Web.UI.Control.OnBubbleEvent%2A?displayProperty=nameWithType>ページ階層に子コントロールからイベントを渡す方法です。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>派生クラスで <see cref="M:System.Web.UI.WebControls.GridView.OnBubbleEvent(System.Object,System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Web.UI.WebControls.GridView.OnBubbleEvent(System.Object,System.EventArgs)" /> メソッドを呼び出してください。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnDataPropertyChanged">
      <MemberSignature Language="C#" Value="protected override void OnDataPropertyChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDataPropertyChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.OnDataPropertyChanged" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>再バインド数、<see cref="T:System.Web.UI.WebControls.GridView" />コントロールをデータの後に、 <see cref="P:System.Web.UI.WebControls.DataBoundControl.DataMember" />、 <see cref="P:System.Web.UI.WebControls.BaseDataBoundControl.DataSource" />、または<see cref="P:System.Web.UI.WebControls.DataBoundControl.DataSourceID" />プロパティを変更します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.OnDataPropertyChanged%2A>メソッドで使用されるヘルパー メソッド、<xref:System.Web.UI.WebControls.GridView>後にそのデータにコントロールを再バインドするコントロール、 <xref:System.Web.UI.WebControls.DataBoundControl.DataMember%2A>、 <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A>、または<xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A>プロパティを変更します。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>拡張するとき、<see cref="T:System.Web.UI.WebControls.GridView" />クラス、データを再バインドする独自のルーチンを作成するには、このメソッドをオーバーライドすることができます。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnDataSourceViewChanged">
      <MemberSignature Language="C#" Value="protected override void OnDataSourceViewChanged (object sender, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDataSourceViewChanged(object sender, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.OnDataSourceViewChanged(System.Object,System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">イベントのソース。</param>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary><see cref="E:System.Web.UI.DataSourceView.DataSourceViewChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.OnDataSourceViewChanged%2A>メソッドは、通知、<xref:System.Web.UI.WebControls.GridView>コントロールの基になるデータ ソースが変更されたこと、およびコントロールを再バインドする必要があります。 通常、<xref:System.Web.UI.WebControls.GridView.OnDataSourceViewChanged%2A>データ ソース ビューのプロパティが変更されたときに、メソッドが呼び出されます。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)です。  
  
 <xref:System.Web.UI.WebControls.GridView.OnDataSourceViewChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>派生クラスで <see cref="M:System.Web.UI.WebControls.GridView.OnDataSourceViewChanged(System.Object,System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Web.UI.WebControls.GridView.OnDataSourceViewChanged(System.Object,System.EventArgs)" /> メソッドを呼び出してください。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.OnInit(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary><see cref="E:System.Web.UI.Control.Init" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドが呼び出されたら、Web サーバー コントロールは、インスタンスを作成および設定するために必要な初期化の手順を実行する必要があります。 サーバー コントロールのライフ サイクルのこの段階で、コントロールのビュー状態を設定する必要があります。 さらがこのコントロールを親または子に関係なく、このメソッドが呼び出されたときにその他のサーバー コントロールにアクセスすることはできません。 他のサーバー コントロールが作成され、アクセスできる状態である保証はありません。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)です。  
  
 <xref:System.Web.UI.WebControls.GridView.OnInit%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>派生クラスで <see cref="M:System.Web.UI.WebControls.GridView.OnInit(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Web.UI.WebControls.GridView.OnInit(System.EventArgs)" /> メソッドを呼び出してください。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnPageIndexChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnPageIndexChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPageIndexChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.OnPageIndexChanged(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary><see cref="E:System.Web.UI.WebControls.GridView.PageIndexChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.PageIndexChanged>ページャー ボタンのいずれかをクリックすると、後でイベントが発生した、<xref:System.Web.UI.WebControls.GridView>コントロールは、ページング操作を処理します。 これにより、このイベントが発生するたびに、カスタム ページング操作などのカスタムのルーチンを実行するイベント処理メソッドを提供できます。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)です。  
  
 <xref:System.Web.UI.WebControls.GridView.OnPageIndexChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>派生クラスで <see cref="M:System.Web.UI.WebControls.GridView.OnPageIndexChanged(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Web.UI.WebControls.GridView.OnPageIndexChanged(System.EventArgs)" /> メソッドを呼び出してください。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnPageIndexChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnPageIndexChanging (System.Web.UI.WebControls.GridViewPageEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPageIndexChanging(class System.Web.UI.WebControls.GridViewPageEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.OnPageIndexChanging(System.Web.UI.WebControls.GridViewPageEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.GridViewPageEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A<see cref="T:System.Web.UI.WebControls.GridViewPageEventArgs" />イベント データを格納します。</param>
        <summary><see cref="E:System.Web.UI.WebControls.GridView.PageIndexChanging" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.PageIndexChanging>ページャー ボタンのいずれかをクリックすると、その前に、イベントが発生した、<xref:System.Web.UI.WebControls.GridView>コントロールは、ページング操作を処理します。 これにより、このイベントが発生するたびに、ページング操作の取り消しなどのカスタムのルーチンを実行するイベント処理メソッドを提供できます。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)です。  
  
 <xref:System.Web.UI.WebControls.GridView.OnPageIndexChanging%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><see cref="E:System.Web.UI.WebControls.GridView.PageIndexChanging" /> イベントのハンドラーがありません。</exception>
        <block subset="none" type="overrides">
          <para>派生クラスで <see cref="M:System.Web.UI.WebControls.GridView.OnPageIndexChanging(System.Web.UI.WebControls.GridViewPageEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Web.UI.WebControls.GridView.OnPageIndexChanging(System.Web.UI.WebControls.GridViewPageEventArgs)" /> メソッドを呼び出してください。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnPagePreLoad">
      <MemberSignature Language="C#" Value="protected override void OnPagePreLoad (object sender, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPagePreLoad(object sender, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.OnPagePreLoad(System.Object,System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">イベントのソース。</param>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>コントロールが読み込まれる前に、データ バインド コントロールの初期化状態を設定します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.OnPreRender(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary><see cref="E:System.Web.UI.Control.PreRender" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドでは、ビュー状態と内容の表示を保存する前に、必要な事前描画手順を実行するサーバー コントロールに通知します。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)です。  
  
 <xref:System.Web.UI.WebControls.GridView.OnPreRender%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>派生クラスで <see cref="M:System.Web.UI.WebControls.GridView.OnPreRender(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Web.UI.WebControls.GridView.OnPreRender(System.EventArgs)" /> メソッドを呼び出してください。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnRowCancelingEdit">
      <MemberSignature Language="C#" Value="protected virtual void OnRowCancelingEdit (System.Web.UI.WebControls.GridViewCancelEditEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowCancelingEdit(class System.Web.UI.WebControls.GridViewCancelEditEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.OnRowCancelingEdit(System.Web.UI.WebControls.GridViewCancelEditEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.GridViewCancelEditEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A<see cref="T:System.Web.UI.WebControls.GridViewCancelEditEventArgs" />イベント データを格納します。</param>
        <summary><see cref="E:System.Web.UI.WebControls.GridView.RowCancelingEdit" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.RowCancelingEdit>編集モードでの行の [キャンセル] ボタンがクリックされたときにイベントが発生したが、行が終了する前に編集モードです。 これにより、なりそうな場合、行、望ましくない状態でこのイベントが発生するたびに取り消し操作を停止するなど、カスタムのルーチンを実行するイベント処理メソッドを提供できます。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)です。  
  
 <xref:System.Web.UI.WebControls.GridView.OnRowCancelingEdit%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><see cref="E:System.Web.UI.WebControls.GridView.RowCancelingEdit" /> イベントのハンドラーがありません。</exception>
        <block subset="none" type="overrides">
          <para>派生クラスで <see cref="M:System.Web.UI.WebControls.GridView.OnRowCancelingEdit(System.Web.UI.WebControls.GridViewCancelEditEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Web.UI.WebControls.GridView.OnRowCancelingEdit(System.Web.UI.WebControls.GridViewCancelEditEventArgs)" /> メソッドを呼び出してください。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnRowCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnRowCommand (System.Web.UI.WebControls.GridViewCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowCommand(class System.Web.UI.WebControls.GridViewCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.OnRowCommand(System.Web.UI.WebControls.GridViewCommandEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.GridViewCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A<see cref="T:System.Web.UI.WebControls.GridViewCommandEventArgs" />イベント データを格納します。</param>
        <summary><see cref="E:System.Web.UI.WebControls.GridView.RowCommand" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.RowCommand>でボタンがクリックされたときにイベントが発生した、<xref:System.Web.UI.WebControls.GridView>コントロール。 これにより、このイベントが発生するたびに、カスタム ルーチンを実行するイベント処理メソッドを提供できます。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)です。  
  
 <xref:System.Web.UI.WebControls.GridView.OnRowCommand%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
   
  
## Examples  
 Visual Studio の Web サイト プロジェクトとソース コードは、このトピックで使用可能な:[ダウンロード](http://go.microsoft.com/fwlink/?LinkId=191882)です。  
  
 次の例で、イベント処理メソッドを提供する方法、<xref:System.Web.UI.WebControls.GridView.RowCommand>イベント。 特定の行の追加 ボタンがクリックされたときに、<xref:System.Web.UI.WebControls.GridView>コントロール、選択した顧客の名前、<xref:System.Web.UI.WebControls.ListBox>コントロール。  
  
 [!code-aspx-csharp[GridViewRowCommmand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewRowCommmand/CS/gridviewrowcommandcs.aspx#1)]
 [!code-aspx-vb[GridViewRowCommmand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewRowCommmand/VB/gridviewrowcommandvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>派生クラスで <see cref="M:System.Web.UI.WebControls.GridView.OnRowCommand(System.Web.UI.WebControls.GridViewCommandEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Web.UI.WebControls.GridView.OnRowCommand(System.Web.UI.WebControls.GridViewCommandEventArgs)" /> メソッドを呼び出してください。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnRowCreated">
      <MemberSignature Language="C#" Value="protected virtual void OnRowCreated (System.Web.UI.WebControls.GridViewRowEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowCreated(class System.Web.UI.WebControls.GridViewRowEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.OnRowCreated(System.Web.UI.WebControls.GridViewRowEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.GridViewRowEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A<see cref="T:System.Web.UI.WebControls.GridViewRowEventArgs" />イベント データを格納します。</param>
        <summary><see cref="E:System.Web.UI.WebControls.GridView.RowCreated" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 前に、<xref:System.Web.UI.WebControls.GridView>コントロールを表示できる、<xref:System.Web.UI.WebControls.GridViewRow>コントロール内の行ごとのオブジェクトを作成する必要があります。 <xref:System.Web.UI.WebControls.GridView.RowCreated>イベントが発生した各行、<xref:System.Web.UI.WebControls.GridView>コントロールを作成します。 これにより、このイベントが発生するたびに、カスタム コンテンツを行を追加するなど、カスタムのルーチンを実行するイベント処理メソッドを提供できます。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)です。  
  
 <xref:System.Web.UI.WebControls.GridView.OnRowCreated%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
   
  
## Examples  
 次の例で、イベント処理メソッドを提供する方法、<xref:System.Web.UI.WebControls.GridView.RowCreated>イベント。 インデックスが格納されている行が作成されているときに、<xref:System.Web.UI.WebControls.LinkButton.CommandArgument%2A>のプロパティ、<xref:System.Web.UI.WebControls.LinkButton>を新しい行に含まれているコントロール。 これにより、ユーザーがコマンド ボタンをクリックしたときに、行のインデックスを確認できます。  
  
 [!code-aspx-csharp[GridViewRowCreated#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewRowCreated/CS/gridviewrowcreatedcs.aspx#1)]
 [!code-aspx-vb[GridViewRowCreated#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewRowCreated/VB/gridviewrowcreatedvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>派生クラスで <see cref="M:System.Web.UI.WebControls.GridView.OnRowCreated(System.Web.UI.WebControls.GridViewRowEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Web.UI.WebControls.GridView.OnRowCreated(System.Web.UI.WebControls.GridViewRowEventArgs)" /> メソッドを呼び出してください。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnRowDataBound">
      <MemberSignature Language="C#" Value="protected virtual void OnRowDataBound (System.Web.UI.WebControls.GridViewRowEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowDataBound(class System.Web.UI.WebControls.GridViewRowEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.OnRowDataBound(System.Web.UI.WebControls.GridViewRowEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.GridViewRowEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A<see cref="T:System.Web.UI.WebControls.GridViewRowEventArgs" />イベント データを格納します。</param>
        <summary><see cref="E:System.Web.UI.WebControls.GridView.RowDataBound" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 前に、<xref:System.Web.UI.WebControls.GridView>コントロールを表示できる、コントロール内の各行は、データ ソース内のレコードにバインドする必要があります。 <xref:System.Web.UI.WebControls.GridView.RowDataBound>イベントは、データ行 (によって表される、<xref:System.Web.UI.WebControls.GridViewRow>オブジェクト) データには、バインド、<xref:System.Web.UI.WebControls.GridView>コントロール。 これにより、このイベントが発生するたびに、行にバインドされたデータの値を変更するなど、カスタムのルーチンを実行するイベント処理メソッドを提供できます。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)です。  
  
 <xref:System.Web.UI.WebControls.GridView.OnRowDataBound%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 Visual Studio の Web サイト プロジェクトとソース コードは、このトピックで使用可能な:[ダウンロード](http://go.microsoft.com/fwlink/?LinkId=191882)です。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>派生クラスで <see cref="M:System.Web.UI.WebControls.GridView.OnRowDataBound(System.Web.UI.WebControls.GridViewRowEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Web.UI.WebControls.GridView.OnRowDataBound(System.Web.UI.WebControls.GridViewRowEventArgs)" /> メソッドを呼び出してください。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnRowDeleted">
      <MemberSignature Language="C#" Value="protected virtual void OnRowDeleted (System.Web.UI.WebControls.GridViewDeletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowDeleted(class System.Web.UI.WebControls.GridViewDeletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.OnRowDeleted(System.Web.UI.WebControls.GridViewDeletedEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.GridViewDeletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A<see cref="T:System.Web.UI.WebControls.GridViewDeletedEventArgs" />イベント データを格納します。</param>
        <summary><see cref="E:System.Web.UI.WebControls.GridView.RowDeleted" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.RowDeleted>イベントが発生した後、行の削除 ボタンがクリックされたときに、<xref:System.Web.UI.WebControls.GridView>コントロールは、対応する行を削除します。 これにより、このイベントが発生するたびに、削除操作の結果を確認するなど、カスタムのルーチンを実行するイベント処理メソッドを提供できます。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)です。  
  
 <xref:System.Web.UI.WebControls.GridView.OnRowDeleted%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>派生クラスで <see cref="M:System.Web.UI.WebControls.GridView.OnRowDeleted(System.Web.UI.WebControls.GridViewDeletedEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Web.UI.WebControls.GridView.OnRowDeleted(System.Web.UI.WebControls.GridViewDeletedEventArgs)" /> メソッドを呼び出してください。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnRowDeleting">
      <MemberSignature Language="C#" Value="protected virtual void OnRowDeleting (System.Web.UI.WebControls.GridViewDeleteEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowDeleting(class System.Web.UI.WebControls.GridViewDeleteEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.OnRowDeleting(System.Web.UI.WebControls.GridViewDeleteEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.GridViewDeleteEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A<see cref="T:System.Web.UI.WebControls.GridViewDeleteEventArgs" />イベント データを格納します。</param>
        <summary><see cref="E:System.Web.UI.WebControls.GridView.RowDeleting" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.RowDeleting>イベントは、行の削除 ボタンをクリックすると、その前に、<xref:System.Web.UI.WebControls.GridView>コントロールは、対応する行を削除します。 これにより、このイベントが発生するたびに、削除操作の取り消しなどのカスタムのルーチンを実行するイベント処理メソッドを提供できます。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)です。  
  
 <xref:System.Web.UI.WebControls.GridView.OnRowDeleting%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><see cref="E:System.Web.UI.WebControls.GridView.RowDeleting" /> イベントのハンドラーがありません。</exception>
        <block subset="none" type="overrides">
          <para>派生クラスで <see cref="M:System.Web.UI.WebControls.GridView.OnRowDeleting(System.Web.UI.WebControls.GridViewDeleteEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Web.UI.WebControls.GridView.OnRowDeleting(System.Web.UI.WebControls.GridViewDeleteEventArgs)" /> メソッドを呼び出してください。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnRowEditing">
      <MemberSignature Language="C#" Value="protected virtual void OnRowEditing (System.Web.UI.WebControls.GridViewEditEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowEditing(class System.Web.UI.WebControls.GridViewEditEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.OnRowEditing(System.Web.UI.WebControls.GridViewEditEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.GridViewEditEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A<see cref="T:System.Web.UI.WebControls.GridViewEditEventArgs" />イベント データを格納します。</param>
        <summary><see cref="E:System.Web.UI.WebControls.GridView.RowEditing" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.RowEditing>イベントは、行の編集 ボタンをクリックすると、その前に、<xref:System.Web.UI.WebControls.GridView>コントロールが編集モードに入ります。 これにより、このイベントが発生するたびに、編集操作の取り消しなどのカスタムのルーチンを実行するイベント処理メソッドを提供できます。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)です。  
  
 <xref:System.Web.UI.WebControls.GridView.OnRowEditing%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><see cref="E:System.Web.UI.WebControls.GridView.RowEditing" /> イベントのハンドラーがありません。</exception>
        <block subset="none" type="overrides">
          <para>派生クラスで <see cref="M:System.Web.UI.WebControls.GridView.OnRowEditing(System.Web.UI.WebControls.GridViewEditEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Web.UI.WebControls.GridView.OnRowEditing(System.Web.UI.WebControls.GridViewEditEventArgs)" /> メソッドを呼び出してください。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnRowUpdated">
      <MemberSignature Language="C#" Value="protected virtual void OnRowUpdated (System.Web.UI.WebControls.GridViewUpdatedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowUpdated(class System.Web.UI.WebControls.GridViewUpdatedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.OnRowUpdated(System.Web.UI.WebControls.GridViewUpdatedEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.GridViewUpdatedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A<see cref="T:System.Web.UI.WebControls.GridViewUpdatedEventArgs" />イベント データを格納します。</param>
        <summary><see cref="E:System.Web.UI.WebControls.GridView.RowUpdated" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.RowUpdated>イベントが発生した後、行の更新 ボタンがクリックされたときに、<xref:System.Web.UI.WebControls.GridView>コントロールは、行を更新します。 これにより、このイベントが発生するたびに、更新操作の結果を確認するなど、カスタムのルーチンを実行するイベント処理メソッドを提供できます。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)です。  
  
 <xref:System.Web.UI.WebControls.GridView.OnRowUpdated%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>派生クラスで <see cref="M:System.Web.UI.WebControls.GridView.OnRowUpdated(System.Web.UI.WebControls.GridViewUpdatedEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Web.UI.WebControls.GridView.OnRowUpdated(System.Web.UI.WebControls.GridViewUpdatedEventArgs)" /> メソッドを呼び出してください。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnRowUpdating">
      <MemberSignature Language="C#" Value="protected virtual void OnRowUpdating (System.Web.UI.WebControls.GridViewUpdateEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowUpdating(class System.Web.UI.WebControls.GridViewUpdateEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.OnRowUpdating(System.Web.UI.WebControls.GridViewUpdateEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.GridViewUpdateEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A<see cref="T:System.Web.UI.WebControls.GridViewUpdateEventArgs" />イベント データを格納します。</param>
        <summary><see cref="E:System.Web.UI.WebControls.GridView.RowUpdating" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.RowUpdating>イベントを発生すると、行の更新 ボタンをクリックすると、その前に、<xref:System.Web.UI.WebControls.GridView>コントロールは、行を更新します。 これにより、このイベントが発生するたびに、更新操作の取り消しなどのカスタムのルーチンを実行するイベント処理メソッドを提供できます。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)です。  
  
 <xref:System.Web.UI.WebControls.GridView.OnRowUpdating%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><see cref="E:System.Web.UI.WebControls.GridView.RowUpdating" /> イベントのハンドラーがありません。</exception>
        <block subset="none" type="overrides">
          <para>派生クラスで <see cref="M:System.Web.UI.WebControls.GridView.OnRowUpdating(System.Web.UI.WebControls.GridViewUpdateEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Web.UI.WebControls.GridView.OnRowUpdating(System.Web.UI.WebControls.GridViewUpdateEventArgs)" /> メソッドを呼び出してください。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnSelectedIndexChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectedIndexChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectedIndexChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.OnSelectedIndexChanged(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary><see cref="E:System.Web.UI.WebControls.GridView.SelectedIndexChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.SelectedIndexChanged>イベントが発生した後、行の選択 ボタンがクリックされたときに、<xref:System.Web.UI.WebControls.GridView>コントロールは、select 操作を処理します。 これにより、このイベントが発生するたびに、現在選択されている行に状態のラベルの更新など、カスタムのルーチンを実行するイベント処理メソッドを提供できます。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)です。  
  
 <xref:System.Web.UI.WebControls.GridView.OnSelectedIndexChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
   
  
## Examples  
 次の例のイベント ハンドラーを作成する方法、<xref:System.Web.UI.WebControls.GridView.SelectedIndexChanged>イベント。 この例では、選択した行はビュー ステートに保存されます。 並べ替え、ページング操作は、後も、その行のみが選択されます。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.GridView.OnSelectedIndexChanged#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.GridView.OnSelectedIndexChanged/CS/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.GridView.OnSelectedIndexChanged#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.GridView.OnSelectedIndexChanged/VB/Default.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>派生クラスで <see cref="M:System.Web.UI.WebControls.GridView.OnSelectedIndexChanged(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Web.UI.WebControls.GridView.OnSelectedIndexChanged(System.EventArgs)" /> メソッドを呼び出してください。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnSelectedIndexChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectedIndexChanging (System.Web.UI.WebControls.GridViewSelectEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectedIndexChanging(class System.Web.UI.WebControls.GridViewSelectEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.OnSelectedIndexChanging(System.Web.UI.WebControls.GridViewSelectEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.GridViewSelectEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A<see cref="T:System.Web.UI.WebControls.GridViewSelectEventArgs" />イベント データを格納します。</param>
        <summary><see cref="E:System.Web.UI.WebControls.GridView.SelectedIndexChanging" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.SelectedIndexChanging>イベントを発生すると、行の選択 ボタンをクリックすると、その前に、<xref:System.Web.UI.WebControls.GridView>コントロールは、select 操作を処理します。 これにより、このイベントが発生するたびに、選択操作の取り消しなどのカスタムのルーチンを実行するイベント処理メソッドを提供できます。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)です。  
  
 <xref:System.Web.UI.WebControls.GridView.OnSelectedIndexChanging%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>派生クラスで <see cref="M:System.Web.UI.WebControls.GridView.OnSelectedIndexChanging(System.Web.UI.WebControls.GridViewSelectEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Web.UI.WebControls.GridView.OnSelectedIndexChanging(System.Web.UI.WebControls.GridViewSelectEventArgs)" /> メソッドを呼び出してください。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnSorted">
      <MemberSignature Language="C#" Value="protected virtual void OnSorted (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSorted(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.OnSorted(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary><see cref="E:System.Web.UI.WebControls.GridView.Sorted" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.Sorted>イベントが発生した後は、列の並べ替えにハイパーリンクがクリックされたときに、<xref:System.Web.UI.WebControls.GridView>コントロールは、並べ替え操作を処理します。 これにより、このイベントが発生するたびに、カスタムの並べ替えなど、カスタム ルーチンを実行するイベント処理メソッドを提供できます。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)です。  
  
 <xref:System.Web.UI.WebControls.GridView.OnSorted%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>派生クラスで <see cref="M:System.Web.UI.WebControls.GridView.OnSorted(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Web.UI.WebControls.GridView.OnSorted(System.EventArgs)" /> メソッドを呼び出してください。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnSorting">
      <MemberSignature Language="C#" Value="protected virtual void OnSorting (System.Web.UI.WebControls.GridViewSortEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSorting(class System.Web.UI.WebControls.GridViewSortEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.OnSorting(System.Web.UI.WebControls.GridViewSortEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.GridViewSortEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A<see cref="T:System.Web.UI.WebControls.GridViewSortEventArgs" />イベント データを格納します。</param>
        <summary><see cref="E:System.Web.UI.WebControls.GridView.Sorting" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.Sorting>イベントは、列の並べ替えにハイパーリンクがクリックされたとき、その前に、<xref:System.Web.UI.WebControls.GridView>コントロールは、並べ替え操作を処理します。 これにより、このイベントが発生するたびに、並べ替え操作の取り消しなどのカスタムのルーチンを実行するイベント処理メソッドを提供できます。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)です。  
  
 <xref:System.Web.UI.WebControls.GridView.OnSorting%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><see cref="E:System.Web.UI.WebControls.GridView.Sorting" /> イベントのハンドラーがありません。</exception>
        <block subset="none" type="overrides">
          <para>派生クラスで <see cref="M:System.Web.UI.WebControls.GridView.OnSorting(System.Web.UI.WebControls.GridViewSortEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Web.UI.WebControls.GridView.OnSorting(System.Web.UI.WebControls.GridViewSortEventArgs)" /> メソッドを呼び出してください。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="PageCount">
      <MemberSignature Language="C#" Value="public virtual int PageCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PageCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.PageCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データのソースのレコードを表示するために必要なページの数を取得、<see cref="T:System.Web.UI.WebControls.GridView" />コントロール。</summary>
        <value>内のページの数、<see cref="T:System.Web.UI.WebControls.GridView" />コントロール。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ページング機能が有効な場合 (設定して、<xref:System.Web.UI.WebControls.GridView.AllowPaging%2A>プロパティを`true`) を使用して、<xref:System.Web.UI.WebControls.GridView.PageCount%2A>プロパティをデータ ソース内のレコードを表示するために必要なページの合計数を決定します。 この値は、ページに表示されるレコードの数によって、データ ソース内のレコードの合計数で割ることによって計算 (で指定されたとおり、<xref:System.Web.UI.WebControls.GridView.PageSize%2A>プロパティ) と丸め処理をします。  
  
   
  
## Examples  
 次の例で使用する方法、<xref:System.Web.UI.WebControls.GridView.PageCount%2A>に表示されるページの合計数を決定するプロパティ、<xref:System.Web.UI.WebControls.GridView>コントロール。  
  
 [!code-aspx-csharp[GridViewPagerTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewPagerTemplate/CS/gridviewpagertemplatecs.aspx#1)]
 [!code-aspx-vb[GridViewPagerTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewPagerTemplate/VB/gridviewpagertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PageIndex">
      <MemberSignature Language="C#" Value="public virtual int PageIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PageIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.PageIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または現在表示されているページのインデックスを設定します。</summary>
        <value>現在表示されているページの 0 から始まるインデックス。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ページング機能が有効な場合 (設定して、<xref:System.Web.UI.WebControls.GridView.AllowPaging%2A>プロパティを`true`) を使用して、<xref:System.Web.UI.WebControls.GridView.PageIndex%2A>プロパティを現在表示されているページのインデックスを確認します。 このプロパティを使用して、プログラムで、表示されるページを変更することができますも。  
  
   
  
## Examples  
 次の例で使用する方法、<xref:System.Web.UI.WebControls.GridView.PageIndex%2A>に現在表示されているページのインデックスを決定するプロパティ、<xref:System.Web.UI.WebControls.GridView>コントロール。 例も示しますが、どのように<xref:System.Web.UI.WebControls.GridView.PageIndex%2A>ページャー行から値を選択した後に表示されるページを指定するプロパティを使用できます。  
  
 [!code-aspx-csharp[GridViewPagerTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewPagerTemplate/CS/gridviewpagertemplatecs.aspx#1)]
 [!code-aspx-vb[GridViewPagerTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewPagerTemplate/VB/gridviewpagertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><see cref="P:System.Web.UI.WebControls.GridView.PageIndex" /> プロパティは、0 未満の値が設定されています。</exception>
      </Docs>
    </Member>
    <Member MemberName="PageIndexChanged">
      <MemberSignature Language="C#" Value="public event EventHandler PageIndexChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PageIndexChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.GridView.PageIndexChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ページャー ボタンのいずれかをクリックすると、後に発生する、<see cref="T:System.Web.UI.WebControls.GridView" />コントロールは、ページング操作を処理します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.PageIndexChanged>ページャー ボタンのいずれかをクリックすると、後でイベントが発生した、<xref:System.Web.UI.WebControls.GridView>コントロールは、ページング操作を処理します。 これにより、このイベントが発生するたびに、カスタム ページング操作などのカスタムのルーチンを実行するイベント処理メソッドを提供できます。  
  
 ユーザーが選択したページのインデックスを確認するには<xref:System.Web.UI.WebControls.GridView.PageIndex%2A>のプロパティ、<xref:System.Web.UI.WebControls.GridView>コントロール。  
  
 イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。  
  
   
  
## Examples  
 次の例で使用する方法、<xref:System.Web.UI.WebControls.GridView.PageIndexChanged>ページャー行からユーザーが選択したページ数を表示するイベントです。  
  
 [!code-aspx-csharp[GridViewPageIndexChanged#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewPageIndexChanged/CS/gridviewpageindexchangedcs.aspx#1)]
 [!code-aspx-vb[GridViewPageIndexChanged#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewPageIndexChanged/VB/gridviewpageindexchangedvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PageIndexChanging">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.GridViewPageEventHandler PageIndexChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.GridViewPageEventHandler PageIndexChanging" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.GridView.PageIndexChanging" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridViewPageEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ページャー ボタンのいずれかをクリックすると、その前に発生する、<see cref="T:System.Web.UI.WebControls.GridView" />コントロールは、ページング操作を処理します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.PageIndexChanging>ページャー ボタンのいずれかをクリックすると、その前に、イベントが発生した、<xref:System.Web.UI.WebControls.GridView>コントロールは、ページング操作を処理します。 これにより、このイベントが発生するたびに、ページング操作の取り消しなどのカスタムのルーチンを実行するイベント処理メソッドを提供できます。  
  
> [!NOTE]
>  プログラムで設定すると、このイベントは発生しませんが、<xref:System.Web.UI.WebControls.GridView.PageIndex%2A>プロパティです。  
  
 A<xref:System.Web.UI.WebControls.GridViewPageEventArgs>オブジェクトがこれにより、ユーザーが選択したページのインデックスを確認して、ページング操作を取り消す必要があることを示すために、イベント処理メソッドに渡されます。 ページング操作をキャンセルするには設定、<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>のプロパティ、<xref:System.Web.UI.WebControls.GridViewPageEventArgs>オブジェクトを`true`です。  
  
 イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。  
  
   
  
## Examples  
 次の例を使用する方法を示しています、<xref:System.Web.UI.WebControls.GridView.PageIndexChanging>場合は、ユーザーが、別に移動しようとしています。 ページング操作を取り消すにはイベント ページ、<xref:System.Web.UI.WebControls.GridView>コントロールが編集モードにします。  
  
 [!code-aspx-csharp[GridViewPageIndexChanging#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewPageIndexChanging/CS/gridviewpageindexchangingcs.aspx#1)]
 [!code-aspx-vb[GridViewPageIndexChanging#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewPageIndexChanging/VB/gridviewpageindexchangingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PagerSettings">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.PagerSettings PagerSettings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.PagerSettings PagerSettings" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.PagerSettings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.PagerSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>参照を取得、<see cref="T:System.Web.UI.WebControls.PagerSettings" />オブジェクトでページャー ボタンのプロパティを設定することができます、<see cref="T:System.Web.UI.WebControls.GridView" />コントロール。</summary>
        <value>参照、<see cref="T:System.Web.UI.WebControls.PagerSettings" />でページャー ボタンのプロパティを設定することができます、<see cref="T:System.Web.UI.WebControls.GridView" />コントロール。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.GridView.PagerSettings%2A>のページャー行の設定を制御するプロパティ、<xref:System.Web.UI.WebControls.GridView>コントロール。 ページャー行を表示すると、ページング機能が有効な場合 (設定して、<xref:System.Web.UI.WebControls.GridView.AllowPaging%2A>プロパティを`true`) し、ユーザーがコントロール内の別のページに移動できるようにするコントロールが含まれています。 このプロパティは読み取り専用です。ただしのプロパティを設定することができます、<xref:System.Web.UI.WebControls.PagerSettings>オブジェクトを返します。 プロパティを設定するには、次のいずれかを使用して宣言します。  
  
-   開始タグに属性を配置、<xref:System.Web.UI.WebControls.GridView>フォームでコントロール`Property-Subproperty`ここで、`Subproperty`のプロパティ、<xref:System.Web.UI.WebControls.PagerSettings>オブジェクト (たとえば、 `PagerSettings-Mode`)。  
  
-   入れ子、`<PagerSettings>`要素開始タグと終了タグの間、<xref:System.Web.UI.WebControls.GridView>コントロール。  
  
 プロパティがフォームにプログラムで設定することもできます`Property.Subproperty`(たとえば、 `PagerStyle.Mode`)。 通常、一般的な設定には、ポケットベルによる行の表示モードとカスタム テキスト、またはナビゲーション コントロールのイメージが含まれます。  
  
   
  
## Examples  
 次の例は、設定する方法を示します、<xref:System.Web.UI.WebControls.GridView.PagerSettings%2A>プロパティ宣言します。 青、および薄青色のフォントおよびページャー行の背景を設定します。  
  
 [!code-aspx-csharp[GridViewAllowPaging#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewAllowPaging/CS/gridviewallowpagingcs.aspx#1)]
 [!code-aspx-vb[GridViewAllowPaging#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewAllowPaging/VB/gridviewallowpagingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PagerStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle PagerStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle PagerStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.PagerStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>参照を取得、<see cref="T:System.Web.UI.WebControls.TableItemStyle" />のページャー行の外観を設定できるようにするオブジェクト、<see cref="T:System.Web.UI.WebControls.GridView" />コントロール。</summary>
        <value>参照、<see cref="T:System.Web.UI.WebControls.TableItemStyle" />のページャー行のスタイルを表す、<see cref="T:System.Web.UI.WebControls.GridView" />コントロール。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.GridView.PagerStyle%2A>のページャー行の外観を制御するプロパティ、<xref:System.Web.UI.WebControls.GridView>コントロール。 ページャー行を表示すると、ページング機能が有効な場合 (設定して、<xref:System.Web.UI.WebControls.GridView.AllowPaging%2A>プロパティを`true`) し、ユーザーがコントロール内の別のページに移動できるようにするコントロールが含まれています。 このプロパティは読み取り専用です。ただしのプロパティを設定することができます、<xref:System.Web.UI.WebControls.TableItemStyle>オブジェクトを返します。 プロパティを設定するには、次のいずれかを使用して宣言します。  
  
-   開始タグに属性を配置、<xref:System.Web.UI.WebControls.GridView>フォームでコントロール`Property-Subproperty`ここで、`Subproperty`のプロパティ、<xref:System.Web.UI.WebControls.TableItemStyle>オブジェクト (たとえば、 `PagerStyle-ForeColor`)。  
  
-   入れ子、`<PagerStyle>`要素開始タグと終了タグの間、<xref:System.Web.UI.WebControls.GridView>コントロール。  
  
 プロパティがフォームにプログラムで設定することもできます`Property.Subproperty`(たとえば、 `PagerStyle.ForeColor`)。 通常、一般的な設定には、カスタムの背景色、前景色、およびフォントのプロパティが含まれます。  
  
   
  
## Examples  
 次の例は、設定する方法を示します、<xref:System.Web.UI.WebControls.GridView.PagerStyle%2A>プロパティ宣言します。 青、および薄青色のフォントおよびページャー行の背景を設定します。  
  
 [!code-aspx-csharp[GridViewAllowPaging#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewAllowPaging/CS/gridviewallowpagingcs.aspx#1)]
 [!code-aspx-vb[GridViewAllowPaging#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewAllowPaging/VB/gridviewallowpagingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PagerTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate PagerTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate PagerTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.PagerTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.GridViewRow))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定のカスタム コンテンツのページャー行を<see cref="T:System.Web.UI.WebControls.GridView" />コントロール。</summary>
        <value>A<see cref="T:System.Web.UI.ITemplate" />ページャー行のカスタム コンテンツを格納しています。 既定値は null で、このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ページャー行が表示されます、<xref:System.Web.UI.WebControls.GridView>制御ページング機能が有効な場合 (ときに、<xref:System.Web.UI.WebControls.GridView.AllowPaging%2A>プロパティが設定を true に)。 ページャー行には、ユーザーがコントロール内の別のページに移動できるようにするコントロールが含まれています。 使用して、独自の UI を定義する組み込みのページャー行ユーザー インターフェイス (UI) を使用する代わりに、<xref:System.Web.UI.WebControls.GridView.PagerTemplate%2A>プロパティです。  
  
> [!NOTE]
>  ときに、<xref:System.Web.UI.WebControls.GridView.PagerTemplate%2A>プロパティが設定されて、UI の組み込みのページャー行よりも優先されます。  
  
 ページャー行用のカスタム テンプレートを指定するには、まず配置`<PagerTemplate>`タグ、開始タグと終了タグの間、<xref:System.Web.UI.WebControls.GridView>コントロール。 開始タグと終了の間でテンプレートの内容の一覧を表示することができますし、`<PagerTemplate>`タグ。 ページャー行の外観を制御する、<xref:System.Web.UI.WebControls.GridView.PagerStyle%2A>プロパティです。  
  
 通常、ボタン コントロールは、ページング操作を実行するポケットベル テンプレートに追加されます。 <xref:System.Web.UI.WebControls.GridView>コントロールはときに、ボタン コントロールのページング操作を実行、 `CommandName` 「ページ」に設定するプロパティをクリックします。 ボタンの`CommandArgument`プロパティを実行するページング操作の種類を決定します。 次の表は、コマンド引数の値でサポートされている、<xref:System.Web.UI.WebControls.GridView>コントロール。  
  
|`CommandArgument` の値|説明|  
|-----------------------------|-----------------|  
|[次へ]|次のページに移動します。|  
|「前」|前のページに移動します。|  
|"First"|最初のページに移動します。|  
|[最終]|最後のページに移動します。|  
|整数値|指定したページ番号に移動します。|  
  
   
  
## Examples  
 次の例は、内を移動するユーザーを許可するカスタム ページ テンプレートを作成する方法を示します、<xref:System.Web.UI.WebControls.GridView>制御を使用して、<xref:System.Web.UI.WebControls.DropDownList>コントロール。  
  
 [!code-aspx-csharp[GridViewPagerTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewPagerTemplate/CS/gridviewpagertemplatecs.aspx#1)]
 [!code-aspx-vb[GridViewPagerTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewPagerTemplate/VB/gridviewpagertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PageSize">
      <MemberSignature Language="C#" Value="public virtual int PageSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PageSize" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.PageSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(10)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定 ページで表示するレコードの数、<see cref="T:System.Web.UI.WebControls.GridView" />コントロール。</summary>
        <value>1 つのページに表示するレコードの数。 既定値は 10 です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ページング機能が有効な場合 (設定して、<xref:System.Web.UI.WebControls.GridView.AllowPaging%2A>プロパティを`true`)、使用して、<xref:System.Web.UI.WebControls.GridView.PageSize%2A>プロパティを 1 つのページに表示するレコードの数を指定します。  
  
   
  
## Examples  
 次の例で使用する方法、<xref:System.Web.UI.WebControls.GridView.PageSize%2A>で、一度に 15 レコードを表示するプロパティを<xref:System.Web.UI.WebControls.GridView>コントロール。  
  
 [!code-aspx-csharp[GridViewPageSize#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewPageSize/CS/gridviewpagesizecs.aspx#1)]
 [!code-aspx-vb[GridViewPageSize#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewPageSize/VB/gridviewpagesizevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><see cref="P:System.Web.UI.WebControls.GridView.PageSize" />プロパティが 1 未満の値に設定します。</exception>
      </Docs>
    </Member>
    <Member MemberName="PerformDataBinding">
      <MemberSignature Language="C#" Value="protected override void PerformDataBinding (System.Collections.IEnumerable data);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void PerformDataBinding(class System.Collections.IEnumerable data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.PerformDataBinding(System.Collections.IEnumerable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.IEnumerable" />
      </Parameters>
      <Docs>
        <param name="data"><see cref="T:System.Collections.IEnumerable" />データ ソースを格納しています。</param>
        <summary>指定したデータ ソースへのバインド、<see cref="T:System.Web.UI.WebControls.GridView" />コントロール。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.PerformDataBinding%2A>メソッドは、ヘルパー メソッドによって呼び出される、<xref:System.Web.UI.WebControls.GridView>コントロールのコントロールに指定されたデータ ソースをバインドします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><see cref="M:System.Web.UI.WebControls.BaseDataBoundControl.DataBind" />メソッドはシールされているデータをバインドするときに、その他のタスクを実行する必要がある場合は、このメソッドをオーバーライドする必要があります。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="PrepareControlHierarchy">
      <MemberSignature Language="C#" Value="protected virtual void PrepareControlHierarchy ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void PrepareControlHierarchy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.PrepareControlHierarchy" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>コントロールの階層を確立します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドのコントロールの階層を確立するために使用、<xref:System.Web.UI.WebControls.GridView>コントロール。  
  
> [!NOTE]
>  このメソッドが拡張するコントロールの開発者によって、主に使用、<xref:System.Web.UI.WebControls.GridView>コントロール。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RaiseCallbackEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaiseCallbackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaiseCallbackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.RaiseCallbackEvent(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">イベント ハンドラーに渡す引数。</param>
        <summary>コールバック ハンドラーの引数を作成、<see cref="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.Boolean)" />メソッドです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.RaiseCallbackEvent%2A>メソッドで使用されるヘルパー メソッド、<xref:System.Web.UI.WebControls.GridView>のコールバック ハンドラーの引数を作成するコントロールを<xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A>メソッドです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RaisePostBackEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.RaisePostBackEvent(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">作成元のイベントの引数、<see cref="T:System.Web.UI.WebControls.CommandEventArgs" />イベントかが発生するイベントです。</param>
        <summary>適切なイベントを発生させる、<see cref="T:System.Web.UI.WebControls.GridView" />サーバーへのポストバック時に制御します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ページの呼び出し、<xref:System.Web.UI.Page.RaisePostBackEvent%2A>ポストバック イベントが発生したときに、メソッドの適切なイベントを発生させる、<xref:System.Web.UI.WebControls.GridView>コントロール。 この呼び出しは、事前に発生する前に、読み込みと変更の通知が完了したら、ページのライフ サイクルで発生します。 作成するこのメソッドが実装されて、<xref:System.Web.UI.WebControls.CommandEventArgs>が発生するイベントのオブジェクト。  
  
> [!NOTE]
>  このメソッドが拡張するコントロールの開発者によって、主に使用、<xref:System.Web.UI.WebControls.GridView>コントロール。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><see cref="T:System.Web.UI.HtmlTextWriter" />クライアントのブラウザーでサーバー コントロールの内容を表示するために使用します。</param>
        <summary>Web サーバー コントロールの内容を指定して、クライアントのブラウザーにレンダリング<see cref="T:System.Web.UI.HtmlTextWriter" />オブジェクト。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.Render%2A>メソッドを指定して、クライアントのブラウザーにサーバー コントロールの内容を表示するために使用<xref:System.Web.UI.HtmlTextWriter?displayProperty=nameWithType>オブジェクト。  
  
> [!NOTE]
>  このメソッドが拡張するコントロールの開発者によって、主に使用、<xref:System.Web.UI.WebControls.GridView>コントロール。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RowCancelingEdit">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.GridViewCancelEditEventHandler RowCancelingEdit;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.GridViewCancelEditEventHandler RowCancelingEdit" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.GridView.RowCancelingEdit" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridViewCancelEditEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>編集モードでの行の [キャンセル] ボタンがクリックされたときに、行が編集モードを終了する前に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.RowCancelingEdit>編集モードでの行の [キャンセル] ボタンがクリックされたときにイベントが発生したが、行が終了する前に編集モードです。 これにより、なりそうな場合、行、望ましくない状態でこのイベントが発生するたびに取り消し操作を停止するなど、カスタムのルーチンを実行するイベント処理メソッドを提供できます。  
  
 A<xref:System.Web.UI.WebControls.GridViewCancelEditEventArgs>オブジェクトが、これにより、現在の行のインデックスを確認したり、取り消し操作を停止するかを示すために、イベント処理メソッドに渡されます。 取り消し操作を停止する、<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>のプロパティ、<xref:System.Web.UI.WebControls.GridViewCancelEditEventArgs>オブジェクトを`true`です。  
  
 イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。  
  
   
  
## Examples  
 次の例で使用する方法、 <xref:System.Web.UI.WebControls.GridView.RowCancelingEdit> 、ユーザーの更新操作を取り消すときに取り消しのメッセージを表示するイベント、<xref:System.Web.UI.WebControls.GridView>コントロール。  
  
 [!code-aspx-csharp[GridViewRowCancellingEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewRowCancellingEdit/CS/gridviewrowcancellingeditcs.aspx#1)]
 [!code-aspx-vb[GridViewRowCancellingEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewRowCancellingEdit/VB/gridviewrowcancellingeditvb.aspx#1)]  
  
 次の例で使用する方法、<xref:System.Web.UI.WebControls.GridView.RowCancelingEdit>データ ソースをプログラムで設定した場合、更新操作をキャンセルするイベントです。  
  
 [!code-aspx-csharp[GridViewRowEditing#2](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewRowEditing/CS/GridViewRowEditing2CS.aspx#2)]
 [!code-aspx-vb[GridViewRowEditing#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewRowEditing/VB/GridViewRowEditing2VB.aspx#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RowCommand">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.GridViewCommandEventHandler RowCommand;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.GridViewCommandEventHandler RowCommand" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.GridView.RowCommand" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridViewCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ボタンがクリックされたときに発生する<see cref="T:System.Web.UI.WebControls.GridView" />コントロール。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.RowCommand>でボタンがクリックされたときにイベントが発生した、<xref:System.Web.UI.WebControls.GridView>コントロール。 これにより、このイベントが発生するたびに、カスタム ルーチンを実行するイベント処理メソッドを提供できます。  
  
 内の各ボタン、<xref:System.Web.UI.WebControls.GridView>コントロールは、コントロールの組み込み機能の一部を呼び出すもことができます。 これらの操作のいずれかを実行するのには、設定、`CommandName`に次の表に、値のいずれかのボタンのプロパティです。  
  
|`CommandName` の値|説明|  
|-------------------------|-----------------|  
|[キャンセル]|編集操作をキャンセルしを返します、<xref:System.Web.UI.WebControls.GridView>読み取り専用モードを制御します。 <xref:System.Web.UI.WebControls.GridView.RowCancelingEdit> イベントを発生させます。|  
|"削除"|現在のレコードを削除します。 発生させる、<xref:System.Web.UI.WebControls.GridView.RowDeleting>と<xref:System.Web.UI.WebControls.GridView.RowDeleted>イベント。|  
|"Edit"|現在のレコードを編集モードに設定します。 <xref:System.Web.UI.WebControls.GridView.RowEditing> イベントを発生させます。|  
|"Page"|ページング操作を実行します。 セット、 `CommandArgument` "First「、"最後」にあるボタン、[次へ]、「前」、またはを実行するページング操作の種類を指定するページ番号のプロパティです。 発生させる、<xref:System.Web.UI.WebControls.GridView.PageIndexChanging>と<xref:System.Web.UI.WebControls.GridView.PageIndexChanged>イベント。|  
|"Select"|現在のレコードを選択します。 発生させる、<xref:System.Web.UI.WebControls.GridView.SelectedIndexChanging>と<xref:System.Web.UI.WebControls.GridView.SelectedIndexChanged>イベント。|  
|"Sort"|並べ替え、<xref:System.Web.UI.WebControls.GridView>コントロール。 発生させる、<xref:System.Web.UI.WebControls.GridView.Sorting>と<xref:System.Web.UI.WebControls.GridView.Sorted>イベント。|  
|[更新]|データ ソースの現在のレコードを更新します。 発生させる、<xref:System.Web.UI.WebControls.GridView.RowUpdating>と<xref:System.Web.UI.WebControls.GridView.RowUpdated>イベント。|  
  
 ただし、<xref:System.Web.UI.WebControls.GridView.RowCommand>イベントは、前の表に一覧表示 ボタンがクリックされたときに、操作の表に示されているイベントを使用することをお勧めします。  
  
 A<xref:System.Web.UI.WebControls.GridViewCommandEventArgs>オブジェクトがクリックされたボタンのコマンドの引数とコマンドの名前を決定することにより、イベント処理メソッドに渡されます。  
  
> [!NOTE]
>  イベントを発生させた行のインデックスを確認するには<xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A>イベントに渡されるイベント引数のプロパティです。 <xref:System.Web.UI.WebControls.ButtonField>クラスを自動的に入力、<xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A>適切なインデックス値を持つプロパティです。 他のコマンド ボタンの必要があります手動で設定する、<xref:System.Web.UI.WebControls.Button.CommandArgument%2A>コマンド ボタンのプロパティです。 たとえば、設定することができます、<xref:System.Web.UI.WebControls.Button.CommandArgument%2A>に`<%# Container.DataItemIndex %>`ときに、<xref:System.Web.UI.WebControls.GridView>コントロールも持っていないページングを有効にします。  
  
 イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。  
  
   
  
## Examples  
 Visual Studio の Web サイト プロジェクトとソース コードは、このトピックで使用可能な:[ダウンロード](http://go.microsoft.com/fwlink/?LinkId=191882)です。  
  
 次の例で使用する方法、<xref:System.Web.UI.WebControls.GridView.RowCommand>から顧客の名前を追加するイベント、<xref:System.Web.UI.WebControls.GridView>コントロールを<xref:System.Web.UI.WebControls.ListBox>行の追加 ボタンがクリックされたときを制御します。  
  
 [!code-aspx-csharp[GridViewRowCommmand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewRowCommmand/CS/gridviewrowcommandcs.aspx#1)]
 [!code-aspx-vb[GridViewRowCommmand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewRowCommmand/VB/gridviewrowcommandvb.aspx#1)]  
  
 次の例で使用する方法、<xref:System.Web.UI.WebControls.GridView.RowCommand>行のボタンがクリックされたときに、製品の価格を更新するイベントです。 この例は、ページング機能を有効になって、<xref:System.Web.UI.WebControls.GridView>コントロールとセット、<xref:System.Web.UI.WebControls.Button.CommandArgument%2A>のプロパティ、<xref:System.Web.UI.WebControls.Button>コントロールを適切な行インデックス。  
  
 [!code-aspx-csharp[GridViewRowCommmand#2](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewRowCommmand/CS/gridviewrowcommand2cs.aspx#2)]
 [!code-aspx-vb[GridViewRowCommmand#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewRowCommmand/VB/gridviewrowcommand2vb.aspx#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RowCreated">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.GridViewRowEventHandler RowCreated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.GridViewRowEventHandler RowCreated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.GridView.RowCreated" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridViewRowEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>内の行が作成されるときに発生する、<see cref="T:System.Web.UI.WebControls.GridView" />コントロール。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 前に、<xref:System.Web.UI.WebControls.GridView>コントロールを表示できる、<xref:System.Web.UI.WebControls.GridViewRow>コントロール内の行ごとのオブジェクトを作成する必要があります。 <xref:System.Web.UI.WebControls.GridView.RowCreated>イベントが発生した各行、<xref:System.Web.UI.WebControls.GridView>コントロールを作成します。 これにより、このイベントが発生するたびに、カスタム コンテンツを行を追加するなど、カスタムのルーチンを実行するイベント処理メソッドを提供できます。  
  
 A<xref:System.Web.UI.WebControls.GridViewRowEventArgs>オブジェクトが作成されている行のプロパティにアクセスすることにより、イベント処理メソッドに渡されます。 行の特定のセルにアクセスするには、使用、<xref:System.Web.UI.WebControls.TableRow.Cells%2A>のプロパティ、<xref:System.Web.UI.WebControls.GridViewRowEventArgs>オブジェクト。 どの行 (ヘッダー行やデータの行) は作成の種類を使用して指定できます、<xref:System.Web.UI.WebControls.GridViewRow.RowType%2A>プロパティです。  
  
 イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。  
  
   
  
## Examples  
 次の例で使用する方法、<xref:System.Web.UI.WebControls.GridView.RowCreated>イベントで作成されている行のインデックスを格納する、<xref:System.Web.UI.WebControls.LinkButton.CommandArgument%2A>のプロパティ、<xref:System.Web.UI.WebControls.LinkButton>行に含まれるコントロール。 これを含む行のインデックスを確認することできます、<xref:System.Web.UI.WebControls.LinkButton>ユーザーがボタンをクリックした場合を制御します。  
  
 [!code-aspx-csharp[GridViewRowCreated#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewRowCreated/CS/gridviewrowcreatedcs.aspx#1)]
 [!code-aspx-vb[GridViewRowCreated#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewRowCreated/VB/gridviewrowcreatedvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RowDataBound">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.GridViewRowEventHandler RowDataBound;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.GridViewRowEventHandler RowDataBound" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.GridView.RowDataBound" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridViewRowEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データ行がデータにバインドされているときに発生する<see cref="T:System.Web.UI.WebControls.GridView" />コントロール。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 前に、<xref:System.Web.UI.WebControls.GridView>コントロールを表示できる、コントロール内の各行は、データ ソース内のレコードにバインドする必要があります。 <xref:System.Web.UI.WebControls.GridView.RowDataBound>イベントは、データ行 (によって表される、<xref:System.Web.UI.WebControls.GridViewRow>オブジェクト) データには、バインド、<xref:System.Web.UI.WebControls.GridView>コントロール。 これにより、このイベントが発生するたびに、行にバインドされたデータの値を変更するなど、カスタムのルーチンを実行するイベント処理メソッドを提供できます。  
  
 A<xref:System.Web.UI.WebControls.GridViewRowEventArgs>オブジェクトがバインドされている行のプロパティにアクセスすることにより、イベント処理メソッドに渡されます。 行の特定のセルにアクセスするには、使用、<xref:System.Web.UI.WebControls.TableRow.Cells%2A>のプロパティ、<xref:System.Web.UI.WebControls.GridViewRow>に含まれているオブジェクト、<xref:System.Web.UI.WebControls.GridViewRowEventArgs.Row%2A>のプロパティ、<xref:System.Web.UI.WebControls.GridViewRowEventArgs>オブジェクト。 使用している行の種類 (ヘッダー行やデータの行) のバインドを指定できます、<xref:System.Web.UI.WebControls.GridViewRow.RowType%2A>プロパティです。  
  
 イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。  
  
   
  
## Examples  
 Visual Studio の Web サイト プロジェクトとソース コードは、このトピックで使用可能な:[ダウンロード](http://go.microsoft.com/fwlink/?LinkId=191882)です。  
  
 次の例で使用する方法、<xref:System.Web.UI.WebControls.GridView.RowDataBound>に表示される前に、データ ソースのフィールドの値を変更するイベント、<xref:System.Web.UI.WebControls.GridView>コントロール。  
  
 [!code-aspx-csharp[GridViewRowDataBound#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewRowDataBound/CS/gridviewrowdataboundcs.aspx#1)]
 [!code-aspx-vb[GridViewRowDataBound#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewRowDataBound/VB/gridviewrowdataboundvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RowDeleted">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.GridViewDeletedEventHandler RowDeleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.GridViewDeletedEventHandler RowDeleted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.GridView.RowDeleted" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridViewDeletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>後で、行の削除 ボタンがクリックされたときに発生、<see cref="T:System.Web.UI.WebControls.GridView" />コントロールは、対応する行を削除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.RowDeleted>イベントが発生した後、行の削除 ボタンがクリックされたときに、<xref:System.Web.UI.WebControls.GridView>コントロールは、対応する行を削除します。 これにより、このイベントが発生するたびに、削除操作の結果を確認するなど、カスタムのルーチンを実行するイベント処理メソッドを提供できます。  
  
 A<xref:System.Web.UI.WebControls.GridViewDeletedEventArgs>とが発生する例外の影響を受ける行の数を決定することにより、イベント処理メソッドにオブジェクトが渡されます。 設定して、イベント処理メソッドで例外が処理されたかどうかを指定することも、<xref:System.Web.UI.WebControls.GridViewDeletedEventArgs.ExceptionHandled%2A>のプロパティ、<xref:System.Web.UI.WebControls.GridViewDeletedEventArgs>オブジェクト。  
  
 イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。  
  
   
  
## Examples  
 次の例で使用する方法、<xref:System.Web.UI.WebControls.GridView.RowDeleted>削除操作の結果をチェックするイベントです。 ユーザーに操作が成功したかどうかを示すために、メッセージが表示されます。  
  
 [!code-aspx-csharp[GridViewRowDeleted#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewRowDeleted/CS/gridviewrowdeletedcs.aspx#1)]
 [!code-aspx-vb[GridViewRowDeleted#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewRowDeleted/VB/gridviewrowdeletedvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RowDeleting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.GridViewDeleteEventHandler RowDeleting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.GridViewDeleteEventHandler RowDeleting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.GridView.RowDeleting" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridViewDeleteEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>その前に、行の削除 ボタンがクリックされたときに発生、<see cref="T:System.Web.UI.WebControls.GridView" />コントロールは、対応する行を削除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.RowDeleting>イベントは、行の削除 ボタンをクリックすると、その前に、<xref:System.Web.UI.WebControls.GridView>コントロールは、対応する行を削除します。 これにより、このイベントが発生するたびに、削除操作の取り消しなどのカスタムのルーチンを実行するイベント処理メソッドを提供できます。  
  
 A<xref:System.Web.UI.WebControls.GridViewDeleteEventArgs>オブジェクトが、これにより、現在の行のインデックスを確認したり、削除操作を取り消す必要があることを示すために、イベント処理メソッドに渡されます。 削除操作をキャンセルするには設定、<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>のプロパティ、<xref:System.Web.UI.WebControls.GridViewDeleteEventArgs>オブジェクトを`true`です。 操作することも、<xref:System.Web.UI.WebControls.GridViewDeleteEventArgs.Keys%2A>と<xref:System.Web.UI.WebControls.GridViewDeleteEventArgs.Values%2A>コレクション、必要に応じて、値は、データ ソースに渡される前にします。  
  
 イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。  
  
   
  
## Examples  
 次の例で使用する方法、<xref:System.Web.UI.WebControls.GridView.RowDeleting>削除操作をキャンセルするイベントです。 このページには、 <xref:System.Web.UI.WebControls.GridView> AdventureWorksLT データベースの顧客の名前と住所の一覧を表示するコントロール。 ユーザーがクリックしたとき、**削除**行の場合のハンドラーは、リンク、<xref:System.Web.UI.WebControls.GridView.RowDeleting>イベントは、行を削除しようとして、ユーザーに表示されるユーザーの姓を確認します。 姓が"Beaver"の場合は、削除操作は取り消され、エラー メッセージが表示されます。 その他の任意の名前の削除操作は続行され、行が削除されます。  
  
 イベント ハンドラーを使用して、<xref:System.Web.UI.WebControls.GridViewDeleteEventArgs.RowIndex%2A>のプロパティ、<xref:System.Web.UI.WebControls.GridViewDeleteEventArgs>行を削除しようとして、ユーザーを検索するオブジェクト。 例の内容を調べ、<xref:System.Web.UI.WebControls.GridView.Rows%2A>コレクション。 場合、値と比較するキーの値は、ことを確認する、<xref:System.Web.UI.WebControls.GridView.DataKeys%2A>コレクション代わりにします。  
  
 行は、単純な例を保持するために、Customer テーブルではなく、CustomerAddress テーブルから削除されます。 <xref:System.Web.UI.WebControls.GridView>コントロールは次の 3 つのテーブルを結合する結果を示しています。 顧客、アドレス、および CustomerAddress です。 ときに、対応する行を削除すると、CustomerAddress<xref:System.Web.UI.WebControls.GridView>行は表示されなくなります。 参照整合性制約は、実際にはより複雑な Customer テーブルから行を削除する例については、コードになります。  
  
 AdventureWorksLT データベースを設定する方法については、次を参照してください。[する方法: an AdventureWorksLT サンプル データベースのセットアップの ASP.NET 開発](http://msdn.microsoft.com/library/2baad633-9d63-49cc-a6b2-917cafd35356)です。  
  
 [!code-aspx-csharp[GridViewRowDeleting#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewRowDeleting/CS/gridviewrowdeleting.aspx#1)]
 [!code-aspx-vb[GridViewRowDeleting#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewRowDeleting/VB/gridviewrowdeleting.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RowEditing">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.GridViewEditEventHandler RowEditing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.GridViewEditEventHandler RowEditing" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.GridView.RowEditing" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridViewEditEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>その前に、行の編集 ボタンがクリックされたときに発生、<see cref="T:System.Web.UI.WebControls.GridView" />コントロールが編集モードに入ります。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.RowEditing>イベントは、行の編集 ボタンをクリックすると、その前に、<xref:System.Web.UI.WebControls.GridView>コントロールが編集モードに入ります。 これにより、このイベントが発生するたびに、編集操作の取り消しなどのカスタムのルーチンを実行するイベント処理メソッドを提供できます。  
  
 A<xref:System.Web.UI.WebControls.GridViewEditEventArgs>オブジェクトが、これにより、現在の行のインデックスを確認したり、編集操作を取り消す必要があることを示すために、イベント処理メソッドに渡されます。 編集操作をキャンセルするには設定、<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>のプロパティ、<xref:System.Web.UI.WebControls.GridViewEditEventArgs>オブジェクトを`true`です。  
  
 イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。  
  
   
  
## Examples  
 次の例で使用する方法、<xref:System.Web.UI.WebControls.GridView.RowEditing>データ ソースをプログラムで設定した場合、編集モードに行を格納するイベントです。  
  
 [!code-aspx-csharp[GridViewRowEditing#2](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewRowEditing/CS/GridViewRowEditing2CS.aspx#2)]
 [!code-aspx-vb[GridViewRowEditing#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewRowEditing/VB/GridViewRowEditing2VB.aspx#2)]  
  
 次の例で使用する方法、<xref:System.Web.UI.WebControls.GridView.RowEditing>場合は、ユーザーが、米国の会社のレコードを編集しようとしています。 編集操作をキャンセルするイベントです。  
  
 [!code-aspx-csharp[GridViewRowEditing#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewRowEditing/CS/gridviewroweditingcs.aspx#1)]
 [!code-aspx-vb[GridViewRowEditing#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewRowEditing/VB/gridviewroweditingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RowHeaderColumn">
      <MemberSignature Language="C#" Value="public virtual string RowHeaderColumn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RowHeaderColumn" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.RowHeaderColumn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Web.UI.Design.DataColumnSelectionConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の列ヘッダーとして使用する列の名前、<see cref="T:System.Web.UI.WebControls.GridView" />コントロール。 このプロパティは、コントロールを支援テクノロジ デバイスのユーザーにアクセスしやすくものです。</summary>
        <value>列ヘッダーとして使用する列の名前。 既定値は空の文字列 ("") です。このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 HTML では、テーブルのヘッダーが行や列のいずれかと関連付けることができます。 方向が設定で指定された、`scope`の属性、`<th>`要素。 <xref:System.Web.UI.WebControls.GridView>コントロールに設定して表示できる組み込みのヘッダー行がある、<xref:System.Web.UI.WebControls.GridView.ShowHeader%2A>プロパティを`true`です。 必要に応じて、ヘッダーの列を指定することができます (通常、最初と最後の列、<xref:System.Web.UI.WebControls.GridView>コントロール) でこのプロパティを設定します。 このプロパティを設定すると、指定したフィールド名に対応する列のすべてのセルとしてレンダリングされます`<th scope="row">`要素。  
  
> [!NOTE]
>  指定された列は、ヘッダーと同様に扱われますが、 <xref:System.Web.UI.WebControls.GridView.HeaderStyle%2A>、 <xref:System.Web.UI.WebControls.GridView.ShowHeader%2A>、および<xref:System.Web.UI.WebControls.GridView.UseAccessibleHeader%2A>プロパティは、ヘッダーの列には適用されません。  
  
 既定のレンダリング、`<th>`要素を維持すると、水平方向に太字で中央揃えとしてテキストを表示します。 開発者は、の動作をオーバーライドできる、`<th>`カスケードを使用して要素のスタイル シートです。  
  
> [!NOTE]
>  このプロパティは、バインドされたフィールドでのみ動作します。 テンプレートのフィールドでは機能しません。  
  
   
  
## Examples  
 次の例で使用する方法、<xref:System.Web.UI.WebControls.GridView.RowHeaderColumn%2A>にヘッダー列を表示するプロパティ、<xref:System.Web.UI.WebControls.GridView>コントロール。  
  
 [!code-aspx-csharp[GridViewRowHeaderColumn#1](~/samples/snippets/csharp/VS_Snippets_WebNet/gridviewrowheadercolumn/CS/GridViewRowHeaderColumncs.aspx#1)]
 [!code-aspx-vb[GridViewRowHeaderColumn#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/gridviewrowheadercolumn/VB/GridViewRowHeaderColumnvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rows">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.GridViewRowCollection Rows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.GridViewRowCollection Rows" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.Rows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridViewRowCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コレクションを取得<see cref="T:System.Web.UI.WebControls.GridViewRow" />内のデータ行を表すオブジェクト、<see cref="T:System.Web.UI.WebControls.GridView" />コントロール。</summary>
        <value>A<see cref="T:System.Web.UI.WebControls.GridViewRowCollection" />内のすべてのデータ行を格納している、<see cref="T:System.Web.UI.WebControls.GridView" />コントロール。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.Rows%2A>内のデータ行を格納するプロパティ (コレクション) が使用される、<xref:System.Web.UI.WebControls.GridView>コントロール。 <xref:System.Web.UI.WebControls.GridView>コントロールを自動的に入力、<xref:System.Web.UI.WebControls.GridView.Rows%2A>コレクションを作成して、<xref:System.Web.UI.WebControls.GridViewRow>データ ソース内の各レコード オブジェクトをコレクションに各オブジェクトを追加します。 コントロール内の特定の行にアクセスする、または行のコレクション全体を反復処理する場合は、このプロパティは使用一般的です。  
  
> [!NOTE]
>  行だけが<xref:System.Web.UI.WebControls.GridViewRow.RowType%2A>プロパティに設定`DataControlRowType.DataRow`に格納されて、<xref:System.Web.UI.WebControls.GridView.Rows%2A>コレクション。 <xref:System.Web.UI.WebControls.GridViewRow>ヘッダー、フッター、およびページャー行を表すオブジェクトは、コレクションに含まれません。  
  
   
  
## Examples  
 次の例で使用する方法、<xref:System.Web.UI.WebControls.GridView.Rows%2A>で編集されている行にアクセスするコレクション、<xref:System.Web.UI.WebControls.GridView>コントロール。 行が更新されると、更新プログラムが成功したことを示すために、メッセージが表示されます。  
  
 [!code-aspx-csharp[GridViewRows#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewRows/CS/gridviewrowscs.aspx#1)]
 [!code-aspx-vb[GridViewRows#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewRows/VB/gridviewrowsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RowStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle RowStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle RowStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.RowStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>参照を取得、<see cref="T:System.Web.UI.WebControls.TableItemStyle" />オブジェクト内のデータ行の外観を設定することができます、<see cref="T:System.Web.UI.WebControls.GridView" />コントロール。</summary>
        <value>参照、<see cref="T:System.Web.UI.WebControls.TableItemStyle" />内のデータ行のスタイルを表す、<see cref="T:System.Web.UI.WebControls.GridView" />コントロール。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.GridView.RowStyle%2A>プロパティ内のデータ行の外観を制御する、<xref:System.Web.UI.WebControls.GridView>コントロール。 ときに、<xref:System.Web.UI.WebControls.GridView.AlternatingRowStyle%2A>でもプロパティが設定、データ行の間で切り替えると表示、<xref:System.Web.UI.WebControls.GridView.RowStyle%2A>設定と<xref:System.Web.UI.WebControls.GridView.AlternatingRowStyle%2A>設定します。 このプロパティは読み取り専用です。ただしのプロパティを設定することができます、<xref:System.Web.UI.WebControls.TableItemStyle>オブジェクトを返します。 プロパティを設定するには、次のいずれかを使用して宣言します。  
  
-   開始タグに属性を配置、<xref:System.Web.UI.WebControls.GridView>フォームでコントロール`Property-Subproperty`ここで、`Subproperty`のプロパティ、<xref:System.Web.UI.WebControls.TableItemStyle>オブジェクト (たとえば、 `RowStyle-ForeColor`)。  
  
-   入れ子、`<RowStyle>`要素開始タグと終了タグの間、<xref:System.Web.UI.WebControls.GridView>コントロール。  
  
 プロパティがフォームにプログラムで設定することもできます`Property.Subproperty`(たとえば、 `RowStyle.ForeColor`)。 通常、一般的な設定には、カスタムの背景色、前景色、およびフォントのプロパティが含まれます。  
  
   
  
## Examples  
 次の例で使用する方法、<xref:System.Web.UI.WebControls.GridView.RowStyle%2A>宣言内の項目の行のスタイルを定義するプロパティ、<xref:System.Web.UI.WebControls.GridView>コントロール。  
  
 [!code-aspx-csharp[GridViewRowStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewRowStyle/CS/gridviewrowstylecs.aspx#1)]
 [!code-aspx-vb[GridViewRowStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewRowStyle/VB/gridviewrowstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RowUpdated">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.GridViewUpdatedEventHandler RowUpdated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.GridViewUpdatedEventHandler RowUpdated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.GridView.RowUpdated" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridViewUpdatedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>後で、行の更新ボタンがクリックされたときに発生、<see cref="T:System.Web.UI.WebControls.GridView" />コントロールは、行を更新します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.RowUpdated>イベントが発生した後、行の更新 ボタンがクリックされたときに、<xref:System.Web.UI.WebControls.GridView>コントロールは、行を更新します。 これにより、このイベントが発生するたびに、更新操作の結果を確認するなど、カスタムのルーチンを実行するイベント処理メソッドを提供できます。  
  
 A<xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs>とが発生する例外の影響を受ける行の数を決定することにより、イベント処理メソッドにオブジェクトが渡されます。 設定して、イベント処理メソッドで例外が処理されたかどうかを指定することも、<xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.ExceptionHandled%2A>のプロパティ、<xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs>オブジェクト。  
  
 イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。  
  
   
  
## Examples  
 次の例で使用する方法、<xref:System.Web.UI.WebControls.GridView.RowUpdated>更新操作の結果をチェックするイベントです。 ユーザーに操作が成功したかどうかを示すために、メッセージが表示されます。  
  
 [!code-aspx-csharp[GridViewRowUpdated#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewRowUpdated/CS/gridviewrowupdatedcs.aspx#1)]
 [!code-aspx-vb[GridViewRowUpdated#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewRowUpdated/VB/gridviewrowupdatedvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RowUpdating">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.GridViewUpdateEventHandler RowUpdating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.GridViewUpdateEventHandler RowUpdating" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.GridView.RowUpdating" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridViewUpdateEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>その前に、行の更新 ボタンがクリックされたときに発生、<see cref="T:System.Web.UI.WebControls.GridView" />コントロールは、行を更新します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.RowUpdating>イベントを発生すると、行の更新 ボタンをクリックすると、その前に、<xref:System.Web.UI.WebControls.GridView>コントロールは、行を更新します。 これにより、このイベントが発生するたびに、更新操作の取り消しなどのカスタムのルーチンを実行するイベント処理メソッドを提供できます。  
  
 A<xref:System.Web.UI.WebControls.GridViewUpdateEventArgs>オブジェクトが有効にすると、現在の行のインデックスを確認して、更新操作を取り消す必要があることを示すために、イベント処理メソッドに渡されます。 更新操作をキャンセルするには設定、<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>のプロパティ、<xref:System.Web.UI.WebControls.GridViewUpdateEventArgs>オブジェクトを`true`です。 操作することも、 <xref:System.Web.UI.WebControls.GridViewUpdateEventArgs.Keys%2A>、 <xref:System.Web.UI.WebControls.GridViewUpdateEventArgs.OldValues%2A>、および<xref:System.Web.UI.WebControls.GridViewUpdateEventArgs.NewValues%2A>コレクション、必要に応じて、値は、データ ソースに渡される前にします。 これらのコレクションを使用する一般的な方法では、データ ソースに格納する前に、ユーザーによって指定された値を HTML エンコードです。 これは、スクリプト インジェクション攻撃を防ぐのに役立ちます。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.GridViewUpdateEventArgs.Keys%2A>、<xref:System.Web.UI.WebControls.GridViewUpdateEventArgs.OldValues%2A>と<xref:System.Web.UI.WebControls.GridViewUpdateEventArgs.NewValues%2A>コレクションは自動的に入力される場合にのみ、<xref:System.Web.UI.WebControls.GridView>を使用してデータにコントロールがバインドされている、<xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSourceID%2A>プロパティです。  
  
 イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。  
  
   
  
## Examples  
 次の例で使用する方法、<xref:System.Web.UI.WebControls.GridView.RowUpdating>データ ソースをプログラムで設定した場合は、データ ソース オブジェクトの値を更新するイベントです。  
  
 [!code-aspx-csharp[GridViewRowEditing#2](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewRowEditing/CS/GridViewRowEditing2CS.aspx#2)]
 [!code-aspx-vb[GridViewRowEditing#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewRowEditing/VB/GridViewRowEditing2VB.aspx#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveControlState">
      <MemberSignature Language="C#" Value="protected override object SaveControlState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance object SaveControlState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.SaveControlState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>指定したプロパティの状態を保存、<see cref="T:System.Web.UI.WebControls.GridView" />場合でも、永続化する必要があるコントロール、<see cref="P:System.Web.UI.Control.EnableViewState" />プロパティに設定されている<see langword="false" />です。</summary>
        <returns>サーバー コントロールの現在のビューステートを返します。 コントロールに関連付けられているビューステートがない場合、メソッドは <see langword="null" /> を返します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは内のプロパティの状態の保存に使用、<xref:System.Web.UI.WebControls.GridView>場合でも、永続化する必要があるコントロール、<xref:System.Web.UI.Control.EnableViewState%2A?displayProperty=nameWithType>プロパティに設定されている`false`です。  
  
> [!NOTE]
>  このメソッドが拡張するコントロールの開発者によって、主に使用、<xref:System.Web.UI.WebControls.GridView>コントロール。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.SaveViewState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>以前に保存した <see cref="T:System.Web.UI.WebControls.GridView" /> コントロールのビュー ステートを読み込みます。</summary>
        <returns>A<see cref="T:System.Object" />コントロールの保存されているビュー ステートの値を格納しています。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedDataKey">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.DataKey SelectedDataKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataKey SelectedDataKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.SelectedDataKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得、<see cref="T:System.Web.UI.WebControls.DataKey" />で選択した行のデータ キーの値を格納しているオブジェクト、<see cref="T:System.Web.UI.WebControls.GridView" />コントロール。</summary>
        <value><see cref="T:System.Web.UI.WebControls.DataKey" />で選択した行の<see cref="T:System.Web.UI.WebControls.GridView" />コントロール。 既定値は<see langword="null" />行は、現在選択されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ときに、<xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A>プロパティが設定されて、<xref:System.Web.UI.WebControls.GridView>コントロールが自動的に作成、<xref:System.Web.UI.WebControls.DataKey>値または指定したフィールドまたはフィールドの値を使用して、コントロール内の行ごとのオブジェクト。 <xref:System.Web.UI.WebControls.DataKey>オブジェクトがコントロールの追加、<xref:System.Web.UI.WebControls.GridView.DataKeys%2A>コレクション。 通常、<xref:System.Web.UI.WebControls.GridView.DataKeys%2A>プロパティが取得に使用される、<xref:System.Web.UI.WebControls.DataKey>オブジェクト内の特定のデータ行を<xref:System.Web.UI.WebControls.GridView>コントロール。 ただし、取得した場合必要、<xref:System.Web.UI.WebControls.DataKey>オブジェクト、現在選択されている行だけを使用できるの<xref:System.Web.UI.WebControls.GridView.SelectedDataKey%2A>ショートカット プロパティです。  
  
> [!NOTE]
>  これは取得と同じ、<xref:System.Web.UI.WebControls.DataKey>で指定されたインデックス位置にオブジェクト、<xref:System.Web.UI.WebControls.GridView.SelectedIndex%2A>プロパティから、<xref:System.Web.UI.WebControls.GridView.DataKeys%2A>コレクション。 使用することも、<xref:System.Web.UI.WebControls.GridView.SelectedValue%2A>現在選択されている行のデータ キーの値を直接取得するプロパティです。  
  
 作成する場合は、<xref:System.Web.UI.WebControls.ControlParameter>オブジェクトし、インデックスを使用して最初のフィールド以外のキー フィールドにアクセスする<xref:System.Web.UI.WebControls.GridView.SelectedDataKey%2A>プロパティに、<xref:System.Web.UI.WebControls.ControlParameter.PropertyName%2A>のプロパティ、<xref:System.Web.UI.WebControls.ControlParameter>オブジェクト。 次に例を示します。  
  
   
  
## Examples  
 次の例で使用する方法、<xref:System.Web.UI.WebControls.GridView.SelectedDataKey%2A>で選択した行のデータのキー値を決定するプロパティ、<xref:System.Web.UI.WebControls.GridView>コントロール。  
  
 [!code-aspx-csharp[GridViewSelectedDataKey#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewSelectedDataKey/CS/gridviewselecteddatakeycs.aspx#1)]
 [!code-aspx-vb[GridViewSelectedDataKey#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewSelectedDataKey/VB/gridviewselecteddatakeyvb.aspx#1)]  
  
 次の例では、マスター/詳細シナリオでは、パラメーターとして 2 つ目のキー フィールドを使用する方法を示します。 A<xref:System.Web.UI.WebControls.GridView>コントロールを使用して、Northwind データベースの Order Details テーブルからレコードを表示します。 内のレコードを選択すると、<xref:System.Web.UI.WebControls.GridView>コントロール、Products テーブルから製品の詳細に表示されます、<xref:System.Web.UI.WebControls.DetailsView>コントロール。 ProductID が 2 番目のキー名で、<xref:System.Web.UI.WebControls.GridView>コントロール。 キーにアクセスする、2 番目、GridView1.SelectedDataKey[1 の値] として使用される、<xref:System.Web.UI.WebControls.ControlParameter.PropertyName%2A>の<xref:System.Web.UI.WebControls.ControlParameter>のオブジェクト、<xref:System.Web.UI.WebControls.SqlDataSource>の制御、<xref:System.Web.UI.WebControls.DetailsView>コントロール。  
  
 [!code-aspx-csharp[GridViewSelectedDataKeyIndex#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewSelectedDataKeyIndex/CS/gridviewselecteddatakeycs.aspx#1)]
 [!code-aspx-vb[GridViewSelectedDataKeyIndex#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewSelectedDataKeyIndex/VB/gridviewselecteddatakeyvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">データのキーが指定されていない、<see cref="P:System.Web.UI.WebControls.GridView.DataKeyNames" />プロパティです。</exception>
      </Docs>
    </Member>
    <Member MemberName="SelectedIndex">
      <MemberSignature Language="C#" Value="public virtual int SelectedIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelectedIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.SelectedIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定で選択した行のインデックス、<see cref="T:System.Web.UI.WebControls.GridView" />コントロール。</summary>
        <value>選択した行の 0 から始まるインデックス、<see cref="T:System.Web.UI.WebControls.GridView" />コントロール。 既定では-1 で、行は、現在選択されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.GridView.SelectedIndex%2A>で現在選択されている行のインデックスを決定するプロパティ、<xref:System.Web.UI.WebControls.GridView>コントロール。 このプロパティを使用して、プログラムによってコントロールに行を選択することができますも。 行の選択をクリアするには、このプロパティを-1 に設定します。 使用して、現在選択されている行の外観をカスタマイズすることができます、<xref:System.Web.UI.WebControls.GridView.SelectedRowStyle%2A>プロパティです。 現在選択されている行にアクセスするを使用して、<xref:System.Web.UI.WebControls.GridView.SelectedRow%2A>プロパティです。  
  
   
  
## Examples  
 次の例で使用する方法、<xref:System.Web.UI.WebControls.GridView.SelectedIndex%2A>で 2 番目の行を選択するプロパティを<xref:System.Web.UI.WebControls.GridView>コントロールが最初に表示される場合を制御します。  
  
 [!code-aspx-csharp[GridViewSelect#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewSelect/CS/gridviewselectcs.aspx#1)]
 [!code-aspx-vb[GridViewSelect#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewSelect/VB/gridviewselectvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><see cref="P:System.Web.UI.WebControls.GridView.SelectedIndex" />プロパティが-1 未満の値に設定します。</exception>
      </Docs>
    </Member>
    <Member MemberName="SelectedIndexChanged">
      <MemberSignature Language="C#" Value="public event EventHandler SelectedIndexChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SelectedIndexChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.GridView.SelectedIndexChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>後で、行の選択 ボタンがクリックされたときに発生、<see cref="T:System.Web.UI.WebControls.GridView" />コントロールは、select 操作を処理します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.SelectedIndexChanged>イベントが発生した後、行の選択 ボタンがクリックされたときに、<xref:System.Web.UI.WebControls.GridView>コントロールは、select 操作を処理します。 これにより、このイベントが発生するたびに、現在選択されている行に状態のラベルの更新など、カスタムのルーチンを実行するイベント処理メソッドを提供できます。  
  
 イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。  
  
   
  
## Examples  
 次の例で使用する方法、<xref:System.Web.UI.WebControls.GridView.SelectedIndexChanged>の選択された行に顧客の名前を表示するイベント、<xref:System.Web.UI.WebControls.GridView>コントロール。  
  
 [!code-aspx-csharp[GridViewSelect#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewSelect/CS/gridviewselectcs.aspx#1)]
 [!code-aspx-vb[GridViewSelect#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewSelect/VB/gridviewselectvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedIndexChanging">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.GridViewSelectEventHandler SelectedIndexChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.GridViewSelectEventHandler SelectedIndexChanging" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.GridView.SelectedIndexChanging" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridViewSelectEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>その前に、行の選択 ボタンがクリックされたときに発生、<see cref="T:System.Web.UI.WebControls.GridView" />コントロールは、select 操作を処理します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.SelectedIndexChanging>イベントを発生すると、行の選択 ボタンをクリックすると、その前に、<xref:System.Web.UI.WebControls.GridView>コントロールは、select 操作を処理します。 これにより、このイベントが発生するたびに、選択操作の取り消しなどのカスタムのルーチンを実行するイベント処理メソッドを提供できます。  
  
> [!NOTE]
>  プログラムで設定すると、このイベントは発生しませんが、<xref:System.Web.UI.WebControls.GridView.SelectedIndex%2A>プロパティです。  
  
 A<xref:System.Web.UI.WebControls.GridViewSelectEventArgs>オブジェクトが、これにより、ユーザーが選択した行のインデックスを確認したり、選択操作を取り消す必要があることを示すために、イベント処理メソッドに渡されます。 選択操作をキャンセルするには設定、<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>のプロパティ、<xref:System.Web.UI.WebControls.GridViewSelectEventArgs>オブジェクトを`true`です。  
  
 イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。  
  
   
  
## Examples  
 次の例で使用する方法、<xref:System.Web.UI.WebControls.GridView.SelectedIndexChanging>選択操作をキャンセルするイベントです。  
  
 [!code-aspx-csharp[GridViewSelect#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewSelect/CS/gridviewselectcs.aspx#1)]
 [!code-aspx-vb[GridViewSelect#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewSelect/VB/gridviewselectvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedPersistedDataKey">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.DataKey SelectedPersistedDataKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataKey SelectedPersistedDataKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.SelectedPersistedDataKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データ キー値で永続化された、選択した項目を取得または設定、<see cref="T:System.Web.UI.WebControls.GridView" />コントロール。</summary>
        <value>永続化された、選択した項目のキーのデータ、<see cref="T:System.Web.UI.WebControls.GridView" />コントロール。 既定値は<see langword="null" />項目が現在選択されていないことを示します。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedRow">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.GridViewRow SelectedRow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.GridViewRow SelectedRow" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.SelectedRow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridViewRow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>参照を取得、<see cref="T:System.Web.UI.WebControls.GridViewRow" />コントロールで選択した行を表すオブジェクト。</summary>
        <value>A<see cref="T:System.Web.UI.WebControls.GridViewRow" />コントロールで選択した行を表すです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 内の行を選択すると、<xref:System.Web.UI.WebControls.GridView>コントロールを使用して、<xref:System.Web.UI.WebControls.GridView.SelectedRow%2A>取得するプロパティを<xref:System.Web.UI.WebControls.GridViewRow>をその行を表すオブジェクト。  
  
> [!NOTE]
>  これは取得と同じ、<xref:System.Web.UI.WebControls.GridViewRow>で指定されたインデックス位置にオブジェクト、<xref:System.Web.UI.WebControls.GridView.SelectedIndex%2A>プロパティから、<xref:System.Web.UI.WebControls.GridView.Rows%2A>コレクション。  
  
 このオブジェクトは、選択した行のプロパティにアクセスし、使用できます。  
  
   
  
## Examples  
 次の例で使用する方法、<xref:System.Web.UI.WebControls.GridView.SelectedRow%2A>のプロパティにアクセスするプロパティ、<xref:System.Web.UI.WebControls.GridViewRow>で選択した行を表すオブジェクト、<xref:System.Web.UI.WebControls.GridView>コントロール。  
  
 [!code-aspx-csharp[GridViewSelect#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewSelect/CS/gridviewselectcs.aspx#1)]
 [!code-aspx-vb[GridViewSelect#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewSelect/VB/gridviewselectvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedRowStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle SelectedRowStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle SelectedRowStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.SelectedRowStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>参照を取得、<see cref="T:System.Web.UI.WebControls.TableItemStyle" />オブジェクトで選択した行の外観を設定することができます、<see cref="T:System.Web.UI.WebControls.GridView" />コントロール。</summary>
        <value>参照、<see cref="T:System.Web.UI.WebControls.TableItemStyle" />で選択した行のスタイルを表す、<see cref="T:System.Web.UI.WebControls.GridView" />コントロール。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.GridView.SelectedRowStyle%2A>プロパティで選択した行の外観を制御する、<xref:System.Web.UI.WebControls.GridView>コントロール。 このプロパティは読み取り専用です。ただしのプロパティを設定することができます、<xref:System.Web.UI.WebControls.TableItemStyle>オブジェクトを返します。 プロパティを設定するには、次のいずれかを使用して宣言します。  
  
-   開始タグに属性を配置、<xref:System.Web.UI.WebControls.GridView>フォームでコントロール`Property-Subproperty`ここで、`Subproperty`のプロパティ、<xref:System.Web.UI.WebControls.TableItemStyle>オブジェクト (たとえば、 `SelectedRowStyle-ForeColor`)。  
  
-   入れ子、`<SelectedRowStyle>`要素開始タグと終了タグの間、<xref:System.Web.UI.WebControls.GridView>コントロール。  
  
 プロパティがフォームにプログラムで設定することもできます`Property.Subproperty`(たとえば、 `SelectedRowStyle.ForeColor`)。 通常、一般的な設定には、カスタムの背景色、前景色、およびフォントのプロパティが含まれます。  
  
   
  
## Examples  
 次の例で使用する方法、<xref:System.Web.UI.WebControls.GridView.SelectedRowStyle%2A>で選択した行のカスタム スタイルを定義するプロパティ、<xref:System.Web.UI.WebControls.GridView>コントロール。  
  
 [!code-aspx-csharp[GridViewSelect#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewSelect/CS/gridviewselectcs.aspx#1)]
 [!code-aspx-vb[GridViewSelect#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewSelect/VB/gridviewselectvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedValue">
      <MemberSignature Language="C#" Value="public object SelectedValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SelectedValue" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.SelectedValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>選択した行のデータのキー値を取得、<see cref="T:System.Web.UI.WebControls.GridView" />コントロール。</summary>
        <value>データ キーの選択行の値、<see cref="T:System.Web.UI.WebControls.GridView" />コントロール。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ときに、<xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A>プロパティは、データ ソースの主キーを表すフィールド名のコンマ区切りの一覧、<xref:System.Web.UI.WebControls.GridView>コントロールが自動的に作成、<xref:System.Web.UI.WebControls.DataKey>値または指定したフィールドまたはフィールドの値を使用して、コントロール内の行ごとのオブジェクト。 <xref:System.Web.UI.WebControls.DataKey>オブジェクトがコントロールの追加、<xref:System.Web.UI.WebControls.GridView.DataKeys%2A>コレクション。 通常、<xref:System.Web.UI.WebControls.GridView.DataKeys%2A>プロパティが取得に使用される、<xref:System.Web.UI.WebControls.DataKey>オブジェクト内の特定のデータ行を<xref:System.Web.UI.WebControls.GridView>コントロール。 ただし、取得した場合必要、<xref:System.Web.UI.WebControls.DataKey>オブジェクト、現在選択されている行だけを使用できるの<xref:System.Web.UI.WebControls.GridView.SelectedDataKey%2A>ショートカット プロパティです。 さらのショートカットとして直接指定できます、選択した行の最初のキー フィールドのデータ キーの値を使用して、<xref:System.Web.UI.WebControls.GridView.SelectedValue%2A>プロパティです。  
  
 作成する場合は、<xref:System.Web.UI.WebControls.ControlParameter>オブジェクトを使用して、最初のフィールド以外のキー フィールドにアクセスする、<xref:System.Web.UI.WebControls.GridView.SelectedDataKey%2A>プロパティです。 例については、「<xref:System.Web.UI.WebControls.GridView.SelectedDataKey%2A>」を参照してください。  
  
   
  
## Examples  
 次の例で使用する方法、<xref:System.Web.UI.WebControls.GridView.SelectedValue%2A>で選択した行のデータのキー値を決定するプロパティ、<xref:System.Web.UI.WebControls.GridView>コントロール。  
  
 [!code-aspx-csharp[GridViewSelectedValue#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewSelectedValue/CS/gridviewselectedvaluecs.aspx#1)]
 [!code-aspx-vb[GridViewSelectedValue#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewSelectedValue/VB/gridviewselectedvaluevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectRow">
      <MemberSignature Language="C#" Value="public void SelectRow (int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SelectRow(int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.SelectRow(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rowIndex">編集する行のインデックス。</param>
        <summary>編集する行を選択、<see cref="T:System.Web.UI.WebControls.GridView" />コントロール。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドを発生させる、<xref:System.Web.UI.WebControls.GridView.SelectedIndexChanged>イベント。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetEditRow">
      <MemberSignature Language="C#" Value="public void SetEditRow (int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetEditRow(int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.SetEditRow(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rowIndex">編集する行のインデックス。</param>
        <summary>編集モードで行を格納、<see cref="T:System.Web.UI.WebControls.GridView" />指定された行のインデックスを使用して制御します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドを発生させる、<xref:System.Web.UI.WebControls.GridView.RowEditing>イベント。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPageIndex">
      <MemberSignature Language="C#" Value="public void SetPageIndex (int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetPageIndex(int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.SetPageIndex(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rowIndex">編集するページ上の行のインデックス。</param>
        <summary>ページ インデックスの設定、<see cref="T:System.Web.UI.WebControls.GridView" />行インデックスを使用して制御します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドを発生させる、<xref:System.Web.UI.WebControls.GridView.PageIndexChanged>イベント。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowFooter">
      <MemberSignature Language="C#" Value="public virtual bool ShowFooter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowFooter" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.ShowFooter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはでフッター行を表示するかどうかを示す値を設定、<see cref="T:System.Web.UI.WebControls.GridView" />コントロール。</summary>
        <value>
          <see langword="true" />フッター行を表示するにはそれ以外の場合、<see langword="false" />です。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.GridView.ShowFooter%2A>プロパティを指定するかどうか、<xref:System.Web.UI.WebControls.GridView>コントロールにフッター行が表示されます。 フッター行の外観を制御する、<xref:System.Web.UI.WebControls.GridView.FooterStyle%2A>プロパティです。  
  
   
  
## Examples  
 次の例で使用する方法、<xref:System.Web.UI.WebControls.GridView.ShowFooter%2A>のフッター行を表示するプロパティを<xref:System.Web.UI.WebControls.GridView>コントロール。  
  
 [!code-aspx-csharp[GridViewShowHeader#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewShowHeader/CS/gridviewshowheadercs.aspx#1)]
 [!code-aspx-vb[GridViewShowHeader#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewShowHeader/VB/gridviewshowheadervb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowHeader">
      <MemberSignature Language="C#" Value="public virtual bool ShowHeader { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowHeader" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.ShowHeader" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定にヘッダー行を表示するかどうかを示す値、<see cref="T:System.Web.UI.WebControls.GridView" />コントロール。</summary>
        <value>
          <see langword="true" />ヘッダー行を表示するにはそれ以外の場合、<see langword="false" />です。 既定値は、<see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.GridView.ShowHeader%2A>プロパティを指定するかどうか、<xref:System.Web.UI.WebControls.GridView>コントロールには、ヘッダー行が表示されます。 ヘッダー行の外観を制御する、<xref:System.Web.UI.WebControls.GridView.HeaderStyle%2A>プロパティです。  
  
   
  
## Examples  
 次の例で使用する方法、<xref:System.Web.UI.WebControls.GridView.ShowHeader%2A>にヘッダー行を表示するプロパティを<xref:System.Web.UI.WebControls.GridView>コントロール。  
  
 [!code-aspx-csharp[GridViewShowHeader#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewShowHeader/CS/gridviewshowheadercs.aspx#1)]
 [!code-aspx-vb[GridViewShowHeader#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewShowHeader/VB/gridviewshowheadervb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowHeaderWhenEmpty">
      <MemberSignature Language="C#" Value="public virtual bool ShowHeaderWhenEmpty { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowHeaderWhenEmpty" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.ShowHeaderWhenEmpty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定を示す値かどうかの列の見出し、<see cref="T:System.Web.UI.WebControls.GridView" />列にデータがあるない場合に、コントロールが表示されます。</summary>
        <value>
          <see langword="true" />ヘッダーを表示する場合それ以外の場合、<see langword="false" />です。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public virtual void Sort (string sortExpression, System.Web.UI.WebControls.SortDirection sortDirection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Sort(string sortExpression, valuetype System.Web.UI.WebControls.SortDirection sortDirection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.Sort(System.String,System.Web.UI.WebControls.SortDirection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sortExpression" Type="System.String" />
        <Parameter Name="sortDirection" Type="System.Web.UI.WebControls.SortDirection" />
      </Parameters>
      <Docs>
        <param name="sortExpression">並べ替えに使用すると、並べ替え式、<see cref="T:System.Web.UI.WebControls.GridView" />コントロール。</param>
        <param name="sortDirection"><see cref="T:System.Web.UI.WebControls.SortDirection" /> 値のいずれか。</param>
        <summary>並べ替え、<see cref="T:System.Web.UI.WebControls.GridView" />コントロールが、指定した並べ替え式および方向に基づいています。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.GridView.Sort%2A>をプログラムで並べ替える方法、<xref:System.Web.UI.WebControls.GridView>指定した並べ替え式および方向を使用して制御します。 並べ替え式は、列または並べ替えに使用する列を指定します。 複数の列を並べ替えるには、フィールド名のコンマ区切りの一覧を含んだ並べ替え式を作成します。 並べ替えの方向は、昇順または降順で並べ替えを実行するかどうかを示します。 このメソッドは通常を並べ替える必要がある場合に使用、 <xref:System.Web.UI.WebControls.GridView>  ページで別のコントロールからなど、コントロールの外部から制御します。 このメソッドはプログラムでの既定の並べ替え順序を設定する、<xref:System.Web.UI.WebControls.GridView>最初の描画するタイミングを制御します。 このメソッドもが発生し、<xref:System.Web.UI.WebControls.GridView.Sorted>と<xref:System.Web.UI.WebControls.GridView.Sorting>イベント。  
  
   
  
## Examples  
 次の例で使用する方法、<xref:System.Web.UI.WebControls.GridView.Sort%2A>をプログラムで並べ替える方法、<xref:System.Web.UI.WebControls.GridView>複数の列で制御します。  
  
 [!code-aspx-csharp[GridViewSort#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewSort/CS/GridViewSortcs.aspx#1)]
 [!code-aspx-vb[GridViewSort#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewSort/VB/GridViewSortvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><see cref="T:System.Web.UI.WebControls.GridView" />コントロールがデータ ソース コントロールにバインドされているが、<see cref="T:System.Web.UI.DataSourceView" />関連付けられているデータ ソースは<see langword="null" />します。</exception>
      </Docs>
    </Member>
    <Member MemberName="SortDirection">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.SortDirection SortDirection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.SortDirection SortDirection" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.SortDirection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SortDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>並べ替えられる列の並べ替えの方向を取得します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.SortDirection" /> 値のいずれか。 既定値は、<see langword="SortDirection.Ascending" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.GridView.SortDirection%2A>プロパティを並べ替えられる列を昇順または降順で並べ替えるかどうかを判断します。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.GridView>コントロールは、組み込みの並べ替え機能が自動的にこのプロパティを設定します。 並べ替えの方向またはに独自のカスタムの並べ替え機能を追加するときにプログラムで確認する必要がある場合にのみ、このプロパティは通常使用、<xref:System.Web.UI.WebControls.GridView>コントロール。  
  
   
  
## Examples  
 次の例で使用する方法、<xref:System.Web.UI.WebControls.GridView.SortDirection%2A>プログラムでの並べ替えの方向を決定するプロパティ、<xref:System.Web.UI.WebControls.GridView>コントロール。  
  
 [!code-aspx-csharp[GridViewFooterRow#1](~/samples/snippets/csharp/VS_Snippets_WebNet/gridviewfooterrow/CS/gridviewfooterrowcs.aspx#1)]
 [!code-aspx-vb[GridViewFooterRow#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/gridviewfooterrow/VB/gridviewfooterrowvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sorted">
      <MemberSignature Language="C#" Value="public event EventHandler Sorted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Sorted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.GridView.Sorted" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>後で、列を並べ替えるハイパーリンクがクリックされたときに発生、<see cref="T:System.Web.UI.WebControls.GridView" />コントロールは、並べ替え操作を処理します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.Sorted>イベントが発生した後は、列の並べ替えにハイパーリンクがクリックされたときに、<xref:System.Web.UI.WebControls.GridView>コントロールは、並べ替え操作を処理します。 これにより、このイベントが発生するたびに、カスタムの並べ替えなど、カスタム ルーチンを実行するイベント処理メソッドを提供できます。  
  
 イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。  
  
   
  
## Examples  
 次の例で使用する方法、<xref:System.Web.UI.WebControls.GridView.Sorted>並べ替えられる列の名前を表示するイベントです。  
  
 [!code-aspx-csharp[GridViewSorting#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewSorting/CS/gridviewsortingcs.aspx#1)]
 [!code-aspx-vb[GridViewSorting#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewSorting/VB/gridviewsortingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SortedAscendingCellStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle SortedAscendingCellStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle SortedAscendingCellStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.SortedAscendingCellStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>CSS スタイルの取得または設定、<see cref="T:System.Web.UI.WebControls.GridView" />列、列を昇順で並べ替えるときにします。</summary>
        <value>
          <see langword="true" />スタイルが適用されている場合、<see cref="T:System.Web.UI.WebControls.GridView" />列が昇順で並べ替えられた、それ以外の場合を制御<see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティに設定するときに`true`データが昇順で並べ替えられたときに、列内のセルにスタイルが適用されます。 たとえば、並べ替えの種類が昇順の場合は、列を特定の色で強調できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SortedAscendingHeaderStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle SortedAscendingHeaderStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle SortedAscendingHeaderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.SortedAscendingHeaderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定に適用する CSS スタイル、<see cref="T:System.Web.UI.WebControls.GridView" />列見出し、列を昇順で並べ替えるときにします。</summary>
        <value>
          <see langword="true" />スタイルが適用されている場合、<see cref="T:System.Web.UI.WebControls.GridView" />見出し、列が昇順で並べ替えられた、それ以外の場合に<see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティに設定するときに`true`、列見出しの並べ替え方向を示す矢印が表示されます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SortedDescendingCellStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle SortedDescendingCellStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle SortedDescendingCellStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.SortedDescendingCellStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定のスタイル、<see cref="T:System.Web.UI.WebControls.GridView" />列、列を降順で並べ替えるときにします。</summary>
        <value>
          <see langword="true" />スタイルが適用されている場合、<see cref="T:System.Web.UI.WebControls.GridView" />列が降順で並べ替えられた、それ以外の場合に<see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティに設定するときに`true`データを降順に並べ替えるときに、列内のセルにスタイルが適用されます。 たとえば、並べ替えの種類は降順の場合は、列を特定の色で強調できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SortedDescendingHeaderStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle SortedDescendingHeaderStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle SortedDescendingHeaderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.SortedDescendingHeaderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定に適用するスタイル、<see cref="T:System.Web.UI.WebControls.GridView" />列見出し、列を降順で並べ替えるときにします。</summary>
        <value>
          <see langword="true" />スタイルが適用されている場合、<see cref="T:System.Web.UI.WebControls.GridView" />見出し、列が降順で並べ替えられた、それ以外の場合に<see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティに設定するときに`true`、列見出しの並べ替え方向を示す矢印が表示されます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SortExpression">
      <MemberSignature Language="C#" Value="public virtual string SortExpression { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SortExpression" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.SortExpression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>並べ替え対象の列、列に関連付けられている並べ替え式を取得します。</summary>
        <value>並べ替え対象の列、列に関連付けられている並べ替え式。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.GridView.SortExpression%2A>プロパティまたは並べ替えられている複数の列に関連付けられている並べ替え式が決定します。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.GridView>コントロールは、組み込みの並べ替え機能が自動的にこのプロパティを設定します。 列または並べ替えられている列をプログラムで確認する必要がある場合にのみ、このプロパティは通常使用またはに独自のカスタムの並べ替え機能を追加する場合に、<xref:System.Web.UI.WebControls.GridView>コントロール。  
  
 複数の列を並べ替えると、このプロパティには、並べ替えに使用するフィールドのコンマ区切りの一覧が含まれています。  
  
   
  
## Examples  
 次の例で使用する方法、<xref:System.Web.UI.WebControls.GridView.SortExpression%2A>プロパティを並べ替えられる列の名前を決定します。  
  
 [!code-aspx-csharp[GridViewAllowSortingColumns#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewAllowSortingColumns/CS/GridViewAllowSortingColumnscs.aspx#1)]
 [!code-aspx-vb[GridViewAllowSortingColumns#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewAllowSortingColumns/VB/GridViewAllowSortingColumnsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sorting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.GridViewSortEventHandler Sorting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.GridViewSortEventHandler Sorting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.GridView.Sorting" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridViewSortEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>その前に列を並べ替えるへのハイパーリンクがクリックされたときに発生、<see cref="T:System.Web.UI.WebControls.GridView" />コントロールは、並べ替え操作を処理します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.Sorting>イベントは、列の並べ替えにハイパーリンクがクリックされたとき、その前に、<xref:System.Web.UI.WebControls.GridView>コントロールは、並べ替え操作を処理します。 これにより、このイベントが発生するたびに、並べ替え操作の取り消しなどのカスタムのルーチンを実行するイベント処理メソッドを提供できます。  
  
 A<xref:System.Web.UI.WebControls.GridViewSortEventArgs>を使用して、選択操作を取り消す必要があることを示すために列の並べ替え式が決定する、イベント処理メソッドにオブジェクトが渡されます。 選択操作をキャンセルするには設定、<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>のプロパティ、<xref:System.Web.UI.WebControls.GridViewSortEventArgs>オブジェクトを`true`です。  
  
 プログラムによる並べ替え操作を開始する方法については、次を参照してください。、<xref:System.Web.UI.WebControls.GridView.Sort%2A>メソッドです。  
  
 イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。  
  
   
  
## Examples  
 次の例で使用する方法、<xref:System.Web.UI.WebControls.GridView.Sorting>並べ替え機能を実行するときに、<xref:System.Web.UI.WebControls.GridView>コントロールにバインドする、<xref:System.Data.DataTable>オブジェクトを設定して、<xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A>プロパティ プログラムでします。  
  
 [!code-aspx-csharp[GridViewSorting#2](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewSorting/CS/gridviewsorting2cs.aspx#2)]
 [!code-aspx-vb[GridViewSorting#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewSorting/VB/gridviewsorting2vb.aspx#2)]  
  
 次の例で使用する方法、<xref:System.Web.UI.WebControls.GridView.Sorting>並べ替え操作をキャンセルするイベントです。  
  
 [!code-aspx-csharp[GridViewSorting#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewSorting/CS/gridviewsortingcs.aspx#1)]
 [!code-aspx-vb[GridViewSorting#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewSorting/VB/gridviewsortingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.ICallbackEventHandler.GetCallbackResult">
      <MemberSignature Language="C#" Value="string ICallbackEventHandler.GetCallbackResult ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.Web.UI.ICallbackEventHandler.GetCallbackResult() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.System#Web#UI#ICallbackEventHandler#GetCallbackResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>コントロールを対象とするコールバック イベントの結果を返します。</summary>
        <returns>コールバックの結果。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView>制御を実装、<xref:System.Web.UI.ICallbackEventHandler>インターフェイスと使用、<xref:System.Web.UI.WebControls.GridView.RaisePostBackEvent%2A>を非同期的にデータを取得して<xref:System.Web.UI.WebControls.GridView.GetCallbackResult%2A>をコントロールに取得したデータを返すメソッド。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent">
      <MemberSignature Language="C#" Value="void ICallbackEventHandler.RaiseCallbackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">イベント ハンドラーに渡す引数。</param>
        <summary>コールバック ハンドラーの引数を作成、<see cref="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.Boolean)" />メソッドです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.System%23Web%23UI%23ICallbackEventHandler%23RaiseCallbackEvent%2A>によって使用されるヘルパー メソッドは、<xref:System.Web.UI.WebControls.GridView>のコールバック ハンドラーの引数を作成するコントロールを<xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A>メソッドです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IDataKeysControl.ClientIDRowSuffixDataKeys">
      <MemberSignature Language="C#" Value="System.Web.UI.WebControls.DataKeyArray System.Web.UI.IDataKeysControl.ClientIDRowSuffixDataKeys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataKeyArray System.Web.UI.IDataKeysControl.ClientIDRowSuffixDataKeys" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.System#Web#UI#IDataKeysControl#ClientIDRowSuffixDataKeys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataKeyArray</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ASP.NET によって生成されるときに、データ バインド コントロールの各インスタンスを一意に識別するために使用するデータ値を取得、<see cref="P:System.Web.UI.Control.ClientID" />値。</summary>
        <value>ASP.NET によって生成されるときに、データ バインド コントロールの各インスタンスを一意に識別するために使用されるデータ値、<see cref="P:System.Web.UI.Control.ClientID" />値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Web.UI.WebControls.GridView> のインスタンスが <xref:System.Web.UI.IDataKeysControl> インターフェイスにキャストされる場合にのみ、使用できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackEventHandler.RaisePostBackEvent">
      <MemberSignature Language="C#" Value="void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">作成元のイベントの引数、<see cref="T:System.Web.UI.WebControls.CommandEventArgs" />イベントかが発生するイベントです。</param>
        <summary>適切なイベントを発生させる、<see cref="T:System.Web.UI.WebControls.GridView" />サーバーへのポストバック時に制御します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ページの呼び出し、<xref:System.Web.UI.Page.RaisePostBackEvent%2A>メソッドの適切なイベントを発生させるポストバック イベントが発生したとき、<xref:System.Web.UI.WebControls.GridView>コントロール。 この呼び出しは、事前に発生する前に、読み込みと変更の通知が完了したら、ページのライフ サイクルで発生します。 作成するこのメソッドが実装されて、<xref:System.Web.UI.WebControls.CommandEventArgs>イベントが発生するイベントのオブジェクト。  
  
> [!NOTE]
>  このメソッドが拡張するコントロールの開発者によって、主に使用、<xref:System.Web.UI.WebControls.GridView>コントロール。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.ICallbackContainer.GetCallbackScript">
      <MemberSignature Language="C#" Value="string ICallbackContainer.GetCallbackScript (System.Web.UI.WebControls.IButtonControl buttonControl, string argument);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.Web.UI.WebControls.ICallbackContainer.GetCallbackScript(class System.Web.UI.WebControls.IButtonControl buttonControl, string argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#ICallbackContainer#GetCallbackScript(System.Web.UI.WebControls.IButtonControl,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buttonControl" Type="System.Web.UI.WebControls.IButtonControl" />
        <Parameter Name="argument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="buttonControl">コールバック スクリプトを作成する対象のボタン コントロールです。</param>
        <param name="argument">コールバック スクリプトに渡す引数。</param>
        <summary>並べ替え操作を実行するボタンのコールバック スクリプトを作成します。</summary>
        <returns>並べ替え操作を実行するボタンのコールバック スクリプトです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.System%23Web%23UI%23WebControls%23ICallbackContainer%23GetCallbackScript%2A>によって使用されるヘルパー メソッドは、<xref:System.Web.UI.WebControls.GridView>並べ替え操作を実行するボタンのコールバック スクリプトを作成するコントロール。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundControl.DataKeyNames">
      <MemberSignature Language="C#" Value="string[] System.Web.UI.WebControls.IDataBoundControl.DataKeyNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] System.Web.UI.WebControls.IDataBoundControl.DataKeyNames" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundControl#DataKeyNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはデータ バインド コントロールに表示されるアイテムの主キー フィールドの名前を設定します。</summary>
        <value>表示されるアイテムの主キー フィールドの名前を含む配列、<see cref="T:System.Web.UI.WebControls.GridView" />コントロール。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Web.UI.WebControls.GridView> のインスタンスが <xref:System.Web.UI.WebControls.IDataBoundControl> インターフェイスにキャストされる場合にのみ、使用できます。  
  
 このプロパティへのアクセスを提供する、<xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A>のプロパティ、<xref:System.Web.UI.WebControls.GridView>コントロール。 を通じて公開される、<xref:System.Web.UI.WebControls.IDataBoundControl>インターフェイスです。  
  
 ASP.NET 動的データには、このプロパティがサポートしています。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundControl.DataMember">
      <MemberSignature Language="C#" Value="string System.Web.UI.WebControls.IDataBoundControl.DataMember { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string System.Web.UI.WebControls.IDataBoundControl.DataMember" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundControl#DataMember" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはデータ バインド コントロールにバインドするデータ ソース コントロールによって公開されているテーブルを設定します。</summary>
        <value>データ バインド コントロールにバインドするデータ ソース コントロールによって公開されているテーブルです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Web.UI.WebControls.GridView> のインスタンスが <xref:System.Web.UI.WebControls.IDataBoundControl> インターフェイスにキャストされる場合にのみ、使用できます。  
  
 データ ソースに複数のデータ ソースが含まれている場合は、このプロパティを使用して、特定のデータ テーブル、コレクション、またはその他のデータにバインドするコントロールを設定します。 たとえば、データ ソースが、<xref:System.Data.DataSet>インスタンスを複数のテーブルを含むこのプロパティを使用してコントロールをバインドするテーブルを指定することができます。  
  
 ASP.NET 動的データには、このプロパティがサポートしています。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundControl.DataSource">
      <MemberSignature Language="C#" Value="object System.Web.UI.WebControls.IDataBoundControl.DataSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Web.UI.WebControls.IDataBoundControl.DataSource" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundControl#DataSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定、データ バインド コントロールのデータ項目の一覧の取得元となるデータ ソース オブジェクト。</summary>
        <value>データ バインド コントロールを使用するデータ ソース オブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Web.UI.WebControls.GridView> のインスタンスが <xref:System.Web.UI.WebControls.IDataBoundControl> インターフェイスにキャストされる場合にのみ、使用できます。  
  
 ASP.NET 動的データには、このプロパティがサポートしています。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundControl.DataSourceID">
      <MemberSignature Language="C#" Value="string System.Web.UI.WebControls.IDataBoundControl.DataSourceID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string System.Web.UI.WebControls.IDataBoundControl.DataSourceID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundControl#DataSourceID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定、データ バインド コントロールのデータ項目の一覧の取得元となるデータ ソースの ID。</summary>
        <value>データ バインド コントロールのデータ項目の取得元となるデータ ソースの ID。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Web.UI.WebControls.GridView> のインスタンスが <xref:System.Web.UI.WebControls.IDataBoundControl> インターフェイスにキャストされる場合にのみ、使用できます。  
  
 ASP.NET 動的データには、このプロパティがサポートしています。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundControl.DataSourceObject">
      <MemberSignature Language="C#" Value="System.Web.UI.IDataSource System.Web.UI.WebControls.IDataBoundControl.DataSourceObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.IDataSource System.Web.UI.WebControls.IDataBoundControl.DataSourceObject" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundControl#DataSourceObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.IDataSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定、データ バインド コントロールのデータ項目の一覧の取得元となるデータ ソース オブジェクト。</summary>
        <value>データ バインド コントロールのデータ項目の一覧の取得元となるデータ ソース オブジェクト</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Web.UI.WebControls.GridView> のインスタンスが <xref:System.Web.UI.WebControls.IDataBoundControl> インターフェイスにキャストされる場合にのみ、使用できます。  
  
 ASP.NET 動的データには、このプロパティがサポートしています。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundListControl.ClientIDRowSuffix">
      <MemberSignature Language="C#" Value="string[] System.Web.UI.WebControls.IDataBoundListControl.ClientIDRowSuffix { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] System.Web.UI.WebControls.IDataBoundListControl.ClientIDRowSuffix" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundListControl#ClientIDRowSuffix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の値を持つに追加されます。 データ フィールドの名前、<see cref="P:System.Web.UI.Control.ClientID" />プロパティの値を、データ バインド コントロールの各インスタンスを一意に識別します。</summary>
        <value>ASP.NET によって生成されるときに、データ バインド コントロールの各インスタンスを一意に識別するための値を持つデータ フィールドの名前、<see cref="P:System.Web.UI.Control.ClientID" />値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Web.UI.WebControls.GridView> のインスタンスが <xref:System.Web.UI.WebControls.IDataBoundListControl> インターフェイスにキャストされる場合にのみ、使用できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundListControl.DataKeys">
      <MemberSignature Language="C#" Value="System.Web.UI.WebControls.DataKeyArray System.Web.UI.WebControls.IDataBoundListControl.DataKeys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataKeyArray System.Web.UI.WebControls.IDataBoundListControl.DataKeys" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundListControl#DataKeys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataKeyArray</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>表すオブジェクトのコレクションを取得、<see cref="P:System.Web.UI.WebControls.GridView.DataKeys" />データ バインド コントロール内の値。</summary>
        <value>データ バインド コントロール内の各行のデータ キーを格納する配列。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Web.UI.WebControls.GridView> のインスタンスが <xref:System.Web.UI.WebControls.IDataBoundListControl> インターフェイスにキャストされる場合にのみ、使用できます。  
  
 ASP.NET 動的データには、このプロパティがサポートしています。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundListControl.EnablePersistedSelection">
      <MemberSignature Language="C#" Value="bool System.Web.UI.WebControls.IDataBoundListControl.EnablePersistedSelection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Web.UI.WebControls.IDataBoundListControl.EnablePersistedSelection" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundListControl#EnablePersistedSelection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または行の選択をインデックスまたはデータ キーの値に基づいて、かどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" />行の選択は、データ キーの値に基づいている場合それ以外の場合、<see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Web.UI.WebControls.GridView> のインスタンスが <xref:System.Web.UI.WebControls.IDataBoundListControl> インターフェイスにキャストされる場合にのみ、使用できます。  
  
 ASP.NET 動的データには、このプロパティがサポートしています。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundListControl.SelectedDataKey">
      <MemberSignature Language="C#" Value="System.Web.UI.WebControls.DataKey System.Web.UI.WebControls.IDataBoundListControl.SelectedDataKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataKey System.Web.UI.WebControls.IDataBoundListControl.SelectedDataKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundListControl#SelectedDataKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データ バインド コントロールで選択した行のデータのキー値を含むオブジェクトを取得します。</summary>
        <value>選択した行のデータ キーの値です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Web.UI.WebControls.GridView> のインスタンスが <xref:System.Web.UI.WebControls.IDataBoundListControl> インターフェイスにキャストされる場合にのみ、使用できます。  
  
 ASP.NET 動的データには、このプロパティがサポートしています。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundListControl.SelectedIndex">
      <MemberSignature Language="C#" Value="int System.Web.UI.WebControls.IDataBoundListControl.SelectedIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Web.UI.WebControls.IDataBoundListControl.SelectedIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundListControl#SelectedIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または、データ バインド コントロールで選択した行のインデックスを設定します。</summary>
        <value>データ バインド コントロールで選択した行のインデックス。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Web.UI.WebControls.GridView> のインスタンスが <xref:System.Web.UI.WebControls.IDataBoundListControl> インターフェイスにキャストされる場合にのみ、使用できます。  
  
 ASP.NET 動的データには、このプロパティがサポートしています。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IFieldControl.FieldsGenerator">
      <MemberSignature Language="C#" Value="System.Web.UI.IAutoFieldGenerator System.Web.UI.WebControls.IFieldControl.FieldsGenerator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.IAutoFieldGenerator System.Web.UI.WebControls.IFieldControl.FieldsGenerator" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IFieldControl#FieldsGenerator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.IAutoFieldGenerator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または ASP.NET 動的データで使用するためのデータ バインド コントロールの列が自動的に生成コントロールを設定します。</summary>
        <value>このコントロールは、データ バインド コントロールの列が自動的に生成されます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Web.UI.WebControls.GridView> のインスタンスが <xref:System.Web.UI.WebControls.IFieldControl> インターフェイスにキャストされる場合にのみ、使用できます。  
  
 ASP.NET 動的データには、このプロパティがサポートしています。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IPersistedSelector.DataKey">
      <MemberSignature Language="C#" Value="System.Web.UI.WebControls.DataKey System.Web.UI.WebControls.IPersistedSelector.DataKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataKey System.Web.UI.WebControls.IPersistedSelector.DataKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IPersistedSelector#DataKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このメンバーの詳細については、「<see cref="P:System.Web.UI.WebControls.IPersistedSelector.DataKey" />」をご覧ください。</summary>
        <value>データ バインド コントロール内の永続化された選択したレコードのデータ キーの値です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 選択した行を指定できます、永続化すると、<xref:System.Web.UI.WebControls.GridView>コントロールがページング モード。 既定では、行の選択を行のインデックスに基づきます。 各ページで、同じ行 (たとえば、3 番目の行) を選択します。 代わりに、選択した行のデータのキーに基づく永続化を有効にできます。 その場合は、1 ページ目の 3 行目を選択すると、2 ページに移動する、行が選択されていない 2 ページ目にします。 ページ 1 に戻る場合は、3 行が選択されたままです。 この機能を有効にするには、このプロパティを設定`true`です。  
  
> [!NOTE]
>  バージョン 2.0、3.0、および ASP.NET の 3.5 では、行の選択は、行のインデックスにのみ基づいていました。 既定では、ASP.NET 4 で行の選択を旧バージョンとの互換性のためのインデックスに基づきます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions">
      <MemberSignature Language="C#" Value="System.Web.UI.PostBackOptions IPostBackContainer.GetPostBackOptions (System.Web.UI.WebControls.IButtonControl buttonControl);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Web.UI.PostBackOptions System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(class System.Web.UI.WebControls.IButtonControl buttonControl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IPostBackContainer#GetPostBackOptions(System.Web.UI.WebControls.IButtonControl)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.PostBackOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buttonControl" Type="System.Web.UI.WebControls.IButtonControl" />
      </Parameters>
      <Docs>
        <param name="buttonControl">コールバック スクリプトを作成する対象のボタン コントロールです。</param>
        <summary>作成、<see cref="T:System.Web.UI.PostBackOptions" />を指定したボタン コントロールのポストバックの動作を表すオブジェクト。</summary>
        <returns>A<see cref="T:System.Web.UI.PostBackOptions" />を表す、指定したボタン コントロールのポストバック動作します。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="buttonControl" />パラメーターが含まれる<see langword="null" />です。</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="buttonControl" />検証を実行するを検証して同じコンテナーへのポストバックしようとします。</exception>
      </Docs>
    </Member>
    <Member MemberName="TagKey">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.HtmlTextWriterTag TagKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.HtmlTextWriterTag TagKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.TagKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterTag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.HtmlTextWriterTag" /> コントロールの <see cref="T:System.Web.UI.WebControls.GridView" /> 値を取得します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.GridView" /> コントロールの <see cref="T:System.Web.UI.HtmlTextWriterTag" /> 値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.TagKey%2A>プロパティでは、出力ストリームの適切な HTML マークアップを記述する、<xref:System.Web.UI.WebControls.GridView>コントロール。 ときに、<xref:System.Web.UI.WebControls.GridView.EnableSortingAndPagingCallbacks%2A>プロパティに設定されている`true`、このプロパティを返します`HtmlTextWriterTag.Div`以外の場合、このプロパティを返します`HtmlTextWriterTag.Table`です。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>指定するには、このプロパティをオーバーライドすることができます<see cref="T:System.Web.UI.HtmlTextWriterTag" />派生したコントロールに使用する値。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="TopPagerRow">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.GridViewRow TopPagerRow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.GridViewRow TopPagerRow" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.TopPagerRow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridViewRow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得、<see cref="T:System.Web.UI.WebControls.GridViewRow" />の最上位のページャー行を表すオブジェクト、<see cref="T:System.Web.UI.WebControls.GridView" />コントロール。</summary>
        <value>A<see cref="T:System.Web.UI.WebControls.GridViewRow" />コントロールの最上位のページャー行を表すです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ページングが有効な場合 (設定して、<xref:System.Web.UI.WebControls.GridView.AllowPaging%2A>プロパティを`true`)、ページャー行と呼ばれる追加の行がで自動的に表示されます、<xref:System.Web.UI.WebControls.GridView>コントロール。 ページャー行には、上部、下部、または両方の上部と下部コントロールの表示可能なユーザーが他のページに移動できるようにするコントロールが含まれています。 使用して、<xref:System.Web.UI.WebControls.GridView.TopPagerRow%2A>プロパティにプログラムでアクセス、<xref:System.Web.UI.WebControls.GridViewRow>の最上位のページャー行を表すオブジェクト、<xref:System.Web.UI.WebControls.GridView>コントロール。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.GridView.TopPagerRow%2A>プロパティは、使用した場合にのみ、<xref:System.Web.UI.WebControls.GridView>コントロールの最上位のページャー行を作成する、<xref:System.Web.UI.WebControls.GridView.RowCreated>イベント。  
  
 カスタム コンテンツを追加する場合の例については、最上位のページャー行をプログラムで操作する必要がある場合、このプロパティは使用一般的です。 変更を加える、<xref:System.Web.UI.WebControls.GridView.TopPagerRow%2A>プロパティは、後に実行する必要があります、<xref:System.Web.UI.WebControls.GridView>レンダリングされた、それ以外のコントロールが表示された、<xref:System.Web.UI.WebControls.GridView>コントロール変更は上書きされます。  
  
   
  
## Examples  
 次の例で使用する方法、<xref:System.Web.UI.WebControls.GridView.TopPagerRow%2A>の最上位のページャー行にアクセスするプロパティ、<xref:System.Web.UI.WebControls.GridView>コントロール。 <xref:System.Web.UI.WebControls.GridView.TopPagerRow%2A>プロパティが取得に使用される、<xref:System.Web.UI.WebControls.DropDownList>ページャー行から制御します。  
  
 [!code-aspx-csharp[GridViewTopPagerRow#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewTopPagerRow/CS/gridviewtoppagerrowcs.aspx#1)]
 [!code-aspx-vb[GridViewTopPagerRow#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewTopPagerRow/VB/gridviewtoppagerrowvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.TrackViewState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.GridView" /> コントロールに対するビューステートの変更を追跡し、コントロールの <see cref="T:System.Web.UI.StateBag" /> オブジェクトに保存できるようにします。 このオブジェクトは、<see cref="P:System.Web.UI.Control.ViewState" /> プロパティによってアクセスできます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドをオーバーライドして、コントロールのビュー ステートの一部としてコントロールに対する変更の追跡と保存を開始する開始点をマークします。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateMethod">
      <MemberSignature Language="C#" Value="public virtual string UpdateMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UpdateMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.UpdateMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定にデータを更新するために呼び出すメソッドの名前。</summary>
        <value>メソッドの名前。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティを設定すると、データ バインディング メソッドとして使用するモデル バインドします。  
  
 Web フォーム モデル バインディングの使用に関するチュートリアル シリーズは、次を参照してください。[モデル バインディング機能と Web フォーム](http://go.microsoft.com/fwlink/?LinkId=286117)です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateRow">
      <MemberSignature Language="C#" Value="public virtual void UpdateRow (int rowIndex, bool causesValidation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateRow(int32 rowIndex, bool causesValidation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.UpdateRow(System.Int32,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="causesValidation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="rowIndex">更新する行のインデックス。</param>
        <param name="causesValidation">
          <see langword="true" />このメソッドが呼び出されたときに、ページの検証を実行するにはそれ以外の場合、<see langword="false" />です。</param>
        <summary>行のフィールドの値を使用して、指定された行インデックスにあるレコードを更新します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.GridView.UpdateRow%2A>メソッドをプログラムでデータ ソース内の指定したインデックスにあるレコードを更新します。 このメソッドは通常の外部からレコードを更新する必要がある場合に使用、<xref:System.Web.UI.WebControls.GridView>など、ページ上の異なるコントロールから制御します。  
  
> [!NOTE]
>  このメソッドは現在編集モードになっている行に対してのみ呼び出すことができるまたは双方向データ バインドされた入力コントロールを含む行です。 双方向のバインド式の詳細については、次を参照してください。[データベースへのバインド](http://msdn.microsoft.com/en-us/ab7b2846-975b-4057-a948-45527497c742)です。  
  
 更新操作の前にページの検証を実行するかどうかを指定するには、使用、`causesValidation`パラメーター。 このメソッドもが発生し、<xref:System.Web.UI.WebControls.GridView.RowUpdated>と<xref:System.Web.UI.WebControls.GridView.RowUpdating>イベント。  
  
   
  
## Examples  
 次の例で使用する方法、<xref:System.Web.UI.WebControls.GridView.UpdateRow%2A>内のレコードをプログラムで更新する方法、<xref:System.Web.UI.WebControls.GridView>コントロール。  
  
 [!code-aspx-csharp[GridViewUpdateRow#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewUpdateRow/CS/GridViewUpdateRowcs.aspx#1)]
 [!code-aspx-vb[GridViewUpdateRow#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewUpdateRow/VB/GridViewUpdateRowvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><see cref="T:System.Web.UI.WebControls.GridView" />コントロールがデータ ソース コントロールにバインドされているが、<see cref="T:System.Web.UI.DataSourceView" />関連付けられているデータ ソースは<see langword="null" />します。</exception>
      </Docs>
    </Member>
    <Member MemberName="UseAccessibleHeader">
      <MemberSignature Language="C#" Value="public virtual bool UseAccessibleHeader { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseAccessibleHeader" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.UseAccessibleHeader" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定を示す値かどうか、<see cref="T:System.Web.UI.WebControls.GridView" />コントロールがアクセス可能な形式でのヘッダーを表示します。 このプロパティは、コントロールを支援テクノロジ デバイスのユーザーにアクセスしやすくものです。</summary>
        <value>
          <see langword="true" />場合、<see cref="T:System.Web.UI.WebControls.GridView" />コントロールのレンダリングのヘッダーはアクセス可能な形式でそれ以外の場合、<see langword="false" />です。 既定値は、<see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.GridView.UseAccessibleHeader%2A>プロパティを指定するかどうか、<xref:System.Web.UI.WebControls.GridView>コントロールがアクセス可能な形式では、そのヘッダー行を表示します。 このプロパティは、コントロールを支援テクノロジ デバイスのユーザーにアクセスしやすくものです。 既定では、このプロパティの値は`true`を使用して、コントロールのヘッダーを表示および`<th>`テーブルのヘッダー セルのタグ。 さらに、`scope="col"`属性が、ヘッダーが、列内のすべてのセルに適用されることを指定するテーブルのヘッダーに追加します。 既定のレンダリング、`<th>`要素を維持すると、水平方向に太字で中央揃えとしてテキストを表示します。 開発者のスタイル、`<th>`カスケードを使用して要素のスタイル シートです。  
  
 このプロパティの値がある場合`false`を使用して、コントロールのヘッダーをレンダリング`<td>`テーブルのセルのタグ。  
  
   
  
## Examples  
 次の例で使用する方法、<xref:System.Web.UI.WebControls.GridView.UseAccessibleHeader%2A>プロパティをアクセス可能なヘッダーを無効にします。  
  
 [!code-aspx-csharp[GridViewUseAccessibleHeader#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewUseAccessibleHeader/CS/gridviewuseaccessibleheadercs.aspx#1)]
 [!code-aspx-vb[GridViewUseAccessibleHeader#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewUseAccessibleHeader/VB/gridviewuseaccessibleheadervb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VirtualItemCount">
      <MemberSignature Language="C#" Value="public virtual int VirtualItemCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 VirtualItemCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.VirtualItemCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはデータ ソースの仮想項目数を設定、<see cref="T:System.Web.UI.WebControls.GridView" />カスタム ページングを使用する場合に、コントロールにバインドします。</summary>
        <value>ソースの仮想データ内の項目数、<see cref="T:System.Web.UI.WebControls.GridView" />カスタム ページングを使用する場合に、コントロールにバインドします。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティは使用される場合にのみの値、<xref:System.Web.UI.WebControls.GridView.AllowCustomPaging%2A>プロパティは`true`します。 詳細については、<xref:System.Web.UI.WebControls.GridView.AllowCustomPaging%2A> プロパティを参照してください。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
