<Type Name="TableCell" FullName="System.Web.UI.WebControls.TableCell">
  <TypeSignature Language="C#" Value="public class TableCell : System.Web.UI.WebControls.WebControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TableCell extends System.Web.UI.WebControls.WebControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.TableCell" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.WebControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Text")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.PreviewControlDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ControlBuilder(typeof(System.Web.UI.WebControls.TableCellControlBuilder))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>内のセルを表す、<see cref="T:System.Web.UI.WebControls.Table" />コントロール。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このトピックの内容  
  
-   [はじめに](#introduction)  
  
-   [宣言型の構文](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>はじめに  
 <xref:System.Web.UI.WebControls.TableCell>クラス内のセルを表す、<xref:System.Web.UI.WebControls.Table>コントロール。 使用することができます、<xref:System.Web.UI.WebControls.TableCell.Text%2A>プロパティを指定するか、セルの内容を判断します。  
  
 <xref:System.Web.UI.WebControls.TableCell>クラスでは、セルの内容を表示する方法を制御することができます。 セルの内容のアラインメントは設定で指定された、<xref:System.Web.UI.WebControls.TableCell.HorizontalAlign%2A>と<xref:System.Web.UI.WebControls.TableCell.VerticalAlign%2A>プロパティです。 使用することができます、<xref:System.Web.UI.WebControls.TableCell.Wrap%2A>プロパティのセルにセルの内容を折り返すかどうかを指定します。  
  
 によって表される、表に、行または列の数を指定することも、<xref:System.Web.UI.WebControls.Table>コントロールを個々 のセルを占有します。 <xref:System.Web.UI.WebControls.TableCell.RowSpan%2A>と<xref:System.Web.UI.WebControls.TableCell.ColumnSpan%2A>プロパティは、列の数を制御し、それぞれ列を使用します。  
  
> [!CAUTION]
>  このコントロールは、悪意のあるクライアント スクリプトが含まれる可能性があります、ユーザー入力を表示する使用できます。 スクリプトの実行可能ファイル、SQL ステートメント、またはその他のコードをアプリケーションに表示する前に、クライアントから送信される情報を確認します。 ASP.NET は、入力要求の検証機能があり、ユーザー入力の中のスクリプトのブロックと HTML を提供します。 検証サーバー コントロールは、ユーザー入力を評価するも提供されます。 詳細については、次を参照してください。[標準コントロールのセキュリティで保護する](http://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8)、[する方法: 保護に対してスクリプトによる攻略の文字列を HTML エンコードを適用することによって、Web アプリケーションで](http://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b)、および[ASP.NET Web Pages でのユーザー入力の検証](http://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461)です。  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>宣言型の構文  
  
```  
<asp:TableCell  
    AccessKey="string"  
    AssociatedHeaderCellID="string"  
    BackColor="color name|#dddddd"  
    BorderColor="color name|#dddddd"  
    BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|  
        Inset|Outset"  
    BorderWidth="size"  
    ColumnSpan="integer"  
    CssClass="string"  
    Enabled="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    Font-Bold="True|False"  
    Font-Italic="True|False"  
    Font-Names="string"  
    Font-Overline="True|False"  
    Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|Medium|  
        Large|X-Large|XX-Large"  
    Font-Strikeout="True|False"  
    Font-Underline="True|False"  
    ForeColor="color name|#dddddd"  
    Height="size"  
    HorizontalAlign="NotSet|Left|Center|Right|Justify"  
    ID="string"  
    OnDataBinding="DataBinding event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnUnload="Unload event handler"  
    RowSpan="integer"  
    runat="server"  
    SkinID="string"  
    Style="string"  
    TabIndex="integer"  
    Text="string"  
    ToolTip="string"  
    VerticalAlign="NotSet|Top|Middle|Bottom"  
    Visible="True|False"  
    Width="size"  
    Wrap="True|False"  
/></asp:TableCell>  
```  
  
   
  
## Examples  
 次のコード例では、テーブルを作成し、プログラムでは、テーブルに要素を追加して、Web ページにテーブルを表示する方法を示します。 注方法<xref:System.Web.UI.WebControls.TableCell>コントロールがインスタンス化され、そのプロパティ値を設定します。  
  
> [!NOTE]
>  次のコード サンプルでは、単一ファイルのコード モデルを使用し、正常に動作しない場合は、分離コード ファイルに直接コピーします。 このコード サンプルは、.aspx 拡張子を持つ空のテキスト ファイルにコピーする必要があります。 Web フォームのコード モデルの詳細については、次を参照してください。 [ASP.NET Web フォーム ページのコード モデル](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)です。  
  
 [!code-aspx-csharp[TableCell#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TableCell/CS/tablecellcs.aspx#1)]
 [!code-aspx-vb[TableCell#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TableCell/VB/tablecellvb.aspx#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TableCell ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TableCell.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.TableCell" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TableCell>を使用して作成されて、<xref:System.Web.UI.HtmlTextWriterTag.Td>タグ。  
  
   
  
## Examples  
 次の例は、プログラムでの新しいインスタンスを作成する方法を示します、<xref:System.Web.UI.WebControls.TableCell>コントロール。  
  
 [!code-csharp[TableCell#5](~/samples/snippets/csharp/VS_Snippets_WebNet/TableCell/CS/tablecellcs.aspx#5)]
 [!code-vb[TableCell#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TableCell/VB/tablecellvb.aspx#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAttributesToRender">
      <MemberSignature Language="C#" Value="protected override void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddAttributesToRender(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TableCell.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">クライアントに HTML のコンテンツを表示する出力ストリーム。</param>
        <summary>固有のプロパティを追加、<see cref="T:System.Web.UI.WebControls.TableCell" />コントロールを表示する属性の一覧です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TableCell.AddAttributesToRender%2A>メソッドは、基本クラスの<xref:System.Web.UI.WebControls.WebControl.AddAttributesToRender%2A>基本メソッドを呼び出して、追加のメソッドと最初、<xref:System.Web.UI.WebControls.TableCell>属性に対応する、 <xref:System.Web.UI.WebControls.TableCell.RowSpan%2A> 、プロパティ、<xref:System.Web.UI.WebControls.TableCell.ColumnSpan%2A>プロパティおよび<xref:System.Web.UI.WebControls.TableCell.AssociatedHeaderCellID%2A>プロパティです。 場合、<xref:System.Web.UI.WebControls.TableCell.AssociatedHeaderCellID%2A>プロパティを指す、<xref:System.Web.UI.WebControls.TableHeaderCell>が見つかりません、<xref:System.Web.HttpException>がスローされます。  
  
 <xref:System.Web.UI.WebControls.TableCell.AddAttributesToRender%2A>メソッドが、主の機能を拡張するコントロールの開発者によって使用される、<xref:System.Web.UI.WebControls.TableCell>コントロール。  
  
   
  
## Examples  
 次のコード例をオーバーライドする方法を示しています、<xref:System.Web.UI.WebControls.TableCell.AddAttributesToRender%2A>カスタム サーバー内のメソッドを制御するタイトルのカスタム属性は各セルに表示できるようにします。  
  
 [!code-aspx-csharp[CustomTableCellAddAttributesToRender#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomTableCellAddAttributesToRender/CS/custom_tablecell_addattributestorendercs.aspx#1)]
 [!code-aspx-vb[CustomTableCellAddAttributesToRender#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomTableCellAddAttributesToRender/VB/custom_tablecell_addattributestorendervb.aspx#1)]  
  
 [!code-csharp[CustomTableCellAddAttributesToRender#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomTableCellAddAttributesToRender/CS/custom_tablecell_addattributestorender.cs#2)]
 [!code-vb[CustomTableCellAddAttributesToRender#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomTableCellAddAttributesToRender/VB/custom_tablecell_addattributestorender.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">関連付けられたヘッダー セルとしてリストされているセルは見つかりませんでした。</exception>
        <block subset="none" type="overrides">
          <para>オーバーライドする場合、<see cref="M:System.Web.UI.WebControls.TableCell.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />を呼び出して派生クラスでメソッドが必ず、 <see cref="M:System.Web.UI.WebControls.TableCell.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" /> 、基底クラスのメソッドできるように、<see cref="T:System.Web.UI.WebControls.TableCell" />コントロールの属性が正しくレンダリングされます。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="AddParsedSubObject">
      <MemberSignature Language="C#" Value="protected override void AddParsedSubObject (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddParsedSubObject(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TableCell.AddParsedSubObject(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><see cref="T:System.Object" />を表す解析された要素</param>
        <summary>解析の子コントロールを追加、<see cref="T:System.Web.UI.WebControls.TableCell" />コントロール。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 場合、<xref:System.Web.UI.WebControls.TableCell>コントロールが含まれている子コントロール、基本クラスの<xref:System.Web.UI.WebControls.TableCell.AddParsedSubObject%2A>メソッドが呼び出される、それ以外の<xref:System.Web.UI.WebControls.TableCell>コントロールの<xref:System.Web.UI.WebControls.TableCell.Text%2A>としてプロパティ値を追加、<xref:System.Web.UI.LiteralControl>オブジェクトを<xref:System.Web.UI.WebControls.TableCell>コントロールの<xref:System.Web.UI.ControlCollection>します。  
  
 <xref:System.Web.UI.WebControls.TableCell.AddParsedSubObject%2A>メソッドが、主の機能を拡張するコントロールの開発者によって使用される、<xref:System.Web.UI.WebControls.TableCell>コントロール。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>オーバーライドする場合、<see cref="M:System.Web.UI.WebControls.TableCell.AddParsedSubObject(System.Object)" />を呼び出して、基底クラスの派生クラスでメソッドが必ず<see cref="M:System.Web.UI.WebControls.TableCell.AddParsedSubObject(System.Object)" />オブジェクトのメソッドが適切に追加する、<see cref="T:System.Web.UI.WebControls.TableCell" />コントロール<see cref="T:System.Web.UI.ControlCollection" />です。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="AssociatedHeaderCellID">
      <MemberSignature Language="C#" Value="public virtual string[] AssociatedHeaderCellID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] AssociatedHeaderCellID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TableCell.AssociatedHeaderCellID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.StringArrayConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定に関連付けられているテーブルのヘッダー セルをスペースで区切って、<see cref="T:System.Web.UI.WebControls.TableCell" />コントロール。</summary>
        <value>関連付けられているテーブルのヘッダー セルの識別子を含む文字列の配列。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TableCell.AssociatedHeaderCellID%2A>プロパティにはヘッダー情報を提供ヘッダー セルのプログラム識別子の一覧が含まれています、<xref:System.Web.UI.WebControls.TableCell>コントロール。 ヘッダー セル識別子の一覧が、HTML にコンマ区切りのリストとして表示される`<td>`要素の`header`属性。  
  
 設定するときに、<xref:System.Web.UI.WebControls.TableCell.AssociatedHeaderCellID%2A>プロパティは文字列のコンマ区切りのリストを使用します。 リストの要素が有効なテーブルのヘッダー セルとして認識されない場合、<xref:System.Web.HttpException>場合にスローされますが、<xref:System.Web.UI.WebControls.TableCell.AddAttributesToRender%2A>が呼び出されます。  
  
   
  
## Examples  
 次のコード例は、宣言によって指定する方法を示します、<xref:System.Web.UI.WebControls.TableCell.AssociatedHeaderCellID%2A>のプロパティ、<xref:System.Web.UI.WebControls.TableCell>コントロール。 具体的には、最後の行のセルが 3 つのヘッダー セルに関連付けられている方法に注意してください。 完了したら、作業中のコード例は、次を参照してください。、<xref:System.Web.UI.WebControls.TableHeaderCell>クラスの概要に関するトピック。  
  
```csharp  
<asp:TableCell AssociatedHeaderCellID="Column1Header Column2Header Column3Header"  
ColumnSpan="3"  
HorizontalAlign="Left">(2,0)  
</asp:TableCell>  
```  
  
```vb  
<asp:TableCell AssociatedHeaderCellID="Column1Header Column2Header Column3Header"  
ColumnSpan="3"  
HorizontalAlign="Left">(2,0)  
</asp:TableCell>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnSpan">
      <MemberSignature Language="C#" Value="public virtual int ColumnSpan { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ColumnSpan" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TableCell.ColumnSpan" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定内の列の数、<see cref="T:System.Web.UI.WebControls.Table" />セルを結合するコントロール。</summary>
        <value>セルを結合する、表示されたテーブル内の列の数。 既定値は<see langword="0" />、このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.TableCell.ColumnSpan%2A>プロパティを指定するか、セルを結合する、表示されたテーブル内の列の数を決定します。 たとえば、このプロパティを設定する`2`、セルは 2 つの列で、<xref:System.Web.UI.WebControls.Table>コントロール。  
  
   
  
## Examples  
 次のコード例は、宣言によって指定する方法を示します、<xref:System.Web.UI.WebControls.TableCell.ColumnSpan%2A>の<xref:System.Web.UI.WebControls.TableCell>コントロール。 具体的には、最後の行の 1 つのセルが 3 つの列にまたがる方法に注意してください。 完了したら、作業中のコード例は、次を参照してください。、<xref:System.Web.UI.WebControls.TableHeaderCell>クラスの概要に関するトピック。  
  
```csharp  
<asp:TableCell AssociatedHeaderCellID="Column1Header Column2Header Column3Header"  
ColumnSpan="3"  
HorizontalAlign="Left">(2,0)  
</asp:TableCell>  
```  
  
```vb  
<asp:TableCell AssociatedHeaderCellID="Column1Header Column2Header Column3Header"  
ColumnSpan="3"  
HorizontalAlign="Left">(2,0)  
</asp:TableCell>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">選択した値より小さい<see langword="0" />です。</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateControlStyle">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.Style CreateControlStyle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.Style CreateControlStyle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TableCell.CreateControlStyle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>作成、<see cref="T:System.Web.UI.WebControls.TableItemStyle" />の<see cref="T:System.Web.UI.WebControls.TableCell" />コントロール。</summary>
        <returns>A<see cref="T:System.Web.UI.WebControls.Style" />を表す、<see cref="T:System.Web.UI.WebControls.TableItemStyle" />の<see cref="T:System.Web.UI.WebControls.TableCell" />コントロール。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TableItemStyle>によって作成された、<xref:System.Web.UI.WebControls.TableCell.CreateControlStyle%2A>メソッドを使用、 <xref:System.Web.UI.WebControls.TableCell.Wrap%2A>、 <xref:System.Web.UI.WebControls.TableCell.HorizontalAlign%2A>、および<xref:System.Web.UI.WebControls.TableCell.VerticalAlign%2A>プロパティです。  
  
 <xref:System.Web.UI.WebControls.TableCell.CreateControlStyle%2A>メソッドが、主の機能を拡張するコントロールの開発者によって使用される、<xref:System.Web.UI.WebControls.TableCell>コントロール。  
  
   
  
## Examples  
 次のコード例をオーバーライドする方法を示しています、<xref:System.Web.UI.WebControls.TableCell.CreateControlStyle%2A>メソッドでカスタム サーバー コントロールの新しいインスタンスを常に返すように、<xref:System.Web.UI.WebControls.TableStyle>のクラス、<xref:System.Web.UI.WebControls.TableCell>です。  
  
 [!code-aspx-csharp[CustomTableCellCreateControlStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomTableCellCreateControlStyle/CS/custom_tablecell_createcontrolstylecs.aspx#1)]
 [!code-aspx-vb[CustomTableCellCreateControlStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomTableCellCreateControlStyle/VB/custom_tablecell_createcontrolstylevb.aspx#1)]  
  
 [!code-csharp[CustomTableCellCreateControlStyle#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomTableCellCreateControlStyle/CS/custom_tablecell_createcontrolstyle.cs#2)]
 [!code-vb[CustomTableCellCreateControlStyle#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomTableCellCreateControlStyle/VB/custom_tablecell_createcontrolstyle.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HorizontalAlign">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.HorizontalAlign HorizontalAlign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.HorizontalAlign HorizontalAlign" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TableCell.HorizontalAlign" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.HorizontalAlign</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはセルの内容の水平方向の配置を設定します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.HorizontalAlign" /> 列挙値のいずれか。 既定値は、<see langword="NotSet" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.TableCell.HorizontalAlign%2A>プロパティ セルの内容の水平方向の配置を指定します。 使用可能な値で指定、<xref:System.Web.UI.WebControls.HorizontalAlign>列挙します。  
  
   
  
## Examples  
 次のコード例は、宣言によって指定する方法を示します、<xref:System.Web.UI.WebControls.TableCell.HorizontalAlign%2A>のプロパティ、<xref:System.Web.UI.WebControls.TableCell>コントロール。 具体的には、どのように、最後の行のセルは左揃えで配置に注意してください。 完了したら、作業中のコード例は、次を参照してください。、<xref:System.Web.UI.WebControls.TableHeaderCell>クラスの概要に関するトピック。  
  
```csharp  
<asp:TableCell AssociatedHeaderCellID="Column1Header,Column2Header,Column3Header"  
ColumnSpan="3"  
HorizontalAlign="Left">(2,0)  
</asp:TableCell>  
```  
  
```vb  
<asp:TableCell AssociatedHeaderCellID="Column1Header,Column2Header,Column3Header"  
ColumnSpan="3"  
HorizontalAlign="Left">(2,0)  
</asp:TableCell>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderContents">
      <MemberSignature Language="C#" Value="protected override void RenderContents (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RenderContents(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TableCell.RenderContents(System.Web.UI.HtmlTextWriter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">クライアントに HTML のコンテンツを表示する出力ストリーム。</param>
        <summary>表示、<see cref="T:System.Web.UI.WebControls.TableCell" />を指定した内容<see cref="T:System.Web.UI.HtmlTextWriter" />オブジェクト。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 場合、<xref:System.Web.UI.WebControls.TableCell>コントロールに子コントロールがあるまたはでオーバーライドされる、派生クラスの基本クラスの<xref:System.Web.UI.WebControls.WebControl.RenderContents%2A>メソッドが呼び出される、それ以外の値、<xref:System.Web.UI.WebControls.TableCell.Text%2A>プロパティに書き込まれて、<xref:System.Web.UI.HtmlTextWriter>オブジェクト。  
  
 <xref:System.Web.UI.WebControls.TableCell.RenderContents%2A>メソッドが、主の機能を拡張するコントロールの開発者によって使用される、<xref:System.Web.UI.WebControls.TableCell>コントロール。  
  
   
  
## Examples  
 次のコード例は、オーバーライドする方法を示します、<xref:System.Web.UI.WebControls.TableCell.RenderContents%2A>カスタム メソッド<xref:System.Web.UI.WebControls.TableCell>ように制御セルの内容でカスタム テキストを挿入することです。  
  
 [!code-aspx-csharp[CustomTableCellRenderContents#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomTableCellRenderContents/CS/custom_tablecell_rendercontentscs.aspx#1)]
 [!code-aspx-vb[CustomTableCellRenderContents#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomTableCellRenderContents/VB/custom_tablecell_rendercontentsvb.aspx#1)]  
  
 [!code-csharp[CustomTableCellRenderContents#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomTableCellRenderContents/CS/custom_tablecell_rendercontents.cs#2)]
 [!code-vb[CustomTableCellRenderContents#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomTableCellRenderContents/VB/custom_tablecell_rendercontents.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RowSpan">
      <MemberSignature Language="C#" Value="public virtual int RowSpan { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RowSpan" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TableCell.RowSpan" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定内の行の数、<see cref="T:System.Web.UI.WebControls.Table" />セルを結合するコントロール。</summary>
        <value>セルを結合する、表示されたテーブル内の行の数。 既定値は<see langword="0" />、このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.TableCell.RowSpan%2A>プロパティを指定するか、セルを結合する、表示されたテーブル内の行の数を決定します。 たとえば、このプロパティを設定する`2`、セルが 2 つの行を受け取る、<xref:System.Web.UI.WebControls.Table>コントロール。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">選択した値より小さい<see langword="0" />です。</exception>
      </Docs>
    </Member>
    <Member MemberName="SupportsDisabledAttribute">
      <MemberSignature Language="C#" Value="public override bool SupportsDisabledAttribute { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsDisabledAttribute" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TableCell.SupportsDisabledAttribute" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールの <see cref="P:System.Web.UI.WebControls.WebControl.IsEnabled" /> プロパティが <see langword="false" /> の場合、レンダリングされた HTML 要素の <see langword="disabled" /> 属性を "無効" に設定するかどうかを示す値を取得します。</summary>
        <value>
          <see langword="true" />場合、<see cref="P:System.Web.UI.Control.RenderingCompatibility" />プロパティがより低い ASP.NET のバージョンを示す<c>4.0</c>、それ以外の<see langword="false" />します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティは、コントロールが無効になっているときに ASP.NET がそのコントロールの HTML をどのように描画するかを示します。 場合は、このプロパティは`true`、ASP.NET は表示、`disabled`属性のコントロールを無効にします。 場合は、このプロパティは`false`、ASP.NET は表示、`class`属性のコントロールを無効にします。 詳細については、「<xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A?displayProperty=nameWithType>」を参照してください。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public virtual string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TableCell.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerDefaultProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはセルのテキストの内容を設定します。</summary>
        <value>セルのテキストの内容。 既定値は <see cref="F:System.String.Empty" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.TableCell.Text%2A>プロパティを指定またはセルのテキストの内容を確認します。 セルの内容をプログラムで更新するは、このプロパティは使用が一般的です。  
  
> [!NOTE]
>  設定、<xref:System.Web.UI.WebControls.TableCell.Text%2A>プロパティに含まれている他のコントロールがクリアされます、<xref:System.Web.UI.WebControls.TableCell>です。  
  
> [!CAUTION]
>  <xref:System.Web.UI.WebControls.TableCell.Text%2A>悪意のあるクライアント スクリプトが含まれる可能性があります、ユーザー入力を表示するコントロールを使用することができます。 スクリプトの実行可能ファイル、SQL ステートメント、またはその他のコードをアプリケーションに表示する前に、クライアントから送信される情報を確認します。 ASP.NET は、入力要求の検証機能があり、ユーザー入力の中のスクリプトのブロックと HTML を提供します。 検証サーバー コントロールは、ユーザー入力を評価するも提供されます。 詳細については、次を参照してください。[標準コントロールのセキュリティで保護する](http://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8)、[する方法: 保護に対してスクリプトによる攻略の文字列を HTML エンコードを適用することによって、Web アプリケーションで](http://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b)、および[ASP.NET Web Pages でのユーザー入力の検証](http://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461)です。  
  
 このプロパティの値を設定すると、デザイナーのツールを使用して、リソース ファイルに自動的に保存できます。 詳細については、次を参照してください。<xref:System.ComponentModel.LocalizableAttribute>と[グローバリゼーションとローカリゼーション](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)です。  
  
   
  
## Examples  
 次のコード例は、の新しいインスタンスを作成する方法を示します、<xref:System.Web.UI.WebControls.TableCell>をプログラムで制御します。 具体的には、注意してください。 どのように<xref:System.Web.UI.WebControls.TableCell.Text%2A>の内容を設定するプロパティを使用、<xref:System.Web.UI.WebControls.TableCell>コントロール。  
  
 このコード例に示されている例の一部である、<xref:System.Web.UI.WebControls.TableCell>クラスです。  
  
 [!code-csharp[TableCell#5](~/samples/snippets/csharp/VS_Snippets_WebNet/TableCell/CS/tablecellcs.aspx#5)]
 [!code-vb[TableCell#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TableCell/VB/tablecellvb.aspx#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VerticalAlign">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.VerticalAlign VerticalAlign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.VerticalAlign VerticalAlign" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TableCell.VerticalAlign" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.VerticalAlign</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはセルの内容の垂直方向の配置を設定します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.VerticalAlign" /> 列挙値のいずれか。 既定値は、<see langword="NotSet" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.TableCell.VerticalAlign%2A>プロパティ セルの内容の垂直方向の配置を指定します。 使用可能な値で指定、<xref:System.Web.UI.WebControls.VerticalAlign>列挙します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Wrap">
      <MemberSignature Language="C#" Value="public virtual bool Wrap { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Wrap" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TableCell.Wrap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはセルの内容を折り返すかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" />セルにセルの内容を折り返す場合それ以外の場合、<see langword="false" />です。 既定値は、<see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.TableCell.Wrap%2A>を指定するかを決定するプロパティのセルにセルの内容を折り返すかどうか。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
