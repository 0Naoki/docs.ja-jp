<Type Name="ObjectDataSourceEventArgs" FullName="System.Web.UI.WebControls.ObjectDataSourceEventArgs">
  <TypeSignature Language="C#" Value="public class ObjectDataSourceEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ObjectDataSourceEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.ObjectDataSourceEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>データを提供、<see cref="E:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating" />と<see cref="E:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated" />のイベント、<see cref="T:System.Web.UI.WebControls.ObjectDataSource" />コントロール。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs>クラスが使用されて、<xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating%2A>と<xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreated%2A>を使用している任意のデータ操作の前にビジネス オブジェクトのインスタンスへのアクセスを提供するメソッド、<xref:System.Web.UI.WebControls.ObjectDataSource>制御とビジネス オブジェクトが実行されます。 ビジネス オブジェクトが設定されているしを使用してアクセス、<xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A>プロパティです。 処理するイベント ハンドラー デリゲートを追加することによって、<xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating>イベントの代わりにカスタム コードでビジネス オブジェクトのインスタンスを作成することができます、<xref:System.Web.UI.WebControls.ObjectDataSource>インスタンス化を実行します。 これは、既定以外のインスタンスまたはビジネス オブジェクトのインスタンスを作成する既定以外のコンス トラクターの呼び出しにする場合に便利です。<xref:System.Web.UI.WebControls.ObjectDataSource>と連携して、ビジネス オブジェクトのインスタンスを作成する既定のコンス トラクターを常に呼び出します。 処理するイベント ハンドラー デリゲートを追加することも、<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>イベントで、いずれもパブリックにアクセスすることができますが、追加の初期化または作業を実行するビジネス オブジェクトのメンバーを公開します。  
  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating%2A>と<xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreated%2A>メソッドが呼び出されないと、<xref:System.Web.UI.WebControls.ObjectDataSource>データ操作を実行するビジネス オブジェクトのメソッドの場合、制御`static`です。  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource>コントロールは、ライフ サイクルのさまざまなタイミングで、基になるビジネス オブジェクトを使用する処理できる多くのイベントを公開します。 次の表は、イベントと関連付けられている<xref:System.EventArgs>クラスとイベント ハンドラー デリゲート。  
  
|イベント|EventArgs|EventHandler|  
|-----------|---------------|------------------|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>。<br /><br /> ビジネス オブジェクトのインスタンスが作成される直前に発生します。|<xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>。<br /><br /> ビジネス オブジェクトのインスタンスが作成された直後後に発生します。|<xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.Selecting>。<br /><br /> データが取得される前に発生します。|<xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.Inserting>、<xref:System.Web.UI.WebControls.ObjectDataSource.Updating>、および <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting>。<br /><br /> Insert、update、または削除操作が実行されるまでに発生します。|<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.Selected>。<br /><br /> データが取得された後に発生します。|<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.Inserted>、<xref:System.Web.UI.WebControls.ObjectDataSource.Updated>、<xref:System.Web.UI.WebControls.ObjectDataSource.Deleted>。<br /><br /> Insert、update、または削除操作が完了した後に発生します。|<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing>。<br /><br /> ビジネス オブジェクトが破棄される前に発生します。|<xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler>|  
  
   
  
## Examples  
 このセクションには、2 つのコード例が含まれています。 最初のコード例を使用する方法を示しています、<xref:System.Web.UI.WebControls.ObjectDataSource>ビジネス オブジェクトを持つコントロールと<xref:System.Web.UI.WebControls.GridView>コントロールを取得し、情報を表示します。 2 番目のコード例では、最初のコード例で使用する基本的なビジネス オブジェクトの例を提供します。  
  
 次のコード例を使用する方法を示しています、<xref:System.Web.UI.WebControls.ObjectDataSource>ビジネス オブジェクトを持つコントロールと<xref:System.Web.UI.WebControls.GridView>コントロールを取得し、情報を表示します。 多くの現実のシナリオと同様に、この例では場合があることも、ビジネス オブジェクトの既定のインスタンスを使用する適切な<xref:System.Web.UI.WebControls.ObjectDataSource>コントロール。 この例では、<xref:System.Web.UI.WebControls.ObjectDataSource>は例外をスローするために、既定のコンス トラクターを正常に呼び出すことはできません。 場合によっては、既定のコンス トラクターを保護する場合があり、他のユーザーで、目的の状態にビジネス オブジェクトを初期化、可能性がありますいないします。 何らかの理由、ビジネス オブジェクトのインスタンスを作成し、設定できますのインスタンス<xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A>のプロパティ、<xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs>ハンドラーに渡されるオブジェクト。 これは、ビジネス オブジェクト インスタンスが、<xref:System.Web.UI.WebControls.ObjectDataSource>作業の実行に使用します。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_15#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_15/CS/objds15cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_15#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_15/VB/objds15vb.aspx#1)]  
  
 次のコード例では、前のコード例で使用する基本的なビジネス オブジェクトの例を示します。  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_15#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_15/CS/northwindemployee15.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_15#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_15/VB/northwindemployee15.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectDataSourceEventArgs (object objectInstance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object objectInstance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceEventArgs.#ctor(System.Object)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="objectInstance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="objectInstance">ビジネス オブジェクトを<see cref="T:System.Web.UI.WebControls.ObjectDataSource" />データ操作を実行する操作します。</param>
        <summary>新しいインスタンスを初期化、<see cref="T:System.Web.UI.WebControls.ObjectDataSourceEventArgs" />クラス、指定したオブジェクトを使用します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ObjectInstance">
      <MemberSignature Language="C#" Value="public object ObjectInstance { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ObjectInstance" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定を使用するビジネス オブジェクトを表すオブジェクト、<see cref="T:System.Web.UI.WebControls.ObjectDataSource" />コントロールはデータの操作を実行します。</summary>
        <value>ビジネス オブジェクト、<see cref="T:System.Web.UI.WebControls.ObjectDataSource" />使用してデータの処理を実行するそれ以外の場合、<see langword="null" />場合は、<see langword="null" />に渡される、<see cref="T:System.Web.UI.WebControls.ObjectDataSourceEventArgs" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 このセクションには、2 つのコード例が含まれています。 最初のコード例を使用する方法を示しています、<xref:System.Web.UI.WebControls.ObjectDataSource>ビジネス オブジェクトを持つコントロールと<xref:System.Web.UI.WebControls.GridView>コントロールを取得し、情報を表示します。 2 番目のコード例では、最初のコード例で使用する基本的なビジネス オブジェクトの例を提供します。  
  
 次のコード例を使用する方法を示しています、<xref:System.Web.UI.WebControls.ObjectDataSource>ビジネス オブジェクトを持つコントロールと<xref:System.Web.UI.WebControls.GridView>コントロールを取得し、情報を表示します。 多くの現実のシナリオと同様に、この例では場合があることも、ビジネス オブジェクトの既定のインスタンスを使用する適切な<xref:System.Web.UI.WebControls.ObjectDataSource>コントロール。 この例では、<xref:System.Web.UI.WebControls.ObjectDataSource>は例外をスローするために、既定のコンス トラクターを正常に呼び出すことはできません。 場合によっては、既定のコンス トラクターを保護する場合があり、他のユーザーで、目的の状態にビジネス オブジェクトを初期化、可能性がありますいないします。 何らかの理由、ビジネス オブジェクトのインスタンスを作成し、設定できますのインスタンス<xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A>のプロパティ、<xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs>ハンドラーに渡されるオブジェクト。 これは、ビジネス オブジェクト インスタンスが、<xref:System.Web.UI.WebControls.ObjectDataSource>作業の実行に使用します。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_15#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_15/CS/objds15cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_15#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_15/VB/objds15vb.aspx#1)]  
  
 次のコード例では、前のコード例で使用する基本的なビジネス オブジェクトの例を示します。  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_15#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_15/CS/northwindemployee15.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_15#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_15/VB/northwindemployee15.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
