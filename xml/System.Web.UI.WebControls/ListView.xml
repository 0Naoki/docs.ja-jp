<Type Name="ListView" FullName="System.Web.UI.WebControls.ListView">
  <TypeSignature Language="C#" Value="public class ListView : System.Web.UI.WebControls.DataBoundControl, System.Web.UI.IDataKeysControl, System.Web.UI.INamingContainer, System.Web.UI.WebControls.IDataBoundListControl, System.Web.UI.WebControls.IPageableItemContainer, System.Web.UI.WebControls.IPersistedSelector" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ListView extends System.Web.UI.WebControls.DataBoundControl implements class System.Web.UI.IDataKeysControl, class System.Web.UI.INamingContainer, class System.Web.UI.WebControls.IDataBoundControl, class System.Web.UI.WebControls.IDataBoundListControl, class System.Web.UI.WebControls.IPageableItemContainer, class System.Web.UI.WebControls.IPersistedSelector" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.ListView" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.DataBoundControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IDataKeysControl</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.INamingContainer</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.IDataBoundListControl</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.IPageableItemContainer</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.IPersistedSelector</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("SelectedIndexChanged")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("SelectedValue")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.ListViewDesigner, System.Web.Extensions.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Drawing.ToolboxBitmap(typeof(System.Web.UI.WebControls.ListView), "ListView.bmp")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ControlValueProperty("SelectedValue")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.DataKeyProperty("SelectedPersistedDataKey")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.SupportsEventValidation</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>ユーザー定義のテンプレートを使用して、データ ソースの値を表示します。 <see cref="T:System.Web.UI.WebControls.ListView" />コントロールにより、ユーザーが選択、並べ替え、削除、編集、およびレコードを挿入します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このトピックの内容  
  
-   [はじめに](#introduction)  
  
-   [テンプレート](#templates)  
  
-   [データ ソースにバインドします。](#binding_to_a_data_source)  
  
-   [データ操作](#data_operations)  
  
-   [イベント](#Events)  
  
-   [宣言型の構文](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>はじめに  
 <xref:System.Web.UI.WebControls.ListView>データ ソースから値を表示するコントロールを使用します。 これは似ています、<xref:System.Web.UI.WebControls.GridView>行フィールドではなくユーザー定義のテンプレートを使用してデータを表示する点を除いてを制御します。 独自のテンプレートを作成することより柔軟にデータを表示する方法を制御するがします。  
  
 Visual Studio プロジェクトとソース コードは、このトピックで使用可能な:[ダウンロード](http://go.microsoft.com/fwlink/?LinkId=199759)です。  
  
 <xref:System.Web.UI.WebControls.ListView>コントロールは、次の機能をサポートします。  
  
-   などのデータ ソース コントロールにバインディングのサポート<xref:System.Web.UI.WebControls.SqlDataSource>、 <xref:System.Web.UI.WebControls.LinqDataSource>、および<xref:System.Web.UI.WebControls.ObjectDataSource>です。  
  
-   ユーザー定義のテンプレートとスタイルを使用した外観のカスタマイズ。  
  
-   組み込みの並べ替え機能します。  
  
-   組み込みは、更新し、機能を削除します。  
  
-   組み込みは、機能を挿入します。  
  
-   使用してページング機能のサポート、<xref:System.Web.UI.WebControls.DataPager>コントロール。  
  
-   組み込みの項目の選択機能。  
  
-   プログラムによるアクセスを<xref:System.Web.UI.WebControls.ListView>オブジェクト モデルを動的にプロパティを設定、イベントを処理します。  
  
-   複数のキー フィールドです。  
  
 ASP.NET で使用できるその他のデータ バインド コントロールの概要については、次を参照してください。[データ バインドされた Web サーバー コントロール](http://msdn.microsoft.com/library/f9cf026e-d8b8-49f8-a3c4-64de2edbbb96)です。  
  
<a name="templates"></a>   
## <a name="templates"></a>テンプレート  
 順序で、<xref:System.Web.UI.WebControls.ListView>コンテンツを表示するコントロールをコントロールのさまざまな部分のテンプレートを作成する必要があります。 <xref:System.Web.UI.WebControls.ListView.ItemTemplate%2A>が必要です。 その他のすべてのテンプレートはオプションです。 <xref:System.Web.UI.WebControls.ListView.LayoutTemplate%2A>プロパティは必要ありません。  
  
 ただし、コントロールが構成されているモード用のテンプレートを作成する必要があります。 たとえば、<xref:System.Web.UI.WebControls.ListView>コントロールをサポートしているレコードを挿入する必要があります、<xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A>テンプレートに定義されています。 次の表に、テンプレートを作成することができます、<xref:System.Web.UI.WebControls.ListView>コントロール。  
  
|テンプレートの種類|説明|  
|-------------------|-----------------|  
|<xref:System.Web.UI.WebControls.ListView.LayoutTemplate%2A>|コンテナー オブジェクトをなどを定義するルート テンプレート、 `table`、 `div`、または`span`で定義されているコンテンツを格納する要素、<xref:System.Web.UI.WebControls.ListView.ItemTemplate%2A>または<xref:System.Web.UI.WebControls.ListView.GroupTemplate%2A>テンプレート。 含まれる場合も、<xref:System.Web.UI.WebControls.DataPager>オブジェクト。|  
|<xref:System.Web.UI.WebControls.ListView.ItemTemplate%2A>|個々 の項目を表示するデータ バインドされたコンテンツを定義します。|  
|<xref:System.Web.UI.WebControls.ListView.ItemSeparatorTemplate%2A>|個々 の項目の間に表示するコンテンツを定義します。|  
|<xref:System.Web.UI.WebControls.ListView.GroupTemplate%2A>|テーブルの行などのコンテナー オブジェクトの定義 (`tr`)、 `div`、または`span`で定義されているコンテンツを格納する要素、<xref:System.Web.UI.WebControls.ListView.ItemTemplate%2A>と<xref:System.Web.UI.WebControls.ListView.EmptyItemTemplate%2A>テンプレート。 グループに表示される項目の数がで指定された、<xref:System.Web.UI.WebControls.ListView.GroupItemCount%2A>プロパティです。|  
|<xref:System.Web.UI.WebControls.ListView.GroupSeparatorTemplate%2A>|アイテムのグループの間に表示するコンテンツを定義します。|  
|<xref:System.Web.UI.WebControls.ListView.EmptyItemTemplate%2A>|コンテンツに対して空のレンダリングを定義アイテムの場合に、<xref:System.Web.UI.WebControls.ListView.GroupTemplate%2A>テンプレートを使用します。 たとえば場合、<xref:System.Web.UI.WebControls.ListView.GroupItemCount%2A>プロパティが 5 に設定され、データ ソースから返される項目の合計数が 8、によって表示されるデータの最後のグループ、<xref:System.Web.UI.WebControls.ListView>コントロールには、3 つの項目で指定したとおりに含まれる、<xref:System.Web.UI.WebControls.ListView.ItemTemplate%2A>テンプレート、および 2 つの項目で指定したとおり、<xref:System.Web.UI.WebControls.ListView.EmptyItemTemplate%2A>テンプレート。|  
|<xref:System.Web.UI.WebControls.ListView.EmptyDataTemplate%2A>|データ ソースにデータが返されなかった場合に表示するコンテンツを定義します。|  
|<xref:System.Web.UI.WebControls.ListView.SelectedItemTemplate%2A>|その他の項目から選択した項目を区別するために、選択したデータ項目に表示されるコンテンツを定義します。|  
|<xref:System.Web.UI.WebControls.ListView.AlternatingItemTemplate%2A>|連続した項目を区別しやすくアイテムを交互に表示されるコンテンツを定義します。|  
|<xref:System.Web.UI.WebControls.ListView.EditItemTemplate%2A>|項目を編集するときに表示するコンテンツを定義します。 <xref:System.Web.UI.WebControls.ListView.EditItemTemplate%2A>の代わりにテンプレートが表示される、<xref:System.Web.UI.WebControls.ListView.ItemTemplate%2A>編集されているデータ アイテムのテンプレートです。|  
|<xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A>|項目を挿入するに表示するコンテンツを定義します。 <xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A>の代わりにテンプレートが表示される、<xref:System.Web.UI.WebControls.ListView.ItemTemplate%2A>テンプレートのいずれかの開始時またはによって表示されるアイテムの最後に、<xref:System.Web.UI.WebControls.ListView>コントロール。 場所を指定することができます、<xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A>を使用してテンプレートを表示、<xref:System.Web.UI.WebControls.ListView.InsertItemPosition%2A>のプロパティ、<xref:System.Web.UI.WebControls.ListView>コントロール。|  
  
 ように、テンプレートでフィールドの値を表示する<xref:System.Web.UI.WebControls.ListView.ItemTemplate%2A>、データ バインディング式を使用します。 データ バインディング式の詳細については、次を参照してください。[データ バインド式の概要](http://msdn.microsoft.com/library/14cdd57d-0f82-4667-b503-73e1a96f136a)です。  
  
 入力コントロールをバインドする、<xref:System.Web.UI.WebControls.ListView.EditItemTemplate%2A>と<xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A>テンプレート、データ ソースのフィールドには、双方向のバインド式を使用することができます。 これにより、<xref:System.Web.UI.WebControls.ListView>コントロールを自動的に更新プログラムの入力コントロールの値を抽出または操作を挿入します。 双方向のバインド式には、入力コントロールにも有効にする、<xref:System.Web.UI.WebControls.ListView.EditItemTemplate%2A>を自動的に元のフィールド値を表示します。 双方向のバインド式の詳細については、次を参照してください。[データベースへのバインド](http://msdn.microsoft.com/en-us/ab7b2846-975b-4057-a948-45527497c742)です。  
  
<a name="binding_to_a_data_source"></a>   
## <a name="binding-to-a-data-source"></a>データ ソースにバインドします。  
 バインドすることができます、<xref:System.Web.UI.WebControls.ListView>コントロールをデータ ソース コントロール (など、<xref:System.Web.UI.WebControls.SqlDataSource>コントロールまたは<xref:System.Web.UI.WebControls.ObjectDataSource>コントロール) を実装する任意のデータ ソースのコレクションに、または、<xref:System.Collections.IEnumerable?displayProperty=nameWithType>インターフェイスは、よう<xref:System.Data.DataView?displayProperty=nameWithType>、 <xref:System.Collections.ArrayList?displayProperty=nameWithType>、 <xref:System.Collections.Generic.List%601?displayProperty=nameWithType>、または他のコレクション型。 使用して次のいずれかのバインド、<xref:System.Web.UI.WebControls.ListView>適切なデータ ソースの種類を制御します。  
  
-   データ ソース コントロールにバインドするには、設定、<xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A>のプロパティ、<xref:System.Web.UI.WebControls.ListView>コントロールを<xref:System.Web.UI.Control.ID%2A>データ ソース コントロールの値。 <xref:System.Web.UI.WebControls.ListView>コントロールに自動的に指定されたデータ ソース コントロールにバインドできますを利用してデータ ソースの並べ替え、挿入、更新、削除、およびページング機能を実行するコントロールの機能です。 これは、データにバインドする推奨される方法です。  
  
-   実装するデータ ソースにバインドする、<xref:System.Collections.IEnumerable?displayProperty=nameWithType>インターフェイス、プログラムで設定、<xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A>のプロパティ、<xref:System.Web.UI.WebControls.ListView>データ ソースを制御し、呼び出す、<xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A>メソッドです。 この手法を使用する場合、<xref:System.Web.UI.WebControls.ListView>コントロールでは組み込みの並べ替え、更新、削除、およびページング機能を提供しません。 適切なイベントを使用して、この機能を提供する必要があります。  
  
 データ バインディングの詳細については、次を参照してください。 [ASP.NET データ アクセス コンテンツ マップ](http://msdn.microsoft.com/en-us/f9219396-a0fa-481f-894d-e3d9c67d64f2)です。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.ListView>悪意のあるクライアント スクリプトが含まれる可能性があります、ユーザー入力を表示するコントロールを使用することができます。 アプリケーションで表示する前にスクリプトの実行可能ファイル、SQL ステートメント、またはその他のコードをクライアントから送信される情報を確認します。 ある値 HTML エンコードする可能な限りこのコントロールに表示される前に強くお勧めします。 ASP.NET には、ユーザー入力にスクリプトのブロックと HTML を使用する入力要求の検証機能が用意されています。 また、ユーザー入力を確認するのにサーバーの検証コントロールを使用することができます。 詳細については、次を参照してください。[検証コントロールの概要](http://msdn.microsoft.com/en-us/3c0e7514-cff2-4bed-936d-ee3f7b740190)です。  
  
<a name="data_operations"></a>   
## <a name="data-operations"></a>データ操作  
 ときに、<xref:System.Web.UI.WebControls.ListView>コントロールがデータ ソース コントロールにバインドされている、<xref:System.Web.UI.WebControls.ListView>コントロール、データ ソース コントロールの機能を活用し、提供自動的な並べ替え、insert、update、したり機能を削除します。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.ListView>コントロールは、並べ替え、挿入、更新、およびその他の種類のデータ ソースを使用した削除のサポートを提供できます。 ただし、これらの操作を実装するためには、適切なイベント ハンドラーでコードを作成する必要があります。  
  
 <xref:System.Web.UI.WebControls.ListView>コントロール テンプレートを使用して、これにまたは、update、delete、insert、並べ替えを実行して、操作を選択するためにボタンを自動的に生成する方法が用意されていません。 これらのボタンは、適切なテンプレートに手動で含める必要があります。 <xref:System.Web.UI.WebControls.ListView>特定ボタンがコントロールによって認識される<xref:System.Web.UI.WebControls.Button.CommandName%2A>プロパティが特定の値に設定します。 次の表に、ボタンを<xref:System.Web.UI.WebControls.ListView>コントロールによって認識されるとその機能します。  
  
|ボタン|CommandName 値|説明|  
|------------|-----------------------|-----------------|  
|キャンセル|[キャンセル]|編集または挿入操作をキャンセルします。 <xref:System.Web.UI.WebControls.ListView.ItemCanceling> イベントを発生させます。|  
|削除|"削除"|データ ソースから現在のレコードを削除します。 発生させる、<xref:System.Web.UI.WebControls.ListView.ItemDeleted>と<xref:System.Web.UI.WebControls.ListView.ItemDeleting>イベント。|  
|選択|"Select"|セット、<xref:System.Web.UI.WebControls.ListView.SelectedIndex%2A>プロパティを<xref:System.Web.UI.WebControls.ListViewDataItem.DisplayIndex%2A>アイテムのプロパティの値。 表示、<xref:System.Web.UI.WebControls.ListView.SelectedItemTemplate%2A>項目用のテンプレートです。 発生させる、<xref:System.Web.UI.WebControls.ListView.SelectedIndexChanging>と<xref:System.Web.UI.WebControls.ListView.SelectedIndexChanged>イベント。|  
|編集|"Edit"|編集モードでは、アイテムを配置します。 表示、<xref:System.Web.UI.WebControls.ListView.EditItemTemplate%2A>項目用のテンプレートです。 <xref:System.Web.UI.WebControls.ListView.ItemEditing> イベントを発生させます。|  
|挿入|"Insert"|バインドされた値を挿入、<xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A>データ ソースにテンプレート。 発生させる、<xref:System.Web.UI.WebControls.ListView.ItemInserting>と<xref:System.Web.UI.WebControls.ListView.ItemInserted>イベント。|  
|更新|[更新]|バインドされた値を使って、データ ソースの現在のレコードを更新、<xref:System.Web.UI.WebControls.ListView.EditItemTemplate%2A>テンプレート。 発生させる、<xref:System.Web.UI.WebControls.ListView.ItemUpdating>と<xref:System.Web.UI.WebControls.ListView.ItemUpdated>イベント。|  
|並べ替え|"Sort"|示されている列を並べ替え、`CommandArgument`ボタンのプロパティです。 発生させる、<xref:System.Web.UI.WebControls.ListView.Sorting>と<xref:System.Web.UI.WebControls.ListView.Sorted>イベント。|  
  
 (現在のデータ項目をすぐに削除) を削除 ボタンとは異なり、編集 ボタンがクリックされたときに、<xref:System.Web.UI.WebControls.ListView>コントロールが編集モードで現在の項目を表示します。 編集モードに含まれているコンテンツで、<xref:System.Web.UI.WebControls.ListView.EditItemTemplate%2A>現在のデータ項目のプロパティが表示されます。 通常、項目テンプレートの編集では、[編集] ボタンは更新プログラムが、[キャンセル] ボタンに置き換えられます。 入力フィールドのデータ型に対応するコントロール (など、<xref:System.Web.UI.WebControls.TextBox>または<xref:System.Web.UI.WebControls.CheckBox>コントロール) も通常、ユーザーを変更するフィールドの値を表示します。 データ ソースのレコードを更新更新 をクリックし、キャンセル ボタンをクリックすると、編集操作をキャンセルします。  
  
 挿入機能が有効になっているときに、<xref:System.Web.UI.WebControls.ListView.InsertItemPosition%2A>プロパティに設定されている<xref:System.Web.UI.WebControls.InsertItemPosition.FirstItem>または<xref:System.Web.UI.WebControls.InsertItemPosition.LastItem>です。 このプロパティは、場所を定義、<xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A>挿入項目のテンプレートを表示します。 挿入項目テンプレートには通常、挿入し、[キャンセル] ボタンが含まれていて、新しいレコードの値を入力するユーザーに対して空の入力コントロールが表示されます。 データ ソースで、レコードを挿入して [挿入] ボタンをクリックし、[キャンセル] ボタンをクリックすると、すべてのフィールドをクリアします。  
  
### <a name="sorting"></a>並べ替え  
 <xref:System.Web.UI.WebControls.ListView>コントロールにより、ユーザーが項目を並べ替える並べ替えボタンをクリックします。 並べ替え機能が定義されている、`CommandArgument`に並べ替えられる列を含むボタンのプロパティです。  
  
### <a name="paging"></a>ページング  
 同時に、データ ソースからのすべてのレコードを表示する代わりに、<xref:System.Web.UI.WebControls.ListView>コントロールを使用して、レコードをページに分割できます。 ページングを有効にするに関連付ける、<xref:System.Web.UI.WebControls.DataPager>と制御、<xref:System.Web.UI.WebControls.ListView>コントロール。 挿入、<xref:System.Web.UI.WebControls.DataPager>内の制御、<xref:System.Web.UI.WebControls.ListView.LayoutTemplate%2A>テンプレート。 また場合、<xref:System.Web.UI.WebControls.DataPager>コントロールが範囲外、<xref:System.Web.UI.WebControls.ListView>コントロールを設定、<xref:System.Web.UI.WebControls.DataPager.PagedControlID%2A>プロパティを<xref:System.Web.UI.Control.ID%2A>の<xref:System.Web.UI.WebControls.ListView>コントロール。  
  
<a name="Events"></a>   
## <a name="events"></a>イベント  
 次の表でサポートされているイベントの一覧、<xref:System.Web.UI.WebControls.ListView>コントロール。  
  
|イベント|説明|  
|-----------|-----------------|  
|<xref:System.Web.UI.WebControls.ListView.ItemCanceling>|発生したときに [キャンセル] ボタン (ボタンがその`CommandName`プロパティが"Cancel"に設定) がクリックすると、その前に、<xref:System.Web.UI.WebControls.ListView>コントロールは、挿入または編集操作をキャンセルします。 このイベントは、取り消し操作を停止するよく使用されます。|  
|<xref:System.Web.UI.WebControls.ListView.ItemCommand>|ボタンがクリックされたときに発生、<xref:System.Web.UI.WebControls.ListView>コントロール。 このイベントはタスクを実行する、カスタム コントロールのボタンがクリックされたときによく使用されます。|  
|<xref:System.Web.UI.WebControls.ListView.ItemCreated>|新しい項目が作成されたときに発生、<xref:System.Web.UI.WebControls.ListView>コントロール。 このイベントは、項目が作成されたときに、項目のコンテンツを変更するよく使用されます。|  
|<xref:System.Web.UI.WebControls.ListView.ItemDataBound>|データ項目がデータにバインドされているときに発生、<xref:System.Web.UI.WebControls.ListView>コントロール。 このイベントは、項目がデータにバインドされている場合、項目のコンテンツを変更するのによく使用されます。|  
|<xref:System.Web.UI.WebControls.ListView.ItemDeleted>|[削除] ボタンのときに発生 (ボタンがその`CommandName`プロパティが"Delete"に設定) がクリックされたまたは<xref:System.Web.UI.WebControls.ListView.DeleteItem%2A>メソッドは、後、<xref:System.Web.UI.WebControls.ListView>コントロールがデータ ソースからレコードを削除します。 このイベントは、削除操作の結果の確認によく使用されます。|  
|<xref:System.Web.UI.WebControls.ListView.ItemDeleting>|[削除] ボタンのときに発生 (ボタンがその`CommandName`プロパティが"Delete"に設定) がクリックされたまたは<xref:System.Web.UI.WebControls.ListView.DeleteItem%2A>メソッドを呼び出す前に、<xref:System.Web.UI.WebControls.ListView>コントロールがデータ ソースからレコードを削除します。 このイベントを確認したり、削除操作を取り消して、よく使用されます。|  
|<xref:System.Web.UI.WebControls.ListView.ItemEditing>|[編集] ボタンのときに発生 (ボタンをその`CommandName`プロパティが"Edit"に設定) は、クリックすると、その前に、<xref:System.Web.UI.WebControls.ListView>コントロールが編集モードになります。 このイベントは、編集操作を取り消すよく使用されます。|  
|<xref:System.Web.UI.WebControls.ListView.ItemInserted>|挿入ボタンときに発生 (ボタンをその`CommandName`プロパティを"Insert"に設定) がクリックされたまたは<xref:System.Web.UI.WebControls.ListView.InsertNewItem%2A>メソッドは、後、<xref:System.Web.UI.WebControls.ListView>コントロールがデータ ソースから、新しいレコードを挿入します。 このイベントは、挿入操作の結果の確認によく使用されます。|  
|<xref:System.Web.UI.WebControls.ListView.ItemInserting>|挿入ボタンときに発生 (ボタンがその`CommandName`プロパティを"Insert"に設定) がクリックされたまたは<xref:System.Web.UI.WebControls.ListView.InsertNewItem%2A>メソッドを呼び出す前に、<xref:System.Web.UI.WebControls.ListView>コントロールは、レコードを挿入します。 このイベントは、挿入操作を取り消して、変更したり、新しい項目の値を検証によく使用されます。|  
|<xref:System.Web.UI.WebControls.ListView.ItemUpdated>|場合に更新 ボタン (ボタンをその`CommandName`プロパティが「更新」に設定) がクリックされたまたは<xref:System.Web.UI.WebControls.ListView.UpdateItem%2A>メソッドは、後、<xref:System.Web.UI.WebControls.ListView>コントロールは、レコードを更新します。 このイベントは、更新操作の結果の確認によく使用されます。|  
|<xref:System.Web.UI.WebControls.ListView.ItemUpdating>|更新ボタンときに発生 (ボタンがその`CommandName`プロパティが「更新」に設定) がクリックされたまたは<xref:System.Web.UI.WebControls.ListView.UpdateItem%2A>メソッドを呼び出す前に、<xref:System.Web.UI.WebControls.ListView>コントロールは、レコードを更新します。 このイベントは更新操作をキャンセルを変更したり、編集された項目の値の検証によく使用されます。|  
|<xref:System.Web.UI.WebControls.ListView.LayoutCreated>|発生したときに、<xref:System.Web.UI.WebControls.ListView.LayoutTemplate%2A>でテンプレートを作成、<xref:System.Web.UI.WebControls.ListView>コントロール。 このイベントは、テンプレートを作成したら、タスクを実行する多くの場合、使用します。|  
|<xref:System.Web.UI.WebControls.ListView.PagePropertiesChanged>|ページのプロパティを変更したら、後に発生する、<xref:System.Web.UI.WebControls.ListView>コントロールは、新しい値を設定します。|  
|<xref:System.Web.UI.WebControls.ListView.PagePropertiesChanging>|データ ページのプロパティを変更したら、その前に発生する、<xref:System.Web.UI.WebControls.ListView>コントロールは、新しい値を設定します。|  
|<xref:System.Web.UI.WebControls.ListView.SelectedIndexChanged>|[選択] ボタンのときに発生 (ボタンがその`CommandName`プロパティを"Select"に設定) がクリックされた後、<xref:System.Web.UI.WebControls.ListView>コントロールは、select 操作を処理します。 このイベントは、コントロールの項目を選択した後に、カスタム タスクを実行する多くの場合、使用します。|  
|<xref:System.Web.UI.WebControls.ListView.SelectedIndexChanging>|[選択] ボタンのときに発生 (ボタンがその`CommandName`プロパティを"Select"に設定) がクリックすると、その前に、<xref:System.Web.UI.WebControls.ListView>コントロールは、select 操作を処理します。 このイベントは、select 操作を取り消すよく使用されます。|  
|<xref:System.Web.UI.WebControls.ListView.Sorted>|並べ替えボタンときに発生 (ボタンがその`CommandName`プロパティを"Sort"に設定) がクリックされたまたは<xref:System.Web.UI.WebControls.ListView.Sort%2A>メソッドは、後、<xref:System.Web.UI.WebControls.ListView>コントロールは、並べ替え操作を処理します。 このイベントは通常、並べ替えボタンをクリックし、データが並べ替えられている後に、カスタム タスクを実行に使用されます。|  
|<xref:System.Web.UI.WebControls.ListView.Sorting>|並べ替えボタンときに発生 (ボタンがその`CommandName`プロパティを"Sort"に設定) がクリックされたまたは<xref:System.Web.UI.WebControls.ListView.Sort%2A>メソッドを呼び出す前に、<xref:System.Web.UI.WebControls.ListView>コントロールは、並べ替え操作を処理します。 このイベントは、並べ替え操作を取り消すまたはカスタムの並べ替えルーチンを実行するによく使用されます。|  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>宣言型の構文  
  
```  
<asp:ListView  
    ConvertEmptyStringToNull="True|False"  
    DataKeyNames="string"  
    DataMember="string"  
    DataSource="string"  
    DataSourceID="string"  
    EditIndex="integer"  
    Enabled="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    GroupPlaceholderID="string"  
    GroupItemCount="integer"  
    ID="string"  
    InsertItemPosition="None|FirstItem|LastItem"  
    ItemPlaceholderID="string"  
    OnDataBinding="DataBinding event handler"  
    OnDataBound="DataBound event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnItemCanceling="ItemCanceling event handler"  
    OnItemCommand="ItemCommand event handler"  
    OnItemCreated="ItemCreated event handler"  
    OnItemDataBound="ItemDataBound event handler"  
    OnItemDeleted="ItemDeleted event handler"  
    OnItemDeleting="ItemDeleting event handler"  
    OnItemEditing="ItemEditing event handler"  
    OnItemInserted="ItemInserted event handler"  
    OnItemInserting="ItemInserting event handler"  
    OnItemUpdated="ItemUpdated event handler"  
    OnItemUpdating="ItemUpdating event handler"  
    OnLayoutCreated="LayoutCreated event handler"  
    OnLoad="Load event handler"  
    OnPagePropertiesChanged="PagePropertiesChanged event handler"  
    OnPagePropertiesChanging="PagePropertiesChanging event handler"  
    OnPreRender="PreRender event handler"  
    OnSelectedIndexChanged="SelectedIndexChanged event handler"  
    OnSelectedIndexChanging="SelectedIndexChanging event handler"  
    OnSorted="Sorted event handler"  
    OnSorting="Sorting event handler"  
    OnUnload="Unload event handler"  
    runat="server"  
    SelectedIndex="integer"  
    SkinID="string"  
    Style="string"  
    Visible="True|False"  
>  
        <AlternatingItemTemplate>  
            <!-- child controls -->  
        </AlternatingItemTemplate>  
        <EditItemTemplate>  
            <!-- child controls -->  
        </EditItemTemplate>  
        <EmptyDataTemplate>  
            <!-- child controls -->  
        </EmptyDataTemplate>  
        <EmptyItemTemplate>  
            <!-- child controls -->  
        </EmptyItemTemplate>  
        <GroupSeparatorTemplate>  
            <!-- child controls -->  
        </GroupSeparatorTemplate>  
        <GroupTemplate>  
            <!-- child controls -->  
        </GroupTemplate>  
        <InsertItemTemplate>  
            <!-- child controls -->  
        </InsertItemTemplate>  
        <ItemSeparatorTemplate>  
            <!-- child controls -->  
        </ItemSeparatorTemplate>  
        <ItemTemplate>  
            <!-- child controls -->  
        </ItemTemplate>  
        <LayoutTemplate>  
                <!-- child controls -->  
        </LayoutTemplate>  
        <SelectedItemTemplate>  
            <!-- child controls -->  
        </SelectedItemTemplate>  
</asp:ListView>  
```  
  
   
  
## Examples  
 次の例を使用する方法を示しています、 <xref:System.Web.UI.WebControls.ListView> HTML テーブルを使用してデータベースからレコードを表示するコントロール。 使用して、値が取得されます、<xref:System.Web.UI.WebControls.LinqDataSource>コントロール。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListView_Simple#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView_Simple/CS/ListViewSimpleCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView_Simple#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView_Simple/VB/ListViewSimpleVB.aspx#1)]
  
 次の例を使用する方法を示しています、<xref:System.Web.UI.WebControls.ListView>を使用して、フロー レイアウト内で値を表示するコントロールを`div`要素。 使用して、値が取得されます、<xref:System.Web.UI.WebControls.SqlDataSource>コントロール。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListView_FlowLayout#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView_FlowLayout/CS/ListViewFlowLayoutCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView_FlowLayout#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView_FlowLayout/VB/ListViewFlowLayoutVB.aspx#1)]
  
 次の例を使用する方法を示しています、<xref:System.Web.UI.WebControls.ListView>コントロールを挿入、削除、およびレコードを更新します。  
  
> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、次を参照してください。[スクリプト悪用概要](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)です。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListView_Edit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView_Edit/CS/ListViewEditCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView_Edit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView_Edit/VB/ListViewEditVB.aspx#1)]
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListView ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.ListView" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 新しいインスタンスを初期化するためにこのコンス トラクターを使用して、<xref:System.Web.UI.WebControls.ListView>クラスです。 動的に追加する、<xref:System.Web.UI.WebControls.ListView>ページにコントロールを新規作成<xref:System.Web.UI.WebControls.ListView>オブジェクト。 そのプロパティを設定し、それを追加、<xref:System.Web.UI.Control.Controls%2A?displayProperty=nameWithType>コンテナーのコレクションを制御するように、<xref:System.Web.UI.WebControls.PlaceHolder>コントロール。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessKey">
      <MemberSignature Language="C#" Value="public override string AccessKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AccessKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.AccessKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>上書き、<see cref="P:System.Web.UI.WebControls.WebControl.AccessKey" />プロパティです。 このプロパティの設定でサポートされていない、<see cref="T:System.Web.UI.WebControls.ListView" />コントロール。</summary>
        <value>
          <see cref="F:System.String.Empty" />、プロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 スタイル プロパティでサポートされていない、<xref:System.Web.UI.WebControls.ListView>コントロール。 設定を試行した場合、 <xref:System.Web.UI.WebControls.ListView.AccessKey%2A> 、プロパティ、<xref:System.NotSupportedException>例外がスローされます。 プロパティを取得する場合は、基本クラスの対応するプロパティの既定値を返します。  
  
 スタイルを<xref:System.Web.UI.WebControls.ListView>コントロール、内のコントロールのスタイルする必要があります、<xref:System.Web.UI.WebControls.ListView>連鎖を使用してテンプレートのスタイル シート (CSS) クラスまたはインライン スタイル要素。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">設定しようとしましたが、<see cref="P:System.Web.UI.WebControls.ListView.AccessKey" />プロパティです。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddControlToContainer">
      <MemberSignature Language="C#" Value="protected virtual void AddControlToContainer (System.Web.UI.Control control, System.Web.UI.Control container, int addLocation);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AddControlToContainer(class System.Web.UI.Control control, class System.Web.UI.Control container, int32 addLocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.AddControlToContainer(System.Web.UI.Control,System.Web.UI.Control,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="container" Type="System.Web.UI.Control" />
        <Parameter Name="addLocation" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="control">コンテナーに追加するコントロールを含むオブジェクトです。</param>
        <param name="container">子コントロールを格納するために使用されるコンテナー。</param>
        <param name="addLocation">コレクション内のコントロールに子コントロールを追加する場所です。</param>
        <summary>指定されたコンテナーに指定されたコントロールを追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListView.AddControlToContainer%2A>メソッドが呼び出されるヘルパー メソッド、<xref:System.Web.UI.WebControls.ListView>コントロールを指定されたコンテナーにコントロールを追加します。  
  
> [!NOTE]
>  このメソッドが拡張するコントロールの開発者によって使用、主に、<xref:System.Web.UI.WebControls.ListView>コントロール。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AlternatingItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate AlternatingItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate AlternatingItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.AlternatingItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.ListViewDataItem), System.ComponentModel.BindingDirection.TwoWay)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定のカスタム コンテンツの代替のデータ項目を<see cref="T:System.Web.UI.WebControls.ListView" />コントロール。</summary>
        <value>代替のデータ項目のカスタム コンテンツを格納しているオブジェクト、<see cref="T:System.Web.UI.WebControls.ListView" />コントロール。 既定値は <see langword="null" /> です。このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.ListView.AlternatingItemTemplate%2A>代替のデータ項目のカスタム ユーザー インターフェイス (UI) を定義するプロパティです。 <xref:System.Web.UI.WebControls.ListView.AlternatingItemTemplate%2A>テンプレートには通常、同じコントロールととしての内容が含まれています、<xref:System.Web.UI.WebControls.ListView.ItemTemplate%2A>項目と区別するために異なる外観ですが、テンプレート。  
  
 カスタム テンプレートを宣言によって指定するには追加、`AlternatingItemTemplate`内の要素、<xref:System.Web.UI.WebControls.ListView>コントロール。 コントロールと開始タグと終了の間のコンテンツを追加し、`<AlternatingItemTemplate>`タグ。 データ ソースのフィールド値を表示するには、データ バインディング式を使用します。 詳細については、次を参照してください。[データ バインド式の概要](http://msdn.microsoft.com/library/14cdd57d-0f82-4667-b503-73e1a96f136a)です。  
  
 自動的に選択し、削除、および、操作を編集するボタンを作成するには、テンプレートにボタン コントロールを追加します。 設定の<xref:System.Web.UI.WebControls.Button.CommandName%2A>プロパティに値のいずれかが次の表に一覧表示します。  
  
|[ボタンの種類]|CommandName 値|  
|-----------------|-----------------------|  
|削除|"削除"|  
|編集|"Edit"|  
|選択|"Select"|  
  
   
  
## Examples  
 次の例を使用する方法を示しています、<xref:System.Web.UI.WebControls.ListView.AlternatingItemTemplate%2A>の代替データ項目にスタイルを定義するテンプレート、<xref:System.Web.UI.WebControls.ListView>コントロール。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.AlternatingItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.AlternatingItemTemplate/CS/ListViewAlternatingItemTemplateCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.AlternatingItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.AlternatingItemTemplate/VB/ListViewAlternatingItemTemplateVB.aspx#1)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color BackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.BackColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>上書き、<see cref="P:System.Web.UI.WebControls.WebControl.BackColor" />プロパティです。 このプロパティの設定でサポートされていない、<see cref="T:System.Web.UI.WebControls.ListView" />コントロール。</summary>
        <value>
          <see cref="F:System.Drawing.Color.Empty" />、プロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 スタイル プロパティでサポートされていない、<xref:System.Web.UI.WebControls.ListView>コントロール。 設定を試行した場合、 <xref:System.Web.UI.WebControls.ListView.BackColor%2A> 、プロパティ、<xref:System.NotSupportedException>例外がスローされます。 プロパティを取得する場合は、基本クラスの対応するプロパティの既定値を返します。  
  
 スタイルを<xref:System.Web.UI.WebControls.ListView>コントロール、内のコントロールのスタイルする必要があります、<xref:System.Web.UI.WebControls.ListView>連鎖を使用してテンプレートのスタイル シート (CSS) クラスまたはインライン スタイル要素。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">設定しようとしましたが、<see cref="P:System.Web.UI.WebControls.ListView.BackColor" />プロパティです。</exception>
      </Docs>
    </Member>
    <Member MemberName="BorderColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color BorderColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BorderColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.BorderColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>上書き、<see cref="P:System.Web.UI.WebControls.WebControl.BorderColor" />プロパティです。 このプロパティの設定でサポートされていない、<see cref="T:System.Web.UI.WebControls.ListView" />コントロール。</summary>
        <value>
          <see cref="F:System.Drawing.Color.Empty" />、プロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 スタイル プロパティでサポートされていない、<xref:System.Web.UI.WebControls.ListView>コントロール。 設定を試行した場合、 <xref:System.Web.UI.WebControls.ListView.BorderColor%2A> 、プロパティ、<xref:System.NotSupportedException>例外がスローされます。 プロパティを取得する場合は、基本クラスの対応するプロパティの既定値を返します。  
  
 スタイルを<xref:System.Web.UI.WebControls.ListView>コントロール、内のコントロールのスタイルする必要があります、<xref:System.Web.UI.WebControls.ListView>連鎖を使用してテンプレートのスタイル シート (CSS) クラスまたはインライン スタイル要素。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">設定しようとしましたが、<see cref="P:System.Web.UI.WebControls.ListView.BorderColor" />プロパティです。</exception>
      </Docs>
    </Member>
    <Member MemberName="BorderStyle">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.BorderStyle BorderStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.BorderStyle BorderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.BorderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.BorderStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>上書き、<see cref="P:System.Web.UI.WebControls.WebControl.BorderStyle" />プロパティです。 このプロパティの設定でサポートされていない、<see cref="T:System.Web.UI.WebControls.ListView" />コントロール。</summary>
        <value>
          <see cref="F:System.Web.UI.WebControls.BorderStyle.NotSet" />、プロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 スタイル プロパティでサポートされていない、<xref:System.Web.UI.WebControls.ListView>コントロール。 設定を試行した場合、 <xref:System.Web.UI.WebControls.ListView.BorderStyle%2A> 、プロパティ、<xref:System.NotSupportedException>例外がスローされます。 プロパティを取得する場合は、基本クラスの対応するプロパティの既定値を返します。  
  
 スタイルを<xref:System.Web.UI.WebControls.ListView>コントロール、内のコントロールのスタイルする必要があります、<xref:System.Web.UI.WebControls.ListView>連鎖を使用してテンプレートのスタイル シート (CSS) クラスまたはインライン スタイル要素。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">設定しようとしましたが、<see cref="P:System.Web.UI.WebControls.ListView.BorderStyle" />プロパティです。</exception>
      </Docs>
    </Member>
    <Member MemberName="BorderWidth">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.Unit BorderWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Unit BorderWidth" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.BorderWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Unit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>上書き、<see cref="P:System.Web.UI.WebControls.WebControl.BorderWidth" />プロパティです。 このプロパティの設定でサポートされていない、<see cref="T:System.Web.UI.WebControls.ListView" />コントロール。</summary>
        <value>
          <see cref="F:System.Web.UI.WebControls.Unit.Empty" />、このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 スタイル プロパティでサポートされていない、<xref:System.Web.UI.WebControls.ListView>コントロール。 設定を試行した場合、 <xref:System.Web.UI.WebControls.ListView.BorderWidth%2A> 、プロパティ、<xref:System.NotSupportedException>例外がスローされます。 プロパティを取得する場合は、基本クラスの対応するプロパティの既定値を返します。  
  
 スタイルを<xref:System.Web.UI.WebControls.ListView>コントロール、内のコントロールのスタイルする必要があります、<xref:System.Web.UI.WebControls.ListView>連鎖を使用してテンプレートのスタイル シート (CSS) クラスまたはインライン スタイル要素。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">設定しようとしましたが、<see cref="P:System.Web.UI.WebControls.ListView.BorderWidth" />プロパティです。</exception>
      </Docs>
    </Member>
    <Member MemberName="ClientIDRowSuffix">
      <MemberSignature Language="C#" Value="public virtual string[] ClientIDRowSuffix { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] ClientIDRowSuffix" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.ClientIDRowSuffix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.StringArrayConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.WebCategory("Data")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の各データ行を一意に識別する値が使用されるデータ フィールドの名前、<see cref="T:System.Web.UI.WebControls.ListView" />タイミングを制御、<see cref="P:System.Web.UI.Control.ClientIDMode" />プロパティに設定されている<see cref="F:System.Web.UI.ClientIDMode.Predictable" />です。</summary>
        <value>各インスタンスを一意に識別する値が使用されるデータ フィールドの名前、 <see cref="T:System.Web.UI.WebControls.ListView" /> ASP.NET が生成するときの制御、<see cref="P:System.Web.UI.Control.ClientID" />値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 防ぐために、コントロールの複数のインスタンスが複数の行に表示される場合に名前付けの競合、<xref:System.Web.UI.WebControls.ListView>コントロール、ASP.NET を生成する一意<xref:System.Web.UI.Control.ClientID%2A>コントロールの各インスタンスの値。 指定する方法、<xref:System.Web.UI.Control.ClientID%2A>設定によって値が生成された、<xref:System.Web.UI.Control.ClientIDMode%2A>プロパティです。 設定した場合、<xref:System.Web.UI.Control.ClientIDMode%2A>プロパティを<xref:System.Web.UI.ClientIDMode.Predictable>、ASP.NET によって生成される、<xref:System.Web.UI.Control.ClientID%2A>で指定されたデータ フィールドから派生したサフィックスを付加した<xref:System.Web.UI.WebControls.GridView.ClientIDRowSuffix%2A>です。 場合<xref:System.Web.UI.WebControls.GridView.ClientIDRowSuffix%2A>が設定されていない、サフィックスにシーケンス番号。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientIDRowSuffixDataKeys">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.DataKeyArray ClientIDRowSuffixDataKeys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataKeyArray ClientIDRowSuffixDataKeys" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.ClientIDRowSuffixDataKeys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataKeyArray</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ASP.NET によって生成されるときに、データ バインド コントロールの各インスタンスを一意に識別するために使用するデータ値を取得、<see cref="P:System.Web.UI.Control.ClientID" />値。</summary>
        <value>ASP.NET によって生成されるときに、データ バインド コントロールの各インスタンスを一意に識別するために使用されるデータ値、<see cref="P:System.Web.UI.Control.ClientID" />値。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Controls">
      <MemberSignature Language="C#" Value="public override System.Web.UI.ControlCollection Controls { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ControlCollection Controls" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.Controls" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得、<see cref="T:System.Web.UI.ControlCollection" />の子を表すオブジェクトを制御、<see cref="T:System.Web.UI.WebControls.ListView" />コントロール。</summary>
        <value>子コントロールのコレクション、<see cref="T:System.Web.UI.WebControls.ListView" />コントロール。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListView.Controls%2A>プロパティは、基本実装をオーバーライドします。 これにより、プロパティから返される前にすべての子コントロールが作成されている、<xref:System.Web.UI.ControlCollection>オブジェクト。  
  
 <xref:System.Web.UI.Control.Controls%2A>プロパティでは、プログラムでのインスタンスにアクセスすることができます、<xref:System.Web.UI.ControlCollection>のクラス、<xref:System.Web.UI.WebControls.ListView>コントロール。 コレクションにコントロールを追加、コントロールをコレクションから削除、またはコレクション内のサーバー コントロールを反復処理することができます。  
  
 特定の子コントロールにアクセスする、<xref:System.Web.UI.WebControls.ListView>制御を行うこともできます、<xref:System.Web.UI.Control.FindControl%2A>メソッドです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertEmptyStringToNull">
      <MemberSignature Language="C#" Value="public virtual bool ConvertEmptyStringToNull { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ConvertEmptyStringToNull" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.ConvertEmptyStringToNull" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データ ソースのデータ フィールドを更新するときに、空の文字列値 ("") を null 値に自動的に変換するかどうかを示す値を取得または設定します。</summary>
        <value>
          空の文字列値を null 値に自動的に変換する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Parameter>データ ソースのオブジェクトを制御する、<xref:System.Web.UI.WebControls.ListView>コントロールもという名前のプロパティにバインドする<xref:System.Web.UI.WebControls.Parameter.ConvertEmptyStringToNull%2A?displayProperty=nameWithType>です。 このプロパティは、同じ関数を実行します。 両方のプロパティを適切に設定することを確認します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateChildControls">
      <MemberSignature Language="C#" Value="protected override void CreateChildControls ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void CreateChildControls() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.CreateChildControls" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>表示するために使用されるコントロールの階層構造を作成、<see cref="T:System.Web.UI.WebControls.ListView" />ビュー ステートに格納されている値に基づくコントロールです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListView.CreateChildControls>メソッドで使用されるヘルパー メソッド、<xref:System.Web.UI.WebControls.ListView>コントロールの階層構造を作成するクラス。 このメソッドのオーバー ロードでは、データ ソースから直接の代わりにビュー ステートの値に基づくコントロールの階層を作成します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateChildControls">
      <MemberSignature Language="C#" Value="protected virtual int CreateChildControls (System.Collections.IEnumerable dataSource, bool dataBinding);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 CreateChildControls(class System.Collections.IEnumerable dataSource, bool dataBinding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.CreateChildControls(System.Collections.IEnumerable,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Collections.IEnumerable" />
        <Parameter Name="dataBinding" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="dataSource">データ ソースを格納しているオブジェクト、<see cref="T:System.Web.UI.WebControls.ListView" />コントロール。</param>
        <param name="dataBinding">
          <see langword="true" />子コントロールがデータにバインドされているを示すために<see langword="false" />をポストバック時にコントロールが状態の表示から自身を再作成するかを示します。</param>
        <summary>表示するために使用されるコントロールの階層構造を作成、<see cref="T:System.Web.UI.WebControls.ListView" />指定されたデータ ソースを使用して制御します。</summary>
        <returns>作成されたアイテムの数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListView.CreateChildControls%2A>のコントロールの階層構造を作成するメソッドが使用される、<xref:System.Web.UI.WebControls.ListView>コントロール。  
  
> [!NOTE]
>  このメソッドが拡張するコントロールの開発者によって使用、主に、<xref:System.Web.UI.WebControls.ListView>コントロール。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="dataSource" />返します<see langword="null" />の<see cref="T:System.Web.UI.DataSourceView" />します。  
  
 または  
  
 <paramref name="dataSource" />実装していません、<see cref="T:System.Collections.ICollection" />インターフェイスし、返すことはできません、<see cref="P:System.Web.UI.DataSourceSelectArguments.TotalRowCount" />値。  
  
 または  
  
 <paramref name="dataSource" />実装していません、<see cref="T:System.Collections.ICollection" />インターフェイスと<paramref name="dataBinding" />に設定されている<see langword="false" />です。  
  
 または  
  
 <see cref="T:System.Web.UI.WebControls.ListView" />コントロールには、指定されたグループ プレース ホルダーはありません。  
  
 または  
  
 <see cref="T:System.Web.UI.WebControls.ListView" />コントロールには、指定された項目プレース ホルダーはありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateControlStyle">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.Style CreateControlStyle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.Style CreateControlStyle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.CreateControlStyle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>コントロールの既定のスタイルを作成します。</summary>
        <returns>スタイル、<see cref="T:System.Web.UI.WebControls.ListView" />コントロール。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 スタイル プロパティでサポートされていない、<xref:System.Web.UI.WebControls.ListView>コントロール。 呼び出すしようとすると、 <xref:System.Web.UI.WebControls.ListView.CreateControlStyle%2A> 、メソッド、<xref:System.NotSupportedException>例外がスローされます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">起動しようとしましたが、<see cref="M:System.Web.UI.WebControls.ListView.CreateControlStyle" />メソッドです。</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateDataItem">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.ListViewDataItem CreateDataItem (int dataItemIndex, int displayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.ListViewDataItem CreateDataItem(int32 dataItemIndex, int32 displayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.CreateDataItem(System.Int32,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ListViewDataItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataItemIndex" Type="System.Int32" />
        <Parameter Name="displayIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dataItemIndex">ソース オブジェクトの基になるデータ内のデータ項目のインデックス。</param>
        <param name="displayIndex">内のデータ項目の表示インデックス、<see cref="T:System.Web.UI.WebControls.ListView" />コントロール。</param>
        <summary>内のデータ項目を作成、<see cref="T:System.Web.UI.WebControls.ListView" />コントロール。</summary>
        <returns>指定されたパラメーターを使用して作成されたデータ アイテムです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドが拡張するコントロールの開発者によって使用、主に、<xref:System.Web.UI.WebControls.ListView>コントロール。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDataSourceSelectArguments">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.DataSourceSelectArguments CreateDataSourceSelectArguments ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.DataSourceSelectArguments CreateDataSourceSelectArguments() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.CreateDataSourceSelectArguments" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceSelectArguments</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>作成、<see cref="T:System.Web.UI.DataSourceSelectArguments" />データ ソースに渡される引数を格納するオブジェクト。</summary>
        <returns>データ ソースに渡される引数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListView.CreateDataSourceSelectArguments%2A>メソッドが呼び出されるヘルパー メソッド、<xref:System.Web.UI.WebControls.ListView>コントロール。 この実装では、<xref:System.Web.UI.DataSourceSelectArguments>オブジェクトには、ページング操作の引数が含まれています。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>拡張すると、<see cref="T:System.Web.UI.WebControls.ListView" />クラスでは、このメソッドをオーバーライドして、データ ソースに渡されるカスタム値を指定します。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="CreateEmptyDataItem">
      <MemberSignature Language="C#" Value="protected virtual void CreateEmptyDataItem ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void CreateEmptyDataItem() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.CreateEmptyDataItem" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>作成、<see cref="P:System.Web.UI.WebControls.ListView.EmptyDataTemplate" />でテンプレート、<see cref="T:System.Web.UI.WebControls.ListView" />コントロール。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListView.CreateEmptyDataItem%2A>メソッドが呼び出されるヘルパー メソッド、<xref:System.Web.UI.WebControls.ListView>コントロールを作成、<xref:System.Web.UI.WebControls.ListView.EmptyDataTemplate%2A>テンプレート。 データ ソースにレコードが返されない場合は、空のデータ テンプレートが表示されます。  
  
> [!NOTE]
>  このメソッドが拡張するコントロールの開発者によって使用、主に、<xref:System.Web.UI.WebControls.ListView>コントロール。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateEmptyItem">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.ListViewItem CreateEmptyItem ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.ListViewItem CreateEmptyItem() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.CreateEmptyItem" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>空の項目を作成、<see cref="T:System.Web.UI.WebControls.ListView" />コントロール。</summary>
        <returns>作成された空の項目。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListView.CreateEmptyItem%2A>メソッドが呼び出されるヘルパー メソッド、<xref:System.Web.UI.WebControls.ListView>空の項目を作成するコントロール。 空のアイテムを表示するときに内のデータのページの最後のグループ、<xref:System.Web.UI.WebControls.ListView>コントロールに表示する複数のレコードがありません。  
  
> [!NOTE]
>  このメソッドが拡張するコントロールの開発者によって使用、主に、<xref:System.Web.UI.WebControls.ListView>コントロール。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInsertItem">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.ListViewItem CreateInsertItem ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.ListViewItem CreateInsertItem() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.CreateInsertItem" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Insert のアイテムを作成、<see cref="T:System.Web.UI.WebControls.ListView" />コントロール。</summary>
        <returns>作成された挿入項目。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListView.CreateInsertItem%2A>メソッドが呼び出されるヘルパー メソッド、<xref:System.Web.UI.WebControls.ListView>挿入項目を作成するコントロール。 挿入項目は、<xref:System.Web.UI.WebControls.ListViewItem>オブジェクト<xref:System.Web.UI.WebControls.ListViewItem.ItemType%2A>と等しい<xref:System.Web.UI.WebControls.ListViewItemType?displayProperty=nameWithType>です。  
  
> [!NOTE]
>  このメソッドが拡張するコントロールの開発者によって使用、主に、<xref:System.Web.UI.WebControls.ListView>コントロール。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Web.UI.WebControls.ListView" />コントロールはありません、<see cref="P:System.Web.UI.WebControls.ListView.InsertItemTemplate" />テンプレートを指定します。</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateItem">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.ListViewItem CreateItem (System.Web.UI.WebControls.ListViewItemType itemType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.ListViewItem CreateItem(valuetype System.Web.UI.WebControls.ListViewItemType itemType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.CreateItem(System.Web.UI.WebControls.ListViewItemType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.Web.UI.WebControls.ListViewItemType" />
      </Parameters>
      <Docs>
        <param name="itemType"><see cref="T:System.Web.UI.WebControls.ListViewItemType" /> 値のいずれか。</param>
        <summary>作成、<see cref="T:System.Web.UI.WebControls.ListViewItem" />の指定した型のオブジェクト。</summary>
        <returns>A<see cref="T:System.Web.UI.WebControls.ListViewItem" />の指定した型のオブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListView.CreateItem%2A>メソッドが呼び出されるヘルパー メソッド、<xref:System.Web.UI.WebControls.ListView>コントロールを作成、<xref:System.Web.UI.WebControls.ListViewItem>オブジェクト。  
  
> [!NOTE]
>  このメソッドが拡張するコントロールの開発者によって使用、主に、<xref:System.Web.UI.WebControls.ListView>コントロール。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateItemsInGroups">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IList&lt;System.Web.UI.WebControls.ListViewDataItem&gt; CreateItemsInGroups (System.Web.UI.WebControls.ListViewPagedDataSource dataSource, bool dataBinding, System.Web.UI.WebControls.InsertItemPosition insertPosition, System.Collections.ArrayList keyArray);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class System.Web.UI.WebControls.ListViewDataItem&gt; CreateItemsInGroups(class System.Web.UI.WebControls.ListViewPagedDataSource dataSource, bool dataBinding, valuetype System.Web.UI.WebControls.InsertItemPosition insertPosition, class System.Collections.ArrayList keyArray) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.CreateItemsInGroups(System.Web.UI.WebControls.ListViewPagedDataSource,System.Boolean,System.Web.UI.WebControls.InsertItemPosition,System.Collections.ArrayList)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Web.UI.WebControls.ListViewDataItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Web.UI.WebControls.ListViewPagedDataSource" />
        <Parameter Name="dataBinding" Type="System.Boolean" />
        <Parameter Name="insertPosition" Type="System.Web.UI.WebControls.InsertItemPosition" />
        <Parameter Name="keyArray" Type="System.Collections.ArrayList" />
      </Parameters>
      <Docs>
        <param name="dataSource">データ ソース。</param>
        <param name="dataBinding">
          <see langword="true" />示す、<see cref="T:System.Web.UI.WebControls.ListView" />コントロールは、それ以外のデータにバインドされていない<see langword="false" />です。</param>
        <param name="insertPosition"><see cref="T:System.Web.UI.WebControls.InsertItemPosition" /> 値のいずれか。</param>
        <param name="keyArray">配列内の各項目のデータ キーの値を表す、<see cref="T:System.Web.UI.WebControls.ListView" />コントロール。</param>
        <summary>作成、<see cref="T:System.Web.UI.WebControls.ListView" />グループ内の階層を制御します。</summary>
        <returns>内のデータの現在のページのすべてのデータ項目を格納しているオブジェクト、<see cref="T:System.Web.UI.WebControls.ListView" />コントロール。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListView.CreateItemsInGroups%2A>のコントロールの階層構造を作成するメソッドが使用される、<xref:System.Web.UI.WebControls.ListView>グループ内のコントロールです。 このメソッドを使用して、<xref:System.Web.UI.WebControls.ListView>制御される場合にのみ、<xref:System.Web.UI.WebControls.ListView.GroupTemplate%2A>と<xref:System.Web.UI.WebControls.ListView.GroupItemCount%2A>プロパティが定義されています。  
  
> [!NOTE]
>  このメソッドが拡張するコントロールの開発者によって使用、主に、<xref:System.Web.UI.WebControls.ListView>コントロール。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Web.UI.WebControls.ListView" />コントロールには、指定された項目プレース ホルダーはありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateItemsWithoutGroups">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IList&lt;System.Web.UI.WebControls.ListViewDataItem&gt; CreateItemsWithoutGroups (System.Web.UI.WebControls.ListViewPagedDataSource dataSource, bool dataBinding, System.Web.UI.WebControls.InsertItemPosition insertPosition, System.Collections.ArrayList keyArray);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class System.Web.UI.WebControls.ListViewDataItem&gt; CreateItemsWithoutGroups(class System.Web.UI.WebControls.ListViewPagedDataSource dataSource, bool dataBinding, valuetype System.Web.UI.WebControls.InsertItemPosition insertPosition, class System.Collections.ArrayList keyArray) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.CreateItemsWithoutGroups(System.Web.UI.WebControls.ListViewPagedDataSource,System.Boolean,System.Web.UI.WebControls.InsertItemPosition,System.Collections.ArrayList)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Web.UI.WebControls.ListViewDataItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Web.UI.WebControls.ListViewPagedDataSource" />
        <Parameter Name="dataBinding" Type="System.Boolean" />
        <Parameter Name="insertPosition" Type="System.Web.UI.WebControls.InsertItemPosition" />
        <Parameter Name="keyArray" Type="System.Collections.ArrayList" />
      </Parameters>
      <Docs>
        <param name="dataSource">データ ソース。</param>
        <param name="dataBinding">
          <see langword="true" />示す、<see cref="T:System.Web.UI.WebControls.ListView" />コントロールは、それ以外のデータにバインドされていない<see langword="false" />です。</param>
        <param name="insertPosition"><see cref="T:System.Web.UI.WebControls.InsertItemPosition" /> 値のいずれか。</param>
        <param name="keyArray">配列内の各項目のデータ キーの値を表す、<see cref="T:System.Web.UI.WebControls.ListView" />コントロール。</param>
        <summary>作成、<see cref="T:System.Web.UI.WebControls.ListView" />階層グループがない場合を制御します。</summary>
        <returns>内のデータの現在のページのすべてのデータ項目を格納しているオブジェクト、<see cref="T:System.Web.UI.WebControls.ListView" />コントロール。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListView.CreateItemsWithoutGroups%2A>のコントロールの階層構造を作成するメソッドが使用される、<xref:System.Web.UI.WebControls.ListView>コントロール。 このメソッドを使用して、<xref:System.Web.UI.WebControls.ListView>制御される場合にのみ、<xref:System.Web.UI.WebControls.ListView.GroupTemplate%2A>プロパティが定義されていません。  
  
> [!NOTE]
>  このメソッドが拡張するコントロールの開発者によって使用、主に、<xref:System.Web.UI.WebControls.ListView>コントロール。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateLayoutTemplate">
      <MemberSignature Language="C#" Value="protected virtual void CreateLayoutTemplate ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void CreateLayoutTemplate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.CreateLayoutTemplate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ルート コンテナーを作成、<see cref="T:System.Web.UI.WebControls.ListView" />コントロール。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListView.CreateLayoutTemplate%2A>でルート コンテナーを作成するために使用するヘルパー メソッドです、<xref:System.Web.UI.WebControls.ListView>コントロール。 コンテナーの内容によって定義されます、<xref:System.Web.UI.WebControls.ListView.LayoutTemplate%2A>プロパティです。  
  
> [!NOTE]
>  このメソッドが拡張するコントロールの開発者によって使用、主に、<xref:System.Web.UI.WebControls.ListView>コントロール。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSuffixArrayList">
      <MemberSignature Language="C#" Value="protected virtual void CreateSuffixArrayList (System.Web.UI.WebControls.ListViewPagedDataSource dataSource, System.Collections.ArrayList suffixArray);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void CreateSuffixArrayList(class System.Web.UI.WebControls.ListViewPagedDataSource dataSource, class System.Collections.ArrayList suffixArray) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.CreateSuffixArrayList(System.Web.UI.WebControls.ListViewPagedDataSource,System.Collections.ArrayList)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Web.UI.WebControls.ListViewPagedDataSource" />
        <Parameter Name="suffixArray" Type="System.Collections.ArrayList" />
      </Parameters>
      <Docs>
        <param name="dataSource">サフィックスの値を提供するデータ ソース。</param>
        <param name="suffixArray">サフィックスの配列。</param>
        <summary>生成時に使用する ASP.NET のサフィックスの配列を作成、<see cref="P:System.Web.UI.Control.ClientID" />値。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CssClass">
      <MemberSignature Language="C#" Value="public override string CssClass { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CssClass" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.CssClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.CssClassProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>上書き、<see cref="P:System.Web.UI.WebControls.WebControl.CssClass" />プロパティです。 このプロパティの設定でサポートされていない、<see cref="T:System.Web.UI.WebControls.ListView" />コントロール。</summary>
        <value>
          <see cref="F:System.String.Empty" />、このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 スタイル プロパティでサポートされていない、<xref:System.Web.UI.WebControls.ListView>コントロール。 設定を試行した場合、 <xref:System.Web.UI.WebControls.ListView.CssClass%2A> 、プロパティ、<xref:System.NotSupportedException>例外がスローされます。 プロパティを取得する場合は、基本クラスの対応するプロパティの既定値を返します。  
  
 スタイルを<xref:System.Web.UI.WebControls.ListView>コントロール、内のコントロールのスタイルする必要があります、<xref:System.Web.UI.WebControls.ListView>連鎖を使用してテンプレートのスタイル シート (CSS) クラスまたはインライン スタイル要素。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">設定しようとしましたが、<see cref="P:System.Web.UI.WebControls.ListView.CssClass" />プロパティです。</exception>
      </Docs>
    </Member>
    <Member MemberName="DataKeyNames">
      <MemberSignature Language="C#" Value="public virtual string[] DataKeyNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] DataKeyNames" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.DataKeyNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.DataFieldEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.StringArrayConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定に表示されるアイテムの主キー フィールドの名前を含む配列、<see cref="T:System.Web.UI.WebControls.ListView" />コントロール。</summary>
        <value>表示される項目のフィールドの主キーの名前を含む配列、<see cref="T:System.Web.UI.WebControls.ListView" />コントロール。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.ListView.DataKeyNames%2A>プロパティ、フィールドまたはデータ ソースの主キーを表すフィールドを指定します。 このプロパティを宣言して設定するには、フィールド名のコンマ区切りの一覧を使用します。  
  
 ときに、<xref:System.Web.UI.WebControls.ListView.DataKeyNames%2A>プロパティが設定されて、<xref:System.Web.UI.WebControls.ListView>コントロールを自動的に入力、<xref:System.Web.UI.WebControls.ListView.DataKeys%2A>指定フィールドまたはフィールドから値を持つコレクション。 これは、各項目のプライマリ キーにアクセスする便利な手段を提供します。  
  
> [!IMPORTANT]
>  <xref:System.Web.UI.WebControls.ListView>コントロールがコントロールの状態 フィールドにキー フィールドの値を格納します。 設定して、ビュー ステートの暗号化を有効にすることをお勧めこれらの値に機密情報が含まれている場合、<xref:System.Web.UI.Page.ViewStateEncryptionMode%2A>プロパティを`ViewStateEncryptionMode.Always`です。  
  
 設定する必要があります、<xref:System.Web.UI.WebControls.ListView.DataKeyNames%2A>プロパティの自動更新との機能を削除すると、<xref:System.Web.UI.WebControls.ListView>動作を制御します。 これらのキー フィールドの値は、更新または削除する項目を一致させるために、データ ソース コントロールに渡されます。  
  
 データとして指定されているフィールドのキーを使用して、<xref:System.Web.UI.WebControls.ListView.DataKeyNames%2A>プロパティが更新中に、データ ソース コントロールに渡され、削除の各操作を使用して、`Keys`コレクション。 データ キー フィールドは、テンプレート内のコントロールにバインドされていない場合でも、データ ソース コントロールに渡されます。  
  
   
  
## Examples  
 次の例を使用する方法を示しています、<xref:System.Web.UI.WebControls.ListView.DataKeyNames%2A>プロパティをデータ ソースのキー フィールドを指定します。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListViewItemCommand#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListViewItemCommand/CS/ListViewItemCommandCS.aspx#3)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListViewItemCommand#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListViewItemCommand/VB/ListViewItemCommandVB.aspx#3)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataKeys">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.DataKeyArray DataKeys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataKeyArray DataKeys" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.DataKeys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataKeyArray</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コレクションを取得<see cref="T:System.Web.UI.WebControls.DataKey" />内の各項目のデータ キーの値を表すオブジェクト、<see cref="T:System.Web.UI.WebControls.ListView" />コントロール。</summary>
        <value>内の各項目のデータ キーを格納しているオブジェクト、<see cref="T:System.Web.UI.WebControls.ListView" />コントロール。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ときに、<xref:System.Web.UI.WebControls.ListView.DataKeyNames%2A>プロパティが設定されて、<xref:System.Web.UI.WebControls.ListView>コントロールが自動的に作成、<xref:System.Web.UI.WebControls.DataKey>コントロール内の各項目のオブジェクト。 <xref:System.Web.UI.WebControls.DataKey>オブジェクトにはで指定されているフィールドの値が含まれています、<xref:System.Web.UI.WebControls.ListView.DataKeyNames%2A>プロパティです。 <xref:System.Web.UI.WebControls.DataKey>オブジェクトがコントロールの追加、<xref:System.Web.UI.WebControls.ListView.DataKeys%2A>コレクション。  
  
 使用して、<xref:System.Web.UI.WebControls.ListView.DataKeys%2A>取得するプロパティを<xref:System.Web.UI.WebControls.DataKey>オブジェクト内の特定のデータ項目に対して、<xref:System.Web.UI.WebControls.ListView>コントロール。  
  
 使用することができます、<xref:System.Web.UI.WebControls.ListView.SelectedDataKey%2A>取得するプロパティを<xref:System.Web.UI.WebControls.DataKey>現在選択されている項目のオブジェクト。 使用することも、<xref:System.Web.UI.WebControls.ListView.SelectedValue%2A>現在選択されている項目のデータ キーの値を直接取得するプロパティです。  
  
 使用することができます、<xref:System.Web.UI.WebControls.ListViewDataItem.DisplayIndex%2A?displayProperty=nameWithType>取得するプロパティを<xref:System.Web.UI.WebControls.DataKey>コマンド ボタンがクリックしてされました項目のオブジェクト。  
  
   
  
## Examples  
 次の例を使用する方法を示しています、<xref:System.Web.UI.WebControls.ListView.DataKeys%2A>内の項目のデータ キーの値を決定するプロパティ、<xref:System.Web.UI.WebControls.ListView>コントロール。 インデックスを使用して既定の動作ではなく、データ項目に基づくユーザーの選択を保持する方法も示しています。  
  
 [!code-csharp[System.Web.UI.WebControls.ListView.SelectedIndexChanged#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.SelectedIndexChanged/CS/ListViewItemSelectedIndexChanged2CS.aspx#3)]
 [!code-vb[System.Web.UI.WebControls.ListView.SelectedIndexChanged#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.SelectedIndexChanged/VB/ListViewItemSelectedIndexChanged2VB.aspx#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteItem">
      <MemberSignature Language="C#" Value="public virtual void DeleteItem (int itemIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteItem(int32 itemIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.DeleteItem(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="itemIndex">削除する項目のインデックス。</param>
        <summary>データ ソースから指定したインデックスにあるレコードを削除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.ListView.DeleteItem%2A>メソッドをプログラムによって、データ ソースから指定したインデックスにあるレコードを削除します。 このメソッドは、通常の外部からレコードを削除する使用、<xref:System.Web.UI.WebControls.ListView>など、ページ上の異なるコントロールから制御します。 このメソッドを発生させる、<xref:System.Web.UI.WebControls.ListView.ItemDeleted>と<xref:System.Web.UI.WebControls.ListView.ItemDeleting>イベント。  
  
   
  
## Examples  
 次の例を使用する方法を示しています、<xref:System.Web.UI.WebControls.ListView.DeleteItem%2A>で選択した項目をプログラムで削除するメソッドを<xref:System.Web.UI.WebControls.ListView>データ ソースからです。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.DeleteItem#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.DeleteItem/CS/ListViewDeleteItemCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.DeleteItem#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.DeleteItem/VB/ListViewDeleteItemVB.aspx#1)]
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="itemIndex" /> が 0 未満です。  
  
 または  
  
 <see cref="T:System.Web.UI.DataSourceView" />オブジェクトに関連付けられている、<see cref="T:System.Web.UI.WebControls.ListView" />コントロールが<see langword="null" />です。</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteMethod">
      <MemberSignature Language="C#" Value="public virtual string DeleteMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DeleteMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.DeleteMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.WebCategory("Data")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.WebSysDescription("DataBoundControl_DeleteMethod")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定にデータを削除するために呼び出すメソッドの名前。</summary>
        <value>メソッドの名前。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティを設定すると、データ バインディング メソッドとして使用するモデル バインドします。  
  
 Web フォーム モデル バインディングの使用に関するチュートリアル シリーズは、次を参照してください。[モデル バインディング機能と Web フォーム](http://go.microsoft.com/fwlink/?LinkId=286117)です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EditIndex">
      <MemberSignature Language="C#" Value="public virtual int EditIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 EditIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.EditIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Default")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または編集中の項目のインデックスを設定します。</summary>
        <value>編集中の項目の 0 から始まるインデックス。 既定では-1 で、項目が編集されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用することができます、<xref:System.Web.UI.WebControls.ListView.EditIndex%2A>をプログラムで指定または内の項目を決定するプロパティ、<xref:System.Web.UI.WebControls.ListView>を編集するコントロール。 このプロパティが、コントロール内の項目のインデックスに設定されている場合は、その項目が編集モードに表示されます。 編集モードでは、アイテムを使用して表示される、<xref:System.Web.UI.WebControls.ListView.EditItemTemplate%2A>テンプレートではなく、<xref:System.Web.UI.WebControls.ListView.ItemTemplate%2A>テンプレート。 設定することができます、<xref:System.Web.UI.WebControls.ListView.EditItemTemplate%2A>ユーザー項目の値を変更するデータ バインド コントロールとします。 表示モードを編集 モードを切り替えるには、-1 にこのプロパティを設定します。  
  
 <xref:System.Web.UI.WebControls.ListView.EditIndex%2A>プロパティは、どの項目が編集されている、またはカスタム編集機能を追加するときにプログラムで確認する必要があるときに通常使用、<xref:System.Web.UI.WebControls.ListView>コントロール。 <xref:System.Web.UI.WebControls.ListView>コントロールが編集モードで項目テンプレートにボタンを追加する場合、項目が自動的に挿入する組み込みの編集機能が<xref:System.Web.UI.WebControls.Button.CommandName%2A>プロパティに設定されている`Edit`です。  
  
   
  
## Examples  
 次の例を使用する方法を示しています、<xref:System.Web.UI.WebControls.ListView.EditIndex%2A>アイテムが編集モードであるかどうかを決定するプロパティ、<xref:System.Web.UI.WebControls.ListView>コントロール。 このコード例に示されている例の一部である、<xref:System.Web.UI.WebControls.ListViewDataItem>クラスです。  
  
 [!code-csharp[System.Web.UI.WebControls.ListViewDataItem#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListViewDataItem/CS/ListViewDataItemDataItemCS.aspx#2)]
 [!code-vb[System.Web.UI.WebControls.ListViewDataItem#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListViewDataItem/VB/ListViewDataItemDataItemVB.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><see cref="P:System.Web.UI.WebControls.ListView.EditIndex" />プロパティが-1 未満の値に設定します。</exception>
      </Docs>
    </Member>
    <Member MemberName="EditItem">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.ListViewItem EditItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ListViewItem EditItem" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.EditItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ListViewItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>編集モードでは、項目を取得、<see cref="T:System.Web.UI.WebControls.ListView" />コントロール。</summary>
        <value>編集モードでは、項目、<see cref="T:System.Web.UI.WebControls.ListView" />コントロール、または<see langword="null" />項目が編集モードでない場合。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.ListView.EditItem%2A>で編集モードになっているアイテムにアクセスするプロパティ、<xref:System.Web.UI.WebControls.ListView>コントロール。 編集項目のコンテンツがによって定義されている、<xref:System.Web.UI.WebControls.ListView.EditItemTemplate%2A>プロパティです。  
  
   
  
## Examples  
 次の例を使用して編集モードになっている項目を取得する方法を示しています、<xref:System.Web.UI.WebControls.ListView.EditItem%2A>プロパティに含まれるコントロールへのアクセスを<xref:System.Web.UI.WebControls.ListView.EditItemTemplate%2A>テンプレート。  
  
> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、次を参照してください。[スクリプト悪用概要](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)です。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.ItemEditing#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemEditing/CS/ListViewItemEditingCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.ItemEditing#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemEditing/VB/ListViewItemEditingVB.aspx#1)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EditItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate EditItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate EditItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.EditItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.ListViewDataItem), System.ComponentModel.BindingDirection.TwoWay)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはアイテムのカスタム コンテンツを編集モードに設定します。</summary>
        <value>内のアイテムのカスタム コンテンツを格納しているオブジェクトは編集モードです。 既定値は <see langword="null" /> です。このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.ListView.EditItemTemplate%2A>プロパティを編集モードで項目のカスタム ユーザー インターフェイス (UI) を定義します。 <xref:System.Web.UI.WebControls.ListView.EditItemTemplate%2A>テンプレートには通常、ユーザーの既存のレコードの値を更新するための入力コントロールが含まれています。 通常、レコードを更新して、更新操作を取り消すボタンが含まれています。  
  
 カスタム テンプレートを宣言によって指定するには追加、`EditItemTemplate`内の要素、<xref:System.Web.UI.WebControls.ListView>コントロール。 内容とするテンプレートのコントロールを追加し、`EditItemTemplate`要素。 フィールドは、双方向のバインド式を使用して入力コントロールに関連付けることができます。 これにより、<xref:System.Web.UI.WebControls.ListView>編集モードの項目に関連付けられた入力コントロールに自動的に元のフィールドの値を表示するコントロール。 レコードが更新されたときに、<xref:System.Web.UI.WebControls.ListView>コントロールは、関連付けられた入力コントロールからの更新されたフィールドの値を自動的に抽出します。 詳細については、次を参照してください。[データ バインド式の概要](http://msdn.microsoft.com/library/14cdd57d-0f82-4667-b503-73e1a96f136a)です。  
  
 組み込みのキャンセルや更新操作を実行するボタンを作成するには、テンプレートにボタン コントロールを追加します。 設定の<xref:System.Web.UI.WebControls.Button.CommandName%2A>プロパティに値のいずれかが次の表に一覧表示します。  
  
|[ボタンの種類]|CommandName 値|  
|-----------------|-----------------------|  
|キャンセル|[キャンセル]|  
|更新|[更新]|  
  
   
  
## Examples  
 次の例では、編集モードでアイテムのカスタム テンプレートを定義する方法を示します。  
  
> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、次を参照してください。[スクリプト悪用概要](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)です。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.EditItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.EditItemTemplate/CS/ListViewEditItemTemplateCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.EditItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.EditItemTemplate/VB/ListViewEditItemTemplateVB.aspx#1)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EmptyDataTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate EmptyDataTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate EmptyDataTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.EmptyDataTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.ListView))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定時にレンダリングされる空のテンプレートのユーザー定義コンテンツ、<see cref="T:System.Web.UI.WebControls.ListView" />コントロールがいくつかのレコードがないデータ ソースにバインドされています。</summary>
        <value>空のテンプレートのカスタム コンテンツを格納するオブジェクト。 既定値は <see langword="null" /> です。このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 空のテンプレートが表示されます、<xref:System.Web.UI.WebControls.ListView>コントロールにバインドされているデータ ソースにいくつかのレコードが含まれていない場合を制御し、<xref:System.Web.UI.WebControls.ListView.InsertItemPosition%2A>プロパティに設定されている<xref:System.Web.UI.WebControls.InsertItemPosition?displayProperty=nameWithType>です。 代わりに、テンプレートが表示される、<xref:System.Web.UI.WebControls.ListView.LayoutTemplate%2A>テンプレート。 場合、<xref:System.Web.UI.WebControls.ListView.InsertItemPosition%2A>プロパティが以外の値に設定<xref:System.Web.UI.WebControls.InsertItemPosition?displayProperty=nameWithType>、<xref:System.Web.UI.WebControls.ListView.EmptyDataTemplate%2A>テンプレートは表示されません。  
  
 空のテンプレートを使用して、カスタム ユーザー インターフェイス (UI) を定義することができます、<xref:System.Web.UI.WebControls.ListView.EmptyDataTemplate%2A>プロパティです。 空のテンプレートの宣言用のカスタム テンプレートを指定するには、追加し、`EmptyDataTemplate`内の要素、<xref:System.Web.UI.WebControls.ListView>コントロール。 テンプレートの内容を追加することができますし、`EmptyDataTemplate`要素。  
  
   
  
## Examples  
 次の例では、空のテンプレート用のカスタム テンプレートを定義する方法を示します。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.EmptyDataTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.EmptyDataTemplate/CS/ListViewEmptyDataTemplateCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.EmptyDataTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.EmptyDataTemplate/VB/ListViewEmptyDataTemplateVB.aspx#1)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EmptyItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate EmptyItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate EmptyItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.EmptyItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.ListViewItem))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定に表示されている空の項目のユーザー定義コンテンツ、<see cref="T:System.Web.UI.WebControls.ListView" />コントロールを現在のデータ ページの最後の行に表示するないデータ項目があるときです。</summary>
        <value>空の項目のカスタム コンテンツを含むオブジェクトです。 既定値は <see langword="null" /> です。このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 空のアイテムを表示、<xref:System.Web.UI.WebControls.ListView>コントロールを現在のページの最後のグループに表示するないデータ項目があるときです。 場合にのみ発生する可能性がこの<xref:System.Web.UI.WebControls.ListView.GroupItemCount%2A>1 より大きい値に設定されます。 たとえば、<xref:System.Web.UI.WebControls.ListView>コントロール、<xref:System.Web.UI.WebControls.ListView.GroupItemCount%2A>プロパティが 5 に設定することがあり、データ ソースから返される項目の合計数は 8 です。 データの最後の行がによって定義された 3 つの項目を含める場合は、<xref:System.Web.UI.WebControls.ListView.ItemTemplate%2A>テンプレートおよびによって定義された 2 つの項目、<xref:System.Web.UI.WebControls.ListView.EmptyItemTemplate%2A>テンプレート。  
  
 使用して、空の項目のカスタム ユーザー インターフェイス (UI) を定義することができます、<xref:System.Web.UI.WebControls.ListView.EmptyItemTemplate%2A>プロパティです。 空の項目に対して、宣言によってカスタム テンプレートを指定するには、追加、`EmptyItemTemplate`内の要素、<xref:System.Web.UI.WebControls.ListView>コントロール。 テンプレートの内容を追加することができますし、`EmptyItemTemplate`要素。  
  
   
  
## Examples  
 次の例では、空の項目のカスタム テンプレートを定義する方法を示します。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.EmptyItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.EmptyItemTemplate/CS/ListViewEmptyItemTemplateCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.EmptyItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.EmptyItemTemplate/VB/ListViewEmptyItemTemplateVB.aspx#1)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableModelValidation">
      <MemberSignature Language="C#" Value="public virtual bool EnableModelValidation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableModelValidation" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.EnableModelValidation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.WebCategory("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または検証コントロールが更新操作または挿入中に発生する例外を処理するかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" />検証コントロールが例外を挿入中に発生するまたは更新の操作を処理する場合それ以外の場合、<see langword="false" />です。 既定値は、<see langword="false" /> です。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnablePersistedSelection">
      <MemberSignature Language="C#" Value="public virtual bool EnablePersistedSelection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnablePersistedSelection" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.EnablePersistedSelection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.WebCategory("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または行の選択が解決しない場合、データ バインド コントロール内のデータをユーザーのページかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" />行の選択が引き続き発生する場合それ以外の場合、<see langword="false" />です。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 選択した行を指定できます、永続化すると、<xref:System.Web.UI.WebControls.ListView>コントロールがページング モード。 既定では、行の選択を行のインデックスに基づきます。 各ページで、同じ行 (たとえば、3 番目の行) を選択します。 代わりに、選択した行のデータのキーに基づく永続化を有効にできます。 その場合は、1 ページ目の 3 行目を選択すると、2 ページに移動する、行が選択されていない 2 ページ目にします。 ページ 1 に戻る場合は、3 行が選択されたままです。 この機能を有効にするには、このプロパティを設定`true`です。  
  
> [!NOTE]
>  バージョン 2.0、3.0、および ASP.NET の 3.5 では、行の選択は、行のインデックスにのみ基づいていました。 既定では、ASP.NET 4 で行の選択を旧バージョンとの互換性のためのインデックスに基づきます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnsureLayoutTemplate">
      <MemberSignature Language="C#" Value="protected virtual void EnsureLayoutTemplate ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void EnsureLayoutTemplate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.EnsureLayoutTemplate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>確実に、<see cref="P:System.Web.UI.WebControls.ListView.LayoutTemplate" />でコンテンツが正しく作成された、<see cref="T:System.Web.UI.WebControls.ListView" />コントロール。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListView.EnsureLayoutTemplate%2A>メソッドが呼び出されるヘルパー メソッド、<xref:System.Web.UI.WebControls.ListView>ことを確認するコントロール、<xref:System.Web.UI.WebControls.ListView.LayoutTemplate%2A>コンテンツを 1 回だけのコントロールに追加します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtractItemValues">
      <MemberSignature Language="C#" Value="public virtual void ExtractItemValues (System.Collections.Specialized.IOrderedDictionary itemValues, System.Web.UI.WebControls.ListViewItem item, bool includePrimaryKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExtractItemValues(class System.Collections.Specialized.IOrderedDictionary itemValues, class System.Web.UI.WebControls.ListViewItem item, bool includePrimaryKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.ExtractItemValues(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.ListViewItem,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemValues" Type="System.Collections.Specialized.IOrderedDictionary" />
        <Parameter Name="item" Type="System.Web.UI.WebControls.ListViewItem" />
        <Parameter Name="includePrimaryKey" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="itemValues">フィールドの値を格納するために使用するディクショナリ オブジェクトです。</param>
        <param name="item"><see cref="T:System.Web.UI.WebControls.ListViewItem" />フィールドの値を取得する対象のオブジェクト。</param>
        <param name="includePrimaryKey">
          <see langword="true" />主キー フィールドまたはフィールドを含めるそれ以外の場合、<see langword="false" />です。</param>
        <summary>指定した項目で宣言されているし、指定したに格納される各フィールドの値を取得<see cref="T:System.Collections.Specialized.IOrderedDictionary" />オブジェクト。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListView.ExtractItemValues%2A>メソッドが呼び出されるヘルパー メソッド、<xref:System.Web.UI.WebControls.ListView>で宣言されている各フィールドの値を取得するコントロール`item`です。 使用して、抽出された値がキー フィールドを含めるかどうかを指定することができます、`includePrimaryKey`パラメーター。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="itemValues" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="item" /> は <see cref="T:System.Web.UI.WebControls.ListViewDataItem" /> オブジェクトではありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="FindPlaceholder">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.Control FindPlaceholder (string containerID, System.Web.UI.Control container);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.Control FindPlaceholder(string containerID, class System.Web.UI.Control container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.FindPlaceholder(System.String,System.Web.UI.Control)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containerID" Type="System.String" />
        <Parameter Name="container" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="containerID">検索するコントロールの識別子。</param>
        <param name="container">検索するコンテナーです。</param>
        <summary>指定した識別子を持つコントロールの指定されたコンテナーを検索します。</summary>
        <returns>指定したコントロールまたは<see langword="null" />指定されたコントロールが見つからない場合。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドが拡張するコントロールの開発者によって使用、主に、<xref:System.Web.UI.WebControls.ListView>コントロール。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Font">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.FontInfo Font { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.FontInfo Font" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.Font" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FontInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>上書き、<see cref="P:System.Web.UI.WebControls.WebControl.Font" />プロパティです。 このプロパティでサポートされていない、<see cref="T:System.Web.UI.WebControls.ListView" />コントロール。</summary>
        <value>このプロパティはサポートされていませんし、スロー、<see cref="T:System.NotSupportedException" />エラーです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 スタイル プロパティでサポートされていない、<xref:System.Web.UI.WebControls.ListView>コントロール。 アクセスしようとする場合、 <xref:System.Web.UI.WebControls.ListView.Font%2A> 、プロパティ、<xref:System.NotSupportedException>例外がスローされます。  
  
 スタイルを<xref:System.Web.UI.WebControls.ListView>コントロール、内のコントロールのスタイルする必要があります、<xref:System.Web.UI.WebControls.ListView>連鎖を使用してテンプレートのスタイル シート (CSS) クラスまたはインライン スタイル要素。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">アクセスしようとしましたが、<see cref="P:System.Web.UI.WebControls.ListView.Font" />プロパティです。</exception>
      </Docs>
    </Member>
    <Member MemberName="ForeColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color ForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.ForeColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>上書き、<see cref="P:System.Web.UI.WebControls.WebControl.ForeColor" />プロパティです。 このプロパティの設定でサポートされていない、<see cref="T:System.Web.UI.WebControls.ListView" />コントロール。</summary>
        <value>
          <see cref="F:System.Drawing.Color.Empty" />、プロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 スタイル プロパティでサポートされていない、<xref:System.Web.UI.WebControls.ListView>コントロール。 設定を試行した場合、 <xref:System.Web.UI.WebControls.ListView.ForeColor%2A> 、プロパティ、<xref:System.NotSupportedException>例外がスローされます。  プロパティを取得する場合は、基本クラスの対応するプロパティの既定値を返します。  
  
 スタイルを<xref:System.Web.UI.WebControls.ListView>コントロール、内のコントロールのスタイルする必要があります、<xref:System.Web.UI.WebControls.ListView>連鎖を使用してテンプレートのスタイル シート (CSS) クラスまたはインライン スタイル要素。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">設定しようとしましたが、<see cref="P:System.Web.UI.WebControls.ListView.ForeColor" />プロパティです。</exception>
      </Docs>
    </Member>
    <Member MemberName="GroupItemCount">
      <MemberSignature Language="C#" Value="public virtual int GroupItemCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 GroupItemCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.GroupItemCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Default")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定のグループごとに表示する項目の数、<see cref="T:System.Web.UI.WebControls.ListView" />コントロール。</summary>
        <value>内のグループごとに表示する項目の数、<see cref="T:System.Web.UI.WebControls.ListView" />コントロール。 既定値は 1 であることを示す、<see cref="T:System.Web.UI.WebControls.ListView" />コントロール グループごとに 1 つの項目が表示されます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.ListView.GroupItemCount%2A>でグループ化する項目の数を指定するプロパティ、<xref:System.Web.UI.WebControls.ListView>コントロール。 (つまり、これを指定します、コントロールのグループごとに表示する項目の数。)グループごとに、<xref:System.Web.UI.WebControls.ListView>コントロールの内容を表示する、<xref:System.Web.UI.WebControls.ListView.GroupTemplate%2A>テンプレートと項目のプレース ホルダーを実際のアイテムのコンテンツに置き換えます。 によって定義された項目の数に応じて何度でもこれは、<xref:System.Web.UI.WebControls.ListView.GroupItemCount%2A>プロパティです。  
  
 使用することができます<xref:System.Web.UI.WebControls.ListView.GroupItemCount%2A>で、<xref:System.Web.UI.WebControls.ListView.GroupTemplate%2A>でタイル化されたレイアウトを作成するテンプレート、<xref:System.Web.UI.WebControls.ListView>コントロール。 タイル状のテーブルのレイアウトに項目が行の水平方向に反復します。 項目が繰り返される回数がで指定された、<xref:System.Web.UI.WebControls.ListView.GroupItemCount%2A>プロパティです。  
  
   
  
## Examples  
 次の例でタイル化されたレイアウトを作成する方法を示しています、<xref:System.Web.UI.WebControls.ListView>コントロールを使用して、<xref:System.Web.UI.WebControls.ListView.GroupItemCount%2A>プロパティです。 このプロパティをプログラムで変更する方法も示しています。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.GroupItemCount#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.GroupItemCount/CS/ListViewGroupItemCountCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.GroupItemCount#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.GroupItemCount/VB/ListViewGroupItemCountVB.aspx#1)]
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><see cref="P:System.Web.UI.WebControls.ListView.GroupItemCount" />プロパティが 1 未満の値に設定します。</exception>
      </Docs>
    </Member>
    <Member MemberName="GroupPlaceholderID">
      <MemberSignature Language="C#" Value="public virtual string GroupPlaceholderID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string GroupPlaceholderID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.GroupPlaceholderID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("groupPlaceholder")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定 ID にグループ プレース ホルダー、<see cref="T:System.Web.UI.WebControls.ListView" />コントロール。</summary>
        <value>グループ プレース ホルダーの ID、<see cref="T:System.Web.UI.WebControls.ListView" />コントロール。 既定値は、"groupPlaceholder"です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.ListView.GroupPlaceholderID%2A>グループ プレース ホルダーの ID を指定するプロパティです。 グループ プレース ホルダーは、コントロールに追加する、<xref:System.Web.UI.WebControls.ListView.LayoutTemplate%2A>テンプレートを表すグループを表示するグループを使用しているときにします。  
  
   
  
## Examples  
 次の例を使用する方法を示しています、<xref:System.Web.UI.WebControls.ListView.GroupPlaceholderID%2A>のグループ プレース ホルダーを別の ID を指定するプロパティ、<xref:System.Web.UI.WebControls.ListView>コントロール。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.ItemContainerID#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemContainerID/CS/ListViewItemContainerIDCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.ItemContainerID#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemContainerID/VB/ListViewItemContainerIDVB.aspx#1)]
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定された ID が<see langword="null" />または空の文字列。</exception>
      </Docs>
    </Member>
    <Member MemberName="GroupSeparatorTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate GroupSeparatorTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate GroupSeparatorTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.GroupSeparatorTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.ListViewItem))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定、ユーザー定義コンテンツ内のグループ間の区切り記号、<see cref="T:System.Web.UI.WebControls.ListView" />コントロール。</summary>
        <value>桁区切り記号のカスタム コンテンツを格納するオブジェクト。 既定値は <see langword="null" /> です。このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 区切り記号では、各グループの間のカスタム コンテンツを持つ要素を配置することができます。 <xref:System.Web.UI.WebControls.ListView>コントロール、またはレンダリング、<xref:System.Web.UI.WebControls.ListView.GroupTemplate%2A>コンテンツと<xref:System.Web.UI.WebControls.ListView.GroupSeparatorTemplate%2A>コンテンツ。 <xref:System.Web.UI.WebControls.ListView.GroupTemplate%2A>コンテンツが常に表示される最後です。  
  
 行全体のコンテンツを定義することを確認してください、<xref:System.Web.UI.WebControls.ListView.GroupSeparatorTemplate%2A>テンプレート、ため、<xref:System.Web.UI.WebControls.ListView>レンダリングを制御、<xref:System.Web.UI.WebControls.ListView.GroupSeparatorTemplate%2A>内部コンテンツ、<xref:System.Web.UI.WebControls.ListView.LayoutTemplate%2A>テンプレート。 内のグループなど、<xref:System.Web.UI.WebControls.ListView>テーブル行を使用してコントロールを作成する場合があります (`tr`) 要素です。 場合、 <xref:System.Web.UI.WebControls.ListView.GroupItemCount%2A> 3 に設定されて、`colspan`属性は、3 に設定する必要があります、<xref:System.Web.UI.WebControls.ListView.GroupSeparatorTemplate%2A>テンプレート。  
  
 宣言の区切り線テンプレートを指定するには追加、`GroupSeparatorTemplate`内の要素、<xref:System.Web.UI.WebControls.ListView>コントロール。 テンプレートの内容を追加することができますし、`GroupSeparatorTemplate`要素。  
  
   
  
## Examples  
 次の例で桁区切り記号を作成する方法を示しています、<xref:System.Web.UI.WebControls.ListView>コントロールを使用して、<xref:System.Web.UI.WebControls.ListView.GroupSeparatorTemplate%2A>プロパティです。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.GroupTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.GroupTemplate/CS/ListViewGroupTemplateCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.GroupTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.GroupTemplate/VB/ListViewGroupTemplateVB.aspx#1)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate GroupTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate GroupTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.GroupTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.ListViewItem))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定、ユーザー定義の内容でグループのコンテナー、<see cref="T:System.Web.UI.WebControls.ListView" />コントロール。</summary>
        <value>グループのコンテナー用のカスタム コンテンツを格納しているオブジェクト、<see cref="T:System.Web.UI.WebControls.ListView" />コントロール。 既定値は <see langword="null" /> です。このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.ListView.GroupTemplate%2A>でタイル化されたレイアウトを作成するプロパティ、<xref:System.Web.UI.WebControls.ListView>コントロール。 タイル状のテーブルのレイアウトに項目が行の水平方向に反復します。 項目が繰り返される回数がで指定された、<xref:System.Web.UI.WebControls.ListView.GroupItemCount%2A>プロパティです。  
  
 宣言によってグループ コンテナーのテンプレートを指定するには追加、`GroupTemplate`内の要素、<xref:System.Web.UI.WebControls.ListView>コントロール。 テンプレートの内容を追加することができますし、`GroupTemplate`要素。  
  
 <xref:System.Web.UI.WebControls.ListView.GroupTemplate%2A>プロパティは、テーブルのセルなど、データ項目のプレース ホルダーを含める必要があります (`td`)、 `div`、または`span`要素。 このプレース ホルダーがあります、`runat`属性"server"に設定され、`ID`属性の値に設定、<xref:System.Web.UI.WebControls.ListView.ItemPlaceholderID%2A>プロパティです。 実行時に、<xref:System.Web.UI.WebControls.ListView>コントロール内の各項目に対して定義されているコンテンツ プレース ホルダーに置き換えられます、<xref:System.Web.UI.WebControls.ListView.ItemTemplate%2A>と<xref:System.Web.UI.WebControls.ListView.AlternatingItemTemplate%2A>テンプレート。  
  
   
  
## Examples  
 次の例でタイル化されたレイアウトを作成する方法を示しています、<xref:System.Web.UI.WebControls.ListView>コントロールを使用して、<xref:System.Web.UI.WebControls.ListView.GroupTemplate%2A>プロパティです。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.GroupTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.GroupTemplate/CS/ListViewGroupTemplateCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.GroupTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.GroupTemplate/VB/ListViewGroupTemplateVB.aspx#1)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.Unit Height { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Unit Height" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.Height" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Unit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>上書き、<see cref="P:System.Web.UI.WebControls.WebControl.Height" />プロパティです。 このプロパティの設定でサポートされていない、<see cref="T:System.Web.UI.WebControls.ListView" />コントロール。</summary>
        <value>
          <see cref="F:System.Web.UI.WebControls.Unit.Empty" />、プロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 スタイル プロパティでサポートされていない、<xref:System.Web.UI.WebControls.ListView>コントロール。 設定を試行した場合、 <xref:System.Web.UI.WebControls.ListView.Height%2A> 、プロパティ、<xref:System.NotSupportedException>例外がスローされます。 プロパティを取得する場合は、基本クラスの対応するプロパティの既定値を返します。  
  
 スタイルを<xref:System.Web.UI.WebControls.ListView>コントロール、内のコントロールのスタイルする必要があります、<xref:System.Web.UI.WebControls.ListView>連鎖を使用してテンプレートのスタイル シート (CSS) クラスまたはインライン スタイル要素。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">設定しようとしましたが、<see cref="P:System.Web.UI.WebControls.ListView.Height" />プロパティです。</exception>
      </Docs>
    </Member>
    <Member MemberName="InsertItem">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.ListViewItem InsertItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ListViewItem InsertItem" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.InsertItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ListViewItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>挿入項目を取得、<see cref="T:System.Web.UI.WebControls.ListView" />コントロール。</summary>
        <value>項目の挿入を表すオブジェクト、<see cref="T:System.Web.UI.WebControls.ListView" />コントロール。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.ListView.InsertItem%2A>の挿入項目にアクセスするプロパティ、<xref:System.Web.UI.WebControls.ListView>コントロール。 挿入項目は、<xref:System.Web.UI.WebControls.ListViewItem>オブジェクト<xref:System.Web.UI.WebControls.ListViewItem.ItemType%2A>と等しい<xref:System.Web.UI.WebControls.ListViewItemType?displayProperty=nameWithType>です。 挿入項目の内容がによって定義されている、<xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A>プロパティです。  
  
   
  
## Examples  
 次の例を使用して挿入項目を取得する方法を示しています、<xref:System.Web.UI.WebControls.ListView.InsertItem%2A>プロパティに含まれるコントロールへのアクセスを<xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A>テンプレート。  
  
> [!IMPORTANT]
>  この例には、潜在的なセキュリティの脅威は、ユーザー入力を受け付けるテキスト ボックスが含まれています。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、次を参照してください。[スクリプト悪用概要](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)です。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.InsertItem#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.InsertItem/CS/ListViewInsertItemCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.InsertItem#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.InsertItem/VB/ListViewInsertItemVB.aspx#1)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertItemPosition">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.InsertItemPosition InsertItemPosition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.InsertItemPosition InsertItemPosition" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.InsertItemPosition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Default")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.InsertItemPosition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の場所、<see cref="P:System.Web.UI.WebControls.ListView.InsertItemTemplate" />テンプレートの一部としてレポートが表示される、<see cref="T:System.Web.UI.WebControls.ListView" />コントロール。</summary>
        <value><see cref="T:System.Web.UI.WebControls.InsertItemPosition" /> 値のいずれか。 既定値は<see cref="F:System.Web.UI.WebControls.InsertItemPosition.None" />、ことを示します、<see cref="P:System.Web.UI.WebControls.ListView.InsertItemTemplate" />によってコンテンツが表示されない、<see cref="T:System.Web.UI.WebControls.ListView" />コントロール。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 次の表は、使用可能なアイテムの位置の値を一覧表示します。  
  
|行の種類|説明|  
|--------------|-----------------|  
|<xref:System.Web.UI.WebControls.InsertItemPosition?displayProperty=nameWithType>|表示、<xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A>テンプレートの最初の項目として、<xref:System.Web.UI.WebControls.ListView>コントロール。|  
|<xref:System.Web.UI.WebControls.InsertItemPosition?displayProperty=nameWithType>|表示、<xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A>テンプレートの最後の項目として、<xref:System.Web.UI.WebControls.ListView>コントロール。|  
|<xref:System.Web.UI.WebControls.InsertItemPosition?displayProperty=nameWithType>|レンダリングできません、<xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A>テンプレート。|  
  
   
  
## Examples  
 次の例は、構成する方法を示します、<xref:System.Web.UI.WebControls.ListView>を表示するコントロール、<xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A>テンプレート。 このコード例に示されている例の一部である、<xref:System.Web.UI.WebControls.ListView.ItemInserted>イベント。  
  
> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、次を参照してください。[スクリプト悪用概要](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)です。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.ItemInserted#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemInserted/CS/ListViewItemInsertedCS.aspx#2)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.ItemInserted#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemInserted/VB/ListViewItemInsertedVB.aspx#2)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate InsertItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate InsertItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.InsertItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.ListViewItem), System.ComponentModel.BindingDirection.TwoWay)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定で、項目の挿入用のカスタム コンテンツ、<see cref="T:System.Web.UI.WebControls.ListView" />コントロール。</summary>
        <value>項目の挿入用のカスタム コンテンツを格納しているオブジェクト、<see cref="T:System.Web.UI.WebControls.ListView" />コントロール。 既定値は <see langword="null" /> です。このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A>で項目の挿入のカスタム ユーザー インターフェイス (UI) を定義するプロパティ、<xref:System.Web.UI.WebControls.ListView>コントロール。 この UI は、開始時、または表示される項目の末尾に表示されます。 使用して UI をレンダリングする場所を指定する、<xref:System.Web.UI.WebControls.ListView.InsertItemPosition%2A>プロパティです。  
  
 <xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A>テンプレートには、通常、新しいレコードの値を入力するユーザーの入力コントロールが含まれます。 ボタンや、レコードを挿入すると、挿入操作をキャンセルするハイパーリンクも通常含まれています。  
  
 カスタム テンプレートを宣言によって指定するには追加、`InsertItemTemplate`内の要素、`ListView`要素。 テンプレートの内容を追加することができますし、`InsertItemTemplate`要素。 フィールドは、双方向のバインド式を使用して入力コントロールに関連付けることができます。 レコードが挿入されたときに、<xref:System.Web.UI.WebControls.ListView>コントロールでは、関連付けられた入力コントロールから、フィールドの値を自動的に抽出します。 詳細については、次を参照してください。[データ バインド式の概要](http://msdn.microsoft.com/library/14cdd57d-0f82-4667-b503-73e1a96f136a)です。  
  
 挿入操作や組み込みのキャンセルを実行するボタンを作成するには、テンプレートにボタン コントロールを追加します。 設定の<xref:System.Web.UI.WebControls.Button.CommandName%2A>プロパティに値のいずれかが次の表に一覧表示します。  
  
|[ボタンの種類]|CommandName 値|  
|-----------------|-----------------------|  
|キャンセル|[キャンセル]|  
|挿入|"Insert"|  
  
 Insert のアイテムの位置を制御することができます、<xref:System.Web.UI.WebControls.ListView>コントロールを使用して、<xref:System.Web.UI.WebControls.ListView.InsertItemPosition%2A>プロパティです。  
  
   
  
## Examples  
 次の例の項目の挿入用のカスタム テンプレートを定義する方法を示しています、<xref:System.Web.UI.WebControls.ListView>コントロール。 このコード例に示されている例の一部である、<xref:System.Web.UI.WebControls.ListView.ItemInserted>イベント。  
  
> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、次を参照してください。[スクリプト悪用概要](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)です。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.ItemInserted#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemInserted/CS/ListViewItemInsertedCS.aspx#2)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.ItemInserted#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemInserted/VB/ListViewItemInsertedVB.aspx#2)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertMethod">
      <MemberSignature Language="C#" Value="public virtual string InsertMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InsertMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.InsertMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.WebCategory("Data")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.WebSysDescription("DataBoundControl_InsertMethod")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定にデータを挿入するために呼び出すメソッドの名前。</summary>
        <value>メソッドの名前。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティを設定すると、データ バインディング メソッドとして使用するモデル バインドします。  
  
 Web フォーム モデル バインディングの使用に関するチュートリアル シリーズは、次を参照してください。[モデル バインディング機能と Web フォーム](http://go.microsoft.com/fwlink/?LinkId=286117)です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertNewItem">
      <MemberSignature Language="C#" Value="public virtual void InsertNewItem (bool causesValidation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertNewItem(bool causesValidation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.InsertNewItem(System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="causesValidation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="causesValidation">
          <see langword="true" />このメソッドが呼び出されたときに、ページの検証を実行するにはそれ以外の場合、<see langword="false" />です。</param>
        <summary>データ ソースの現在のレコードを挿入します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.ListView.InsertNewItem%2A>をプログラムでデータ ソースの項目を挿入する方法です。 このメソッドは、通常の外部から項目を挿入する使用、<xref:System.Web.UI.WebControls.ListView>など、ページ上の異なるコントロールから制御します。  
  
 使用する、<xref:System.Web.UI.WebControls.ListView.InsertNewItem%2A>メソッドを定義する必要がある、<xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A>でテンプレート、<xref:System.Web.UI.WebControls.ListView>コントロール。 設定することも必要があります、<xref:System.Web.UI.WebControls.ListView.InsertItemPosition%2A>プロパティ値を異なる<xref:System.Web.UI.WebControls.InsertItemPosition?displayProperty=nameWithType>です。 挿入操作の前にページの検証を実行するかどうかを指定するには、使用、`causesValidation`パラメーター。  
  
 このメソッドを発生させる、<xref:System.Web.UI.WebControls.ListView.ItemInserted>と<xref:System.Web.UI.WebControls.ListView.ItemInserting>イベント。  
  
   
  
## Examples  
 次の例を使用する方法を示しています、<xref:System.Web.UI.WebControls.ListView.InsertNewItem%2A>をプログラムでの挿入項目の内容を挿入する方法、<xref:System.Web.UI.WebControls.ListView>データ ソースへの制御。  
  
> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、次を参照してください。[スクリプト悪用概要](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)です。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.InsertNewItem#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.InsertNewItem/CS/ListViewInsertNewItemCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.InsertNewItem#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.InsertNewItem/VB/ListViewInsertNewItemVB.aspx#1)]
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Web.UI.WebControls.ListView" />コントロールには、挿入項目はありません。  
  
 または  
  
 <see cref="T:System.Web.UI.DataSourceView" />オブジェクトに関連付けられている、<see cref="T:System.Web.UI.WebControls.ListView" />コントロールが<see langword="null" />です。</exception>
      </Docs>
    </Member>
    <Member MemberName="InstantiateEmptyDataTemplate">
      <MemberSignature Language="C#" Value="protected virtual void InstantiateEmptyDataTemplate (System.Web.UI.Control container);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InstantiateEmptyDataTemplate(class System.Web.UI.Control container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.InstantiateEmptyDataTemplate(System.Web.UI.Control)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="container">子の格納に使用するコンテナー コントロールで、<see cref="P:System.Web.UI.WebControls.ListView.EmptyDataTemplate" />テンプレート。</param>
        <summary>指定した設定<see cref="T:System.Web.UI.Control" />オブジェクトに含まれる子コントロールを使用して、<see cref="P:System.Web.UI.WebControls.ListView.EmptyDataTemplate" />テンプレート。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、指定した設定に使用されます<xref:System.Web.UI.Control>オブジェクトに含まれる子コントロールを使用して、<xref:System.Web.UI.WebControls.ListView.EmptyDataTemplate%2A>テンプレート。  
  
> [!NOTE]
>  このメソッドが拡張するコントロールの開発者によって使用、主に、<xref:System.Web.UI.WebControls.ListView>コントロール。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InstantiateEmptyItemTemplate">
      <MemberSignature Language="C#" Value="protected virtual void InstantiateEmptyItemTemplate (System.Web.UI.Control container);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InstantiateEmptyItemTemplate(class System.Web.UI.Control container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.InstantiateEmptyItemTemplate(System.Web.UI.Control)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="container">子の格納に使用するコンテナー コントロールで、<see cref="P:System.Web.UI.WebControls.ListView.EmptyItemTemplate" />テンプレート。</param>
        <summary>指定した設定<see cref="T:System.Web.UI.Control" />オブジェクトに含まれる子コントロールを使用して、<see cref="P:System.Web.UI.WebControls.ListView.EmptyItemTemplate" />テンプレート。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、設定に使用されます、<xref:System.Web.UI.Control>オブジェクトに含まれる子コントロールを使用して、<xref:System.Web.UI.WebControls.ListView.EmptyItemTemplate%2A>テンプレート。  
  
> [!NOTE]
>  このメソッドが拡張するコントロールの開発者によって使用、主に、<xref:System.Web.UI.WebControls.ListView>コントロール。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InstantiateGroupSeparatorTemplate">
      <MemberSignature Language="C#" Value="protected virtual void InstantiateGroupSeparatorTemplate (System.Web.UI.Control container);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InstantiateGroupSeparatorTemplate(class System.Web.UI.Control container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.InstantiateGroupSeparatorTemplate(System.Web.UI.Control)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="container">子の格納に使用するコンテナー コントロールで、<see cref="P:System.Web.UI.WebControls.ListView.GroupSeparatorTemplate" />テンプレート。</param>
        <summary>指定した設定<see cref="T:System.Web.UI.Control" />オブジェクトに含まれる子コントロールを使用して、<see cref="P:System.Web.UI.WebControls.ListView.GroupSeparatorTemplate" />テンプレート。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドが拡張するコントロールの開発者によって使用、主に、<xref:System.Web.UI.WebControls.ListView>コントロール。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InstantiateGroupTemplate">
      <MemberSignature Language="C#" Value="protected virtual void InstantiateGroupTemplate (System.Web.UI.Control container);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InstantiateGroupTemplate(class System.Web.UI.Control container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.InstantiateGroupTemplate(System.Web.UI.Control)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="container">子の格納に使用するコンテナー コントロールで、<see cref="P:System.Web.UI.WebControls.ListView.GroupTemplate" />テンプレート。</param>
        <summary>指定した設定<see cref="T:System.Web.UI.Control" />オブジェクトに含まれる子コントロールを使用して、<see cref="P:System.Web.UI.WebControls.ListView.GroupTemplate" />テンプレート。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドが拡張するコントロールの開発者によって使用、主に、<xref:System.Web.UI.WebControls.ListView>コントロール。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InstantiateInsertItemTemplate">
      <MemberSignature Language="C#" Value="protected virtual void InstantiateInsertItemTemplate (System.Web.UI.Control container);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InstantiateInsertItemTemplate(class System.Web.UI.Control container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.InstantiateInsertItemTemplate(System.Web.UI.Control)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="container">子の格納に使用するコンテナー コントロールで、<see cref="P:System.Web.UI.WebControls.ListView.InsertItemTemplate" />テンプレート。</param>
        <summary>指定した設定<see cref="T:System.Web.UI.Control" />オブジェクトに含まれる子コントロールを使用して、<see cref="P:System.Web.UI.WebControls.ListView.InsertItemTemplate" />テンプレート。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドが拡張するコントロールの開発者によって使用、主に、<xref:System.Web.UI.WebControls.ListView>コントロール。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InstantiateItemSeparatorTemplate">
      <MemberSignature Language="C#" Value="protected virtual void InstantiateItemSeparatorTemplate (System.Web.UI.Control container);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InstantiateItemSeparatorTemplate(class System.Web.UI.Control container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.InstantiateItemSeparatorTemplate(System.Web.UI.Control)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="container">子の格納に使用するコンテナー コントロールで、<see cref="P:System.Web.UI.WebControls.ListView.ItemSeparatorTemplate" />テンプレート。</param>
        <summary>指定した設定<see cref="T:System.Web.UI.Control" />オブジェクトに含まれる子コントロールを使用して、<see cref="P:System.Web.UI.WebControls.ListView.ItemSeparatorTemplate" />テンプレート。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドが拡張するコントロールの開発者によって使用、主に、<xref:System.Web.UI.WebControls.ListView>コントロール。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InstantiateItemTemplate">
      <MemberSignature Language="C#" Value="protected virtual void InstantiateItemTemplate (System.Web.UI.Control container, int displayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InstantiateItemTemplate(class System.Web.UI.Control container, int32 displayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.InstantiateItemTemplate(System.Web.UI.Control,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Web.UI.Control" />
        <Parameter Name="displayIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="container">子コントロールを格納するために使用されるコンテナー。</param>
        <param name="displayIndex">インスタンス化されるアイテムの表示インデックスです。</param>
        <summary>指定した設定<see cref="T:System.Web.UI.Control" />オブジェクトのいずれかの子コントロールを使用して、<see cref="T:System.Web.UI.WebControls.ListView" />コントロール テンプレート。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドがインスタンス化されている項目のモードとの設定に応じた別のテンプレートを使用して、<xref:System.Web.UI.WebControls.ListView>コントロール。 <xref:System.Web.UI.WebControls.ListView.InstantiateItemTemplate%2A>メソッドを使用する、次のテンプレートのいずれかのコンテナーを作成します。  
  
-   <xref:System.Web.UI.WebControls.ListView.ItemTemplate%2A>  
  
-   <xref:System.Web.UI.WebControls.ListView.AlternatingItemTemplate%2A>  
  
-   <xref:System.Web.UI.WebControls.ListView.SelectedItemTemplate%2A>  
  
-   <xref:System.Web.UI.WebControls.ListView.EditItemTemplate%2A>  
  
    > [!NOTE]
    >  このメソッドが拡張するコントロールの開発者によって使用、主に、<xref:System.Web.UI.WebControls.ListView>コントロール。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Web.UI.WebControls.ListView" />コントロールはありません、<see cref="P:System.Web.UI.WebControls.ListView.ItemTemplate" />テンプレートを指定します。</exception>
      </Docs>
    </Member>
    <Member MemberName="IsUsingModelBinders">
      <MemberSignature Language="C#" Value="protected override bool IsUsingModelBinders { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUsingModelBinders" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.IsUsingModelBinders" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>モデル バインディングが使用するかどうかを示す値を取得します。</summary>
        <value>
          <see langword="true" />モデル バインディングが使用して、それ以外の場合場合、<see langword="false" />です。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemCanceling">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.ListViewCancelEventArgs&gt; ItemCanceling;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.ListViewCancelEventArgs&gt; ItemCanceling" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ListView.ItemCanceling" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Action")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.ListViewCancelEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>その前に取り消し操作が要求されたときに発生、<see cref="T:System.Web.UI.WebControls.ListView" />コントロールは、挿入または編集操作をキャンセルします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListView>制御が発生し、<xref:System.Web.UI.WebControls.ListView.ItemCanceling>で [キャンセル] ボタンをクリックしたときにイベント、<xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A>または<xref:System.Web.UI.WebControls.ListView.EditItemTemplate%2A>テンプレートは、クリックすると、その前に、<xref:System.Web.UI.WebControls.ListView>コントロールは、挿入または編集操作をキャンセルします。 (いるボタン コントロールは、[キャンセル] ボタン<xref:System.Web.UI.WebControls.Button.CommandName%2A>プロパティが"Cancel"に設定します)。これにより、なりそうな場合、項目が望ましくない状態で、[キャンセル] 操作を停止するなど、このイベントが発生するたびに、カスタム ルーチンを実行できます。  
  
 A<xref:System.Web.UI.WebControls.ListViewCancelEventArgs>オブジェクトは、項目のインデックスを確認することにより、イベント ハンドラーに渡されます。 取り消し操作を停止するかを指定することもできます。 操作を中止するには設定、<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>のプロパティ、<xref:System.Web.UI.WebControls.ListViewCancelEventArgs>オブジェクトを`true`です。  
  
 イベントを処理する方法の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。  
  
   
  
## Examples  
 次の例を作成する方法を示しています、<xref:System.Web.UI.WebControls.ListView.ItemCanceling>イベント ハンドラー。  
  
> [!IMPORTANT]
>  この例には、潜在的なセキュリティの脅威は、ユーザー入力を受け付けるテキスト ボックスが含まれています。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、次を参照してください。[スクリプト悪用概要](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)です。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.ItemCanceling#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemCanceling/CS/ListViewItemCancelingCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.ItemCanceling#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemCanceling/VB/ListViewItemCancelingVB.aspx#1)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemCommand">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.ListViewCommandEventArgs&gt; ItemCommand;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.ListViewCommandEventArgs&gt; ItemCommand" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ListView.ItemCommand" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Action")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.ListViewCommandEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>内のボタンのときに発生、<see cref="T:System.Web.UI.WebControls.ListView" />コントロールをクリックします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListView.ItemCommand>イベントは、ボタン、<xref:System.Web.UI.WebControls.ListView>コントロールをクリックします。 これにより、このイベントが発生するたびに、カスタム ルーチンを実行できます。  
  
 ボタンをクリックして、<xref:System.Web.UI.WebControls.ListView>コントロールがコントロールの組み込み機能を呼び出すことができますも。 次の表で使用できる値、<xref:System.Web.UI.WebControls.Button.CommandName%2A>組み込みの機能を実行するために、ボタンのプロパティです。  
  
|CommandName 値|説明|  
|-----------------------|-----------------|  
|[キャンセル]|編集または挿入操作をキャンセルします。 <xref:System.Web.UI.WebControls.ListView.ItemCanceling> イベントを発生させます。|  
|"削除"|データ ソースから現在のレコードを削除します。 発生させる、<xref:System.Web.UI.WebControls.ListView.ItemDeleted>と<xref:System.Web.UI.WebControls.ListView.ItemDeleting>イベント。|  
|"Select"|セット、<xref:System.Web.UI.WebControls.ListView.SelectedIndex%2A>プロパティを<xref:System.Web.UI.WebControls.ListViewDataItem.DisplayIndex%2A>アイテムのプロパティの値。 表示、<xref:System.Web.UI.WebControls.ListView.SelectedItemTemplate%2A>項目用のテンプレートです。 発生させる、<xref:System.Web.UI.WebControls.ListView.SelectedIndexChanging>と<xref:System.Web.UI.WebControls.ListView.SelectedIndexChanged>イベント。|  
|"Edit"|編集モードでは、アイテムを配置します。 表示、<xref:System.Web.UI.WebControls.ListView.EditItemTemplate%2A>項目用のテンプレートです。 <xref:System.Web.UI.WebControls.ListView.ItemEditing> イベントを発生させます。|  
|"Insert"|バインドされた値を挿入、<xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A>データ ソースにテンプレート。 発生させる、<xref:System.Web.UI.WebControls.ListView.ItemInserting>と<xref:System.Web.UI.WebControls.ListView.ItemInserted>イベント。|  
|[更新]|バインドされた値を使って、データ ソースの現在のレコードを更新、<xref:System.Web.UI.WebControls.ListView.EditItemTemplate%2A>テンプレート。 発生させる、<xref:System.Web.UI.WebControls.ListView.ItemUpdating>と<xref:System.Web.UI.WebControls.ListView.ItemUpdated>イベント。|  
|"Sort"|示されている列を並べ替え、`CommandArgument`ボタンのプロパティです。 発生させる、<xref:System.Web.UI.WebControls.ListView.Sorting>と<xref:System.Web.UI.WebControls.ListView.Sorted>イベント。|  
  
 <xref:System.Web.UI.WebControls.ListView.ItemCommand>イベントは、前の表に記載されているボタンがクリックされたときにも発生します。 ただし、表に示されているイベントを使用することをお勧めします。 <xref:System.Web.UI.WebControls.ListView.ItemCommand>イベントは、通常、カスタム操作を処理する使用します。  
  
 A<xref:System.Web.UI.WebControls.ListViewCommandEventArgs>オブジェクトがクリックしてされたボタンのコマンドの引数とコマンドの名前を決定することにより、イベント ハンドラーに渡されます。 コマンド名を確認するには<xref:System.Web.UI.WebControls.CommandEventArgs.CommandName%2A?displayProperty=nameWithType>プロパティです。 コマンドの引数を確認するには<xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A?displayProperty=nameWithType>プロパティです。 イベントを発生させたコントロールにアクセスするには、使用、<xref:System.Web.UI.WebControls.ListViewCommandEventArgs.CommandSource%2A?displayProperty=nameWithType>プロパティです。  
  
 イベントを処理する方法の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。  
  
   
  
## Examples  
 次の例を作成する方法を示しています、<xref:System.Web.UI.WebControls.ListView.ItemCommand>イベント ハンドラー。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListViewItemCommand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListViewItemCommand/CS/ListViewItemCommandCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListViewItemCommand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListViewItemCommand/VB/ListViewItemCommandVB.aspx#1)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemCreated">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.ListViewItemEventArgs&gt; ItemCreated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.ListViewItemEventArgs&gt; ItemCreated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ListView.ItemCreated" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.ListViewItemEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>内の項目が作成されるときに発生する、<see cref="T:System.Web.UI.WebControls.ListView" />コントロール。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 前に、<xref:System.Web.UI.WebControls.ListView>コントロールを表示できる、<xref:System.Web.UI.WebControls.ListViewItem>コントロール内の各項目のオブジェクトを作成する必要があります。 <xref:System.Web.UI.WebControls.ListView.ItemCreated>イベントが発生したときの各項目、<xref:System.Web.UI.WebControls.ListView>コントロールを作成します。 これにより、カスタム コンテンツ項目を追加するなど、このイベントが発生するたびに、カスタム ルーチンを実行できます。  
  
 A<xref:System.Web.UI.WebControls.ListViewItemEventArgs>オブジェクトが作成される項目のプロパティにアクセスすることにより、イベント ハンドラーに渡されます。 アイテム内の特定のコントロールにアクセスするには、使用、<xref:System.Web.UI.Control.FindControl%2A>のメソッド、<xref:System.Web.UI.WebControls.ListViewItem>に含まれているオブジェクト、<xref:System.Web.UI.WebControls.ListViewItemEventArgs.Item%2A>のプロパティ、<xref:System.Web.UI.WebControls.ListViewItemEventArgs>オブジェクト。 項目を特定することができます (データ項目、挿入項目では、空の項目) は作成の種類を使用して、<xref:System.Web.UI.WebControls.ListViewItem.ItemType%2A>プロパティです。  
  
 イベントを処理する方法の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemDataBound">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.ListViewItemEventArgs&gt; ItemDataBound;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.ListViewItemEventArgs&gt; ItemDataBound" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ListView.ItemDataBound" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.ListViewItemEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データ項目がデータにバインドされているときに発生する<see cref="T:System.Web.UI.WebControls.ListView" />コントロール。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 前に、<xref:System.Web.UI.WebControls.ListView>コントロールを表示できる、コントロール内の各項目は、データ ソース内のレコードにバインドする必要があります。 <xref:System.Web.UI.WebControls.ListView.ItemDataBound>イベントは、データ項目がデータにバインドされている場合、<xref:System.Web.UI.WebControls.ListView>コントロール。 (データ項目がによって表される<xref:System.Web.UI.WebControls.ListViewDataItem>オブジェクトです)。これにより、項目にバインドされているデータの値を変更するなど、このイベントが発生するたびに、カスタム ルーチンを実行できます。  
  
 A<xref:System.Web.UI.WebControls.ListViewItemEventArgs>オブジェクトがバインドされている項目のプロパティにアクセスすることにより、イベント ハンドラーに渡されます。 アイテム内の特定のコントロールにアクセスするには、使用、<xref:System.Web.UI.Control.FindControl%2A>のメソッド、<xref:System.Web.UI.WebControls.ListViewItem>に含まれているオブジェクト、<xref:System.Web.UI.WebControls.ListViewItemEventArgs.Item%2A>のプロパティ、<xref:System.Web.UI.WebControls.ListViewItemEventArgs>オブジェクト。 項目を特定することができます (データ項目、挿入項目では、空の項目) の種類のバインドを使用して、<xref:System.Web.UI.WebControls.ListViewItem.ItemType%2A>プロパティです。  
  
 イベントを処理する方法の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。  
  
   
  
## Examples  
 <xref:System.Web.UI.WebControls.ListView.ItemDataBound> イベントを使用する方法を次の例に示します。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.ItemDataBound#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemDataBound/CS/ListViewItemDataBoundCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.ItemDataBound#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemDataBound/VB/ListViewItemDataBoundVB.aspx#1)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemDeleted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.ListViewDeletedEventArgs&gt; ItemDeleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.ListViewDeletedEventArgs&gt; ItemDeleted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ListView.ItemDeleted" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Action")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.ListViewDeletedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>後に削除操作が要求されたときに発生、<see cref="T:System.Web.UI.WebControls.ListView" />コントロールが項目を削除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListView.ItemDeleted>イベントは、アイテムの削除 ボタンがクリックされたときに発生します。 または、<xref:System.Web.UI.WebControls.ListView.DeleteItem%2A>メソッドは、後、<xref:System.Web.UI.WebControls.ListView>コントロールが項目を削除します。 ([削除] ボタンは <xref:System.Web.UI.WebControls.Button.CommandName%2A> プロパティが "Delete" に設定されているボタン コントロールです)。これにより、削除操作の結果を確認するなど、このイベントが発生するたびに、カスタム ルーチンを実行できます。  
  
 A<xref:System.Web.UI.WebControls.ListViewDeletedEventArgs>オブジェクトは、データ ソースに影響を受けた行の数を決定することにより、イベント ハンドラーに渡されます。 どのような例外が発生した可能性があるかを判断することもできます。 かどうか、例外が処理されたイベントのハンドラーを設定して示すことができます、<xref:System.Web.UI.WebControls.ListViewDeletedEventArgs.ExceptionHandled%2A>のプロパティ、<xref:System.Web.UI.WebControls.ListViewDeletedEventArgs>オブジェクトを`true`です。  
  
 イベントを処理する方法の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。  
  
   
  
## Examples  
 次の例は、イベント ハンドラーを追加する方法を示します、<xref:System.Web.UI.WebControls.ListView.ItemDeleted>イベント。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListViewDeletedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListViewDeletedEventArgs/CS/ListViewDeletedEventArgsCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListViewDeletedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListViewDeletedEventArgs/VB/ListViewDeletedEventArgsVB.aspx#1)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemDeleting">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.ListViewDeleteEventArgs&gt; ItemDeleting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.ListViewDeleteEventArgs&gt; ItemDeleting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ListView.ItemDeleting" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Action")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.ListViewDeleteEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>その前に、削除操作が要求されたときに発生、<see cref="T:System.Web.UI.WebControls.ListView" />コントロールが項目を削除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListView.ItemDeleting>イベントは、アイテムの削除 ボタンがクリックされたときに発生します。 または、<xref:System.Web.UI.WebControls.ListView.DeleteItem%2A>メソッドを呼び出す前に、<xref:System.Web.UI.WebControls.ListView>コントロールが項目を削除します。 ([削除] ボタンは <xref:System.Web.UI.WebControls.Button.CommandName%2A> プロパティが "Delete" に設定されているボタン コントロールです)。これにより、削除操作の取り消しなど、このイベントが発生するたびに、カスタム ルーチンを実行できます。  
  
 A<xref:System.Web.UI.WebControls.ListViewDeleteEventArgs>オブジェクトが現在の項目のインデックスを確認することにより、イベント ハンドラーに渡されます。 削除操作を取り消す必要があることを指定することもできます。 削除操作をキャンセルするには設定、<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>のプロパティ、<xref:System.Web.UI.WebControls.ListViewDeleteEventArgs>オブジェクトを`true`です。 またと連携することができます、<xref:System.Web.UI.WebControls.ListViewDeleteEventArgs.Keys%2A>と<xref:System.Web.UI.WebControls.ListViewDeleteEventArgs.Values%2A>値は、データ ソースに渡される前に、のコレクション。  
  
 イベントを処理する方法の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。  
  
   
  
## Examples  
 次の例は、宣言のイベント ハンドラーを追加する方法を示します、<xref:System.Web.UI.WebControls.ListView.ItemDeleting>イベント。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListViewItemDeleting#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListViewItemDeleting/CS/ListViewItemItemDeletingCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListViewItemDeleting#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListViewItemDeleting/VB/ListViewItemItemDeletingVB.aspx#1)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemEditing">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.ListViewEditEventArgs&gt; ItemEditing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.ListViewEditEventArgs&gt; ItemEditing" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ListView.ItemEditing" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Action")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.ListViewEditEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>編集操作が要求されたときに、その前に発生する、<see cref="T:System.Web.UI.WebControls.ListView" />項目が編集モードに配置されます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListView.ItemEditing>イベントを発生すると、アイテムの編集 ボタンをクリックすると、その前に、<xref:System.Web.UI.WebControls.ListView>項目が編集モードに配置されます。 ([編集] ボタンは、<xref:System.Web.UI.WebControls.Button.CommandName%2A> プロパティが "Edit" に設定されているボタン コントロールです)。これにより、編集操作の取り消しなど、このイベントが発生するたびに、カスタム ルーチンを実行できます。  
  
 A<xref:System.Web.UI.WebControls.ListViewEditEventArgs>オブジェクトが現在の項目のインデックスを確認することにより、イベント ハンドラーに渡されます。 編集操作を取り消す必要があることを指定することもできます。 編集操作をキャンセルするには設定、<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>のプロパティ、<xref:System.Web.UI.WebControls.ListViewEditEventArgs>オブジェクトを`true`です。  
  
 イベントを処理する方法の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。  
  
   
  
## Examples  
 次の例は、イベント ハンドラーを追加する方法を示します、<xref:System.Web.UI.WebControls.ListView.ItemEditing>イベント。  
  
> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、次を参照してください。[スクリプト悪用概要](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)です。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.ItemEditing#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemEditing/CS/ListViewItemEditingCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.ItemEditing#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemEditing/VB/ListViewItemEditingVB.aspx#1)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemInserted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.ListViewInsertedEventArgs&gt; ItemInserted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.ListViewInsertedEventArgs&gt; ItemInserted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ListView.ItemInserted" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Action")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.ListViewInsertedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>After insert 操作が要求されたときに発生、<see cref="T:System.Web.UI.WebControls.ListView" />コントロールは、データ ソースの項目を挿入します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListView>昇給を制御、<xref:System.Web.UI.WebControls.ListView.ItemInserted>したときに、[挿入] ボタンのイベント、<xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A>テンプレートがクリックされたまたは<xref:System.Web.UI.WebControls.ListView.InsertNewItem%2A>メソッドは、後、<xref:System.Web.UI.WebControls.ListView>コントロールがデータ ソースの項目を挿入します。 (挿入 ボタンがいるボタン コントロール<xref:System.Web.UI.WebControls.Button.CommandName%2A>プロパティが"Insert"に設定します)。これにより、挿入操作の結果を確認するなど、このイベントが発生するたびに、カスタム ルーチンを実行できます。  
  
 A<xref:System.Web.UI.WebControls.ListViewInsertedEventArgs>オブジェクトが影響を受けたレコードの数を決定することにより、イベント ハンドラーに渡されます。 どのような例外が発生した可能性があるかを判断することもできます。 挿入操作の影響を受けたレコードの数を調べるを使用して、<xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.AffectedRows%2A>プロパティです。 任意の例外が発生したかどうかを判断するのには、使用、<xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.Exception%2A>プロパティです。 かどうか、例外が処理されたイベントのハンドラーを設定して指定することも、<xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.ExceptionHandled%2A>プロパティです。 挿入されたレコードの値にアクセスする場合は、使用、<xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.Values%2A>プロパティです。  
  
 場合、<xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.AffectedRows%2A>プロパティ レポート アイテムが挿入されていないことを挿入値をバインドし直すことができます、<xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A>テンプレートを設定して、<xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.KeepInInsertMode%2A>プロパティを`true`です。  
  
 イベントを処理する方法の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。  
  
   
  
## Examples  
 次の例は、イベント ハンドラーを追加する方法を示します、<xref:System.Web.UI.WebControls.ListView.ItemInserted>イベント。  
  
> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、次を参照してください。[スクリプト悪用概要](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)です。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.ItemInserted#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemInserted/CS/ListViewItemInsertedCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.ItemInserted#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemInserted/VB/ListViewItemInsertedVB.aspx#1)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemInserting">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.ListViewInsertEventArgs&gt; ItemInserting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.ListViewInsertEventArgs&gt; ItemInserting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ListView.ItemInserting" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Action")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.ListViewInsertEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>その前に、挿入操作が要求されたときに発生、<see cref="T:System.Web.UI.WebControls.ListView" />コントロールは、挿入を実行します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListView>昇給を制御、<xref:System.Web.UI.WebControls.ListView.ItemInserting>したときに、[挿入] ボタンのイベント、<xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A>テンプレートがクリックされたまたは<xref:System.Web.UI.WebControls.ListView.InsertNewItem%2A>メソッドを呼び出す前に、<xref:System.Web.UI.WebControls.ListView>コントロールは、レコードを挿入します。 (挿入 ボタンがいるボタン コントロール<xref:System.Web.UI.WebControls.Button.CommandName%2A>プロパティが"Insert"に設定します)。これにより、このイベントが発生するたびに、カスタム ルーチンを実行できます。  
  
 A<xref:System.Web.UI.WebControls.ListViewInsertEventArgs>オブジェクトが、省略可能なコマンドに渡す引数の値を決定することにより、イベント ハンドラーに渡される、<xref:System.Web.UI.WebControls.ListView>コントロール。 挿入操作を取り消す必要があることを指定することもできます。 挿入操作をキャンセルするには設定、<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>プロパティを`true`です。 読み取りまたはを使用して、新しいレコードのフィールド値を変更することができます、<xref:System.Web.UI.WebControls.ListViewInsertEventArgs.Values%2A>プロパティです。  
  
 イベントを処理する方法の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。  
  
   
  
## Examples  
 次の例は、イベント ハンドラーを追加する方法を示します、<xref:System.Web.UI.WebControls.ListView.ItemInserting>イベント。  
  
> [!IMPORTANT]
>  この例には、潜在的なセキュリティの脅威は、ユーザー入力を受け付けるコントロールが含まれています。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、次を参照してください。[スクリプト悪用概要](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)です。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.ItemInserting#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemInserting/CS/ListViewItemInsertingCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.ItemInserting#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemInserting/VB/ListViewItemInsertingVB.aspx#1)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemPlaceholderID">
      <MemberSignature Language="C#" Value="public virtual string ItemPlaceholderID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ItemPlaceholderID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.ItemPlaceholderID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("itemPlaceholder")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはで項目プレース ホルダーの ID を設定、<see cref="T:System.Web.UI.WebControls.ListView" />コントロール。</summary>
        <value>項目プレース ホルダーの ID、<see cref="T:System.Web.UI.WebControls.ListView" />コントロール。 既定値は、"itemPlaceholder"です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.ListView.ItemPlaceholderID%2A>プロパティ項目のプレース ホルダーの ID を指定します。 項目のプレース ホルダーは、コントロールに追加する、<xref:System.Web.UI.WebControls.ListView.LayoutTemplate%2A>テンプレート (グループを使用しない) 場合や、<xref:System.Web.UI.WebControls.ListView.GroupTemplate%2A>テンプレート (グループを使用している) 場合に表す項目を表示します。  
  
   
  
## Examples  
 次の例を使用する方法を示しています、<xref:System.Web.UI.WebControls.ListView.ItemPlaceholderID%2A>の項目のプレース ホルダーの ID を指定するプロパティ、<xref:System.Web.UI.WebControls.ListView>コントロール。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.ItemContainerID#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemContainerID/CS/ListViewItemContainerIDCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.ItemContainerID#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemContainerID/VB/ListViewItemContainerIDVB.aspx#1)]
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定された ID が<see langword="null" />または空の文字列。</exception>
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;System.Web.UI.WebControls.ListViewDataItem&gt; Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class System.Web.UI.WebControls.ListViewDataItem&gt; Items" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.Items" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Web.UI.WebControls.ListViewDataItem&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コレクションを取得<see cref="T:System.Web.UI.WebControls.ListViewDataItem" />内のデータの現在のページのデータ項目を表すオブジェクト、<see cref="T:System.Web.UI.WebControls.ListView" />コントロール。</summary>
        <value>内のデータの現在のページのすべてのデータ項目を格納しているオブジェクト、<see cref="T:System.Web.UI.WebControls.ListView" />コントロール。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListView.Items%2A>内のデータ項目を格納するプロパティが使用される、<xref:System.Web.UI.WebControls.ListView>コントロール。 <xref:System.Web.UI.WebControls.ListView>コントロールを自動的に入力、<xref:System.Web.UI.WebControls.ListView.Items%2A>コレクションを 1 つ作成<xref:System.Web.UI.WebControls.ListViewDataItem>データ ソース内のデータの現在のページ内の各レコード オブジェクト。 各オブジェクトをコレクションに追加します。 このプロパティは通常、コントロール内の特定の項目にアクセスする、または項目の完全なコレクションを反復処理する場合に使用します。  
  
   
  
## Examples  
 次の例を使用する方法を示しています、<xref:System.Web.UI.WebControls.ListView.Items%2A>で編集されているアイテムにアクセスするコレクション、<xref:System.Web.UI.WebControls.ListView>コントロール。 このコード例に示されている例の一部である、<xref:System.Web.UI.WebControls.ListView.ItemEditing>イベント。  
  
 [!code-csharp[System.Web.UI.WebControls.ListView.ItemEditing#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemEditing/CS/ListViewItemEditingCS.aspx#2)]
 [!code-vb[System.Web.UI.WebControls.ListView.ItemEditing#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemEditing/VB/ListViewItemEditingVB.aspx#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemSeparatorTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate ItemSeparatorTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate ItemSeparatorTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.ItemSeparatorTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.ListViewItem))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定のカスタム コンテンツ内の項目間の区切り記号、<see cref="T:System.Web.UI.WebControls.ListView" />コントロール。</summary>
        <value>項目間の区切り記号のカスタム コンテンツを格納しているオブジェクト、<see cref="T:System.Web.UI.WebControls.ListView" />コントロール。 既定値は <see langword="null" /> です。このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.ListView.ItemSeparatorTemplate%2A>の 1 つの項目間の区切り記号の内容を定義するプロパティ、<xref:System.Web.UI.WebControls.ListView>コントロール。 <xref:System.Web.UI.WebControls.ListView.ItemSeparatorTemplate%2A>最後の 1 つを除くすべての項目が表示されます。  
  
 カスタム テンプレートを宣言によって指定するには追加、`ItemSeparatorTemplate`内の要素、<xref:System.Web.UI.WebControls.ListView>コントロール。 テンプレートの内容を追加することができますし、`ItemSeparatorTemplate`要素。  
  
   
  
## Examples  
 次の例で項目の区切り記号を作成する方法を示しています、<xref:System.Web.UI.WebControls.ListView>コントロールを使用して、<xref:System.Web.UI.WebControls.ListView.ItemSeparatorTemplate%2A>プロパティです。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.GroupTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.GroupTemplate/CS/ListViewGroupTemplateCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.GroupTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.GroupTemplate/VB/ListViewGroupTemplateVB.aspx#1)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate ItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate ItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.ItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.ListViewDataItem), System.ComponentModel.BindingDirection.TwoWay)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定のカスタム コンテンツ内のデータ項目を<see cref="T:System.Web.UI.WebControls.ListView" />コントロール。</summary>
        <value>内のデータ項目のカスタム コンテンツを格納しているオブジェクト、<see cref="T:System.Web.UI.WebControls.ListView" />コントロール。 既定値は <see langword="null" /> です。このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.ListView.ItemTemplate%2A>データ項目を表示するカスタム ユーザー インターフェイス (UI) を定義するプロパティです。 <xref:System.Web.UI.WebControls.ListView.ItemTemplate%2A>でテンプレートが必要な<xref:System.Web.UI.WebControls.ListView>コントロール。 通常、レコードのフィールドの値を表示するコントロールが含まれています。 ボタンも通常を追加するユーザーがデータを変更できるようにする場合、<xref:System.Web.UI.WebControls.ListView.ItemTemplate%2A>テンプレートをユーザー レコードを選択、編集モードに切り替えるか、またはレコードを削除します。  
  
 カスタム テンプレートを宣言によって指定するには追加、`ItemTemplate`内の要素、<xref:System.Web.UI.WebControls.ListView>コントロール。 テンプレートの内容を追加することができますし、`ItemTemplate`要素。 コントロールにバインドされているデータ ソースのフィールドの値を表示するには、データ バインディング式を使用します。 詳細については、次を参照してください。[データ バインド式の概要](http://msdn.microsoft.com/library/14cdd57d-0f82-4667-b503-73e1a96f136a)です。  
  
 組み込みの選択を実行するボタンを作成するには、削除、および編集操作はテンプレートにボタン コントロールを追加します。 設定の<xref:System.Web.UI.WebControls.Button.CommandName%2A>プロパティに値のいずれかが次の表に一覧表示します。  
  
|[ボタンの種類]|CommandName 値|  
|-----------------|-----------------------|  
|削除|"削除"|  
|編集|"Edit"|  
|選択|"Select"|  
  
   
  
## Examples  
 次の例は、データ項目に適したカスタム テンプレートを定義する方法を示します、<xref:System.Web.UI.WebControls.ListView>コントロール。  
  
> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、次を参照してください。[スクリプト悪用概要](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)です。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.EditItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.EditItemTemplate/CS/ListViewEditItemTemplateCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.EditItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.EditItemTemplate/VB/ListViewEditItemTemplateVB.aspx#1)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemUpdated">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.ListViewUpdatedEventArgs&gt; ItemUpdated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.ListViewUpdatedEventArgs&gt; ItemUpdated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ListView.ItemUpdated" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Action")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.ListViewUpdatedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>後の更新操作が要求されたときに発生、<see cref="T:System.Web.UI.WebControls.ListView" />コントロールが項目を更新します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListView.ItemUpdated>イベントは、アイテムの更新 ボタンがクリックされたときに発生します。 または、<xref:System.Web.UI.WebControls.ListView.UpdateItem%2A>メソッドは、後、<xref:System.Web.UI.WebControls.ListView>コントロールが項目を更新します。 (いるボタン コントロールは、更新ボタン<xref:System.Web.UI.WebControls.Button.CommandName%2A>プロパティが「更新」に設定します)。これにより、更新操作の結果を確認するなど、このイベントが発生するたびに、カスタム ルーチンを実行できます。  
  
 A<xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs>オブジェクトが影響を受ける行の数を決定することにより、イベント ハンドラーに渡されます。 どのような例外が発生した可能性があるかを判断することもできます。 かどうか、例外が処理されたイベントのハンドラーを設定して示すことができます、<xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs.ExceptionHandled%2A>のプロパティ、<xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs>オブジェクト。  
  
 イベントを処理する方法の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。  
  
   
  
## Examples  
 次の例は、イベント ハンドラーを追加する方法を示します、<xref:System.Web.UI.WebControls.ListView.ItemUpdated>イベント。  
  
> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、次を参照してください。[スクリプト悪用概要](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)です。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.ItemUpdated#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemUpdated/CS/ListViewItemUpdatedCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.ItemUpdated#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemUpdated/VB/ListViewItemUpdatedVB.aspx#1)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemUpdating">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.ListViewUpdateEventArgs&gt; ItemUpdating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.ListViewUpdateEventArgs&gt; ItemUpdating" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ListView.ItemUpdating" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Action")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.ListViewUpdateEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>その前に、更新操作が要求されたときに発生、<see cref="T:System.Web.UI.WebControls.ListView" />コントロールが項目を更新します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListView.ItemUpdating>イベントは、アイテムの更新 ボタンがクリックされたときに発生します。 または、<xref:System.Web.UI.WebControls.ListView.UpdateItem%2A>メソッドを呼び出す前に、<xref:System.Web.UI.WebControls.ListView>コントロールが項目を更新します。 (いるボタン コントロールは、更新ボタン<xref:System.Web.UI.WebControls.Button.CommandName%2A>プロパティが「更新」に設定します)。これにより、更新操作のキャンセルなど、このイベントが発生するたびに、カスタム ルーチンを実行できます。  
  
 A<xref:System.Web.UI.WebControls.ListViewUpdateEventArgs>オブジェクトが現在の項目のインデックスを確認することにより、イベント ハンドラーに渡されます。 更新操作を取り消す必要があることを指定することもできます。 更新操作をキャンセルするには設定、<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>のプロパティ、<xref:System.Web.UI.WebControls.ListViewUpdateEventArgs>オブジェクトを`true`です。  
  
 使用する、 <xref:System.Web.UI.WebControls.ListViewDeleteEventArgs.Keys%2A>、 <xref:System.Web.UI.WebControls.ListViewUpdateEventArgs.OldValues%2A>、および<xref:System.Web.UI.WebControls.ListViewUpdateEventArgs.NewValues%2A>値は、データ ソースに渡される前に、のコレクション。 これらのコレクションを使用する一般的な方法では、データ ソースに格納する前に、ユーザーによって指定された値を HTML エンコードです。 これにより、スクリプト インジェクション攻撃を防止できます。  
  
 イベントを処理する方法の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。  
  
   
  
## Examples  
 次の例は、イベント ハンドラーを追加する方法を示します、<xref:System.Web.UI.WebControls.ListView.ItemUpdating>イベント。  
  
> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、次を参照してください。[スクリプト悪用概要](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)です。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.ItemUpdating#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemUpdating/CS/ListViewItemUpdatingCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.ItemUpdating#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemUpdating/VB/ListViewItemUpdatingVB.aspx#1)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LayoutCreated">
      <MemberSignature Language="C#" Value="public event EventHandler LayoutCreated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler LayoutCreated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ListView.LayoutCreated" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>発生したときに、<see cref="P:System.Web.UI.WebControls.ListView.LayoutTemplate" />でテンプレートを作成、<see cref="T:System.Web.UI.WebControls.ListView" />コントロール。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 前に、<xref:System.Web.UI.WebControls.ListView>コントロールを表示できる、<xref:System.Web.UI.WebControls.ListView.LayoutTemplate%2A>コントロールのルート コンテナーとして機能するようにテンプレートを作成する必要があります。 <xref:System.Web.UI.WebControls.ListView.LayoutCreated>イベントが発生したときのレイアウト テンプレート、<xref:System.Web.UI.WebControls.ListView>コントロールを作成します。 これにより、このイベントが発生するたびに、カスタム ルーチンを実行できます。  
  
 イベントを処理する方法の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LayoutTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate LayoutTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate LayoutTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.LayoutTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.ListView))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはルート コンテナー内のカスタム コンテンツを設定、<see cref="T:System.Web.UI.WebControls.ListView" />コントロール。</summary>
        <value>ルート コンテナー内のカスタム コンテンツを格納しているオブジェクト、<see cref="T:System.Web.UI.WebControls.ListView" />コントロール。 既定値は <see langword="null" /> です。このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.ListView.LayoutTemplate%2A>のルート コンテナーのカスタム ユーザー インターフェイス (UI) を定義するプロパティ、<xref:System.Web.UI.WebControls.ListView>コントロール。  
  
 レイアウト テンプレートを指定するには追加、`LayoutTemplate`内の要素、<xref:System.Web.UI.WebControls.ListView>コントロール。 テンプレートの内容を追加することができますし、`LayoutTemplate`要素。  
  
 <xref:System.Web.UI.WebControls.ListView.LayoutTemplate%2A>コンテンツは、テーブルの行などのプレース ホルダー コントロールを含める必要があります (`tr`) によって定義されているアイテムの要素、<xref:System.Web.UI.WebControls.ListView.ItemTemplate%2A>テンプレートで定義されているグループや、<xref:System.Web.UI.WebControls.ListView.GroupTemplate%2A>テンプレート。 プレース ホルダー コントロールがあります、`runat`属性"server"に設定され、`ID`属性の値に設定、<xref:System.Web.UI.WebControls.ListView.ItemPlaceholderID%2A>または<xref:System.Web.UI.WebControls.ListView.GroupPlaceholderID%2A>かどうかに応じて、プロパティ、<xref:System.Web.UI.WebControls.ListView>コントロールがグループを使用します。  
  
 <xref:System.Web.UI.WebControls.ListView.LayoutTemplate%2A>でテンプレートが必要としない、<xref:System.Web.UI.WebControls.ListView>コントロール。 使用することができます、<xref:System.Web.UI.WebControls.ListView>ことがなく制御、<xref:System.Web.UI.WebControls.ListView.LayoutTemplate%2A>されずにも既知の ID を持つプレース ホルダー サーバー コントロール  
  
   
  
## Examples  
 次の例は、ルート コンテナー内のカスタム テンプレートを定義する方法を示します、<xref:System.Web.UI.WebControls.ListView>コントロール。  
  
> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、次を参照してください。[スクリプト悪用概要](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)です。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.EditItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.EditItemTemplate/CS/ListViewEditItemTemplateCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.EditItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.EditItemTemplate/VB/ListViewEditItemTemplateVB.aspx#1)]
  
 次の例を使用する方法を示しています、<xref:System.Web.UI.WebControls.ListView>コントロールを定義することがなく、<xref:System.Web.UI.WebControls.ListView.LayoutTemplate%2A>コントロール内のテンプレートです。 既知の ID を持つサーバー コントロールも指定されていません。  
  
```  
<asp:ListView ID="ListView1" runat="server">  
  <ItemTemplate>  
    <% Eval("LastName")%>  
  </ItemTemplate>  
</asp:ListView>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadControlState">
      <MemberSignature Language="C#" Value="protected override void LoadControlState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void LoadControlState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.LoadControlState(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">コントロールの保存されているコントロールの状態値を格納するオブジェクト。</param>
        <summary>指定したプロパティの状態を読み込みます、 <see cref="T:System.Web.UI.WebControls.ListView" /> 、永続化する必要がありますコントロール場合でも、<see cref="P:System.Web.UI.Control.EnableViewState" />プロパティに設定されている<see langword="false" />です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドが拡張するコントロールの開発者によって使用、主に、<xref:System.Web.UI.WebControls.ListView>コントロール。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.LoadViewState(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">コントロールの保存されているビュー ステートの値を格納するオブジェクト。</param>
        <summary>以前に保存した <see cref="T:System.Web.UI.WebControls.ListView" /> コントロールのビュー ステートを読み込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、主に使用、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]インフラストラクチャ コードから直接使用するものではありません。 ただし、コントロールの開発者は、カスタム サーバー コントロールがそのビューステートを復元する方法を指定するには、このメソッドをオーバーライドすることができます。 詳細については、次を参照してください。 [ASP.NET 状態管理の概要](http://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce)です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximumRows">
      <MemberSignature Language="C#" Value="protected virtual int MaximumRows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaximumRows" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.MaximumRows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>1 つのページに表示する項目の最大数を取得、<see cref="T:System.Web.UI.WebControls.ListView" />コントロール。</summary>
        <value>1 つのページに表示する項目の最大数、<see cref="T:System.Web.UI.WebControls.ListView" />コントロール。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 場合、<xref:System.Web.UI.WebControls.DataPager>オブジェクトに関連付けられている、<xref:System.Web.UI.WebControls.ListView>コントロール、<xref:System.Web.UI.WebControls.ListView.MaximumRows%2A>プロパティの値がによって制御されます、<xref:System.Web.UI.WebControls.DataPager>オブジェクト、およびこれと同じ、<xref:System.Web.UI.WebControls.DataPager.PageSize%2A>プロパティの値。 それ以外の場合、値は-1 です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBubbleEvent">
      <MemberSignature Language="C#" Value="protected override bool OnBubbleEvent (object source, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool OnBubbleEvent(object source, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.OnBubbleEvent(System.Object,System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="source">イベントのソース。</param>
        <param name="e">イベントのデータ。</param>
        <summary>イベントをするかどうか、<see cref="T:System.Web.UI.WebControls.ListView" />コントロールを処理する必要があります。</summary>
        <returns>
          <see langword="true" />場合は、イベントを処理する必要があります。それ以外の場合、<see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListView.OnBubbleEvent%2A>がメソッドを使用、<xref:System.Web.UI.WebControls.ListView>必要に応じて、コントロールの階層から渡されたイベントを処理するコントロール。 プロパティを調べることで、イベントを処理するかどうかを決定が、<xref:System.EventArgs>に含まれているオブジェクト、`e`パラメーター。 イベントを処理する必要があります、ときに、メソッドは、適切な操作を実行します。 その他のイベントは無視され、コントロールの階層に渡されます。 このメソッドの戻り値では、イベントを処理するか、コントロールの階層構造のイベントを渡すかどうかを示します。  
  
 <xref:System.Web.UI.WebControls.ListView>コントロールがコントロールによって認識されるボタンのいずれかがクリックされたときに、適切な操作を実行するには、このメソッドの基本実装をオーバーライドします。 次の表に、ボタンを<xref:System.Web.UI.WebControls.ListView>コントロールを認識します。  
  
|CommandName 値|説明|  
|-----------------------|-----------------|  
|[キャンセル]|編集または挿入操作をキャンセルします。 <xref:System.Web.UI.WebControls.ListView.ItemCanceling> イベントを発生させます。|  
|"削除"|データ ソースから現在のレコードを削除します。 発生させる、<xref:System.Web.UI.WebControls.ListView.ItemDeleted>と<xref:System.Web.UI.WebControls.ListView.ItemDeleting>イベント。|  
|"Select"|セット、<xref:System.Web.UI.WebControls.ListView.SelectedIndex%2A>プロパティを<xref:System.Web.UI.WebControls.ListViewDataItem.DisplayIndex%2A>アイテムのプロパティの値。 表示、<xref:System.Web.UI.WebControls.ListView.SelectedItemTemplate%2A>項目用のテンプレートです。 発生させる、<xref:System.Web.UI.WebControls.ListView.SelectedIndexChanging>と<xref:System.Web.UI.WebControls.ListView.SelectedIndexChanged>イベント。|  
|"Edit"|編集モードでは、アイテムを配置します。 表示、<xref:System.Web.UI.WebControls.ListView.EditItemTemplate%2A>項目用のテンプレートです。 <xref:System.Web.UI.WebControls.ListView.ItemEditing> イベントを発生させます。|  
|"Insert"|バインドされた値を挿入、<xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A>データ ソースにテンプレート。 発生させる、<xref:System.Web.UI.WebControls.ListView.ItemInserting>と<xref:System.Web.UI.WebControls.ListView.ItemInserted>イベント。|  
|[更新]|バインドされた値を使って、データ ソースの現在のレコードを更新、<xref:System.Web.UI.WebControls.ListView.EditItemTemplate%2A>テンプレート。 発生させる、<xref:System.Web.UI.WebControls.ListView.ItemUpdating>と<xref:System.Web.UI.WebControls.ListView.ItemUpdated>イベント。|  
|"Sort"|示されている列を並べ替え、`CommandArgument`ボタンのプロパティです。 発生させる、<xref:System.Web.UI.WebControls.ListView.Sorting>と<xref:System.Web.UI.WebControls.ListView.Sorted>イベント。|  
  
 このバージョンのメソッドを返します`true`場合、これらのボタンのいずれかがコントロールによって処理されるイベントを発生させます。 イベントのバブルの詳細については、次を参照してください。 [NIB: イベントとデリゲート](http://msdn.microsoft.com/en-us/d98fd58b-fa4f-4598-8378-addf4355a115)です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.OnInit(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベントのデータ。</param>
        <summary><see cref="E:System.Web.UI.Control.Init" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドが呼び出されたら、Web サーバー コントロールは、インスタンスを作成および設定するために必要な初期化の手順を実行する必要があります。 この段階で、サーバー コントロールのライフ サイクルのコントロールのビュー ステートがまだ設定されていません。 さらがこのコントロールの親または子に関係なく、このメソッドが呼び出されたときにその他のサーバー コントロールにアクセスすることはできません。 他のサーバー コントロールが作成され、アクセスできる状態である保証はありません。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)です。  
  
 <xref:System.Web.UI.WebControls.ListView.OnInit%2A>メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>オーバーライドする場合<see cref="M:System.Web.UI.WebControls.ListView.OnInit(System.EventArgs)" />呼び出し、基本クラスの派生クラスで<see cref="M:System.Web.UI.WebControls.ListView.OnInit(System.EventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnItemCanceling">
      <MemberSignature Language="C#" Value="protected virtual void OnItemCanceling (System.Web.UI.WebControls.ListViewCancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemCanceling(class System.Web.UI.WebControls.ListViewCancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.OnItemCanceling(System.Web.UI.WebControls.ListViewCancelEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ListViewCancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベントのデータ。</param>
        <summary><see cref="E:System.Web.UI.WebControls.ListView.ItemCanceling" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListView>制御が発生し、<xref:System.Web.UI.WebControls.ListView.ItemCanceling>コントロールに [キャンセル] ボタンをクリックしたときにイベントをクリックするが終了する前に挿入または編集モードです。 (いるボタン コントロールは、[キャンセル] ボタン<xref:System.Web.UI.WebControls.Button.CommandName%2A>プロパティが"Cancel"に設定します)。これにより、なりそうな場合、項目が望ましくない状態で、[キャンセル] 操作を停止するなど、このイベントが発生するたびに、カスタム ルーチンを実行できます。  
  
 <xref:System.Web.UI.WebControls.ListView.OnItemCanceling%2A>メソッドによって呼び出されます、<xref:System.Web.UI.WebControls.ListView>させるコントロール、<xref:System.Web.UI.WebControls.ListView.ItemCanceling>イベント。 これは、通常使用コントロールの開発者によって拡張するとき、<xref:System.Web.UI.WebControls.ListView>クラスです。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)です。  
  
 <xref:System.Web.UI.WebControls.ListView.OnItemCanceling%2A>メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="E:System.Web.UI.WebControls.ListView.ItemCanceling" /> イベントのハンドラーがありません。</exception>
        <block subset="none" type="overrides">
          <para>オーバーライドする場合<see cref="M:System.Web.UI.WebControls.ListView.OnItemCanceling(System.Web.UI.WebControls.ListViewCancelEventArgs)" />呼び出し、基本クラスの派生クラスで<see cref="M:System.Web.UI.WebControls.ListView.OnItemCanceling(System.Web.UI.WebControls.ListViewCancelEventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnItemCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnItemCommand (System.Web.UI.WebControls.ListViewCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemCommand(class System.Web.UI.WebControls.ListViewCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.OnItemCommand(System.Web.UI.WebControls.ListViewCommandEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ListViewCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベントのデータ。</param>
        <summary><see cref="E:System.Web.UI.WebControls.ListView.ItemCommand" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListView.ItemCommand>項目テンプレートにボタンがクリックされたときに、コマンドが実行される前にイベントが発生します。 これにより、応答を指定されたカスタム ルーチンを実行する<xref:System.Web.UI.WebControls.Button.CommandName%2A>または<xref:System.Web.UI.WebControls.Button.CommandArgument%2A>値のこのイベントが発生するたびにします。  
  
 <xref:System.Web.UI.WebControls.ListView.OnItemCommand%2A>メソッドによって呼び出されます、<xref:System.Web.UI.WebControls.ListView>させるコントロール、<xref:System.Web.UI.WebControls.ListView.ItemCommand>イベント。 これは、通常使用コントロールの開発者によって拡張するとき、<xref:System.Web.UI.WebControls.ListView>クラスです。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)です。  
  
 <xref:System.Web.UI.WebControls.ListView.OnItemCommand%2A>メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>オーバーライドする場合<see cref="M:System.Web.UI.WebControls.ListView.OnItemCommand(System.Web.UI.WebControls.ListViewCommandEventArgs)" />呼び出し、基本クラスの派生クラスで<see cref="M:System.Web.UI.WebControls.ListView.OnItemCommand(System.Web.UI.WebControls.ListViewCommandEventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnItemCreated">
      <MemberSignature Language="C#" Value="protected virtual void OnItemCreated (System.Web.UI.WebControls.ListViewItemEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemCreated(class System.Web.UI.WebControls.ListViewItemEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.OnItemCreated(System.Web.UI.WebControls.ListViewItemEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ListViewItemEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベントのデータ。</param>
        <summary><see cref="E:System.Web.UI.WebControls.ListView.ItemCreated" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 前に、<xref:System.Web.UI.WebControls.ListView>コントロールを表示できる、<xref:System.Web.UI.WebControls.ListViewItem>コントロール内の各項目のオブジェクトを作成する必要があります。 <xref:System.Web.UI.WebControls.ListView.ItemCreated>イベントが発生したときの各項目、<xref:System.Web.UI.WebControls.ListView>コントロールを作成します。 これにより、コンテンツ項目を追加するなど、このイベントが発生するたびに、カスタム ルーチンを実行できます。  
  
 <xref:System.Web.UI.WebControls.ListView.OnItemCreated%2A>メソッドによって呼び出されます、<xref:System.Web.UI.WebControls.ListView>させるコントロール、<xref:System.Web.UI.WebControls.ListView.ItemCreated>イベント。 これは、通常使用コントロールの開発者によって拡張するとき、<xref:System.Web.UI.WebControls.ListView>クラスです。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)です。  
  
 <xref:System.Web.UI.WebControls.ListView.OnItemCreated%2A>メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>オーバーライドする場合<see cref="M:System.Web.UI.WebControls.ListView.OnItemCreated(System.Web.UI.WebControls.ListViewItemEventArgs)" />呼び出し、基本クラスの派生クラスで<see cref="M:System.Web.UI.WebControls.ListView.OnItemCreated(System.Web.UI.WebControls.ListViewItemEventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnItemDataBound">
      <MemberSignature Language="C#" Value="protected virtual void OnItemDataBound (System.Web.UI.WebControls.ListViewItemEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemDataBound(class System.Web.UI.WebControls.ListViewItemEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.OnItemDataBound(System.Web.UI.WebControls.ListViewItemEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ListViewItemEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベントのデータ。</param>
        <summary><see cref="E:System.Web.UI.WebControls.ListView.ItemDataBound" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 前に、<xref:System.Web.UI.WebControls.ListView>コントロールを表示できる、コントロール内の各項目は、データ ソース内のレコードにバインドする必要があります。 <xref:System.Web.UI.WebControls.ListView.ItemDataBound>イベントが発生したときに、<xref:System.Web.UI.WebControls.ListViewItem>オブジェクトが、データ項目にバインドします。 これにより、バインディング プロセス中にデータ項目の値を変更するなど、このイベントが発生するたびに、カスタム ルーチンを実行できます。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)です。  
  
 <xref:System.Web.UI.WebControls.ListView.OnItemDataBound%2A>メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>オーバーライドする場合<see cref="M:System.Web.UI.WebControls.ListView.OnItemDataBound(System.Web.UI.WebControls.ListViewItemEventArgs)" />派生クラスで、基本クラスを呼び出す必要があります<see cref="M:System.Web.UI.WebControls.ListView.OnItemDataBound(System.Web.UI.WebControls.ListViewItemEventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnItemDeleted">
      <MemberSignature Language="C#" Value="protected virtual void OnItemDeleted (System.Web.UI.WebControls.ListViewDeletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemDeleted(class System.Web.UI.WebControls.ListViewDeletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.OnItemDeleted(System.Web.UI.WebControls.ListViewDeletedEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ListViewDeletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベントのデータ。</param>
        <summary><see cref="E:System.Web.UI.WebControls.ListView.ItemDeleted" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListView.ItemDeleted>イベントは、アイテムの削除 ボタンがクリックされたときに発生します。 または、<xref:System.Web.UI.WebControls.ListView.DeleteItem%2A>メソッドは、後、<xref:System.Web.UI.WebControls.ListView>コントロールが項目を削除します。 ([削除] ボタンは <xref:System.Web.UI.WebControls.Button.CommandName%2A> プロパティが "Delete" に設定されているボタン コントロールです)。これにより、削除操作の結果を確認するなど、このイベントが発生するたびに、カスタム ルーチンを実行できます。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)です。  
  
 <xref:System.Web.UI.WebControls.ListView.OnItemDeleted%2A>メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>オーバーライドする場合<see cref="M:System.Web.UI.WebControls.ListView.OnItemDeleted(System.Web.UI.WebControls.ListViewDeletedEventArgs)" />呼び出し、基本クラスの派生クラスで<see cref="M:System.Web.UI.WebControls.ListView.OnItemDeleted(System.Web.UI.WebControls.ListViewDeletedEventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnItemDeleting">
      <MemberSignature Language="C#" Value="protected virtual void OnItemDeleting (System.Web.UI.WebControls.ListViewDeleteEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemDeleting(class System.Web.UI.WebControls.ListViewDeleteEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.OnItemDeleting(System.Web.UI.WebControls.ListViewDeleteEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ListViewDeleteEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベントのデータ。</param>
        <summary><see cref="E:System.Web.UI.WebControls.ListView.ItemDeleting" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListView.ItemDeleting>イベントは、アイテムの削除 ボタンがクリックされたときに発生します。 または、<xref:System.Web.UI.WebControls.ListView.DeleteItem%2A>メソッドを呼び出す前に、<xref:System.Web.UI.WebControls.ListView>コントロールが項目を削除します。 ([削除] ボタンは <xref:System.Web.UI.WebControls.Button.CommandName%2A> プロパティが "Delete" に設定されているボタン コントロールです)。これにより、削除操作の取り消しなど、このイベントが発生するたびに、カスタム ルーチンを実行できます。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)です。  
  
 <xref:System.Web.UI.WebControls.ListView.OnItemDeleting%2A>メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Web.UI.WebControls.ListView" />を使用してデータ ソース コントロールにバインドされていないことをコントロール、<see cref="P:System.Web.UI.WebControls.DataBoundControl.DataSourceID" />プロパティです。</exception>
        <block subset="none" type="overrides">
          <para>オーバーライドする場合<see cref="M:System.Web.UI.WebControls.ListView.OnItemDeleting(System.Web.UI.WebControls.ListViewDeleteEventArgs)" />呼び出し、基本クラスの派生クラスで<see cref="M:System.Web.UI.WebControls.ListView.OnItemDeleting(System.Web.UI.WebControls.ListViewDeleteEventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnItemEditing">
      <MemberSignature Language="C#" Value="protected virtual void OnItemEditing (System.Web.UI.WebControls.ListViewEditEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemEditing(class System.Web.UI.WebControls.ListViewEditEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.OnItemEditing(System.Web.UI.WebControls.ListViewEditEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ListViewEditEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベントのデータ。</param>
        <summary><see cref="E:System.Web.UI.WebControls.ListView.ItemEditing" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListView.ItemEditing>イベントを発生すると、アイテムの編集 ボタンをクリックすると、その前に、<xref:System.Web.UI.WebControls.ListView>コントロールが編集モードに入ります。 ([編集] ボタンは、<xref:System.Web.UI.WebControls.Button.CommandName%2A> プロパティが "Edit" に設定されているボタン コントロールです)。これにより、編集操作の取り消しなど、このイベントが発生するたびに、カスタム ルーチンを実行できます。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)です。  
  
 <xref:System.Web.UI.WebControls.ListView.OnItemEditing%2A>メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Web.UI.WebControls.ListView" />を使用してデータ ソース コントロールにバインドされていないことをコントロール、<see cref="P:System.Web.UI.WebControls.DataBoundControl.DataSourceID" />プロパティです。</exception>
        <block subset="none" type="overrides">
          <para>オーバーライドする場合<see cref="M:System.Web.UI.WebControls.ListView.OnItemEditing(System.Web.UI.WebControls.ListViewEditEventArgs)" />呼び出し、基本クラスの派生クラスで<see cref="M:System.Web.UI.WebControls.ListView.OnItemEditing(System.Web.UI.WebControls.ListViewEditEventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnItemInserted">
      <MemberSignature Language="C#" Value="protected virtual void OnItemInserted (System.Web.UI.WebControls.ListViewInsertedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemInserted(class System.Web.UI.WebControls.ListViewInsertedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.OnItemInserted(System.Web.UI.WebControls.ListViewInsertedEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ListViewInsertedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベントのデータ。</param>
        <summary><see cref="E:System.Web.UI.WebControls.ListView.ItemInserted" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListView.ItemInserted>イベントは、アイテムの挿入 ボタンがクリックされたときに発生します。 または、<xref:System.Web.UI.WebControls.ListView.InsertNewItem%2A>メソッドは、後、<xref:System.Web.UI.WebControls.ListView>コントロールが項目を挿入します。 (挿入 ボタンがいるボタン コントロール<xref:System.Web.UI.WebControls.Button.CommandName%2A>プロパティが"Insert"に設定します)。これにより、挿入されたアイテムのデータベースから自動生成された値を取得するなど、このイベントが発生するたびに、カスタム ルーチンを実行できます。  
  
 <xref:System.Web.UI.WebControls.ListView.OnItemInserted%2A>メソッドによって呼び出されます、<xref:System.Web.UI.WebControls.ListView>させるコントロール、<xref:System.Web.UI.WebControls.ListView.ItemInserted>イベント。 これは、通常使用コントロールの開発者によって拡張するとき、<xref:System.Web.UI.WebControls.ListView>クラスです。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)です。  
  
 <xref:System.Web.UI.WebControls.ListView.OnItemInserted%2A>メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>オーバーライドする場合<see cref="M:System.Web.UI.WebControls.ListView.OnItemInserted(System.Web.UI.WebControls.ListViewInsertedEventArgs)" />呼び出し、基本クラスの派生クラスで<see cref="M:System.Web.UI.WebControls.ListView.OnItemInserted(System.Web.UI.WebControls.ListViewInsertedEventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnItemInserting">
      <MemberSignature Language="C#" Value="protected virtual void OnItemInserting (System.Web.UI.WebControls.ListViewInsertEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemInserting(class System.Web.UI.WebControls.ListViewInsertEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.OnItemInserting(System.Web.UI.WebControls.ListViewInsertEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ListViewInsertEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベントのデータ。</param>
        <summary><see cref="E:System.Web.UI.WebControls.ListView.ItemInserting" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListView>昇給を制御、<xref:System.Web.UI.WebControls.ListView.ItemInserting>イベントと、コントロールの挿入 ボタンがクリックされたまたは<xref:System.Web.UI.WebControls.ListView.InsertNewItem%2A>メソッドを呼び出す前に、<xref:System.Web.UI.WebControls.ListView>コントロールは、レコードを挿入します。 (挿入 ボタンがいるボタン コントロール<xref:System.Web.UI.WebControls.Button.CommandName%2A>プロパティが"Insert"に設定します)。これにより、このイベントが発生したときに、カスタム ルーチンを実行できます。  
  
 <xref:System.Web.UI.WebControls.ListView.OnItemInserting%2A>メソッドによって呼び出されます、<xref:System.Web.UI.WebControls.ListView>させるコントロール、<xref:System.Web.UI.WebControls.ListView.ItemInserting>イベント。 これは、通常使用コントロールの開発者によって拡張するとき、<xref:System.Web.UI.WebControls.ListView>クラスです。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)です。  
  
 <xref:System.Web.UI.WebControls.ListView.OnItemInserting%2A>メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Web.UI.WebControls.ListView" />を使用してデータ ソース コントロールにバインドされていないことをコントロール、<see cref="P:System.Web.UI.WebControls.DataBoundControl.DataSourceID" />プロパティです。</exception>
        <block subset="none" type="overrides">
          <para>オーバーライドする場合<see cref="M:System.Web.UI.WebControls.ListView.OnItemInserting(System.Web.UI.WebControls.ListViewInsertEventArgs)" />呼び出し、基本クラスの派生クラスで<see cref="M:System.Web.UI.WebControls.ListView.OnItemInserting(System.Web.UI.WebControls.ListViewInsertEventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnItemUpdated">
      <MemberSignature Language="C#" Value="protected virtual void OnItemUpdated (System.Web.UI.WebControls.ListViewUpdatedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemUpdated(class System.Web.UI.WebControls.ListViewUpdatedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.OnItemUpdated(System.Web.UI.WebControls.ListViewUpdatedEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ListViewUpdatedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベントのデータ。</param>
        <summary><see cref="E:System.Web.UI.WebControls.ListView.ItemUpdated" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListView.ItemUpdated>イベントは、アイテムの更新 ボタンがクリックされたときに発生します。 または、<xref:System.Web.UI.WebControls.ListView.UpdateItem%2A>メソッドは、後、<xref:System.Web.UI.WebControls.ListView>コントロールが項目を更新します。 (いるボタン コントロールは、更新ボタン<xref:System.Web.UI.WebControls.Button.CommandName%2A>プロパティが「更新」に設定します)。これにより、更新操作の結果を確認するなど、このイベントが発生するたびに、カスタム ルーチンを実行できます。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)です。  
  
 <xref:System.Web.UI.WebControls.ListView.OnItemUpdated%2A>メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>オーバーライドする場合<see cref="M:System.Web.UI.WebControls.ListView.OnItemUpdated(System.Web.UI.WebControls.ListViewUpdatedEventArgs)" />呼び出し、基本クラスの派生クラスで<see cref="M:System.Web.UI.WebControls.ListView.OnItemUpdated(System.Web.UI.WebControls.ListViewUpdatedEventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnItemUpdating">
      <MemberSignature Language="C#" Value="protected virtual void OnItemUpdating (System.Web.UI.WebControls.ListViewUpdateEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemUpdating(class System.Web.UI.WebControls.ListViewUpdateEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.OnItemUpdating(System.Web.UI.WebControls.ListViewUpdateEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ListViewUpdateEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベントのデータ。</param>
        <summary><see cref="E:System.Web.UI.WebControls.ListView.ItemUpdating" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListView.ItemUpdating>イベントは、アイテムの更新 ボタンがクリックされたときに発生します。 または、<xref:System.Web.UI.WebControls.ListView.UpdateItem%2A>メソッドを呼び出す前に、<xref:System.Web.UI.WebControls.ListView>コントロールが項目を更新します。 (いるボタン コントロールは、更新ボタン<xref:System.Web.UI.WebControls.Button.CommandName%2A>プロパティが「更新」に設定します)。これにより、更新操作のキャンセルなど、このイベントが発生するたびに、カスタム ルーチンを実行できます。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)です。  
  
 <xref:System.Web.UI.WebControls.ListView.OnItemUpdating%2A>メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Web.UI.WebControls.ListView" />を使用してデータ ソース コントロールにバインドされていないことをコントロール、<see cref="P:System.Web.UI.WebControls.DataBoundControl.DataSourceID" />プロパティです。</exception>
        <block subset="none" type="overrides">
          <para>オーバーライドする場合<see cref="M:System.Web.UI.WebControls.ListView.OnItemUpdating(System.Web.UI.WebControls.ListViewUpdateEventArgs)" />呼び出し、基本クラスの派生クラスで<see cref="M:System.Web.UI.WebControls.ListView.OnItemUpdating(System.Web.UI.WebControls.ListViewUpdateEventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnLayoutCreated">
      <MemberSignature Language="C#" Value="protected virtual void OnLayoutCreated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLayoutCreated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.OnLayoutCreated(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベントのデータ。</param>
        <summary><see cref="E:System.Web.UI.WebControls.ListView.LayoutCreated" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 前に、<xref:System.Web.UI.WebControls.ListView>コントロールを表示できる、<xref:System.Web.UI.WebControls.ListViewItem>コントロールのコンテナーとして機能するオブジェクトを作成する必要があります。 <xref:System.Web.UI.WebControls.ListView.LayoutCreated>でレイアウト テンプレートの作成時にイベントが発生した、<xref:System.Web.UI.WebControls.ListView>コントロール。 これにより、内部にあるコントロールの可視性の変更など、このイベントが発生するたびに、カスタム ルーチンを実行する、<xref:System.Web.UI.WebControls.ListView.LayoutTemplate%2A>テンプレート。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)です。  
  
 <xref:System.Web.UI.WebControls.ListView.OnLayoutCreated%2A>メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>オーバーライドする場合<see cref="M:System.Web.UI.WebControls.ListView.OnLayoutCreated(System.EventArgs)" />呼び出し、基本クラスの派生クラスで<see cref="M:System.Web.UI.WebControls.ListView.OnLayoutCreated(System.EventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnPagePropertiesChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnPagePropertiesChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPagePropertiesChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.OnPagePropertiesChanged(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベントのデータ。</param>
        <summary><see cref="E:System.Web.UI.WebControls.ListView.PagePropertiesChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListView.PagePropertiesChanged>イベントは、ページのプロパティを変更した後、<xref:System.Web.UI.WebControls.ListView>コントロールを使用して、新しい値の設定、<xref:System.Web.UI.WebControls.ListView.SetPageProperties%2A>メソッドです。 これにより、このイベントが発生するたびに、カスタム ページング操作などのカスタムのルーチンを実行することができます。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)です。  
  
 <xref:System.Web.UI.WebControls.ListView.OnPagePropertiesChanged%2A>メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>オーバーライドする場合<see cref="M:System.Web.UI.WebControls.ListView.OnPagePropertiesChanged(System.EventArgs)" />呼び出し、基本クラスの派生クラスで<see cref="M:System.Web.UI.WebControls.ListView.OnPagePropertiesChanged(System.EventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnPagePropertiesChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnPagePropertiesChanging (System.Web.UI.WebControls.PagePropertiesChangingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPagePropertiesChanging(class System.Web.UI.WebControls.PagePropertiesChangingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.OnPagePropertiesChanging(System.Web.UI.WebControls.PagePropertiesChangingEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.PagePropertiesChangingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベントのデータ。</param>
        <summary><see cref="E:System.Web.UI.WebControls.ListView.PagePropertiesChanging" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListView.PagePropertiesChanging>イベントは、ページのプロパティを変更する前に、<xref:System.Web.UI.WebControls.ListView>コントロールを使用して、新しい値の設定、<xref:System.Web.UI.WebControls.ListView.SetPageProperties%2A>メソッドです。 これは、ように消去など、このイベントが発生するたびに、カスタム ルーチンを実行する、<xref:System.Web.UI.WebControls.ListView.SelectedIndex%2A>または<xref:System.Web.UI.WebControls.ListView.EditIndex%2A>プロパティです。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)です。  
  
 <xref:System.Web.UI.WebControls.ListView.OnPagePropertiesChanging%2A>メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>オーバーライドする場合<see cref="M:System.Web.UI.WebControls.ListView.OnPagePropertiesChanging(System.Web.UI.WebControls.PagePropertiesChangingEventArgs)" />呼び出し、基本クラスの派生クラスで<see cref="M:System.Web.UI.WebControls.ListView.OnPagePropertiesChanging(System.Web.UI.WebControls.PagePropertiesChangingEventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnSelectedIndexChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectedIndexChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectedIndexChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.OnSelectedIndexChanged(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベントのデータ。</param>
        <summary><see cref="E:System.Web.UI.WebControls.ListView.SelectedIndexChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListView.SelectedIndexChanged>イベントが発生した後、アイテムの選択 ボタンがクリックされたときに、<xref:System.Web.UI.WebControls.ListView>コントロールは、select 操作を処理します。 (選択ボタンがいるボタン コントロール<xref:System.Web.UI.WebControls.Button.CommandName%2A>プロパティが"Select"に設定します)。これにより、現在選択されている項目の状態のラベルの更新など、このイベントが発生するたびに、カスタム ルーチンを実行できます。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)です。  
  
 <xref:System.Web.UI.WebControls.ListView.OnSelectedIndexChanged%2A>メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>オーバーライドする場合<see cref="M:System.Web.UI.WebControls.ListView.OnSelectedIndexChanged(System.EventArgs)" />呼び出し、基本クラスの派生クラスで<see cref="M:System.Web.UI.WebControls.ListView.OnSelectedIndexChanged(System.EventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnSelectedIndexChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectedIndexChanging (System.Web.UI.WebControls.ListViewSelectEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectedIndexChanging(class System.Web.UI.WebControls.ListViewSelectEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.OnSelectedIndexChanging(System.Web.UI.WebControls.ListViewSelectEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ListViewSelectEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベントのデータ。</param>
        <summary><see cref="E:System.Web.UI.WebControls.ListView.SelectedIndexChanging" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListView.SelectedIndexChanging>イベントを発生すると、アイテムの選択 ボタンをクリックすると、その前に、<xref:System.Web.UI.WebControls.ListView>コントロールは、select 操作を処理します。 (選択ボタンがいるボタン コントロール<xref:System.Web.UI.WebControls.Button.CommandName%2A>プロパティが"Select"に設定します)。これにより、選択操作のキャンセルなど、このイベントが発生するたびに、カスタム ルーチンを実行できます。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)です。  
  
 <xref:System.Web.UI.WebControls.ListView.OnSelectedIndexChanging%2A>メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="E:System.Web.UI.WebControls.ListView.SelectedIndexChanging" /> イベントのハンドラーがありません。</exception>
        <block subset="none" type="overrides">
          <para>オーバーライドする場合<see cref="M:System.Web.UI.WebControls.ListView.OnSelectedIndexChanging(System.Web.UI.WebControls.ListViewSelectEventArgs)" />呼び出し、基本クラスの派生クラスで<see cref="M:System.Web.UI.WebControls.ListView.OnSelectedIndexChanging(System.Web.UI.WebControls.ListViewSelectEventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnSorted">
      <MemberSignature Language="C#" Value="protected virtual void OnSorted (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSorted(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.OnSorted(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベントのデータ。</param>
        <summary><see cref="E:System.Web.UI.WebControls.ListView.Sorted" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListView.Sorted>イベントは、並べ替えボタンがクリックされたときに発生します。 または、<xref:System.Web.UI.WebControls.ListView.Sort%2A>メソッドは、後、<xref:System.Web.UI.WebControls.ListView>コントロールは、並べ替え操作を処理します。 (いるボタン コントロールは、並べ替えボタン<xref:System.Web.UI.WebControls.Button.CommandName%2A>プロパティが"Sort"に設定します)。これにより、このイベントが発生するたびに、カスタム ルーチンを実行できます。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)です。  
  
 <xref:System.Web.UI.WebControls.ListView.OnSorted%2A>メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>オーバーライドする場合<see cref="M:System.Web.UI.WebControls.ListView.OnSorted(System.EventArgs)" />呼び出し、基本クラスの派生クラスで<see cref="M:System.Web.UI.WebControls.ListView.OnSorted(System.EventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnSorting">
      <MemberSignature Language="C#" Value="protected virtual void OnSorting (System.Web.UI.WebControls.ListViewSortEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSorting(class System.Web.UI.WebControls.ListViewSortEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.OnSorting(System.Web.UI.WebControls.ListViewSortEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ListViewSortEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベントのデータ。</param>
        <summary><see cref="E:System.Web.UI.WebControls.ListView.Sorting" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListView.Sorting>イベントは、並べ替えボタンがクリックされたときに発生します。 または、<xref:System.Web.UI.WebControls.ListView.Sort%2A>メソッドを呼び出す前に、<xref:System.Web.UI.WebControls.ListView>コントロールは、並べ替え操作を処理します。 (いるボタン コントロールは、並べ替えボタン<xref:System.Web.UI.WebControls.Button.CommandName%2A>プロパティが"Sort"に設定します)。これにより、並べ替え操作の取り消しなど、このイベントが発生するたびに、カスタム ルーチンを実行できます。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)です。  
  
 <xref:System.Web.UI.WebControls.ListView.OnSorting%2A>メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Web.UI.WebControls.ListView" />を使用してデータ ソース コントロールにバインドされていないことをコントロール、<see cref="P:System.Web.UI.WebControls.DataBoundControl.DataSourceID" />プロパティです。</exception>
        <block subset="none" type="overrides">
          <para>オーバーライドする場合<see cref="M:System.Web.UI.WebControls.ListView.OnSorting(System.Web.UI.WebControls.ListViewSortEventArgs)" />呼び出し、基本クラスの派生クラスで<see cref="M:System.Web.UI.WebControls.ListView.OnSorting(System.Web.UI.WebControls.ListViewSortEventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnTotalRowCountAvailable">
      <MemberSignature Language="C#" Value="protected virtual void OnTotalRowCountAvailable (System.Web.UI.WebControls.PageEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTotalRowCountAvailable(class System.Web.UI.WebControls.PageEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.OnTotalRowCountAvailable(System.Web.UI.WebControls.PageEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.PageEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベントのデータ。</param>
        <summary><see cref="E:System.Web.UI.WebControls.ListView.System#Web#UI#WebControls#IPageableItemContainer#TotalRowCountAvailable" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListView.System%23Web%23UI%23WebControls%23IPageableItemContainer%23TotalRowCountAvailable>イベントを発生すると、データが使用できる場合、<xref:System.Web.UI.WebControls.DataPager>コントロール。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)です。  
  
 <xref:System.Web.UI.WebControls.ListView.OnTotalRowCountAvailable%2A>メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>オーバーライドする場合<see cref="M:System.Web.UI.WebControls.ListView.OnTotalRowCountAvailable(System.Web.UI.WebControls.PageEventArgs)" />呼び出し、基本クラスの派生クラスで<see cref="M:System.Web.UI.WebControls.ListView.OnTotalRowCountAvailable(System.Web.UI.WebControls.PageEventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="PagePropertiesChanged">
      <MemberSignature Language="C#" Value="public event EventHandler PagePropertiesChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PagePropertiesChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ListView.PagePropertiesChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ページのプロパティを変更したら、後に発生する、<see cref="T:System.Web.UI.WebControls.ListView" />コントロールは、新しい値を設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListView.PagePropertiesChanged>イベントは、ページのプロパティを変更した後、<xref:System.Web.UI.WebControls.ListView>コントロールを使用して、新しい値の設定、<xref:System.Web.UI.WebControls.ListView.SetPageProperties%2A>メソッドです。 これにより、選択した項目をクリアするか、カスタム ページング操作の実行など、このイベントが発生するたびに、カスタム ルーチンを実行できます。  
  
 イベントを処理する方法の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PagePropertiesChanging">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.PagePropertiesChangingEventArgs&gt; PagePropertiesChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.PagePropertiesChangingEventArgs&gt; PagePropertiesChanging" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ListView.PagePropertiesChanging" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.PagePropertiesChangingEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ページのプロパティを変更したら、その前に発生する、<see cref="T:System.Web.UI.WebControls.ListView" />コントロールは、新しい値を設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListView.PagePropertiesChanging>イベントは、ページのプロパティを変更する前に、<xref:System.Web.UI.WebControls.ListView>コントロールを使用して、新しい値の設定、<xref:System.Web.UI.WebControls.ListView.SetPageProperties%2A>メソッドです。 これは、ように消去など、このイベントが発生するたびに、カスタム ルーチンを実行する、<xref:System.Web.UI.WebControls.ListView.SelectedIndex%2A>または<xref:System.Web.UI.WebControls.ListView.EditIndex%2A>プロパティです。  
  
 A<xref:System.Web.UI.WebControls.PagePropertiesChangingEventArgs>オブジェクトは、ページに表示される最初のレコードのインデックスを確認することにより、イベント ハンドラーに渡されます。 1 つのページに表示する項目の最大数を決定することもできます。  
  
 イベントを処理する方法の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。  
  
   
  
## Examples  
 次の例のイベント ハンドラーを作成する方法、<xref:System.Web.UI.WebControls.ListView.PagePropertiesChanging>イベント。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.DeleteItem#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.DeleteItem/CS/ListViewDeleteItemCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.DeleteItem#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.DeleteItem/VB/ListViewDeleteItemVB.aspx#1)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PerformDataBinding">
      <MemberSignature Language="C#" Value="protected override void PerformDataBinding (System.Collections.IEnumerable data);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void PerformDataBinding(class System.Collections.IEnumerable data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.PerformDataBinding(System.Collections.IEnumerable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.IEnumerable" />
      </Parameters>
      <Docs>
        <param name="data">実装するオブジェクト、<see cref="T:System.Collections.IEnumerable" />インターフェイスとデータが含まれています。</param>
        <summary>バインド、<see cref="T:System.Web.UI.WebControls.ListView" />指定されたデータ ソースを制御します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListView.PerformDataBinding%2A>メソッドが呼び出されるヘルパー メソッド、<xref:System.Web.UI.WebControls.ListView>コントロールの指定したデータ ソースにコントロールをバインドします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><see cref="M:System.Web.UI.WebControls.BaseDataBoundControl.DataBind" />メソッドはシールされている、オーバーライドする必要があります、<see cref="M:System.Web.UI.WebControls.ListView.PerformDataBinding(System.Collections.IEnumerable)" />メソッド データをバインドするときに、その他のタスクを実行する場合。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="PerformSelect">
      <MemberSignature Language="C#" Value="protected override void PerformSelect ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void PerformSelect() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.PerformSelect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>関連するデータ ソースからデータを取得します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListView.PerformDataBinding%2A>メソッドが呼び出される、データ バインド コントロールをデータにバインドするためにデータを取得します。 詳細については、「<xref:System.Web.UI.WebControls.DataBoundControl.PerformSelect%2A?displayProperty=nameWithType>」を参照してください。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveItems">
      <MemberSignature Language="C#" Value="protected virtual void RemoveItems ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RemoveItems() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.RemoveItems" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>アイテムまたはグループのコンテナーですべての子コントロールを削除、<see cref="T:System.Web.UI.WebControls.ListView" />コントロール。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドを使用して、アイテムまたはグループのコンテナーですべての子コントロールを削除、<xref:System.Web.UI.WebControls.ListView>コントロール。 ある場合、<xref:System.Web.UI.WebControls.ListView.GroupTemplate%2A>テンプレートで定義されている、<xref:System.Web.UI.WebControls.ListView>コントロール、<xref:System.Web.UI.WebControls.ListView.RemoveItems%2A>メソッドはグループ コンテナーですべての子コントロールを削除します。 それ以外の場合、項目コンテナーのすべての子コントロールが削除されます。  
  
> [!NOTE]
>  このメソッドが拡張するコントロールの開発者によって使用、主に、<xref:System.Web.UI.WebControls.ListView>コントロール。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">クライアントのブラウザーでサーバー コントロールの内容を表示するために使用されるオブジェクト。</param>
        <summary>指定されたを使用して、クライアントのブラウザーに Web サーバー コントロールの内容をレンダリング<see cref="T:System.Web.UI.HtmlTextWriter" />オブジェクト。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListView.Render%2A>メソッドが、指定されたを使用して、クライアントのブラウザーにサーバー コントロールの内容を表示するために使用される<xref:System.Web.UI.HtmlTextWriter>オブジェクト。  
  
> [!NOTE]
>  このメソッドが拡張するコントロールの開発者によって使用、主に、<xref:System.Web.UI.WebControls.ListView>コントロール。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveControlState">
      <MemberSignature Language="C#" Value="protected override object SaveControlState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance object SaveControlState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.SaveControlState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>指定したプロパティの状態を保存、 <see cref="T:System.Web.UI.WebControls.ListView" /> 、永続化する必要がありますコントロール場合でも、<see cref="P:System.Web.UI.Control.EnableViewState" />プロパティに設定されている<see langword="false" />です。</summary>
        <returns>サーバー コントロールの現在のビューステートを返します。 コントロールに関連付けられているビューステートがない場合、メソッドは <see langword="null" /> を返します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 内のプロパティの状態を保存するこのメソッドを使用、 <xref:System.Web.UI.WebControls.ListView> 、永続化する必要がありますコントロール場合でも、<xref:System.Web.UI.Control.EnableViewState%2A>プロパティに設定されている`false`です。  
  
> [!NOTE]
>  このメソッドが拡張するコントロールの開発者によって使用、主に、<xref:System.Web.UI.WebControls.ListView>コントロール。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.SaveViewState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>現在のビューステートを保存、<see cref="T:System.Web.UI.WebControls.ListView" />コントロール。</summary>
        <returns>保存されたビュー ステートを格納しているオブジェクトの値を<see cref="T:System.Web.UI.WebControls.ListView" />コントロール。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListView.SaveViewState%2A>メソッドが呼び出されるヘルパー メソッド、<xref:System.Web.UI.WebControls.ListView>コントロール、コントロールの状態を保存します。 詳細については、「<xref:System.Web.UI.WebControls.WebControl.SaveViewState%2A?displayProperty=nameWithType>」を参照してください。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedDataKey">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.DataKey SelectedDataKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataKey SelectedDataKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.SelectedDataKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>選択した項目のデータ キーの値を取得、<see cref="T:System.Web.UI.WebControls.ListView" />コントロール。</summary>
        <value>選択した項目のキーのデータ、<see cref="T:System.Web.UI.WebControls.ListView" />コントロール。 既定値は<see langword="null" />項目が現在選択されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ときに、<xref:System.Web.UI.WebControls.ListView.DataKeyNames%2A>プロパティが設定されて、<xref:System.Web.UI.WebControls.ListView>コントロールを作成、<xref:System.Web.UI.WebControls.DataKey>値または指定したフィールドまたはフィールドの値を使用して、コントロール内の各項目のオブジェクト。 <xref:System.Web.UI.WebControls.DataKey>オブジェクトがコントロールの追加、<xref:System.Web.UI.WebControls.ListView.DataKeys%2A>コレクション。 通常、<xref:System.Web.UI.WebControls.ListView.DataKeys%2A>プロパティが取得に使用される、<xref:System.Web.UI.WebControls.DataKey>オブジェクト内の特定のデータ項目に対して、<xref:System.Web.UI.WebControls.ListView>コントロール。 ただし、のみを取得する場合、<xref:System.Web.UI.WebControls.DataKey>オブジェクトの現在選択されている項目を使用できます、<xref:System.Web.UI.WebControls.ListView.SelectedDataKey%2A>ショートカット プロパティです。  
  
 使用して、<xref:System.Web.UI.WebControls.ListView.SelectedDataKey%2A>プロパティは、取得と同じ、<xref:System.Web.UI.WebControls.DataKey>オブジェクトから、<xref:System.Web.UI.WebControls.ListView.DataKeys%2A>コレクション内で指定されたインデックス位置、<xref:System.Web.UI.WebControls.ListView.SelectedIndex%2A>プロパティです。 使用することも、<xref:System.Web.UI.WebControls.ListView.SelectedValue%2A>現在選択されている項目のデータ キーの値を直接取得するプロパティです。  
  
 作成する場合は、<xref:System.Web.UI.WebControls.ControlParameter>オブジェクトしたい場合、最初のフィールド以外のキー フィールドにアクセスを使用して、インデックス付き<xref:System.Web.UI.WebControls.ListView.SelectedDataKey%2A>プロパティに、<xref:System.Web.UI.WebControls.ControlParameter.PropertyName%2A>のプロパティ、<xref:System.Web.UI.WebControls.ControlParameter>オブジェクト。  
  
   
  
## Examples  
 次の例では、マスター/詳細シナリオでは、パラメーターとして 2 つ目のキー フィールドを使用する方法を示します。 A<xref:System.Web.UI.WebControls.ListView>コントロールは、AdventureWorks データベースの製品在庫テーブルからレコードを表示するために使用します。 項目が選択した場合、<xref:System.Web.UI.WebControls.ListView>コントロールを製品の詳細については、別に表示される<xref:System.Web.UI.WebControls.ListView>コントロール。 ProductID が最初の 2 番目のキー名<xref:System.Web.UI.WebControls.ListView>コントロール。 値を使用するコードは、2 番目のキーにアクセスする`ProductInventoryListView.SelectedDataKey[1]`(`ProductInventoryListView.SelectedDataKey(1)` Visual Basic で) として、<xref:System.Web.UI.WebControls.ControlParameter.PropertyName%2A>の<xref:System.Web.UI.WebControls.ControlParameter>オブジェクト。 このパラメーターのオブジェクトがによって使用され、<xref:System.Web.UI.WebControls.SqlDataSource>コントロールによって、2 つ目<xref:System.Web.UI.WebControls.ListView>コントロールにバインドされます。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.SelectedDataKey#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.SelectedDataKey/CS/ListViewSelectedDataKeyCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.SelectedDataKey#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.SelectedDataKey/VB/ListViewSelectedDataKeyVB.aspx#1)]
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">データのキーが指定されていない、<see cref="P:System.Web.UI.WebControls.ListView.DataKeyNames" />プロパティです。</exception>
      </Docs>
    </Member>
    <Member MemberName="SelectedIndex">
      <MemberSignature Language="C#" Value="public virtual int SelectedIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelectedIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.SelectedIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Default")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定で選択した項目のインデックス、<see cref="T:System.Web.UI.WebControls.ListView" />コントロール。</summary>
        <value>選択した項目の 0 から始まるインデックス、<see cref="T:System.Web.UI.WebControls.ListView" />コントロール。 既定では-1 で、項目が現在選択されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.ListView.SelectedIndex%2A>で現在選択されている項目のインデックスを決定するプロパティ、<xref:System.Web.UI.WebControls.ListView>コントロール。 このプロパティを使用して、プログラムによって、コントロール内の項目を選択することができますも。 (ただし、手動でデータ バインドする場合、<xref:System.Web.UI.WebControls.ListView>コントロール、読み取りまたはこのプロパティを手動で同様の設定を処理する必要があります)。  
  
   
  
## Examples  
 次の例を使用する方法を示しています、<xref:System.Web.UI.WebControls.ListView.SelectedIndex%2A>の項目を選択するかどうかを決定するプロパティ、<xref:System.Web.UI.WebControls.ListView>コントロール。 このコード例に示されている例の一部である、<xref:System.Web.UI.WebControls.ListView.DeleteItem%2A>メソッドです。  
  
 [!code-csharp[System.Web.UI.WebControls.ListView.DeleteItem#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.DeleteItem/CS/ListViewDeleteItemCS.aspx#2)]
 [!code-vb[System.Web.UI.WebControls.ListView.DeleteItem#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.DeleteItem/VB/ListViewDeleteItemVB.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><see cref="P:System.Web.UI.WebControls.ListView.SelectedIndex" />プロパティが-1 未満の値に設定します。</exception>
      </Docs>
    </Member>
    <Member MemberName="SelectedIndexChanged">
      <MemberSignature Language="C#" Value="public event EventHandler SelectedIndexChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SelectedIndexChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ListView.SelectedIndexChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Action")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>後に、アイテムの選択 ボタンがクリックされたときに発生、<see cref="T:System.Web.UI.WebControls.ListView" />コントロールは、select 操作を処理します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListView.SelectedIndexChanged>イベントが発生した後、アイテムの選択 ボタンがクリックされたときに、<xref:System.Web.UI.WebControls.ListView>コントロールは、select 操作を処理します。 (選択ボタンがいるボタン コントロール<xref:System.Web.UI.WebControls.Button.CommandName%2A>プロパティが"Select"に設定します)。これにより、現在選択されているアイテムに関する情報を含むステータス ラベルの更新など、このイベントが発生するたびに、カスタム ルーチンを実行できます。  
  
 イベントを処理する方法の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。  
  
   
  
## Examples  
 次の例のイベント ハンドラーを作成する方法、<xref:System.Web.UI.WebControls.ListView.SelectedIndexChanged>イベント。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.SelectedIndexChanged#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.SelectedIndexChanged/CS/ListViewItemSelectedIndexChanged2CS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.SelectedIndexChanged#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.SelectedIndexChanged/VB/ListViewItemSelectedIndexChanged2VB.aspx#1)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedIndexChanging">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.ListViewSelectEventArgs&gt; SelectedIndexChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.ListViewSelectEventArgs&gt; SelectedIndexChanging" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ListView.SelectedIndexChanging" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Action")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.ListViewSelectEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>その前に、アイテムの選択 ボタンがクリックされたときに発生、<see cref="T:System.Web.UI.WebControls.ListView" />コントロールは、select 操作を処理します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListView.SelectedIndexChanging>イベントを発生すると、アイテムの選択 ボタンをクリックすると、その前に、<xref:System.Web.UI.WebControls.ListView>コントロールは、select 操作を処理します。 (選択ボタンがいるボタン コントロール<xref:System.Web.UI.WebControls.Button.CommandName%2A>プロパティが"Select"に設定します)。これにより、選択操作の取り消しなど、このイベントが発生するたびに、カスタム ルーチンを実行できます。  
  
> [!NOTE]
>  プログラムで設定すると、このイベントは発生しませんが、<xref:System.Web.UI.WebControls.ListView.SelectedIndex%2A>プロパティです。  
  
 A<xref:System.Web.UI.WebControls.ListViewSelectEventArgs>オブジェクトがユーザーによって選択された項目のインデックスを確認することにより、イベント ハンドラーに渡されます。 選択操作を取り消す必要があることを指定することもできます。 選択操作をキャンセルするには設定、<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>のプロパティ、<xref:System.Web.UI.WebControls.ListViewSelectEventArgs>オブジェクトを`true`です。  
  
 イベントを処理する方法の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。  
  
   
  
## Examples  
 次の例のイベント ハンドラーを作成する方法、<xref:System.Web.UI.WebControls.ListView.SelectedIndexChanging>イベント。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.SelectedIndexChanging#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.SelectedIndexChanging/CS/ListViewItemSelectedIndexChangingCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.SelectedIndexChanging#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.SelectedIndexChanging/VB/ListViewItemSelectedIndexChangingVB.aspx#1)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate SelectedItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate SelectedItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.SelectedItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.ListViewDataItem), System.ComponentModel.BindingDirection.TwoWay)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定で選択した項目のカスタム コンテンツ、<see cref="T:System.Web.UI.WebControls.ListView" />コントロール。</summary>
        <value>選択した項目のカスタム コンテンツを格納しているオブジェクト、<see cref="T:System.Web.UI.WebControls.ListView" />コントロール。 既定値は <see langword="null" /> です。このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.ListView.SelectedItemTemplate%2A>で選択したアイテムのカスタム ユーザー インターフェイス (UI) を定義するプロパティ、<xref:System.Web.UI.WebControls.ListView>コントロール。 <xref:System.Web.UI.WebControls.ListView.SelectedItemTemplate%2A>通常、他の表示項目から選択した項目を区別するために使用します。 <xref:System.Web.UI.WebControls.ListView.SelectedItemTemplate%2A>代わりに表示される、<xref:System.Web.UI.WebControls.ListView.ItemTemplate%2A>選んだ項目のテンプレートです。  
  
 カスタム テンプレートを宣言によって指定するには追加、`SelectedItemTemplate`内の要素、<xref:System.Web.UI.WebControls.ListView>コントロール。 テンプレートの内容を追加することができますし、`SelectedItemTemplate`要素。 コントロールにバインドされているデータ ソースのフィールドの値を表示するには、データ バインディング式を使用します。 詳細については、次を参照してください。[データ バインド式の概要](http://msdn.microsoft.com/library/14cdd57d-0f82-4667-b503-73e1a96f136a)です。  
  
 ボタンを追加することも、<xref:System.Web.UI.WebControls.ListView.SelectedItemTemplate%2A>です。 組み込みの削除を実施するか、操作を編集するボタンを作成するには、セットおよびテンプレートにボタン コントロールを追加、<xref:System.Web.UI.WebControls.Button.CommandName%2A>プロパティに値のいずれかが次の表に一覧表示します。  
  
|[ボタンの種類]|CommandName 値|  
|-----------------|-----------------------|  
|削除|"削除"|  
|編集|"Edit"|  
  
   
  
## Examples  
 次の例を使用する方法を示しています、<xref:System.Web.UI.WebControls.ListView.SelectedItemTemplate%2A>で選択した項目の内容を定義するプロパティ、<xref:System.Web.UI.WebControls.ListView>コントロール。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListViewItemDeleting#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListViewItemDeleting/CS/ListViewItemItemDeletingCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListViewItemDeleting#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListViewItemDeleting/VB/ListViewItemItemDeletingVB.aspx#1)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedPersistedDataKey">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.DataKey SelectedPersistedDataKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataKey SelectedPersistedDataKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.SelectedPersistedDataKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはデータ バインド コントロールの永続化された選択した項目のデータ キーの値を設定します。</summary>
        <value>データのキーを永続化には、データ バインド コントロール内の項目が選択されています。 既定値は<see langword="null" />項目が現在選択されていないことを示します。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedValue">
      <MemberSignature Language="C#" Value="public object SelectedValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SelectedValue" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.SelectedValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>選択した項目のデータ キーの値を取得、<see cref="T:System.Web.UI.WebControls.ListView" />コントロール。</summary>
        <value>選択した項目のデータ キーの値、<see cref="T:System.Web.UI.WebControls.ListView" />コントロール。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListView.DataKeyNames%2A>プロパティは、データ ソースの主キーを表すフィールド名のコンマ区切りの一覧に設定することができます。 設定されている場合、<xref:System.Web.UI.WebControls.ListView>コントロールが自動的に作成、<xref:System.Web.UI.WebControls.DataKey>値または指定したフィールドまたはフィールドの値を使用して、コントロール内の各項目のオブジェクト。 <xref:System.Web.UI.WebControls.DataKey>オブジェクトがコントロールの追加、<xref:System.Web.UI.WebControls.ListView.DataKeys%2A>コレクション。  
  
 通常、<xref:System.Web.UI.WebControls.ListView.DataKeys%2A>プロパティを使用して、取得、<xref:System.Web.UI.WebControls.DataKey>オブジェクト内の特定のデータ項目に対して、<xref:System.Web.UI.WebControls.ListView>コントロール。 ただし、のみを取得する場合、<xref:System.Web.UI.WebControls.DataKey>オブジェクトの現在選択されている項目を使用できます、<xref:System.Web.UI.WebControls.ListView.SelectedDataKey%2A>ショートカット プロパティです。 使用しての選択された項目の最初のキー フィールドのデータ キーの値を指定できますも直接、<xref:System.Web.UI.WebControls.ListView.SelectedValue%2A>プロパティです。  
  
 作成する場合は、<xref:System.Web.UI.WebControls.ControlParameter>オブジェクトを使用して、最初のフィールド以外のキー フィールドにアクセスする、<xref:System.Web.UI.WebControls.ListView.SelectedDataKey%2A>プロパティです。 例については、次を参照してください。、<xref:System.Web.UI.WebControls.ListView.SelectedDataKey%2A>プロパティです。  
  
   
  
## Examples  
 次の例では、マスター/詳細シナリオでは、パラメーターとして最初のキー フィールドを使用する方法を示します。 項目が選択した場合、<xref:System.Web.UI.WebControls.ListView>コントロール、<xref:System.Web.UI.WebControls.ListView.SelectedValue%2A>プロパティとして使用、<xref:System.Web.UI.WebControls.ControlParameter.PropertyName%2A>の<xref:System.Web.UI.WebControls.ControlParameter>オブジェクト。 このパラメーターのオブジェクトがによって使用され、<xref:System.Web.UI.WebControls.SqlDataSource>コントロールによって、2 つ目<xref:System.Web.UI.WebControls.ListView>コントロールにバインドされます。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListViewItemDeleting#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListViewItemDeleting/CS/ListViewItemItemDeletingCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListViewItemDeleting#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListViewItemDeleting/VB/ListViewItemItemDeletingVB.aspx#1)]
  
 次の例を使用する方法を示しています、<xref:System.Web.UI.WebControls.ListView.SelectedValue%2A>キー フィールドの値を決定するプロパティです。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.SelectedValue#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.SelectedValue/CS/ListViewSelectedValueCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.SelectedValue#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.SelectedValue/VB/ListViewSelectedValueVB.aspx#1)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectItem">
      <MemberSignature Language="C#" Value="public void SelectItem (int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SelectItem(int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.SelectItem(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rowIndex">編集モードにある項目のインデックス。</param>
        <summary>編集モードでは、項目を選択した、<see cref="T:System.Web.UI.WebControls.ListView" />コントロール。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドを発生させる、<xref:System.Web.UI.WebControls.ListView.SelectedIndexChanged>イベント。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">項目のインデックスが負の値です。</exception>
      </Docs>
    </Member>
    <Member MemberName="SetEditItem">
      <MemberSignature Language="C#" Value="public void SetEditItem (int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetEditItem(int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.SetEditItem(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rowIndex">編集モードに設定する項目のインデックス。</param>
        <summary>編集モードに指定した項目を設定、<see cref="T:System.Web.UI.WebControls.ListView" />コントロール。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.ListView.EditItem%2A>編集モードで挿入されているアイテムにアクセスするプロパティ、<xref:System.Web.UI.WebControls.ListView>コントロール。 編集項目のコンテンツがによって定義されている、<xref:System.Web.UI.WebControls.ListView.EditItemTemplate%2A>プロパティです。  
  
 このメソッドを発生させる、<xref:System.Web.UI.WebControls.ListView.ItemEditing>イベント。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPageProperties">
      <MemberSignature Language="C#" Value="protected virtual void SetPageProperties (int startRowIndex, int maximumRows, bool databind);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void SetPageProperties(int32 startRowIndex, int32 maximumRows, bool databind) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.SetPageProperties(System.Int32,System.Int32,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startRowIndex" Type="System.Int32" />
        <Parameter Name="maximumRows" Type="System.Int32" />
        <Parameter Name="databind" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="startRowIndex">ページの最初のレコードのインデックス。</param>
        <param name="maximumRows">1 つのページ上の項目の最大数。</param>
        <param name="databind">
          <see langword="true" />プロパティが設定されます。 後にコントロールを再バインドするにはそれ以外の場合、<see langword="false" />です。</param>
        <summary>データのページのプロパティを設定、<see cref="T:System.Web.UI.WebControls.ListView" />コントロール。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="maximumRows" /> が 1 未満です。  
  
 または  
  
 <paramref name="startRowIndex" /> が 0 未満です。</exception>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public virtual void Sort (string sortExpression, System.Web.UI.WebControls.SortDirection sortDirection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Sort(string sortExpression, valuetype System.Web.UI.WebControls.SortDirection sortDirection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.Sort(System.String,System.Web.UI.WebControls.SortDirection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sortExpression" Type="System.String" />
        <Parameter Name="sortDirection" Type="System.Web.UI.WebControls.SortDirection" />
      </Parameters>
      <Docs>
        <param name="sortExpression">並べ替えに並べ替え式、<see cref="T:System.Web.UI.WebControls.ListView" />を制御します。</param>
        <param name="sortDirection"><see cref="T:System.Web.UI.WebControls.SortDirection" /> 値のいずれか。</param>
        <summary>並べ替え、<see cref="T:System.Web.UI.WebControls.ListView" />によっては、指定した並べ替え式および方向を制御します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.ListView.Sort%2A>プログラムでデータを並べ替えるに表示されているメソッド、<xref:System.Web.UI.WebControls.ListView>指定した並べ替え式および方向を使用して制御します。 並べ替え式は、列または並べ替えを行う列を指定します。 複数の列を並べ替えるには、フィールド名のコンマ区切りの一覧を含んだ並べ替え式を作成します。 並べ替えの方向は、昇順または降順で並べ替えを実行するかどうかを示します。  
  
 内容を並べ替えるときに通常このメソッドを使用する、 <xref:System.Web.UI.WebControls.ListView>  ページで別のコントロールからなど、制御範囲外から制御します。 このメソッドはプログラムでの既定の並べ替え順序を設定する使用も、<xref:System.Web.UI.WebControls.ListView>最初の描画するタイミングを制御します。  
  
 このメソッドを発生させる、<xref:System.Web.UI.WebControls.ListView.Sorted>と<xref:System.Web.UI.WebControls.ListView.Sorting>イベント。  
  
   
  
## Examples  
 次の例を使用する方法を示しています、<xref:System.Web.UI.WebControls.ListView.Sort%2A>をプログラムで並べ替える方法、<xref:System.Web.UI.WebControls.ListView>を複数のデータ フィールドのコントロールです。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.Sort#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.Sort/CS/ListViewSortCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.Sort#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.Sort/VB/ListViewSortVB.aspx#1)]
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Web.UI.WebControls.ListView" />コントロールがデータ ソース コントロールにバインドされているが、<see cref="T:System.Web.UI.DataSourceView" />データ ソースに関連付けられているオブジェクトが<see langword="null" />です。</exception>
      </Docs>
    </Member>
    <Member MemberName="SortDirection">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.SortDirection SortDirection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.SortDirection SortDirection" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.SortDirection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SortDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>並べ替えられているフィールドの並べ替えの方向を取得します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.SortDirection" /> 値のいずれか。 既定値は、<see langword="SortDirection.Ascending" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.ListView.SortDirection%2A>昇順または降順で並べ替えられているフィールドを並べ替えるかどうかを決定するプロパティです。  
  
   
  
## Examples  
 次の例を使用する方法を示しています、<xref:System.Web.UI.WebControls.ListView.SortDirection%2A>プログラムでの並べ替えの方向を決定するプロパティ、<xref:System.Web.UI.WebControls.ListView>コントロール。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.SortDirection#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.SortDirection/CS/ListViewSortCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.SortDirection#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.SortDirection/VB/ListViewSortVB.aspx#1)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sorted">
      <MemberSignature Language="C#" Value="public event EventHandler Sorted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Sorted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ListView.Sorted" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Action")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>後に並べ替え操作が要求されたときに発生、<see cref="T:System.Web.UI.WebControls.ListView" />コントロールは、並べ替え操作を処理します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListView.Sorted>イベントは、並べ替えボタンがクリックされたときに発生します。 または、<xref:System.Web.UI.WebControls.ListView.Sort%2A>メソッドは、後、<xref:System.Web.UI.WebControls.ListView>コントロールは、並べ替え操作を処理します。 (いるボタン コントロールは、並べ替えボタン<xref:System.Web.UI.WebControls.Button.CommandName%2A>プロパティが"Sort"に設定します)。これにより、このイベントが発生するたびに、カスタム ルーチンを実行できます。  
  
 イベントを処理する方法の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SortExpression">
      <MemberSignature Language="C#" Value="public virtual string SortExpression { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SortExpression" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.SortExpression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>並べ替えられているフィールドに関連付けられている並べ替え式を取得します。</summary>
        <value>並べ替え式または並べ替えられている複数のフィールドに関連付けられています。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 複数の列を並べ替えると、このプロパティには、並べ替えを行うフィールドのコンマ区切りの一覧が含まれています。  
  
   
  
## Examples  
 次の例を使用する方法を示しています、<xref:System.Web.UI.WebControls.ListView.SortExpression%2A>プロパティで並べ替えられている列をプログラムによって、<xref:System.Web.UI.WebControls.ListView>コントロール。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.SortDirection#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.SortDirection/CS/ListViewSortCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.SortDirection#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.SortDirection/VB/ListViewSortVB.aspx#1)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sorting">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.ListViewSortEventArgs&gt; Sorting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.ListViewSortEventArgs&gt; Sorting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ListView.Sorting" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Action")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.ListViewSortEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>その前に並べ替え操作が要求されたときに発生、<see cref="T:System.Web.UI.WebControls.ListView" />コントロールは、並べ替え操作を処理します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListView.Sorting>イベントは、並べ替えボタンがクリックされたときに発生します。 または、<xref:System.Web.UI.WebControls.ListView.Sort%2A>メソッドを呼び出す前に、<xref:System.Web.UI.WebControls.ListView>コントロールは、並べ替え操作を処理します。 (いるボタン コントロールは、並べ替えボタン<xref:System.Web.UI.WebControls.Button.CommandName%2A>プロパティが"Sort"に設定します)。これにより、並べ替え式のカスタマイズなど、このイベントが発生するたびに、カスタム ルーチンを実行できます。  
  
 A<xref:System.Web.UI.WebControls.ListViewSortEventArgs>オブジェクトが、列の並べ替え式を確認することにより、イベント ハンドラーに渡されます。 並べ替え操作を取り消す必要があることを指定することもできます。 並べ替え操作をキャンセルするには設定、<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>のプロパティ、<xref:System.Web.UI.WebControls.ListViewSortEventArgs>オブジェクトを`true`です。  
  
 イベントを処理する方法の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。  
  
   
  
## Examples  
 次の例のイベント ハンドラーを作成する方法、<xref:System.Web.UI.WebControls.ListView.Sorting>イベント。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.Sorting#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.Sorting/CS/ListViewSortingCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.Sorting#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.Sorting/VB/ListViewSortingVB.aspx#1)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartRowIndex">
      <MemberSignature Language="C#" Value="protected virtual int StartRowIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 StartRowIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.StartRowIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>内のデータのページに表示される最初のレコードのインデックスを取得、<see cref="T:System.Web.UI.WebControls.ListView" />コントロール。</summary>
        <value>内のデータのページに表示される最初のレコードのインデックス、<see cref="T:System.Web.UI.WebControls.ListView" />コントロール。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IDataKeysControl.ClientIDRowSuffixDataKeys">
      <MemberSignature Language="C#" Value="System.Web.UI.WebControls.DataKeyArray System.Web.UI.IDataKeysControl.ClientIDRowSuffixDataKeys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataKeyArray System.Web.UI.IDataKeysControl.ClientIDRowSuffixDataKeys" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.System#Web#UI#IDataKeysControl#ClientIDRowSuffixDataKeys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataKeyArray</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ASP.NET によって生成されるときに、データ バインド コントロールの各インスタンスを一意に識別するために使用するデータ値のコレクションを取得、<see cref="P:System.Web.UI.Control.ClientID" />値。</summary>
        <value>データ フィールドの値のコレクション。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Web.UI.WebControls.ListView> のインスタンスが <xref:System.Web.UI.IDataKeysControl> インターフェイスにキャストされる場合にのみ、使用できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundControl.DataKeyNames">
      <MemberSignature Language="C#" Value="string[] System.Web.UI.WebControls.IDataBoundControl.DataKeyNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] System.Web.UI.WebControls.IDataBoundControl.DataKeyNames" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.System#Web#UI#WebControls#IDataBoundControl#DataKeyNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定、データ バインド コントロールに表示されるアイテムの主キー フィールドの名前を格納する配列。</summary>
        <value>データ バインド コントロールに表示されるアイテムの主キー フィールドの名前を格納する配列。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Web.UI.WebControls.ListView> のインスタンスが <xref:System.Web.UI.WebControls.IDataBoundControl> インターフェイスにキャストされる場合にのみ、使用できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundControl.DataMember">
      <MemberSignature Language="C#" Value="string System.Web.UI.WebControls.IDataBoundControl.DataMember { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string System.Web.UI.WebControls.IDataBoundControl.DataMember" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.System#Web#UI#WebControls#IDataBoundControl#DataMember" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはデータ ソースには、データ項目の 1 つ以上の個別のリストが含まれている場合に、データ バインド コントロールをバインドするデータの一覧の名前を設定します。</summary>
        <value>データ バインド コントロールがバインドされるデータの一覧の名前。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Web.UI.WebControls.ListView> のインスタンスが <xref:System.Web.UI.WebControls.IDataBoundControl> インターフェイスにキャストされる場合にのみ、使用できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundControl.DataSource">
      <MemberSignature Language="C#" Value="object System.Web.UI.WebControls.IDataBoundControl.DataSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Web.UI.WebControls.IDataBoundControl.DataSource" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.System#Web#UI#WebControls#IDataBoundControl#DataSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定、データ バインド コントロールのデータ項目の一覧の取得元となるオブジェクト。</summary>
        <value>データ バインド コントロールを取得するデータの一覧を格納するオブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Web.UI.WebControls.ListView> のインスタンスが <xref:System.Web.UI.WebControls.IDataBoundControl> インターフェイスにキャストされる場合にのみ、使用できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundControl.DataSourceID">
      <MemberSignature Language="C#" Value="string System.Web.UI.WebControls.IDataBoundControl.DataSourceID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string System.Web.UI.WebControls.IDataBoundControl.DataSourceID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.System#Web#UI#WebControls#IDataBoundControl#DataSourceID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはデータ バインド コントロールのデータ項目の一覧の取得元となるデータ ソース コントロールの ID を設定します。</summary>
        <value>データ バインド コントロールのデータの取得元となるデータ ソースを表すコントロールの ID。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Web.UI.WebControls.ListView> のインスタンスが <xref:System.Web.UI.WebControls.IDataBoundControl> インターフェイスにキャストされる場合にのみ、使用できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundControl.DataSourceObject">
      <MemberSignature Language="C#" Value="System.Web.UI.IDataSource System.Web.UI.WebControls.IDataBoundControl.DataSourceObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.IDataSource System.Web.UI.WebControls.IDataBoundControl.DataSourceObject" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.System#Web#UI#WebControls#IDataBoundControl#DataSourceObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.IDataSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>実装するオブジェクトを取得、<see cref="T:System.Web.UI.IDataSource" />オブジェクトのデータ コンテンツへのアクセスを提供するインターフェイスです。</summary>
        <value>データ バインド コントロールを取得するデータ項目の一覧を含むデータ ソース オブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Web.UI.WebControls.ListView> のインスタンスが <xref:System.Web.UI.WebControls.IDataBoundControl> インターフェイスにキャストされる場合にのみ、使用できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundListControl.ClientIDRowSuffix">
      <MemberSignature Language="C#" Value="string[] System.Web.UI.WebControls.IDataBoundListControl.ClientIDRowSuffix { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] System.Web.UI.WebControls.IDataBoundListControl.ClientIDRowSuffix" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.System#Web#UI#WebControls#IDataBoundListControl#ClientIDRowSuffix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>場合は、各データ行を一意に識別する値が使用されるデータ フィールドの名前を取得、<see cref="T:System.Web.UI.WebControls.ListView" />タイミングを制御、<see cref="P:System.Web.UI.Control.ClientIDMode" />プロパティに設定されている<see cref="F:System.Web.UI.ClientIDMode.Predictable" />です。</summary>
        <value>各インスタンスを一意に識別する値が使用されるデータ フィールドの名前、 <see cref="T:System.Web.UI.WebControls.ListView" /> ASP.NET が生成するときの制御、<see cref="P:System.Web.UI.Control.ClientID" />値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Web.UI.WebControls.ListView> のインスタンスが <xref:System.Web.UI.IDataKeysControl> インターフェイスにキャストされる場合にのみ、使用できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundListControl.DataKeys">
      <MemberSignature Language="C#" Value="System.Web.UI.WebControls.DataKeyArray System.Web.UI.WebControls.IDataBoundListControl.DataKeys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataKeyArray System.Web.UI.WebControls.IDataBoundListControl.DataKeys" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.System#Web#UI#WebControls#IDataBoundListControl#DataKeys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataKeyArray</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データ バインド コントロール内の各行を表すデータ キーの値のコレクションを取得します。</summary>
        <value>データ バインド コントロール内の各行のデータ キーの値を格納する配列。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Web.UI.WebControls.ListView> のインスタンスが <xref:System.Web.UI.WebControls.IDataBoundListControl> インターフェイスにキャストされる場合にのみ、使用できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundListControl.EnablePersistedSelection">
      <MemberSignature Language="C#" Value="bool System.Web.UI.WebControls.IDataBoundListControl.EnablePersistedSelection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Web.UI.WebControls.IDataBoundListControl.EnablePersistedSelection" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.System#Web#UI#WebControls#IDataBoundListControl#EnablePersistedSelection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または選択した行には、ときにユーザーがデータ バインド コントロール内のデータでページングが保持されるかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" />選択範囲がデータのキーに基づく場合それ以外の場合、<see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Web.UI.WebControls.ListView> のインスタンスが <xref:System.Web.UI.WebControls.IDataBoundListControl> インターフェイスにキャストされる場合にのみ、使用できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundListControl.SelectedDataKey">
      <MemberSignature Language="C#" Value="System.Web.UI.WebControls.DataKey System.Web.UI.WebControls.IDataBoundListControl.SelectedDataKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataKey System.Web.UI.WebControls.IDataBoundListControl.SelectedDataKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.System#Web#UI#WebControls#IDataBoundListControl#SelectedDataKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データ バインド コントロールで選択した行のデータ キーの値を含むデータ キー オブジェクトを取得します。</summary>
        <value>データ バインド コントロールで選択した行のデータ キーの値を含むオブジェクトです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Web.UI.WebControls.ListView> のインスタンスが <xref:System.Web.UI.WebControls.IDataBoundListControl> インターフェイスにキャストされる場合にのみ、使用できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundListControl.SelectedIndex">
      <MemberSignature Language="C#" Value="int System.Web.UI.WebControls.IDataBoundListControl.SelectedIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Web.UI.WebControls.IDataBoundListControl.SelectedIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.System#Web#UI#WebControls#IDataBoundListControl#SelectedIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはデータ バインド コントロールで選択した行のインデックスを設定します。</summary>
        <value>データ バインド コントロールで選択した行のインデックス。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Web.UI.WebControls.ListView> のインスタンスが <xref:System.Web.UI.WebControls.IDataBoundListControl> インターフェイスにキャストされる場合にのみ、使用できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IPageableItemContainer.MaximumRows">
      <MemberSignature Language="C#" Value="int System.Web.UI.WebControls.IPageableItemContainer.MaximumRows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Web.UI.WebControls.IPageableItemContainer.MaximumRows" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.System#Web#UI#WebControls#IPageableItemContainer#MaximumRows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このメンバーの詳細については、「<see cref="P:System.Web.UI.WebControls.IPageableItemContainer.MaximumRows" />」をご覧ください。</summary>
        <value>1 つのページに表示する項目の最大数、<see cref="T:System.Web.UI.WebControls.ListView" />コントロール。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListView.System%23Web%23UI%23WebControls%23IPageableItemContainer%23MaximumRows%2A>プロパティの値を使用して、 <xref:System.Web.UI.WebControls.ListView.MaximumRows%2A> 1 ページに表示する項目の最大数を取得するプロパティです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IPageableItemContainer.SetPageProperties">
      <MemberSignature Language="C#" Value="void IPageableItemContainer.SetPageProperties (int startRowIndex, int maximumRows, bool databind);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.WebControls.IPageableItemContainer.SetPageProperties(int32 startRowIndex, int32 maximumRows, bool databind) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.System#Web#UI#WebControls#IPageableItemContainer#SetPageProperties(System.Int32,System.Int32,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startRowIndex" Type="System.Int32" />
        <Parameter Name="maximumRows" Type="System.Int32" />
        <Parameter Name="databind" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="startRowIndex">ページの最初のレコードのインデックス。</param>
        <param name="maximumRows">1 つのページ上の項目の最大数。</param>
        <param name="databind">
          <see langword="true" />プロパティが設定されます。 後にコントロールを再バインドするにはそれ以外の場合、<see langword="false" />です。</param>
        <summary>このメンバーの詳細については、「<see cref="M:System.Web.UI.WebControls.IPageableItemContainer.SetPageProperties(System.Int32,System.Int32,System.Boolean)" />」をご覧ください。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListView.System%23Web%23UI%23WebControls%23IPageableItemContainer%23SetPageProperties%2A>メソッドを呼び出して、<xref:System.Web.UI.WebControls.ListView.SetPageProperties%2A>のメソッド、<xref:System.Web.UI.WebControls.ListView>コントロールをページのプロパティを設定します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IPageableItemContainer.StartRowIndex">
      <MemberSignature Language="C#" Value="int System.Web.UI.WebControls.IPageableItemContainer.StartRowIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Web.UI.WebControls.IPageableItemContainer.StartRowIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.System#Web#UI#WebControls#IPageableItemContainer#StartRowIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このメンバーの詳細については、「<see cref="P:System.Web.UI.WebControls.IPageableItemContainer.StartRowIndex" />」をご覧ください。</summary>
        <value>内のデータのページに表示される最初のレコードのインデックス、<see cref="T:System.Web.UI.WebControls.ListView" />コントロール。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListView.System%23Web%23UI%23WebControls%23IPageableItemContainer%23StartRowIndex%2A>プロパティの値を使用して、<xref:System.Web.UI.WebControls.ListView.StartRowIndex%2A>プロパティ ページに表示される最初のレコードのインデックスを取得します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IPersistedSelector.DataKey">
      <MemberSignature Language="C#" Value="System.Web.UI.WebControls.DataKey System.Web.UI.WebControls.IPersistedSelector.DataKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataKey System.Web.UI.WebControls.IPersistedSelector.DataKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.System#Web#UI#WebControls#IPersistedSelector#DataKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはデータ バインド コントロールで選択したレコードのデータ キーの値を設定します。</summary>
        <value>データ バインド コントロールで選択したレコードのデータ キーの値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Web.UI.WebControls.ListView> のインスタンスが <xref:System.Web.UI.WebControls.IPersistedSelector> インターフェイスにキャストされる場合にのみ、使用できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TabIndex">
      <MemberSignature Language="C#" Value="public override short TabIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int16 TabIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.TabIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>上書き、<see cref="P:System.Web.UI.WebControls.WebControl.TabIndex" />プロパティです。 このプロパティの設定でサポートされていない、<see cref="T:System.Web.UI.WebControls.ListView" />コントロール。</summary>
        <value>
          <see langword="0" />、プロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 スタイル プロパティでサポートされていない、<xref:System.Web.UI.WebControls.ListView>コントロール。 設定を試行した場合、 <xref:System.Web.UI.WebControls.ListView.TabIndex%2A> 、プロパティ、<xref:System.NotSupportedException>例外がスローされます。 プロパティを取得する場合は、基本クラスの対応するプロパティの既定値を返します。  
  
 スタイルを<xref:System.Web.UI.WebControls.ListView>コントロール、内のコントロールのスタイルする必要があります、<xref:System.Web.UI.WebControls.ListView>連鎖を使用してテンプレートのスタイル シート (CSS) クラスまたはインライン スタイル要素。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">設定しようとしましたが、<see cref="P:System.Web.UI.WebControls.ListView.TabIndex" />プロパティです。</exception>
      </Docs>
    </Member>
    <Member MemberName="ToolTip">
      <MemberSignature Language="C#" Value="public override string ToolTip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ToolTip" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.ToolTip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>上書き、<see cref="P:System.Web.UI.WebControls.WebControl.ToolTip" />プロパティです。 このプロパティの設定でサポートされていない、<see cref="T:System.Web.UI.WebControls.ListView" />コントロール。</summary>
        <value>
          <see cref="F:System.String.Empty" />、プロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 スタイル プロパティでサポートされていない、<xref:System.Web.UI.WebControls.ListView>コントロール。 設定を試行した場合、 <xref:System.Web.UI.WebControls.ListView.ToolTip%2A> 、プロパティ、<xref:System.NotSupportedException>例外がスローされます。 プロパティを取得する場合は、基本クラスの対応するプロパティの既定値を返します。  
  
 スタイルを<xref:System.Web.UI.WebControls.ListView>コントロール、内のコントロールのスタイルする必要があります、<xref:System.Web.UI.WebControls.ListView>連鎖を使用してテンプレートのスタイル シート (CSS) クラスまたはインライン スタイル要素。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">設定しようとしましたが、<see cref="P:System.Web.UI.WebControls.ListView.ToolTip" />プロパティです。</exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateItem">
      <MemberSignature Language="C#" Value="public virtual void UpdateItem (int itemIndex, bool causesValidation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateItem(int32 itemIndex, bool causesValidation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.UpdateItem(System.Int32,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemIndex" Type="System.Int32" />
        <Parameter Name="causesValidation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="itemIndex">更新する項目のインデックス。</param>
        <param name="causesValidation">
          <see langword="true" />このメソッドが呼び出されたときに、ページの検証を実行するにはそれ以外の場合、<see langword="false" />です。</param>
        <summary>データ ソース内の指定したインデックスにあるレコードを更新します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.ListView.UpdateItem%2A>メソッドをプログラムでデータ ソース内の指定したインデックスにあるレコードを更新します。 外部からレコードを更新するときに通常このメソッドを使用する、<xref:System.Web.UI.WebControls.ListView>など、ページ上の異なるコントロールから制御します。  
  
> [!NOTE]
>  このメソッドは、双方向データ バインドされた入力コントロールを含む項目に対してのみ呼び出すことができます。 双方向のバインド式の詳細については、次を参照してください。[データベースへのバインド](http://msdn.microsoft.com/en-us/ab7b2846-975b-4057-a948-45527497c742)です。  
  
 更新操作の前にページの検証を実行するかどうかを指定するには、使用、`causesValidation`パラメーター。  
  
 このメソッドを発生させる、<xref:System.Web.UI.WebControls.ListView.ItemUpdated>と<xref:System.Web.UI.WebControls.ListView.ItemUpdating>イベント。  
  
   
  
## Examples  
 次の例を使用する方法を示しています、<xref:System.Web.UI.WebControls.ListView.UpdateItem%2A>にプログラムで更新する方法、<xref:System.Web.UI.WebControls.ListView>データ ソースの項目。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.UpdateItem#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.UpdateItem/CS/ListViewUpdateItemCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.UpdateItem#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.UpdateItem/VB/ListViewUpdateItemVB.aspx#1)]
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="itemIndex" /> が 0 未満です。  
  
 または  
  
 <see cref="T:System.Web.UI.DataSourceView" />オブジェクトに関連付けられている、<see cref="T:System.Web.UI.WebControls.ListView" />コントロールが<see langword="null" />です。</exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateMethod">
      <MemberSignature Language="C#" Value="public virtual string UpdateMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UpdateMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.UpdateMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.WebCategory("Data")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.WebSysDescription("DataBoundControl_UpdateMethod")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定にデータを更新するために呼び出すメソッドの名前。</summary>
        <value>メソッドの名前。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティを設定すると、データ バインディング メソッドとして使用するモデル バインドします。  
  
 Web フォーム モデル バインディングの使用に関するチュートリアル シリーズは、次を参照してください。[モデル バインディング機能と Web フォーム](http://go.microsoft.com/fwlink/?LinkId=286117)です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.Unit Width { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Unit Width" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.Width" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Unit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>上書き、<see cref="P:System.Web.UI.WebControls.WebControl.Width" />プロパティです。 このプロパティの設定でサポートされていない、<see cref="T:System.Web.UI.WebControls.ListView" />コントロール。</summary>
        <value>
          <see cref="F:System.Web.UI.WebControls.Unit.Empty" />、プロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 スタイル プロパティでサポートされていない、<xref:System.Web.UI.WebControls.ListView>コントロール。 設定を試行した場合、 <xref:System.Web.UI.WebControls.ListView.Width%2A> 、プロパティ、<xref:System.NotSupportedException>例外がスローされます。 プロパティを取得する場合は、基本クラスの対応するプロパティの既定値を返します。  
  
 スタイルを<xref:System.Web.UI.WebControls.ListView>コントロール、内のコントロールのスタイルする必要があります、<xref:System.Web.UI.WebControls.ListView>連鎖を使用してテンプレートのスタイル シート (CSS) クラスまたはインライン スタイル要素。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">設定しようとしましたが、<see cref="P:System.Web.UI.WebControls.ListView.Width" />プロパティです。</exception>
      </Docs>
    </Member>
  </Members>
</Type>
