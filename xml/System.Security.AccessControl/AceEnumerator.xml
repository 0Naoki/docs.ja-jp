<Type Name="AceEnumerator" FullName="System.Security.AccessControl.AceEnumerator">
  <TypeSignature Language="C#" Value="public sealed class AceEnumerator : System.Collections.IEnumerator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AceEnumerator extends System.Object implements class System.Collections.IEnumerator" />
  <TypeSignature Language="DocId" Value="T:System.Security.AccessControl.AceEnumerator" />
  <AssemblyInfo>
    <AssemblyName>System.Security.AccessControl</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerator</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>アクセス制御リスト (ACL) のアクセス制御エントリ (ACE) を反復処理する機能を提供します。</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.GenericAce Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.AccessControl.GenericAce Current" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.AceEnumerator.Current" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.GenericAce</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>内の現在の要素を取得、<see cref="T:System.Security.AccessControl.GenericAce" />コレクション。 このプロパティは、オブジェクトの種類に適したバージョンを取得します。</summary>
        <value>現在の要素、<see cref="T:System.Security.AccessControl.GenericAce" />コレクション。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public bool MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.AceEnumerator.MoveNext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>列挙の次の要素を<see cref="T:System.Security.AccessControl.GenericAce" />コレクション。</summary>
        <returns>
          列挙子が次の要素に正常に進んだ場合は <see langword="true" />。列挙子がコレクションの末尾を越えた場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 列挙子を作成した後、または呼び出しの後に、<xref:System.Security.AccessControl.AceEnumerator.Reset%2A>メソッド、列挙子がコレクション、および最初の呼び出しの最初の要素の前に位置付けられます、<xref:System.Security.AccessControl.AceEnumerator.MoveNext%2A>メソッドが、列挙子をコレクションの最初の要素の上に移動します。  
  
 コレクションの末尾が渡された、後続の呼び出し後<xref:System.Security.AccessControl.AceEnumerator.MoveNext%2A>返す`false`まで<xref:System.Security.AccessControl.AceEnumerator.Reset%2A>と呼びます。  
  
 コレクションが変更されない限り、列挙子は有効です。 列挙子は回復不可能と、次の呼び出しなど、追加すると、変更、または、要素を削除すると変更された場合、このコレクションに<xref:System.Security.AccessControl.AceEnumerator.MoveNext%2A>または<xref:System.Security.AccessControl.AceEnumerator.Reset%2A>スロー、<xref:System.InvalidOperationException>です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">コレクションは、列挙子の作成後に変更されました。</exception>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.AceEnumerator.Reset" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>列挙子を初期位置、つまり最初の要素の前に設定、<see cref="T:System.Security.AccessControl.GenericAce" />コレクション。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コレクションが変更されない限り、列挙子は有効です。 など、追加すると、変更、または削除、要素は、コレクションに加えられた、列挙子は回復不可能と、次への呼び出し、<xref:System.Security.AccessControl.AceEnumerator.MoveNext%2A>メソッドまたは<xref:System.Security.AccessControl.AceEnumerator.Reset%2A>メソッドがスローされます、<xref:System.InvalidOperationException>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">コレクションは、列挙子の作成後に変更されました。</exception>
        <block subset="none" type="overrides">
          <para>すべての呼び出しを<see cref="M:System.Security.AccessControl.AceEnumerator.Reset" />列挙子の同じ状態になる必要があります。 優先の実装では、最初の要素の前に、コレクションの先頭に、列挙子を移動します。 列挙子が作成されてと整合するコレクションが変更された場合、列挙子を無効に<see cref="M:System.Security.AccessControl.AceEnumerator.MoveNext" />と<see cref="P:System.Security.AccessControl.AceEnumerator.Current" />です。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerator.Current">
      <MemberSignature Language="C#" Value="object System.Collections.IEnumerator.Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IEnumerator.Current" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.AceEnumerator.System#Collections#IEnumerator#Current" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コレクション内の現在の要素を取得します。</summary>
        <value>コレクション内の現在の要素を返します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 列挙子を作成した後、または呼び出しの後に、<xref:System.Security.AccessControl.AceEnumerator.Reset%2A>メソッドを呼び出す必要があります、<xref:System.Security.AccessControl.AceEnumerator.MoveNext%2A>メソッドの値を読み取る前に、コレクションの最初の要素に列挙子を進める<xref:System.Security.AccessControl.AceEnumerator.System%23Collections%23IEnumerator%23Current%2A>、それ以外の<xref:System.Security.AccessControl.AceEnumerator.System%23Collections%23IEnumerator%23Current%2A>が定義されていません。  
  
 <xref:System.Security.AccessControl.AceEnumerator.System%23Collections%23IEnumerator%23Current%2A>または例外をスロー、最後の呼び出し<xref:System.Security.AccessControl.AceEnumerator.MoveNext%2A>返される`false`コレクションの末尾を示します。  
  
 <xref:System.Security.AccessControl.AceEnumerator.System%23Collections%23IEnumerator%23Current%2A>連続して呼び出すと、列挙子の位置を移動しません<xref:System.Security.AccessControl.AceEnumerator.System%23Collections%23IEnumerator%23Current%2A>されるまで、同じオブジェクトを返す<xref:System.Security.AccessControl.AceEnumerator.MoveNext%2A>または<xref:System.Security.AccessControl.AceEnumerator.Reset%2A>と呼びます。  
  
 コレクションが変更されない限り、列挙子は有効です。 列挙子は回復不可能ですと、次の呼び出しなど、追加すると、変更、または、要素を削除すると変更された場合、このコレクションに<xref:System.Security.AccessControl.AceEnumerator.MoveNext%2A>または<xref:System.Security.AccessControl.AceEnumerator.Reset%2A>スロー、<xref:System.InvalidOperationException>です。 間で、コレクションが変更された場合<xref:System.Security.AccessControl.AceEnumerator.MoveNext%2A>と<xref:System.Security.AccessControl.AceEnumerator.System%23Collections%23IEnumerator%23Current%2A>、<xref:System.Security.AccessControl.AceEnumerator.System%23Collections%23IEnumerator%23Current%2A>列挙子が既に無効になっている場合でもに設定されている要素を返します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">コレクションは、列挙子の作成後に変更されました。</exception>
      </Docs>
    </Member>
  </Members>
</Type>
