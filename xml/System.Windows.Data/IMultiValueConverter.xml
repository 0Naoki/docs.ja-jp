<Type Name="IMultiValueConverter" FullName="System.Windows.Data.IMultiValueConverter">
  <TypeSignature Language="C#" Value="public interface IMultiValueConverter" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IMultiValueConverter" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Data.IMultiValueConverter" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>カスタム ロジックを適用する方法を提供する<see cref="T:System.Windows.Data.MultiBinding" />です。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コンバーターを関連付ける、<xref:System.Windows.Data.MultiBinding>を実装するクラスを作成、<xref:System.Windows.Data.IMultiValueConverter>インターフェイス、および実装し、<xref:System.Windows.Data.IMultiValueConverter.Convert%2A>と<xref:System.Windows.Data.IMultiValueConverter.ConvertBack%2A>メソッドです。  
  
 コレクション内の個々 のバインディングは、独自の値コンバーターを持つことができます。 詳細については、「<xref:System.Windows.Data.IValueConverter>」を参照してください。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Convert">
      <MemberSignature Language="C#" Value="public object Convert (object[] values, Type targetType, object parameter, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Convert(object[] values, class System.Type targetType, object parameter, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.IMultiValueConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Object[]" />
        <Parameter Name="targetType" Type="System.Type" />
        <Parameter Name="parameter" Type="System.Object" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="values">値の配列内のソース バインディング、<see cref="T:System.Windows.Data.MultiBinding" />が生成されます。 値<see cref="F:System.Windows.DependencyProperty.UnsetValue" />ソース バインディングに変換に提供する値がないことを示します。</param>
        <param name="targetType">バインディング ターゲット プロパティの型。</param>
        <param name="parameter">使用するコンバーター パラメーター。</param>
        <param name="culture">コンバーターで使用するカルチャ。</param>
        <summary>ソース値をバインディング ターゲットの値に変換します。 データ バインディング エンジンでは、ソース バインディングからの値をバインディング ターゲットに伝達するときに、このメソッドを呼び出します。</summary>
        <returns>変換された値。  
  
 メソッドを返す場合<see langword="null" />、有効な<see langword="null" />値を使用します。  
  
 戻り値の<see cref="T:System.Windows.DependencyProperty" />します。<see cref="F:System.Windows.DependencyProperty.UnsetValue" /> コンバーターが、値を生成しなかったことと、バインディングが使用することを示す、<see cref="P:System.Windows.Data.BindingBase.FallbackValue" />使用可能なまたはその他の場合に、既定値を使用します。  
  
 戻り値の<see cref="T:System.Windows.Data.Binding" />します。<see cref="F:System.Windows.Data.Binding.DoNothing" /> バインディングの値を転送またはを使用していないしないことを示します、<see cref="P:System.Windows.Data.BindingBase.FallbackValue" />または既定値です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 データ バインディング エンジンは、ユーザー指定のコンバーターによってスローされる例外をキャッチしません。 によってスローされる例外すべて、<xref:System.Windows.Data.IMultiValueConverter.Convert%2A>メソッド、またはメソッドによってスローする例外をキャッチする、<xref:System.Windows.Data.IMultiValueConverter.Convert%2A>メソッド呼び出しは実行時エラーとして扱われます。 返すことによって予測される問題を処理<xref:System.Windows.DependencyProperty>.<xref:System.Windows.DependencyProperty.UnsetValue>です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertBack">
      <MemberSignature Language="C#" Value="public object[] ConvertBack (object value, Type[] targetTypes, object parameter, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object[] ConvertBack(object value, class System.Type[] targetTypes, object parameter, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.IMultiValueConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="targetTypes" Type="System.Type[]" />
        <Parameter Name="parameter" Type="System.Object" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="value">バインディング ターゲットによって生成される値。</param>
        <param name="targetTypes">変換対象の型の配列。 配列の長さは、メソッドの戻り値として推奨されている値の数と型を示します。</param>
        <param name="parameter">使用するコンバーター パラメーター。</param>
        <param name="culture">コンバーターで使用するカルチャ。</param>
        <summary>バインディング ターゲットの値をバインディング ソースの値に変換します。</summary>
        <returns>ターゲット値からソース値に変換された値の配列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 戻り値の数よりも多い内のバインディングがあるかどうか、 <xref:System.Windows.Data.MultiBinding>、余分な戻り値は無視されます。 複数のソースのバインドよりも多い戻り値がある場合は、残りのソース バインディングに設定されている値はありません。 戻り値の型はに対して検証されません`targetTypes`; の値が直接のソース バインディングに設定されます。  
  
 返す<xref:System.Windows.Data.Binding.DoNothing>位置にある`i`インデックス位置にあるソース バインディングに設定する値がないことを示す`i`です。  
  
 返す<xref:System.Windows.DependencyProperty>.<xref:System.Windows.DependencyProperty.UnsetValue>位置にある`i`コンバーターがインデックスにあるソースのバインドの値を指定することであることを示す`i`、および値の設定されているがありません。  
  
 返す`null`コンバーターが変換を実行できないか、この方向での変換をサポートしていないを示します。  
  
 データ バインディング エンジンは、ユーザー指定のコンバーターによってスローされる例外をキャッチしません。 によってスローされる例外すべて、<xref:System.Windows.Data.IMultiValueConverter.ConvertBack%2A>メソッドまたはいずれかのメソッドによってスローされる例外をキャッチする、<xref:System.Windows.Data.IMultiValueConverter.ConvertBack%2A>メソッド呼び出しは実行時エラーとして扱われます。 返すことによって予測される問題を処理`null`です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
