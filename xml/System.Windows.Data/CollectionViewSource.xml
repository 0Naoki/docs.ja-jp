<Type Name="CollectionViewSource" FullName="System.Windows.Data.CollectionViewSource">
  <TypeSignature Language="C#" Value="public class CollectionViewSource : System.Windows.DependencyObject, System.ComponentModel.ISupportInitialize, System.Windows.IWeakEventListener" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CollectionViewSource extends System.Windows.DependencyObject implements class System.ComponentModel.ISupportInitialize, class System.Windows.IWeakEventListener" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Data.CollectionViewSource" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.DependencyObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.ISupportInitialize</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.IWeakEventListener</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Extensible Application Markup Language (XAML) プロキシ、<see cref="T:System.Windows.Data.CollectionView" />クラスです。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Data.CollectionViewSource>プロキシを<xref:System.Windows.Data.CollectionView>クラス、またはクラスから派生した<xref:System.Windows.Data.CollectionView>です。 <xref:System.Windows.Data.CollectionViewSource>により、[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]一般的に使用されるを設定するコード<xref:System.Windows.Data.CollectionView>プロパティを基になるビューにこれらの設定を渡すことです。 <xref:System.Windows.Data.CollectionViewSource><xref:System.Windows.Data.CollectionViewSource.View%2A>実際のビューを保持するプロパティと<xref:System.Windows.Data.CollectionViewSource.Source%2A>ソース コレクションを保持するプロパティです。  
  
 コレクション ビューに移動し、並べ替え、フィルター、および基になるソース コレクション自体を操作することがなくグループ クエリに基づいてコレクションを表示できるようにするバインド ソース コレクションの上にレイヤーと考えることができます。 ソース コレクションを実装する場合、<xref:System.Collections.Specialized.INotifyCollectionChanged>によって発生した変更のインターフェイス、<xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged>イベントは、ビューに反映されます。  
  
 ビューは基になるソース コレクションを変更しないため、各ソース コレクションは関連付けられた複数のビューを持つことができます。 たとえばのコレクションがある`Task`オブジェクト。 ビューを使用すると、同じデータをさまざまな方法で表示できます。 たとえば、ページの左側に優先度で並べ替えられたタスクを表示し、右側に区分でグループ化されたタスクを表示できます。  
  
 詳しくは、「[データ バインディングの概要](~/docs/framework/wpf/data/data-binding-overview.md)」の「コレクションへのバインド」をご覧ください。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CollectionViewSource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.CollectionViewSource.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.Data.CollectionViewSource" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanChangeLiveFiltering">
      <MemberSignature Language="C#" Value="public bool CanChangeLiveFiltering { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanChangeLiveFiltering" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.CollectionViewSource.CanChangeLiveFiltering" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コレクション ビューがデータのリアルタイム フィルター処理のオン/オフ切り替えをサポートしているかどうかを示す値を取得します。</summary>
        <value>
          コレクション ビューがライブ フィルター処理のオン/オフ切り替えをサポートしている場合は、<see langword="true" />。それ以外の場合は、<see langword="false" />。 登録済みの既定値は <see langword="false" /> です。 新機能に影響を与える値の詳細については、次を参照してください。[依存関係プロパティの値の優先順位](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md)です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_CanChangeLiveFiltering"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Data.CollectionViewSource.CanChangeLiveFilteringProperty>|  
|メタデータ プロパティに設定します。`true`|なし|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanChangeLiveFilteringProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CanChangeLiveFilteringProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CanChangeLiveFilteringProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Data.CollectionViewSource.CanChangeLiveFilteringProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Data.CollectionViewSource.CanChangeLiveFiltering" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanChangeLiveGrouping">
      <MemberSignature Language="C#" Value="public bool CanChangeLiveGrouping { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanChangeLiveGrouping" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.CollectionViewSource.CanChangeLiveGrouping" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コレクション ビューが、オンまたはオフに、オンにするリアルタイムでデータのグループ化をサポートするかどうかを示す値を取得します。</summary>
        <value>
          <see langword="true" />コレクション ビューは、オンまたはオフ; オンにするライブのグループ化をサポートしている場合それ以外の場合、<see langword="false" />です。登録済みの既定値は<see langword="false" />します。 新機能に影響を与える値の詳細については、次を参照してください。[依存関係プロパティの値の優先順位](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md)です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_CanChangeLiveGrouping"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Data.CollectionViewSource.CanChangeLiveGroupingProperty>|  
|メタデータ プロパティに設定します。`true`|なし|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanChangeLiveGroupingProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CanChangeLiveGroupingProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CanChangeLiveGroupingProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Data.CollectionViewSource.CanChangeLiveGroupingProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Data.CollectionViewSource.CanChangeLiveGrouping" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanChangeLiveSorting">
      <MemberSignature Language="C#" Value="public bool CanChangeLiveSorting { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanChangeLiveSorting" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.CollectionViewSource.CanChangeLiveSorting" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コレクション ビューが同時にリアルタイムでデータの並べ替えを有効または無効をサポートするかどうかを示す値を取得します。</summary>
        <value>
          <see langword="true" />コレクション ビューは、オンまたはオフ; 上のライブの並べ替えをサポートしている場合それ以外の場合、<see langword="false" />です。 登録済みの既定値は <see langword="false" /> です。 新機能に影響を与える値の詳細については、次を参照してください。[依存関係プロパティの値の優先順位](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md)です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_CanChangeLiveSorting"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Data.CollectionViewSource.CanChangeLiveSortingProperty>|  
|メタデータ プロパティに設定します。`true`|なし|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanChangeLiveSortingProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CanChangeLiveSortingProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CanChangeLiveSortingProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Data.CollectionViewSource.CanChangeLiveSortingProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Data.CollectionViewSource.CanChangeLiveSorting" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CollectionViewType">
      <MemberSignature Language="C#" Value="public Type CollectionViewType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type CollectionViewType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.CollectionViewSource.CollectionViewType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または目的のビューの種類を設定します。</summary>
        <value>目的のビューの種類。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 これは、既定の型とは異なる特定の種類のコレクションの上にカスタム ビューを作成するときに使用できます。  
  
 このプロパティは、初期化中にのみ設定可能性があります。  
  
<a name="dependencyPropertyInfo_CollectionViewType"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Data.CollectionViewSource.CollectionViewTypeProperty>|  
|メタデータ プロパティに設定します。`true`|なし|  
  
<a name="xamlAttributeUsage_CollectionViewType"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
  
```  
<object CollectionViewType="{x:Type typeName}"/>  
```  
  
<a name="xamlValues_CollectionViewType"></a>   
## <a name="xaml-values"></a>XAML 値  
 *型名*  
 名前、<xref:System.Type>このビューが含まれています。 使用に注意してください、 [X:type マークアップ拡張機能](~/docs/framework/xaml-services/x-type-markup-extension.md)で型を指定する[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CollectionViewTypeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CollectionViewTypeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CollectionViewTypeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Data.CollectionViewSource.CollectionViewTypeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Data.CollectionViewSource.CollectionViewType" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Culture">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo Culture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CultureInfo Culture" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.CollectionViewSource.Culture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.CultureInfoIetfLanguageTagConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または並べ替えや比較などの操作で使用するカルチャを設定します。</summary>
        <value>並べ替えや比較などの操作に使用されるカルチャ。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティは、これから作成されたコレクション ビューに転送<xref:System.Windows.Data.CollectionViewSource.Source%2A>コレクション。  
  
<a name="xamlAttributeUsage_Culture"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
  
```  
<object Culture="ietfLanguageTag"/>  
```  
  
<a name="xamlValues_Culture"></a>   
## <a name="xaml-values"></a>XAML 値  
 *ietfLanguageTag*  
 設定に使用する文字列、<xref:System.Globalization.CultureInfo>です。 この文字列は内部的に呼び出しに使用します。 <xref:System.Globalization.CultureInfo.GetCultureInfoByIetfLanguageTag%2A>。 文字列の形式の詳細については、「<xref:System.Globalization.CultureInfo.GetCultureInfoByIetfLanguageTag%2A?displayProperty=nameWithType>です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeferRefresh">
      <MemberSignature Language="C#" Value="public IDisposable DeferRefresh ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IDisposable DeferRefresh() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.CollectionViewSource.DeferRefresh" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ビューの変更をマージして自動更新を遅延させるために使用できる遅延サイクルを入力します。</summary>
        <returns>呼び出し元のオブジェクトを破棄するために使用できる <see cref="T:System.IDisposable" /> オブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 一般的な用途を作成するには、`using`このメソッドを使用してスコープを設定して、スコープ内で複数のビューを変更する呼び出しを配置します。 これにより、遅延サイクルが終了するまで、自動更新が遅延します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public event System.Windows.Data.FilterEventHandler Filter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Data.FilterEventHandler Filter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Data.CollectionViewSource.Filter" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.FilterEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>フィルター処理ロジックを提供します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ビューは、コレクションにフィルターを適用することができます。 これは、コレクション内で項目が存在する可能性があります、特定のビューがものであるコレクション全体の特定のサブセットのみを表示することを意味します。  
  
 このイベントを使用して、フィルターのロジックを提供するイベント ハンドラーを設定することができます。  
  
   
  
## Examples  
 次の例は、イベント ハンドラーを設定する方法を示しています、<xref:System.Windows.Data.CollectionViewSource.Filter>イベント。 この例では`listingDataView`のインスタンスは、<xref:System.Windows.Data.CollectionViewSource>です。  
  
 [!code-csharp[DataBindingLab#10](~/samples/snippets/csharp/VS_Snippets_Wpf/DataBindingLab/CSharp/MainWindow.xaml.cs#10)]
 [!code-vb[DataBindingLab#10](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DataBindingLab/VisualBasic/MainWindow.xaml.vb#10)]  
  
 この例の実装を次に示します`ShowOnlyBargainsFilter`フィルター イベント ハンドラー。 このイベント ハンドラーを使用して、<xref:System.Windows.Data.FilterEventArgs.Accepted%2A>プロパティをフィルターで除外`AuctionItem`を持つオブジェクト、 `CurrentPrice` $25 以上です。  
  
 [!code-csharp[DataBindingLab#5](~/samples/snippets/csharp/VS_Snippets_Wpf/DataBindingLab/CSharp/MainWindow.xaml.cs#5)]
 [!code-vb[DataBindingLab#5](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DataBindingLab/VisualBasic/MainWindow.xaml.vb#5)]  
  
 完了の例では、次を参照してください。[データ バインディング デモ](http://go.microsoft.com/fwlink/?LinkID=163703)です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDefaultView">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.ICollectionView GetDefaultView (object source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.ICollectionView GetDefaultView(object source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.CollectionViewSource.GetDefaultView(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ICollectionView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="source">バインディング ソースへのオブジェクト参照。</param>
        <summary>指定したソースの既定のビューを返します。</summary>
        <returns>返します、<see cref="T:System.ComponentModel.ICollectionView" />オブジェクトは、指定したソース コレクションの既定のビューです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この既定のビューは、いずれかに関係していることはありません<xref:System.Windows.Data.CollectionViewSource>オブジェクト。  
  
 すべてのコレクションは、既定値を持つ<xref:System.Windows.Data.CollectionView>します。 WPF は、コレクションではなく、ビューに常にバインドします。 コレクションに直接バインドする WPF は実際にそのコレクションの既定のビューにバインドされます。 この既定のビューは、これにより、コレクションにすべての直接バインドを並べ替え、フィルター、グループ、および 1 つの既定のビューの現在の項目の特性を共有すると、コレクションにすべてのバインディングによって共有されます。 コレクション内のビューを作成する代わりに、[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]またはコードを使用して、<xref:System.Windows.Data.CollectionViewSource>クラスし、そのビューに、コントロールをバインドします。 例については、次を参照してください。[する方法: 並べ替えとグループを使用して XAML でのビュー データ](~/docs/framework/wpf/data/how-to-sort-and-group-data-using-a-view-in-xaml.md)です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupDescriptions">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ObservableCollection&lt;System.ComponentModel.GroupDescription&gt; GroupDescriptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ObservableCollection`1&lt;class System.ComponentModel.GroupDescription&gt; GroupDescriptions" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.CollectionViewSource.GroupDescriptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ObservableCollection&lt;System.ComponentModel.GroupDescription&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定のコレクション<see cref="T:System.ComponentModel.GroupDescription" />ビューで、コレクション内の項目をグループ化する方法を説明するオブジェクト。</summary>
        <value><see cref="T:System.Collections.ObjectModel.ObservableCollection`1" />の<see cref="T:System.ComponentModel.GroupDescription" />ビューで、コレクション内の項目をグループ化する方法を説明するオブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティは、現在から作成されたコレクション ビューに転送<xref:System.Windows.Data.CollectionViewSource.Source%2A>です。  
  
<a name="xamlPropertyElementUsage_GroupDescriptions"></a>   
## <a name="xaml-property-element-usage"></a>XAML プロパティ要素の使用  
  
```  
<object>  
  <object.GroupDescriptions>  
    oneOrMorePropertyDescriptions  
  </object.GroupDescriptions>  
</object>  
```  
  
<a name="xamlValues_GroupDescriptions"></a>   
## <a name="xaml-values"></a>XAML 値  
 *oneOrMorePropertyDescriptions*  
 派生した 1 つまたは複数の要素、 <xref:System.ComponentModel.GroupDescription>s 抽象クラスです。 通常、これは、<xref:System.Windows.Data.PropertyGroupDescription>です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDefaultView">
      <MemberSignature Language="C#" Value="public static bool IsDefaultView (System.ComponentModel.ICollectionView view);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDefaultView(class System.ComponentModel.ICollectionView view) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.CollectionViewSource.IsDefaultView(System.ComponentModel.ICollectionView)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="System.ComponentModel.ICollectionView" />
      </Parameters>
      <Docs>
        <param name="view">チェックするビュー オブジェクト。</param>
        <summary>指定されたビューがの既定のビューであるかどうかを示す値を返します、<see cref="P:System.Windows.Data.CollectionViewSource.Source" />コレクション。</summary>
        <returns>
          <see langword="true" />指定されたビューの既定ビューである場合、<see cref="P:System.Windows.Data.CollectionViewSource.Source" />コレクションまたは特定のビューが<see langword="nulll" />、それ以外の<see langword="false" />します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 すべてのコレクションは、既定値を持つ<xref:System.Windows.Data.CollectionView>します。 実装するすべてのコレクションに対して<xref:System.Collections.IList>、<xref:System.Windows.Data.ListCollectionView>オブジェクトは、既定のビュー オブジェクト。 <xref:System.Windows.Data.BindingListCollectionView>コレクション ビュー クラスを実装するコレクションの使用は、<xref:System.ComponentModel.IBindingListView>と<xref:System.ComponentModel.IBindingList>です。 既定のビューを取得するには、使用して、<xref:System.Windows.Data.CollectionViewSource.GetDefaultView%2A>メソッドです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLiveFiltering">
      <MemberSignature Language="C#" Value="public Nullable&lt;bool&gt; IsLiveFiltering { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; IsLiveFiltering" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.CollectionViewSource.IsLiveFiltering" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>示す値を取得するかどうか、<see cref="T:System.Windows.Data.CollectionViewSource" />リアルタイムでデータをフィルター処理します。</summary>
        <value>
          <see langword="true" />リアルタイムでデータをフィルター処理が有効である場合<see langword="false" />ライブ フィルター処理が有効でない場合です。<see langword="null" />コレクション ビューがライブ フィルター処理を実装するかどうかを確認できない場合。 登録済みの既定値は <see langword="false" /> です。 新機能に影響を与える値の詳細については、次を参照してください。[依存関係プロパティの値の優先順位](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md)です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_IsLiveFiltering"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Data.CollectionViewSource.IsLiveFilteringProperty>|  
|メタデータ プロパティに設定します。`true`|なし|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLiveFilteringProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsLiveFilteringProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsLiveFilteringProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Data.CollectionViewSource.IsLiveFilteringProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Data.CollectionViewSource.IsLiveFiltering" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLiveFilteringRequested">
      <MemberSignature Language="C#" Value="public bool IsLiveFilteringRequested { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLiveFilteringRequested" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.CollectionViewSource.IsLiveFilteringRequested" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはを示す値を設定するかどうか<see cref="T:System.Windows.Data.CollectionViewSource" />できる場合は、リアルタイムでデータをフィルター処理する必要があります。</summary>
        <value>
          <see langword="true" />ライブ フィルター処理が要求されました。それ以外の場合、<see langword="false" />です。 登録済みの既定値は <see langword="false" /> です。 新機能に影響を与える値の詳細については、次を参照してください。[依存関係プロパティの値の優先順位](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md)です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_IsLiveFilteringRequested"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Data.CollectionViewSource.IsLiveFilteringRequestedProperty>|  
|メタデータ プロパティに設定します。`true`|なし|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLiveFilteringRequestedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsLiveFilteringRequestedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsLiveFilteringRequestedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Data.CollectionViewSource.IsLiveFilteringRequestedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Data.CollectionViewSource.IsLiveFilteringRequested" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLiveGrouping">
      <MemberSignature Language="C#" Value="public Nullable&lt;bool&gt; IsLiveGrouping { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; IsLiveGrouping" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.CollectionViewSource.IsLiveGrouping" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>示す値を取得するかどうか、<see cref="T:System.Windows.Data.CollectionViewSource" />リアルタイムでデータをグループ化します。</summary>
        <value>
          <see langword="true" />リアルタイムでデータをグループ化が有効にします。<see langword="false" />ライブのグループ化が有効でない場合<see langword="null" />コレクション ビューがライブのグループ化を実装するかどうかを確認できない場合。 登録済みの既定値は <see langword="false" /> です。 新機能に影響を与える値の詳細については、次を参照してください。[依存関係プロパティの値の優先順位](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md)です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_IsLiveGrouping"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Data.CollectionViewSource.IsLiveGroupingProperty>|  
|メタデータ プロパティに設定します。`true`|なし|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLiveGroupingProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsLiveGroupingProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsLiveGroupingProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Data.CollectionViewSource.IsLiveGroupingProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Data.CollectionViewSource.IsLiveGrouping" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLiveGroupingRequested">
      <MemberSignature Language="C#" Value="public bool IsLiveGroupingRequested { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLiveGroupingRequested" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.CollectionViewSource.IsLiveGroupingRequested" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはを示す値を設定するかどうか<see cref="T:System.Windows.Data.CollectionViewSource" />できる場合は、リアルタイムでデータをグループ化する必要があります。</summary>
        <value>
          <see langword="true" />ライブのグループ化がある場合が要求されました。それ以外の場合、<see langword="false" />です。 登録済みの既定値は <see langword="false" /> です。 新機能に影響を与える値の詳細については、次を参照してください。[依存関係プロパティの値の優先順位](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md)です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_IsLiveGroupingRequested"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Data.CollectionViewSource.IsLiveGroupingRequestedProperty>|  
|メタデータ プロパティに設定します。`true`|なし|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLiveGroupingRequestedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsLiveGroupingRequestedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsLiveGroupingRequestedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Data.CollectionViewSource.IsLiveGroupingRequestedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Data.CollectionViewSource.IsLiveGroupingRequested" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLiveSorting">
      <MemberSignature Language="C#" Value="public Nullable&lt;bool&gt; IsLiveSorting { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; IsLiveSorting" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.CollectionViewSource.IsLiveSorting" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>示す値を取得するかどうか、<see cref="T:System.Windows.Data.CollectionViewSource" />リアルタイムでデータを並べ替えます。</summary>
        <value>
          <see langword="true" />リアルタイムでデータを並べ替える場合は有効です。<see langword="false" />ライブ並べ替えが有効でない場合です。<see langword="null" />コレクション ビューがライブ並べ替えを実装するかどうかを確認できない場合。 登録済みの既定値は <see langword="false" /> です。 新機能に影響を与える値の詳細については、次を参照してください。[依存関係プロパティの値の優先順位](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md)です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_IsLiveSorting"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Data.CollectionViewSource.IsLiveSortingProperty>|  
|メタデータ プロパティに設定します。`true`|なし|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLiveSortingProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsLiveSortingProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsLiveSortingProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Data.CollectionViewSource.IsLiveSortingProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Data.CollectionViewSource.IsLiveSorting" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLiveSortingRequested">
      <MemberSignature Language="C#" Value="public bool IsLiveSortingRequested { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLiveSortingRequested" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.CollectionViewSource.IsLiveSortingRequested" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはを示す値を設定するかどうか<see cref="T:System.Windows.Data.CollectionViewSource" />できる場合は、リアルタイムでデータを並べ替える必要があります。</summary>
        <value>
          <see langword="true" />ライブ並べ替えが要求されました。それ以外の場合、<see langword="false" />です。 登録済みの既定値は <see langword="false" /> です。 新機能に影響を与える値の詳細については、次を参照してください。[依存関係プロパティの値の優先順位](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md)です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_IsLiveSortingRequested"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Data.CollectionViewSource.IsLiveSortingRequestedProperty>|  
|メタデータ プロパティに設定します。`true`|なし|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLiveSortingRequestedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsLiveSortingRequestedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsLiveSortingRequestedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Data.CollectionViewSource.IsLiveSortingRequestedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Data.CollectionViewSource.IsLiveSortingRequested" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LiveFilteringProperties">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ObservableCollection&lt;string&gt; LiveFilteringProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ObservableCollection`1&lt;string&gt; LiveFilteringProperties" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.CollectionViewSource.LiveFilteringProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ObservableCollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>リアルタイムでデータをフィルター処理に参加しているプロパティを指定する文字列のコレクションを取得します。</summary>
        <value>リアルタイムでデータをフィルター処理に参加しているプロパティを指定する文字列のコレクション。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LiveGroupingProperties">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ObservableCollection&lt;string&gt; LiveGroupingProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ObservableCollection`1&lt;string&gt; LiveGroupingProperties" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.CollectionViewSource.LiveGroupingProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ObservableCollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>リアルタイムでデータをグループ化に参加しているプロパティを指定する文字列のコレクションを取得します。</summary>
        <value>リアルタイムでデータをグループ化に参加しているプロパティを指定する文字列のコレクション。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LiveSortingProperties">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ObservableCollection&lt;string&gt; LiveSortingProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ObservableCollection`1&lt;string&gt; LiveSortingProperties" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.CollectionViewSource.LiveSortingProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ObservableCollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>リアルタイムでデータの並べ替えに参加しているプロパティを指定する文字列のコレクションを取得します。</summary>
        <value>リアルタイムでデータの並べ替えに参加しているプロパティを指定する文字列のコレクション。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCollectionViewTypeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnCollectionViewTypeChanged (Type oldCollectionViewType, Type newCollectionViewType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCollectionViewTypeChanged(class System.Type oldCollectionViewType, class System.Type newCollectionViewType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.CollectionViewSource.OnCollectionViewTypeChanged(System.Type,System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldCollectionViewType" Type="System.Type" />
        <Parameter Name="newCollectionViewType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="oldCollectionViewType"><see cref="P:System.Windows.Data.CollectionViewSource.CollectionViewType" /> プロパティの変更前の値。</param>
        <param name="newCollectionViewType"><see cref="P:System.Windows.Data.CollectionViewSource.CollectionViewType" /> プロパティの新しい値。</param>
        <summary>呼び出されたときに、<see cref="P:System.Windows.Data.CollectionViewSource.CollectionViewType" />プロパティが変更されました。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSourceChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnSourceChanged (object oldSource, object newSource);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSourceChanged(object oldSource, object newSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.CollectionViewSource.OnSourceChanged(System.Object,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldSource" Type="System.Object" />
        <Parameter Name="newSource" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="oldSource"><see cref="P:System.Windows.Data.CollectionViewSource.Source" /> プロパティの変更前の値。</param>
        <param name="newSource"><see cref="P:System.Windows.Data.CollectionViewSource.Source" /> プロパティの新しい値。</param>
        <summary>呼び出されたときに、<see cref="P:System.Windows.Data.CollectionViewSource.Source" />プロパティが変更されました。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceiveWeakEvent">
      <MemberSignature Language="C#" Value="protected virtual bool ReceiveWeakEvent (Type managerType, object sender, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool ReceiveWeakEvent(class System.Type managerType, object sender, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.CollectionViewSource.ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="managerType" Type="System.Type" />
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="managerType">型、<see cref="T:System.Windows.WeakEventManager" />このメソッドを呼び出します。 これは、型のマネージャー オブジェクトにしか認識しません<see cref="T:System.Windows.Data.DataChangedEventManager" />です。</param>
        <param name="sender">イベントを発生させたオブジェクト。</param>
        <param name="e">イベント データ。</param>
        <summary>一元的なイベント テーブルからのイベントを処理します。</summary>
        <returns>
          <see langword="true" />リスナーがイベントを処理する場合それ以外の場合、<see langword="false" />です。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SortDescriptions">
      <MemberSignature Language="C#" Value="public System.ComponentModel.SortDescriptionCollection SortDescriptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.SortDescriptionCollection SortDescriptions" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.CollectionViewSource.SortDescriptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.SortDescriptionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定のコレクション<see cref="T:System.ComponentModel.SortDescription" />ビューで、コレクション内の項目の並べ替え方法を説明するオブジェクト。</summary>
        <value>コレクション<see cref="T:System.ComponentModel.SortDescription" />ビューで、コレクション内の項目の並べ替え方法を説明するオブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティは、現在のソースから作成されたコレクション ビューに転送されます。  
  
<a name="xamlPropertyElementUsage_SortDescriptions"></a>   
## <a name="xaml-property-element-usage"></a>XAML プロパティ要素の使用  
  
```  
<object>  
  <object.SortDescriptions>  
    oneOrMoreSortDescriptions  
  </object.SortDescriptions>  
</object>  
```  
  
<a name="xamlValues_SortDescriptions"></a>   
## <a name="xaml-values"></a>XAML 値  
 *oneOrMoreSortDescriptions*  
 1 つまたは複数<xref:System.ComponentModel.SortDescription>要素。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public object Source { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Source" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.CollectionViewSource.Source" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このビューの作成元のコレクション オブジェクトを取得または設定します。</summary>
        <value>既定値は <see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_Source"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Data.CollectionViewSource.SourceProperty>|  
|メタデータ プロパティに設定します。`true`|なし|  
  
<a name="xamlAttributeUsage_Source"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
  
```  
<object Source="myCollection" .../>  
```  
  
<a name="xamlValues_Source"></a>   
## <a name="xaml-values"></a>XAML 値  
 *myCollection*  
 既存のコレクション。 既存のコレクションを参照を使用して、 [StaticResource マークアップ拡張機能](~/docs/framework/wpf/advanced/staticresource-markup-extension.md)します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SourceProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SourceProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Data.CollectionViewSource.SourceProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Data.CollectionViewSource.Source" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ISupportInitialize.BeginInit">
      <MemberSignature Language="C#" Value="void ISupportInitialize.BeginInit ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.ISupportInitialize.BeginInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.CollectionViewSource.System#ComponentModel#ISupportInitialize#BeginInit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>初期化の開始を通知するシグナルをオブジェクトに送信します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ISupportInitialize.EndInit">
      <MemberSignature Language="C#" Value="void ISupportInitialize.EndInit ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.ISupportInitialize.EndInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.CollectionViewSource.System#ComponentModel#ISupportInitialize#EndInit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>初期化の完了を通知するシグナルをオブジェクトに送信します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.IWeakEventListener.ReceiveWeakEvent">
      <MemberSignature Language="C#" Value="bool IWeakEventListener.ReceiveWeakEvent (Type managerType, object sender, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Windows.IWeakEventListener.ReceiveWeakEvent(class System.Type managerType, object sender, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.CollectionViewSource.System#Windows#IWeakEventListener#ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="managerType" Type="System.Type" />
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="managerType">型、<see cref="T:System.Windows.WeakEventManager" />このメソッドを呼び出します。 これは、型のマネージャー オブジェクトにしか認識しません<see cref="T:System.Windows.Data.DataChangedEventManager" />です。</param>
        <param name="sender">イベントを発生させたオブジェクト。</param>
        <param name="e">イベント データ。</param>
        <summary>中央のイベント マネージャーからイベントを受信します。</summary>
        <returns>
          <see langword="true" />リスナーがイベントを処理する場合それ以外の場合、<see langword="false" />です。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="View">
      <MemberSignature Language="C#" Value="public System.ComponentModel.ICollectionView View { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.ICollectionView View" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.CollectionViewSource.View" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ICollectionView</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このインスタンスに現在関連付けられているビュー オブジェクトを取得<see cref="T:System.Windows.Data.CollectionViewSource" />です。</summary>
        <value>このインスタンスに現在関連付けられているビュー オブジェクト<see cref="T:System.Windows.Data.CollectionViewSource" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_View"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Data.CollectionViewSource.ViewProperty>|  
|メタデータ プロパティに設定します。`true`|なし|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ViewProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ViewProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ViewProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Data.CollectionViewSource.ViewProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Data.CollectionViewSource.CollectionViewType" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
