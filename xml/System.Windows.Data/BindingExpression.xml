<Type Name="BindingExpression" FullName="System.Windows.Data.BindingExpression">
  <TypeSignature Language="C#" Value="public sealed class BindingExpression : System.Windows.Data.BindingExpressionBase, System.Windows.IWeakEventListener" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit BindingExpression extends System.Windows.Data.BindingExpressionBase implements class System.Windows.IWeakEventListener" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Data.BindingExpression" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Data.BindingExpressionBase</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.IWeakEventListener</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>単一インスタンスに関する情報が含まれています、<see cref="T:System.Windows.Data.Binding" />です。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Data.Binding>クラスは、バインディングの宣言の高度なクラスです。 <xref:System.Windows.Data.BindingExpression>クラスは、バインディング ソースとバインド ターゲットの間の接続を保持する基になるオブジェクト。 A<xref:System.Windows.Data.Binding>いくつかの間で共有できるすべての情報を含む<xref:System.Windows.Data.BindingExpression>オブジェクト。 A<xref:System.Windows.Data.BindingExpression>インスタンス式を共有することはできず、に関するすべてのインスタンス情報を格納するは、<xref:System.Windows.Data.Binding>です。  
  
 たとえば、次のように、`myDataObject`のインスタンス、`MyData`クラス、`myBinding`ソースである<xref:System.Windows.Data.Binding>オブジェクト、および`MyData`クラスは、定義されたクラスをという名前の文字列プロパティを含む`MyDataProperty`です。 この例のテキスト コンテンツ`mytext`のインスタンスは<xref:System.Windows.Controls.TextBlock>を`MyDataProperty`です。  
  
 [!code-csharp[CodeOnlyBinding#1](~/samples/snippets/csharp/VS_Snippets_Wpf/CodeOnlyBinding/CSharp/binding.cs#1)]
 [!code-vb[CodeOnlyBinding#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CodeOnlyBinding/VisualBasic/App.vb#1)]  
  
 ボリュームを使用して同じ`myBinding`を他のバインディングを作成するオブジェクト。 たとえば、使用する場合があります、`myBinding`するチェック ボックスのテキストの内容をバインドするオブジェクト`MyDataProperty`です。 シナリオでは、ある 2 つのインスタンスになる<xref:System.Windows.Data.BindingExpression>を共有する、`myBinding`オブジェクト。  
  
 取得することができます、<xref:System.Windows.Data.BindingExpression>オブジェクトを使用して、<xref:System.Windows.Data.BindingOperations.GetBindingExpression%2A>メソッドまたは<xref:System.Windows.FrameworkElement.GetBindingExpression%2A>データ バインドされたオブジェクトのメソッドです。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="DataItem">
      <MemberSignature Language="C#" Value="public object DataItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DataItem" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingExpression.DataItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.Windows.Data.BindingExpression" /> が使用するバインド ソース オブジェクトを取得します。</summary>
        <value>この <see cref="T:System.Windows.Data.BindingExpression" /> が使用するバインド ソース オブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次の例の実装を示しています、<xref:System.Windows.Controls.Primitives.ButtonBase.Click>イベント ハンドラーを使用する、<xref:System.Windows.Data.BindingOperations.GetBindingExpression%2A>を取得するメソッド、<xref:System.Windows.Data.BindingExpression>しを呼び出して、<xref:System.Windows.Data.BindingExpression.DataItem%2A>バインド ソース オブジェクトにアクセスするプロパティです。  
  
 <xref:System.Windows.Controls.TextBlock> `SavingsText`バインディング ターゲット オブジェクトは、およびその<xref:System.Windows.Controls.TextBlock.Text%2A>プロパティは、バインディング ターゲット プロパティ。  
  
 [!code-csharp[DirectionalBinding#OnRentRaise](~/samples/snippets/csharp/VS_Snippets_Wpf/DirectionalBinding/CSharp/Page1.xaml.cs#onrentraise)]
 [!code-vb[DirectionalBinding#OnRentRaise](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DirectionalBinding/VisualBasic/DirectionalBinding.vb#onrentraise)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentBinding">
      <MemberSignature Language="C#" Value="public System.Windows.Data.Binding ParentBinding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Data.Binding ParentBinding" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingExpression.ParentBinding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.Binding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返します、 <see cref="T:System.Windows.Data.Binding" /> 、現在のオブジェクト<see cref="T:System.Windows.Data.BindingExpression" />です。</summary>
        <value><see cref="T:System.Windows.Data.Binding" />の現在のバインド式のオブジェクト。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolvedSource">
      <MemberSignature Language="C#" Value="public object ResolvedSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ResolvedSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingExpression.ResolvedSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このバインド ソース オブジェクトを取得<see cref="T:System.Windows.Data.BindingExpression" />です。</summary>
        <value>このバインド ソース オブジェクト<see cref="T:System.Windows.Data.BindingExpression" />です。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolvedSourcePropertyName">
      <MemberSignature Language="C#" Value="public string ResolvedSourcePropertyName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ResolvedSourcePropertyName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingExpression.ResolvedSourcePropertyName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このバインディング ソース プロパティの名前を取得<see cref="T:System.Windows.Data.BindingExpression" />です。</summary>
        <value>このバインディング ソース プロパティの名前<see cref="T:System.Windows.Data.BindingExpression" />です。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.IWeakEventListener.ReceiveWeakEvent">
      <MemberSignature Language="C#" Value="bool IWeakEventListener.ReceiveWeakEvent (Type managerType, object sender, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Windows.IWeakEventListener.ReceiveWeakEvent(class System.Type managerType, object sender, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingExpression.System#Windows#IWeakEventListener#ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="managerType" Type="System.Type" />
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="managerType">型、<see cref="T:System.Windows.WeakEventManager" />このメソッドを呼び出します。 これは、型のマネージャー オブジェクトにしか認識しません<see cref="T:System.Collections.Specialized.CollectionChangedEventManager" />です。</param>
        <param name="sender">イベントを発生させたオブジェクト。</param>
        <param name="e">イベント データ。</param>
        <summary>このメンバーは、[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] インフラストラクチャをサポートしますが、独自に作成したコードから直接使用するためのものではありません。</summary>
        <returns>
          <see langword="true" />リスナーがイベントを処理する場合それ以外の場合、<see langword="false" />です。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateSource">
      <MemberSignature Language="C#" Value="public override void UpdateSource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void UpdateSource() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingExpression.UpdateSource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>バインディング ソース プロパティに現在のバインディング ターゲットの値を送信<see cref="F:System.Windows.Data.BindingMode.TwoWay" />または<see cref="F:System.Windows.Data.BindingMode.OneWayToSource" />バインドします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは何ときに、<xref:System.Windows.Data.Binding.Mode%2A>バインドがない<xref:System.Windows.Data.BindingMode.TwoWay>または<xref:System.Windows.Data.BindingMode.OneWayToSource>です。  
  
 場合、<xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A>に、バインディングの値が設定されている<xref:System.Windows.Data.UpdateSourceTrigger.Explicit>、呼び出す必要があります、<xref:System.Windows.Data.BindingExpression.UpdateSource%2A>メソッドまたは変更がソースに反映されません。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">バインドはそのターゲットからデタッチされています。</exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateTarget">
      <MemberSignature Language="C#" Value="public override void UpdateTarget ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void UpdateTarget() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingExpression.UpdateTarget" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>バインディング ソース プロパティからバインディング ターゲット プロパティへのデータ転送を強制的に実行します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドでは、対象のプロパティに source プロパティから、データ転送を強制することができます。 など、ソース オブジェクトに、適切なプロパティ変更の通知のメカニズムが実装されている場合<xref:System.ComponentModel.INotifyPropertyChanged>ターゲットの更新プログラムが自動的に行われます。 ただし、このメソッドを使用して、ソース オブジェクトが適切なプロパティ変更通知を提供限りませんで明示的にターゲット プロパティを更新するオプションがあります。 アプリケーションが、ターゲットのプロパティを定期的に更新する必要がある場合は、このメソッドを使用することもできます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">バインドはそのターゲットからデタッチされています。</exception>
      </Docs>
    </Member>
  </Members>
</Type>
