<Type Name="ListControlConvertEventArgs" FullName="System.Windows.Forms.ListControlConvertEventArgs">
  <TypeSignature Language="C#" Value="public class ListControlConvertEventArgs : System.Windows.Forms.ConvertEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ListControlConvertEventArgs extends System.Windows.Forms.ConvertEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ListControlConvertEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.ConvertEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><see cref="E:System.Windows.Forms.ListControl.Format" /> イベントのデータを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例では、この型の使用を示します。 例では、イベント ハンドラーは発生するときに報告、<xref:System.Windows.Forms.ListControl.Format>イベント。 このレポートでは、イベントが発生し、デバッグに役立つを学習するのに役立ちます。 複数のイベントまたは頻繁に発生するイベントを報告するための交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加する<xref:System.Windows.Forms.TextBox>です。  
  
 実行するには、コード例から継承する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.ListControl>、ように、<xref:System.Windows.Forms.ComboBox>または<xref:System.Windows.Forms.ListBox>です。 インスタンスを名前`ListControl1`にイベント ハンドラーが関連付けられていることを確認してください、<xref:System.Windows.Forms.ListControl.Format>イベント。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#144](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#144)]
 [!code-vb[System.Windows.Forms.EventExamples#144](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#144)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListControlConvertEventArgs (object value, Type desiredType, object listItem);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object value, class System.Type desiredType, object listItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListControlConvertEventArgs.#ctor(System.Object,System.Type,System.Object)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="desiredType" Type="System.Type" />
        <Parameter Name="listItem" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">表示される値、<see cref="T:System.Windows.Forms.ListControl" />です。</param>
        <param name="desiredType"><see cref="T:System.Type" />表示されている項目にします。</param>
        <param name="listItem">表示されるデータ ソース アイテム、<see cref="T:System.Windows.Forms.ListControl" />です。</param>
        <summary>新しいインスタンスを初期化、<see cref="T:System.Windows.Forms.ListControlConvertEventArgs" />指定したオブジェクト、型、およびリスト項目を持つクラス。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 表示するカスタムの文字列を構築するこのクラスを使用できる、<xref:System.Windows.Forms.ListControl>データ ソース アイテムからです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ListItem">
      <MemberSignature Language="C#" Value="public object ListItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ListItem" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListControlConvertEventArgs.ListItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データ ソース アイテムを取得します。</summary>
        <value><see cref="T:System.Object" />データ ソース内の項目を表すです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例では、このメンバーの使用方法を示します。 例では、イベント ハンドラーは発生するときに報告、<xref:System.Windows.Forms.ListControl.Format?displayProperty=nameWithType>イベント。 このレポートでは、イベントが発生し、デバッグに役立つを学習するのに役立ちます。 複数のイベントまたは頻繁に発生するイベントを報告するための交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加する<xref:System.Windows.Forms.TextBox>です。  
  
 実行するには、コード例から継承する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.ListControl>、ように、<xref:System.Windows.Forms.ComboBox>または<xref:System.Windows.Forms.ListBox>です。 インスタンスを名前`ListControl1`にイベント ハンドラーが関連付けられていることを確認してください、<xref:System.Windows.Forms.ListControl.Format?displayProperty=nameWithType>イベント。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#144](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#144)]
 [!code-vb[System.Windows.Forms.EventExamples#144](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#144)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
