<Type Name="DataGridViewButtonColumn" FullName="System.Windows.Forms.DataGridViewButtonColumn">
  <TypeSignature Language="C#" Value="public class DataGridViewButtonColumn : System.Windows.Forms.DataGridViewColumn" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataGridViewButtonColumn extends System.Windows.Forms.DataGridViewColumn" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataGridViewButtonColumn" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.DataGridViewColumn</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Drawing.ToolboxBitmap(typeof(System.Windows.Forms.DataGridViewButtonColumn), "DataGridViewButtonColumn.bmp")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>コレクションをホスト<see cref="T:System.Windows.Forms.DataGridViewButtonCell" />オブジェクト。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridViewButtonColumn>クラスは、特殊な種類の<xref:System.Windows.Forms.DataGridViewColumn>論理的にホストするためのクラスのセルの単純なユーザー入力に応答します。 A<xref:System.Windows.Forms.DataGridViewButtonColumn>が関連付けられている<xref:System.Windows.Forms.DataGridViewButtonCell>ですべて<xref:System.Windows.Forms.DataGridViewRow>と交差することです。 各セルは、次のようなユーザー インターフェイス (UI) を提供する<xref:System.Windows.Forms.Button>コントロール。  
  
 すべてのセルに対して同じボタンのテキストを表示するには、次のように設定します。、<xref:System.Windows.Forms.DataGridViewButtonColumn.UseColumnTextForButtonValue%2A>プロパティを`true`設定と、<xref:System.Windows.Forms.DataGridViewButtonColumn.Text%2A>プロパティを、目的のボタンのテキスト。  
  
 この列の型の既定の並べ替えモードは<xref:System.Windows.Forms.DataGridViewColumnSortMode.NotSortable>します。  
  
 ユーザー ボタンのクリックに応答して、処理、<xref:System.Windows.Forms.DataGridView.CellClick?displayProperty=nameWithType>または<xref:System.Windows.Forms.DataGridView.CellContentClick?displayProperty=nameWithType>イベント。 イベントのハンドラーを使用できます、<xref:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex%2A?displayProperty=nameWithType>ボタン列でクリックが発生したかどうかを決定するプロパティです。 使用することができます、<xref:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex%2A?displayProperty=nameWithType>ボタン セルでは、列ヘッダーではなく、クリックが発生したかどうかを決定するプロパティです。  
  
> [!NOTE]
>  使用してボタン列内のボタンを描画する visual スタイルが有効な場合、 <xref:System.Windows.Forms.ButtonRenderer>、およびセルのなどのプロパティで指定されたスタイル<xref:System.Windows.Forms.DataGridViewButtonColumn.DefaultCellStyle%2A>がある影響しません。  
  
   
  
## Examples  
 次のコード例を使用する方法を示しています、<xref:System.Windows.Forms.DataGridViewButtonColumn>特定の行で操作を実行します。 この例では、<xref:System.Windows.Forms.DataGridView.CellClick?displayProperty=nameWithType>イベント ハンドラーは、最初、クリックがボタン セルにし、行に関連付けられているビジネス オブジェクトを取得するかどうかに決定します。 この例で使用できる例の一部である[する方法: Windows フォームの DataGridViewComboBoxCell ドロップダウン リストでオブジェクトにアクセス](~/docs/framework/winforms/controls/access-objects-in-a-wf-datagridviewcomboboxcell-drop-down-list.md)です。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewComboBoxObjectBinding#100](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewComboBoxObjectBinding/CS/form1.cs#100)]
 [!code-vb[System.Windows.Forms.DataGridViewComboBoxObjectBinding#100](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewComboBoxObjectBinding/vb/form1.vb#100)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>派生したときに<see cref="T:System.Windows.Forms.DataGridViewButtonColumn" />、派生クラスに新しいプロパティを追加、上書きすることを確認して、<see cref="M:System.Windows.Forms.DataGridViewButtonColumn.Clone" />複製操作時に新しいプロパティをコピーします。 基本クラスの呼び出す必要もあります<see cref="M:System.Windows.Forms.DataGridViewButtonColumn.Clone" />メソッドの基本クラスのプロパティが新しいセルにコピーされるようにします。</para>
    </block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataGridViewButtonColumn ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewButtonColumn.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>新しいインスタンスを初期化、<see cref="T:System.Windows.Forms.DataGridViewButtonColumn" />クラスが既定の状態にします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このコンス トラクターは、次のプロパティを設定して、列を初期化します。  
  
|プロパティ|値|  
|--------------|-----------|  
|<xref:System.Windows.Forms.DataGridViewButtonColumn.CellTemplate%2A>|新しい <xref:System.Windows.Forms.DataGridViewButtonCell>。|  
|<xref:System.Windows.Forms.DataGridViewCellStyle.Alignment%2A>のプロパティ、<xref:System.Windows.Forms.DataGridViewCellStyle>によって返されるオブジェクト、<xref:System.Windows.Forms.DataGridViewButtonColumn.DefaultCellStyle%2A>プロパティです。|<xref:System.Windows.Forms.DataGridViewContentAlignment?displayProperty=nameWithType>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CellTemplate">
      <MemberSignature Language="C#" Value="public override System.Windows.Forms.DataGridViewCell CellTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewCell CellTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewButtonColumn.CellTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCell</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>新しいセルの作成に使用するテンプレートを取得または設定します。</summary>
        <value>A<see cref="T:System.Windows.Forms.DataGridViewCell" />列内のすべてのセルが後にモデル化します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コンス トラクター、<xref:System.Windows.Forms.DataGridViewButtonColumn>クラスは、新しく作成するには、このプロパティを初期化<xref:System.Windows.Forms.DataGridViewButtonCell>です。  
  
> [!CAUTION]
>  セル テンプレートのプロパティの変更はすぐに影響しません、列の既存のセルのユーザー インターフェイス (UI)。 これらの変更のみが明らかな列が再生成 (列を並べ替えることで、たとえば、またはを呼び出すことによって、<xref:System.Windows.Forms.DataGridView.InvalidateColumn%2A?displayProperty=nameWithType>メソッド)。  
  
   
  
## Examples  
 次のコード例を使用する方法を示しています、<xref:System.Windows.Forms.DataGridViewButtonColumn>従業員が行われた売上を表示します。 セル テンプレートは同じ色のすべてのボタンに適用するために使用します。 この例で使用できる例の一部である、<xref:System.Windows.Forms.DataGridViewComboBoxColumn>クラスの概要に関するトピック。  
  
 [!code-cpp[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#10](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/CPP/employees.cpp#10)]
 [!code-csharp[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/CS/employees.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/VB/employees.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">このプロパティの設定キャストできませんでしたするときに指定された値、<see cref="T:System.Windows.Forms.DataGridViewButtonCell" />です。</exception>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public override object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewButtonColumn.Clone" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>対象の列の同一コピーを作成します。</summary>
        <returns>複製された <see cref="T:System.Windows.Forms.DataGridViewButtonColumn" /> を表す <see cref="T:System.Object" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ボタン セルの列を複製するのにには、このメソッドを使用します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Windows.Forms.DataGridViewButtonColumn.CellTemplate" /> プロパティの値が <see langword="null" /> です。</exception>
        <block subset="none" type="overrides">
          <para>オーバーライドする場合<see cref="M:System.Windows.Forms.DataGridViewButtonColumn.Clone" />呼び出し、基本クラスの派生クラスで<see cref="M:System.Windows.Forms.DataGridViewButtonColumn.Clone" />メソッドの基本クラスのプロパティが新しいセルにコピーされも、派生クラスに追加されたプロパティの値をコピーすることを確認するようにします。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="DefaultCellStyle">
      <MemberSignature Language="C#" Value="public override System.Windows.Forms.DataGridViewCellStyle DefaultCellStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewCellStyle DefaultCellStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewButtonColumn.DefaultCellStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>列の既定のセル スタイルを取得または設定します。</summary>
        <value>既定スタイルとして適用される <see cref="T:System.Windows.Forms.DataGridViewCellStyle" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 既定値<xref:System.Windows.Forms.DataGridViewCellStyle>これによって返されるプロパティには、初期<xref:System.Windows.Forms.DataGridViewCellStyle.Alignment%2A>のプロパティの値<xref:System.Windows.Forms.DataGridViewContentAlignment.MiddleCenter>です。 この値で指定された値より優先、<xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A>のプロパティ、<xref:System.Windows.Forms.DataGridView>を制御するが、その他のセル スタイル プロパティによってオーバーライドされる可能性があります。 詳細については、次を参照してください。 [Windows フォーム DataGridView コントロールのセル スタイル](~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md)です。  
  
> [!NOTE]
>  使用してボタン列内のボタンを描画する visual スタイルが有効な場合、<xref:System.Windows.Forms.ButtonRenderer>およびセルのなどのプロパティで指定されたスタイル<xref:System.Windows.Forms.DataGridViewButtonColumn.DefaultCellStyle%2A>がある影響しません。  
  
   
  
## Examples  
 次のコード例では、このプロパティの使用方法を示します。  
  
 [!code-csharp[System.Windows.Forms.GridViewContentAlignment#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.GridViewContentAlignment/CS/changecolumnalignment.cs#1)]
 [!code-vb[System.Windows.Forms.GridViewContentAlignment#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.GridViewContentAlignment/VB/changecolumnalignment.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FlatStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.FlatStyle FlatStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.FlatStyle FlatStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewButtonColumn.FlatStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.FlatStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または列にボタン セルのフラット スタイルの外観を設定します。</summary>
        <value>A<see cref="T:System.Windows.Forms.FlatStyle" />列のボタンの外観を示す値。 既定値は、<see cref="F:System.Windows.Forms.FlatStyle.Standard" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridViewButtonColumn.FlatStyle%2A>プロパティは、列内のセルの外観を指定します。 詳細については、<xref:System.Windows.Forms.FlatStyle> 列挙型のページをご覧ください。  
  
 取得するか、このプロパティの設定を取得または設定、<xref:System.Windows.Forms.DataGridViewButtonCell.FlatStyle%2A>によって返されるオブジェクトのプロパティ、<xref:System.Windows.Forms.DataGridViewButtonColumn.CellTemplate%2A>プロパティです。 またセットでこのプロパティを設定、<xref:System.Windows.Forms.DataGridViewButtonCell.FlatStyle%2A>列と更新のすべてのセルのプロパティ列を表示します。 指定された個々 のセルの値をオーバーライドするには、列の値を設定した後、セルの値を設定します。  
  
   
  
## Examples  
 次のコード例を使用する方法を示しています、<xref:System.Windows.Forms.DataGridViewButtonColumn>従業員が行われた売上を表示します。 この例で使用できる例の一部である、<xref:System.Windows.Forms.DataGridViewComboBoxColumn>クラスの概要に関するトピック。  
  
 [!code-cpp[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#10](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/CPP/employees.cpp#10)]
 [!code-csharp[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/CS/employees.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/VB/employees.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Windows.Forms.DataGridViewButtonColumn.CellTemplate" /> プロパティの値が <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewButtonColumn.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはボタン セルに表示される既定のテキストを設定します。</summary>
        <value>A<see cref="T:System.String" />テキストを含むです。 既定値は、<see cref="F:System.String.Empty" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 各<xref:System.Windows.Forms.DataGridViewButtonCell>としてを持つ列に含まれる、<xref:System.Windows.Forms.DataGridViewButtonCell.UseColumnTextForButtonValue%2A>のプロパティの値`true`が表示されます、<xref:System.Windows.Forms.DataGridViewButtonColumn.Text%2A>セルのボタンのプロパティ値。  
  
 関連付けられている場合<xref:System.Windows.Forms.DataGridView>コントロール、このプロパティを変更する列の表示を更新します。  
  
   
  
## Examples  
 次のコード例を使用する方法を示しています、<xref:System.Windows.Forms.DataGridViewButtonColumn>従業員が行われた売上を表示します。 <xref:System.Windows.Forms.DataGridViewButtonColumn.Text%2A>列ヘッダーを設定するプロパティを使用します。 この例で使用できる例の一部である、<xref:System.Windows.Forms.DataGridViewComboBoxColumn>クラスの概要に関するトピック。  
  
 [!code-cpp[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#10](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/CPP/employees.cpp#10)]
 [!code-csharp[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/CS/employees.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/VB/employees.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">このプロパティの値を設定するときに、<see cref="P:System.Windows.Forms.DataGridViewButtonColumn.CellTemplate" />プロパティは<see langword="null" />します。</exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewButtonColumn.ToString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>列を説明する文字列を取得します。</summary>
        <returns>A<see cref="T:System.String" />列を説明します。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseColumnTextForButtonValue">
      <MemberSignature Language="C#" Value="public bool UseColumnTextForButtonValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseColumnTextForButtonValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewButtonColumn.UseColumnTextForButtonValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはを示す値を設定するかどうか、<see cref="P:System.Windows.Forms.DataGridViewButtonColumn.Text" />プロパティ値がこの列のセルのボタンのテキストとして表示されます。</summary>
        <value>
          <see langword="true" />場合、<see cref="P:System.Windows.Forms.DataGridViewButtonColumn.Text" />プロパティ値が列にあるボタンに表示されます<see langword="false" />場合、<see cref="P:System.Windows.Forms.DataGridViewCell.FormattedValue" />各セルのプロパティの値がそのボタンに表示されます。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 既定では、<xref:System.Windows.Forms.DataGridViewCell.FormattedValue%2A?displayProperty=nameWithType>ボタンは、セルは、ボタンのテキストとして表示されます。 <xref:System.Windows.Forms.DataGridViewButtonColumn.UseColumnTextForButtonValue%2A>プロパティを使用すると、各セルのボタンのテキストを設定するかを使用したりする、<xref:System.Windows.Forms.DataGridViewButtonColumn.Text%2A>ボタン セルのすべてのプロパティの値。  
  
 取得するか、このプロパティの設定を取得または設定、<xref:System.Windows.Forms.DataGridViewButtonCell.UseColumnTextForButtonValue%2A>によって返されるオブジェクトのプロパティ、<xref:System.Windows.Forms.DataGridViewButtonColumn.CellTemplate%2A>プロパティです。 またセットでこのプロパティを設定、<xref:System.Windows.Forms.DataGridViewButtonCell.UseColumnTextForButtonValue%2A>列と更新のすべてのセルのプロパティ列を表示します。 指定された個々 のセルの値をオーバーライドするには、列の値を設定した後、セルの値を設定します。  
  
   
  
## Examples  
 次のコード例では、このプロパティの使用方法を示します。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMisc#010](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/CS/datagridviewmisc.cs#010)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc#010](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/VB/datagridviewmisc.vb#010)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Windows.Forms.DataGridViewButtonColumn.CellTemplate" /> プロパティの値が <see langword="null" /> です。</exception>
      </Docs>
    </Member>
  </Members>
</Type>
