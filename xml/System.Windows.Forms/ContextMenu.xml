<Type Name="ContextMenu" FullName="System.Windows.Forms.ContextMenu">
  <TypeSignature Language="C#" Value="public class ContextMenu : System.Windows.Forms.Menu" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ContextMenu extends System.Windows.Forms.Menu" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ContextMenu" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.Menu</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("Popup")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>ショートカット メニューを表します。 <see cref="T:System.Windows.Forms.ContextMenuStrip" />置換し、する機能を追加、<see cref="T:System.Windows.Forms.ContextMenu" />以前のバージョンでのコントロール<see cref="T:System.Windows.Forms.ContextMenu" />を選択した場合に、旧バージョンとの互換性と将来の使用の両方の保持されます。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ContextMenu>クラスは、ユーザー コントロールまたはフォームの領域の上、右マウス ボタンをクリックしたときに表示されるショートカット メニューを表します。 ショートカット メニューは通常から別のメニュー項目を組み合わせて使用、<xref:System.Windows.Forms.MainMenu>のアプリケーションのコンテキストを指定されたユーザーに便利な形式です。 たとえばに割り当てられているショートカット メニューを使用することができます、<xref:System.Windows.Forms.TextBox>コントロール、またはコピーしてテキストを貼り付けることのクリップボード機能内のテキストを検索するテキストのフォントを変更するためのメニュー項目を提供するコントロール。 表示することも新しい<xref:System.Windows.Forms.MenuItem>ショートカット メニューではないオブジェクトを内にある、<xref:System.Windows.Forms.MainMenu>適さない状況特定のコマンドを提供する、<xref:System.Windows.Forms.MainMenu>を表示します。  
  
 通常、ユーザーがマウスの右ボタンをクリックするコントロールまたはフォーム自体の上にショートカット メニューが表示されます。 表示されているコントロールと<xref:System.Windows.Forms.Form>が、<xref:System.Windows.Forms.Control.ContextMenu%2A>をバインドするプロパティ、<xref:System.Windows.Forms.ContextMenu>ショートカット メニューを表示するコントロールをクラスです。 複数のコントロールを使用できる、<xref:System.Windows.Forms.ContextMenu>です。 使用することができます、<xref:System.Windows.Forms.ContextMenu.SourceControl%2A>プロパティのコントロールは、コントロールに固有のタスクを実行するためにまたは、コントロールに表示されるショートカット メニューを変更する最後のショートカット メニューを表示します。  
  
 チェック マークを設定、アイテムを無効にし、メニューがユーザーに表示される前に、他のメニュー タスクを実行するために、ショートカット メニューを表示する際に知っておく可能性があります。 処理することができます、<xref:System.Windows.Forms.ContextMenu.Popup>ショートカット メニューが表示されている場合を決定するイベントです。  
  
> [!NOTE]
>  再利用するために<xref:System.Windows.Forms.MenuItem>で表示されるオブジェクト、<xref:System.Windows.Forms.MainMenu>で使用するため、 <xref:System.Windows.Forms.ContextMenu>、メニューを使用して、コピーを作成する必要があります、<xref:System.Windows.Forms.MenuItem.CloneMenu%2A>のメソッド、<xref:System.Windows.Forms.MenuItem>クラスです。 1 つに、メニュー項目とそのサブメニュー項目をマージすることも<xref:System.Windows.Forms.MenuItem>オブジェクトを使用して、<xref:System.Windows.Forms.MenuItem.MergeMenu%2A>のメソッド、<xref:System.Windows.Forms.MenuItem>クラスです。  
  
   
  
## Examples  
 次のコード例のイベント ハンドラーの作成、<xref:System.Windows.Forms.ContextMenu.Popup>のイベント、<xref:System.Windows.Forms.ContextMenu>です。 イベント ハンドラーでコードを決定する 2 つのコントロールの<xref:System.Windows.Forms.PictureBox>という名前`pictureBox1`と<xref:System.Windows.Forms.TextBox>という名前`textBox1`ショートカット メニューを表示するコントロールです。 原因とするコントロールに応じて、 <xref:System.Windows.Forms.ContextMenu> 、ショートカット メニューを表示するコントロールを追加、適切な<xref:System.Windows.Forms.MenuItem>オブジェクトを<xref:System.Windows.Forms.ContextMenu>です。 この例では、インスタンスがあることが必要です、<xref:System.Windows.Forms.ContextMenu>という名前のクラス`contextMenu1`フォーム内で定義されている。 またこの例ではあることが必要です、<xref:System.Windows.Forms.TextBox>と<xref:System.Windows.Forms.PictureBox>フォームに追加された、<xref:System.Windows.Forms.Control.ContextMenu%2A>これらのコントロールのプロパティが設定されて`contextMenu1`です。  
  
 [!code-cpp[Classic ContextMenu Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ContextMenu Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ContextMenu Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ContextMenu Example/CS/source.cs#1)]
 [!code-vb[Classic ContextMenu Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ContextMenu Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContextMenu ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ContextMenu.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>新しいインスタンスを初期化、<see cref="T:System.Windows.Forms.ContextMenu" />指定されたメニュー項目のないクラスです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 メニュー項目を追加することができます、コンス トラクターのこのバージョンを使用して、<xref:System.Windows.Forms.ContextMenu>を使用して、<xref:System.Windows.Forms.Menu.MenuItemCollection.Add%2A>のメソッド、<xref:System.Windows.Forms.Menu.MenuItemCollection>クラスです。 アクセスすることができます、<xref:System.Windows.Forms.Menu.MenuItemCollection>を通じて、<xref:System.Windows.Forms.Menu.MenuItems%2A>プロパティです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContextMenu (System.Windows.Forms.MenuItem[] menuItems);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.MenuItem[] menuItems) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ContextMenu.#ctor(System.Windows.Forms.MenuItem[])" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="menuItems" Type="System.Windows.Forms.MenuItem[]" />
      </Parameters>
      <Docs>
        <param name="menuItems">配列<see cref="T:System.Windows.Forms.MenuItem" />ショートカット メニューに追加するメニュー項目を表すオブジェクト。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Windows.Forms.ContextMenu" /> 、指定された一連のクラス<see cref="T:System.Windows.Forms.MenuItem" />オブジェクト。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 作成するこのバージョンのコンス トラクターを使用することができます、<xref:System.Windows.Forms.ContextMenu>を持つ、そのメニュー項目が作成時に指定します。 追加のメニュー項目を追加することができます、コンス トラクターのこのバージョンを使用して、<xref:System.Windows.Forms.ContextMenu>を使用して、<xref:System.Windows.Forms.Menu.MenuItemCollection.Add%2A>のメソッド、<xref:System.Windows.Forms.Menu.MenuItemCollection>クラスです。 アクセスすることができます、<xref:System.Windows.Forms.Menu.MenuItemCollection>を通じて、<xref:System.Windows.Forms.Menu.MenuItems%2A>プロパティです。  
  
   
  
## Examples  
 ショートカット メニューを構築してを使用して、次のコード例を示しています、<xref:System.Windows.Forms.ContextMenu.Show%2A>メソッドです。 例を実行するには、Button1 をという名前のボタンを含むフォームで、次のコードを貼り付けます。 すべてのイベントがイベント処理メソッドに関連付けられていることを確認します。  
  
 [!code-cpp[System.Windows.Forms.ManualContextMenu#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ManualContextMenu/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ManualContextMenu#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ManualContextMenu/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ManualContextMenu#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ManualContextMenu/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Collapse">
      <MemberSignature Language="C#" Value="public event EventHandler Collapse;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Collapse" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ContextMenu.Collapse" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ショートカット メニューが折りたたまれたときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベント処理の詳細については、次を参照してください。[処理とイベントの発生](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)です。  
  
   
  
## Examples  
 次のコード例では、このメンバーの使用方法を示します。 例では、イベント ハンドラーは発生するときに報告、<xref:System.Windows.Forms.ContextMenu.Collapse>イベント。 このレポートでは、イベントが発生し、デバッグに役立つを学習するのに役立ちます。 複数のイベントまたは頻繁に発生するイベントを報告するための交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加する<xref:System.Windows.Forms.TextBox>です。  
  
 コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.ContextMenu>という`ContextMenu1`です。 イベント ハンドラーが関連付けられていることを確認してください、<xref:System.Windows.Forms.ContextMenu.Collapse>イベント。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#170](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#170)]
 [!code-vb[System.Windows.Forms.EventExamples#170](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#170)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCollapse">
      <MemberSignature Language="C#" Value="protected virtual void OnCollapse (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnCollapse(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ContextMenu.OnCollapse(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.ContextMenu.Collapse" /> イベントを発生させます。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPopup">
      <MemberSignature Language="C#" Value="protected virtual void OnPopup (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPopup(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ContextMenu.OnPopup(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.ContextMenu.Popup" /> イベントを発生させます。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Popup">
      <MemberSignature Language="C#" Value="public event EventHandler Popup;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Popup" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ContextMenu.Popup" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ショートカット メニューが表示される前に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このイベントは初期化に使用することができます、<xref:System.Windows.Forms.MenuItem>から表示されるオブジェクトします。 使用する場合など、 <xref:System.Windows.Forms.ContextMenu> 3 つの<xref:System.Windows.Forms.TextBox>コントロールし、特定のメニュー項目を無効にする、<xref:System.Windows.Forms.ContextMenu>に応じて<xref:System.Windows.Forms.TextBox>がショートカット メニューを表示するには、このイベントのイベント ハンドラーを作成することができます。 使用する可能性があります、<xref:System.Windows.Forms.ContextMenu.SourceControl%2A>を決定するプロパティ<xref:System.Windows.Forms.TextBox>を表示するには、<xref:System.Windows.Forms.ContextMenu>と無効化、適切な<xref:System.Windows.Forms.MenuItem>オブジェクト。  
  
 イベント処理の詳細については、次を参照してください。[処理とイベントの発生](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)です。  
  
   
  
## Examples  
 次のコード例のイベント ハンドラーの作成、<xref:System.Windows.Forms.ContextMenu.Popup>のイベント、<xref:System.Windows.Forms.ContextMenu>です。 イベント ハンドラーでコードを決定する 2 つのコントロールの<xref:System.Windows.Forms.PictureBox>という名前`pictureBox1`と<xref:System.Windows.Forms.TextBox>という名前`textBox1`ショートカット メニューを表示するコントロールです。 原因とするコントロールに応じて、 <xref:System.Windows.Forms.ContextMenu> 、ショートカット メニューを表示するコントロールを追加、適切な<xref:System.Windows.Forms.MenuItem>オブジェクトを<xref:System.Windows.Forms.ContextMenu>です。 この例では、インスタンスがあることが必要です、<xref:System.Windows.Forms.ContextMenu>という名前のクラス`contextMenu1`フォーム内で定義されている。 またこの例ではあることが必要です、<xref:System.Windows.Forms.TextBox>と<xref:System.Windows.Forms.PictureBox>フォームに追加された、<xref:System.Windows.Forms.Control.ContextMenu%2A>これらのコントロールのプロパティが設定されて`contextMenu1`です。  
  
 [!code-cpp[Classic ContextMenu Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ContextMenu Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ContextMenu Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ContextMenu Example/CS/source.cs#1)]
 [!code-vb[Classic ContextMenu Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ContextMenu Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessCmdKey">
      <MemberSignature Language="C#" Value="protected virtual bool ProcessCmdKey (ref System.Windows.Forms.Message msg, System.Windows.Forms.Keys keyData, System.Windows.Forms.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool ProcessCmdKey(valuetype System.Windows.Forms.Message&amp; msg, valuetype System.Windows.Forms.Keys keyData, class System.Windows.Forms.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ContextMenu.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys,System.Windows.Forms.Control)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Forms.Message&amp;" RefType="ref" />
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
        <Parameter Name="control" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="msg">処理するウィンドウ メッセージを表す、参照渡しされた <see cref="T:System.Windows.Forms.Message" />。</param>
        <param name="keyData">処理するキーを表す <see cref="T:System.Windows.Forms.Keys" /> 値の 1 つ。</param>
        <param name="control">コマンド キーの適用先のコントロール。</param>
        <summary>コマンド キーを処理します。</summary>
        <returns>
          文字がコントロールによって処理された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、メッセージのプリプロセス コマンド キーを処理中に呼び出されます。 コマンド キーは、通常の入力キーに常に優先されるキーです。 コマンド キーの例としては、アクセラレータやメニューのショートカットです。 メソッドが返す必要があります`true`コマンド キーを処理したことを示すために、または`false`をキーは、コマンド キーではないことを示します。 このメソッドはコントロールは、Windows フォーム アプリケーションまたは ActiveX コントロールとしてホストされている場合にのみ呼び出されます。  
  
 <xref:System.Windows.Forms.ContextMenu.ProcessCmdKey%2A>メソッドは最初に、コントロールがあるかどうかを判断、 <xref:System.Windows.Forms.ContextMenu>、でき、その場合、<xref:System.Windows.Forms.ContextMenu>コマンド キーを処理します。 コマンド キーがメニューのショートカットではありませんし、コントロールに親がある、キーに渡された親の<xref:System.Windows.Forms.ContextMenu.ProcessCmdKey%2A>メソッドです。 実際の影響は、そのコマンドのキーは「バブル イベント」コントロールの階層構造です。 キーに加え、ユーザーが押された、キーのデータもそれを示しますの修飾子キーが押された場合に、キーと同時にします。 修飾子キーには、shift キーを押し、CTRL、ALT キーが含まれます。  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">アンマネージ コードを呼び出す即時呼び出し元がします。 関連する列挙。<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <block subset="none" type="overrides">
          <para>オーバーライドする場合、<see cref="M:System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)" />派生クラスでメソッドをコントロールを返します<see langword="true" />をキーが処理されたことを示します。 基本クラスの呼び出しの結果、コントロールによって処理されないキー<see cref="M:System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)" />メソッドが返される必要があります。 コントロールがこのメソッドをオーバーライドする必要はほとんどありません。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="RightToLeft">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.RightToLeft RightToLeft { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.RightToLeft RightToLeft" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ContextMenu.RightToLeft" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.RightToLeft</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールがテキストを右から左に表示するかどうかを示す値を取得または設定します。</summary>
        <value><see cref="T:System.Windows.Forms.RightToLeft" /> 値のいずれか。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティは、右から左に記述されている言語をサポートするメニューを使用します。 このプロパティに設定するときに`RightToLeft.Yes`、メニュー項目のテキストが右から左から右のメソッドに既定ではなく左に表示されます。  
  
> [!NOTE]
>  右から左への配置を有効にすると、Windows フォーム コントロールにどのように影響する方法の詳細については、次を参照してください。、<xref:System.Windows.Forms.Control.RightToLeft%2A>プロパティです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">プロパティに割り当てられた値がの有効なメンバーではない、<see cref="T:System.Windows.Forms.RightToLeft" />列挙します。</exception>
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public void Show (System.Windows.Forms.Control control, System.Drawing.Point pos);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Show(class System.Windows.Forms.Control control, valuetype System.Drawing.Point pos) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ContextMenu.Show(System.Windows.Forms.Control,System.Drawing.Point)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Windows.Forms.Control" />
        <Parameter Name="pos" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="control">A<see cref="T:System.Windows.Forms.Control" />このショートカット メニューが関連付けられているコントロールを指定します。</param>
        <param name="pos">A <see cref="T:System.Drawing.Point" />  メニューを表示する位置を示す座標を指定します。 指定したコントロールのクライアント座標の基準としたこれらの座標が指定されて、<c>コントロール</c>パラメーター。</param>
        <summary>指定した位置にショートカット メニューを表示します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 通常、 <xref:System.Windows.Forms.ContextMenu> 、ユーザーがコントロールまたはフォームの領域でマウスの右ボタンをクリックしたときに表示されるを<xref:System.Windows.Forms.ContextMenu>にバインドします。 このメソッドは、手動で特定の場所にショートカット メニューを表示し、特定のコントロールにバインドを使用することができます。 このメソッドは、メニューが閉じられるまでには返されません。  
  
   
  
## Examples  
 ショートカット メニューを構築してを使用して、次のコード例を示しています、<xref:System.Windows.Forms.ContextMenu.Show%2A>メソッドです。 例を実行するには、Button1 をという名前のボタンを含むフォームで、次のコードを貼り付けます。 すべてのイベントがイベント処理メソッドに関連付けられていることを確認します。  
  
 [!code-cpp[System.Windows.Forms.ManualContextMenu#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ManualContextMenu/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ManualContextMenu#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ManualContextMenu/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ManualContextMenu#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ManualContextMenu/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="control" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException">コントロールのハンドルが存在しないか、コントロールは表示されません。</exception>
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public void Show (System.Windows.Forms.Control control, System.Drawing.Point pos, System.Windows.Forms.LeftRightAlignment alignment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Show(class System.Windows.Forms.Control control, valuetype System.Drawing.Point pos, valuetype System.Windows.Forms.LeftRightAlignment alignment) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ContextMenu.Show(System.Windows.Forms.Control,System.Drawing.Point,System.Windows.Forms.LeftRightAlignment)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Windows.Forms.Control" />
        <Parameter Name="pos" Type="System.Drawing.Point" />
        <Parameter Name="alignment" Type="System.Windows.Forms.LeftRightAlignment" />
      </Parameters>
      <Docs>
        <param name="control">A<see cref="T:System.Windows.Forms.Control" />このショートカット メニューが関連付けられているコントロールを指定します。</param>
        <param name="pos">A <see cref="T:System.Drawing.Point" />  メニューを表示する位置を示す座標を指定します。 指定したコントロールのクライアント座標の基準としたこれらの座標が指定されて、<c>コントロール</c>パラメーター。</param>
        <param name="alignment">A<see cref="T:System.Windows.Forms.LeftRightAlignment" />を基準とするコントロールの配置を指定する、 <c>pos</c>パラメーター。</param>
        <summary>位置および配置を指定してショートカット メニューを表示します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceControl">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Control SourceControl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Control SourceControl" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ContextMenu.SourceControl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Control</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ショートカット メニューを表示しているコントロールを取得します。</summary>
        <value>A<see cref="T:System.Windows.Forms.Control" />ショートカット メニューが表示されているコントロールを表すです。 コントロールがショートカット メニューを表示しない場合、プロパティを返します<see langword="null" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティがで定義されているショートカット メニューを使用するコントロールが現在表示を決定する、<xref:System.Windows.Forms.ContextMenu>です。 ショートカット メニューが表示されていない場合は、どのコントロールが最後に、ショートカット メニューを表示するこのプロパティを使用できます。 このプロパティを使用することができます、<xref:System.Windows.Forms.ContextMenu.Popup>コントロールが適切なメニュー項目を表示することを確認するイベントです。 このプロパティを使用して、ショートカット メニューに表示されるメニュー コマンドに関連付けられているタスクを実行するメソッドに、コントロールへの参照を渡すことができますも。 以降、<xref:System.Windows.Forms.Form>クラスから継承<xref:System.Windows.Forms.Control>場合、に、このプロパティを使用することもできます、<xref:System.Windows.Forms.ContextMenu>フォームに関連付けられています。  
  
   
  
## Examples  
 次のコード例のイベント ハンドラーの作成、<xref:System.Windows.Forms.ContextMenu.Popup>のイベント、<xref:System.Windows.Forms.ContextMenu>です。 イベント ハンドラーでコードを決定する 2 つのコントロールの<xref:System.Windows.Forms.PictureBox>という名前`pictureBox1`と<xref:System.Windows.Forms.TextBox>という名前`textBox1`ショートカット メニューを表示するコントロールです。 原因とするコントロールに応じて、 <xref:System.Windows.Forms.ContextMenu> 、ショートカット メニューを表示するコントロールを追加、適切な<xref:System.Windows.Forms.MenuItem>オブジェクトを<xref:System.Windows.Forms.ContextMenu>です。 この例では、インスタンスがあることが必要です、<xref:System.Windows.Forms.ContextMenu>という名前のクラス`contextMenu1`フォーム内で定義されている。 またこの例ではあることが必要です、<xref:System.Windows.Forms.TextBox>と<xref:System.Windows.Forms.PictureBox>フォームに追加された、<xref:System.Windows.Forms.Control.ContextMenu%2A>これらのコントロールのプロパティが設定されて`contextMenu1`です。  
  
 [!code-cpp[Classic ContextMenu Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ContextMenu Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ContextMenu Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ContextMenu Example/CS/source.cs#1)]
 [!code-vb[Classic ContextMenu Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ContextMenu Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
