<Type Name="Message" FullName="System.Windows.Forms.Message">
  <TypeSignature Language="C#" Value="public struct Message" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit Message extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.Message" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Windows メッセージを実装します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.Message>構造体は、Windows が送信するメッセージをラップします。 この構造体を使用して、メッセージをラップしてディスパッチされ、ウィンドウ プロシージャを割り当てることができます。 この構造体を使用して、システムがアプリケーションやコントロールを送信、メッセージに関する情報を取得することができますも。 Windows メッセージの詳細については、次を参照してください。[メッセージとメッセージ キュー](http://go.microsoft.com/fwlink/?LinkId=198815)です。  
  
 作成することはできません、<xref:System.Windows.Forms.Message>直接です。 代わりに、使用、<xref:System.Windows.Forms.Message.Create%2A>メソッドです。 ここでは、効率を上げる、<xref:System.Windows.Forms.Message>既存のプールを使用して<xref:System.Windows.Forms.Message>s 可能であれば、新しいものをインスタンス化する代わりにします。 ただし場合、<xref:System.Windows.Forms.Message>は、プールでは使用できない、新しいがインスタンス化します。  
  
   
  
## Examples  
 次のコード例では、オーバーライドを示しています、<xref:System.Windows.Forms.Control.WndProc%2A>で識別されたオペレーティング システムのメッセージを処理するメソッドを<xref:System.Windows.Forms.Message>です。 別のアプリケーションがアクティブになる時期を知るには、この例では、WM_ACTIVATEAPP オペレーティング システムのメッセージが処理されます。 については、使用可能な<xref:System.Windows.Forms.Message.Msg%2A?displayProperty=nameWithType>、 <xref:System.Windows.Forms.Message.LParam%2A?displayProperty=nameWithType>、および<xref:System.Windows.Forms.Message.WParam%2A?displayProperty=nameWithType>値を参照してください、 [MSG 構造体](http://go.microsoft.com/fwlink/?LinkId=198816)ドキュメント。 実際の定数値については、次を参照してください。[メッセージ定数](http://go.microsoft.com/fwlink/?LinkId=198817)です。  
  
 [!code-cpp[System.Windows.Forms.Control.WndProc#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.WndProc/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.Control.WndProc#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.WndProc/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.Control.WndProc#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.WndProc/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.Message Create (IntPtr hWnd, int msg, IntPtr wparam, IntPtr lparam);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Forms.Message Create(native int hWnd, int32 msg, native int wparam, native int lparam) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Message.Create(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hWnd" Type="System.IntPtr" />
        <Parameter Name="msg" Type="System.Int32" />
        <Parameter Name="wparam" Type="System.IntPtr" />
        <Parameter Name="lparam" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="hWnd">メッセージは、ウィンドウ ハンドル。</param>
        <param name="msg">メッセージ ID。</param>
        <param name="wparam">メッセージ<c>wparam</c>フィールドです。</param>
        <param name="lparam">メッセージ<c>lparam</c>フィールドです。</param>
        <summary>新しい <see cref="T:System.Windows.Forms.Message" /> を作成します。</summary>
        <returns>A<see cref="T:System.Windows.Forms.Message" />作成されたメッセージを表すです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Windows.Forms.Message.Create%2A>メソッドを作成、 <xref:System.Windows.Forms.Message> Windows によって送信されたメッセージをラップします。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Message.Equals(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">現在のオブジェクトと比較するオブジェクト。</param>
        <summary>指定したオブジェクトが、現在のオブジェクトと等しいかどうかを判断します。</summary>
        <returns>
          指定したオブジェクトが現在のオブジェクトと等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />です。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Message.GetHashCode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>このインスタンスのハッシュ コードを返します。</summary>
        <returns>このインスタンスのハッシュ コードである 32 ビット符号付き整数。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLParam">
      <MemberSignature Language="C#" Value="public object GetLParam (Type cls);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetLParam(class System.Type cls) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Message.GetLParam(System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cls" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="cls">使用してインスタンスを作成する型。 この型は、構造体型として宣言する必要があります。</param>
        <summary>取得、<see cref="P:System.Windows.Forms.Message.LParam" />値し、値をオブジェクトに変換します。</summary>
        <returns><see cref="T:System.Object" />によって指定されたクラスのインスタンスを表す、<paramref name="cls" />からのデータでのパラメーター、<see cref="P:System.Windows.Forms.Message.LParam" />メッセージのフィールドです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Windows.Forms.Message.GetLParam%2A>からの情報を取得する方法を<xref:System.Windows.Forms.Message.LParam%2A>メッセージのフィールド オブジェクトに変換します。 このメソッドは、メッセージで渡されたオブジェクトにアクセスを使用することができます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HWnd">
      <MemberSignature Language="C#" Value="public IntPtr HWnd { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int HWnd" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Message.HWnd" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはメッセージのウィンドウ ハンドルを設定します。</summary>
        <value>メッセージのウィンドウ ハンドル。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LParam">
      <MemberSignature Language="C#" Value="public IntPtr LParam { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int LParam" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Message.LParam" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定します、<see cref="P:System.Windows.Forms.Message.LParam" />メッセージのフィールドです。</summary>
        <value><see cref="P:System.Windows.Forms.Message.LParam" />メッセージのフィールドです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このフィールドの値は、メッセージに依存します。 使用して、<xref:System.Windows.Forms.Message.LParam%2A>メッセージを処理するために重要な情報を取得するフィールドです。 <xref:System.Windows.Forms.Message.LParam%2A>メッセージで必要な場合は、オブジェクトを格納する通常使用されます。 使用して、<xref:System.Windows.Forms.Message.GetLParam%2A>を取得しからの情報を変換するメソッド、<xref:System.Windows.Forms.Message.LParam%2A>フィールド オブジェクトにします。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Msg">
      <MemberSignature Language="C#" Value="public int Msg { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Msg" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Message.Msg" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはメッセージの ID 番号を設定します。</summary>
        <value>メッセージの ID 番号。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例では、オーバーライドを示しています、<xref:System.Windows.Forms.Control.WndProc%2A>で識別されたオペレーティング システムのメッセージを処理するメソッドを<xref:System.Windows.Forms.Message>です。 別のアプリケーションがアクティブになる時期を知るには、この例では、WM_ACTIVATEAPP オペレーティング システムのメッセージが処理されます。 については、使用可能な<xref:System.Windows.Forms.Message.Msg%2A?displayProperty=nameWithType>、 <xref:System.Windows.Forms.Message.LParam%2A?displayProperty=nameWithType>、および<xref:System.Windows.Forms.Message.WParam%2A?displayProperty=nameWithType>値を参照してください、 [MSG 構造体](http://go.microsoft.com/fwlink/?LinkId=198816)ドキュメント。 実際の定数値については、次を参照してください。[メッセージ定数](http://go.microsoft.com/fwlink/?LinkId=198817)です。  
  
 [!code-cpp[System.Windows.Forms.Control.WndProc#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.WndProc/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.Control.WndProc#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.WndProc/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.Control.WndProc#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.WndProc/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Windows.Forms.Message a, System.Windows.Forms.Message b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Windows.Forms.Message a, valuetype System.Windows.Forms.Message b) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Message.op_Equality(System.Windows.Forms.Message,System.Windows.Forms.Message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Windows.Forms.Message" />
        <Parameter Name="b" Type="System.Windows.Forms.Message" />
      </Parameters>
      <Docs>
        <param name="a">A<see cref="T:System.Windows.Forms.Message" />と比較する<c>b</c>です。</param>
        <param name="b">A<see cref="T:System.Windows.Forms.Message" />と比較する<c>、</c>です。</param>
        <summary>2 つのインスタンスかどうかを判断の<see cref="T:System.Windows.Forms.Message" />が等しい。</summary>
        <returns>
          <see langword="true" />場合<paramref name="a" />と<paramref name="b" />同じを表す<see cref="T:System.Windows.Forms.Message" />、それ以外の<see langword="false" />します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[この演算子を同等の方法は、します。<xref:System.Windows.Forms.Message.Equals%2A?displayProperty=nameWithType>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Windows.Forms.Message a, System.Windows.Forms.Message b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Windows.Forms.Message a, valuetype System.Windows.Forms.Message b) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Message.op_Inequality(System.Windows.Forms.Message,System.Windows.Forms.Message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Windows.Forms.Message" />
        <Parameter Name="b" Type="System.Windows.Forms.Message" />
      </Parameters>
      <Docs>
        <param name="a">A<see cref="T:System.Windows.Forms.Message" />と比較する<c>b</c>です。</param>
        <param name="b">A<see cref="T:System.Windows.Forms.Message" />と比較する<c>、</c>です。</param>
        <summary>2 つのインスタンスかどうかを判断の<see cref="T:System.Windows.Forms.Message" />が等しくないです。</summary>
        <returns>
          <see langword="true" />場合<paramref name="a" />と<paramref name="b" />同じを表していない<see cref="T:System.Windows.Forms.Message" />、それ以外の<see langword="false" />します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[この演算子を同等の方法の否定であります。<xref:System.Windows.Forms.Message.Equals%2A?displayProperty=nameWithType>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Result">
      <MemberSignature Language="C#" Value="public IntPtr Result { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Result" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Message.Result" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Windows メッセージの処理に応答で返される値を指定します。</summary>
        <value>メッセージの戻り値。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Message.ToString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>現在の <see cref="T:System.String" /> を表す <see cref="T:System.Windows.Forms.Message" /> を返します </summary>
        <returns>現在の <see cref="T:System.Windows.Forms.Message" /> を表す <see cref="T:System.String" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WParam">
      <MemberSignature Language="C#" Value="public IntPtr WParam { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int WParam" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Message.WParam" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定、<see cref="P:System.Windows.Forms.Message.WParam" />メッセージのフィールドです。</summary>
        <value><see cref="P:System.Windows.Forms.Message.WParam" />メッセージのフィールドです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このフィールドの値は、メッセージに依存します。 使用して、<xref:System.Windows.Forms.Message.WParam%2A>メッセージの処理に重要な情報を取得するフィールドです。 このフィールドは通常、小規模フラグなどの情報の格納に使用されます。  
  
   
  
## Examples  
 次のコード例では、オーバーライドを示しています、<xref:System.Windows.Forms.Control.WndProc%2A>で識別されたオペレーティング システムのメッセージを処理するメソッドを<xref:System.Windows.Forms.Message>です。 別のアプリケーションがアクティブになる時期を知るには、この例では、WM_ACTIVATEAPP オペレーティング システムのメッセージが処理されます。 については、使用可能な<xref:System.Windows.Forms.Message.Msg%2A?displayProperty=nameWithType>、 <xref:System.Windows.Forms.Message.LParam%2A?displayProperty=nameWithType>、および<xref:System.Windows.Forms.Message.WParam%2A?displayProperty=nameWithType>値を参照してください、 [MSG 構造体](http://go.microsoft.com/fwlink/?LinkId=198816)ドキュメント。 実際の定数値については、次を参照してください。[メッセージ定数](http://go.microsoft.com/fwlink/?LinkId=198817)です。  
  
 [!code-cpp[System.Windows.Forms.Control.WndProc#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.WndProc/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.Control.WndProc#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.WndProc/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.Control.WndProc#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.WndProc/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
