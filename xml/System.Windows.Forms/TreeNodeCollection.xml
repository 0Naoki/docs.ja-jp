<Type Name="TreeNodeCollection" FullName="System.Windows.Forms.TreeNodeCollection">
  <TypeSignature Language="C#" Value="public class TreeNodeCollection : System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TreeNodeCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.TreeNodeCollection" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.TreeNodeCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><see cref="T:System.Windows.Forms.TreeNode" /> オブジェクトのコレクションを表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TreeNodeCollection.Add%2A>、 <xref:System.Windows.Forms.TreeNodeCollection.Remove%2A>、および<xref:System.Windows.Forms.TreeNodeCollection.RemoveAt%2A>メソッドでは、追加し、コレクションから個々 のツリー ノードを削除することができます。  
  
> [!NOTE]
>  コレクションを列挙して、ノードの削除はサポートされていません。  
  
 使用することも、<xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A>または<xref:System.Windows.Forms.TreeNodeCollection.Clear%2A>メソッドを追加またはコレクションからすべてのツリー ノードを削除します。  
  
 クラスから継承できません、<xref:System.Windows.Forms.TreeNodeCollection>クラスです。  
  
   
  
## Examples  
 次のコード例にある顧客情報が表示されます、<xref:System.Windows.Forms.TreeView>コントロール。 ツリーのルート ノードは、顧客名を表示し、子ツリー ノードは、各顧客に割り当てられている注文番号を表示します。 この例では、1,000 人の顧客が 15 の注文に表示されます。 再描画する、<xref:System.Windows.Forms.TreeView>を使用して抑制、<xref:System.Windows.Forms.TreeView.BeginUpdate%2A>と<xref:System.Windows.Forms.TreeView.EndUpdate%2A>メソッド、および待機<xref:System.Windows.Forms.Cursor>が表示されます中に、<xref:System.Windows.Forms.TreeView>を作成し、描画、<xref:System.Windows.Forms.TreeNode>オブジェクト。 この例では、ある必要があります、`Customer`オブジェクトのコレクションが保持できる`Order`オブジェクト。 インスタンスを作成することも必要です、<xref:System.Windows.Forms.TreeView>の control 権限、<xref:System.Windows.Forms.Form>です。  
  
 [!code-cpp[TreeView#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeView/CPP/treeview.cpp#1)]
 [!code-csharp[TreeView#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeView/CS/treeview.cs#1)]
 [!code-vb[TreeView#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeView/VB/treeview.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.TreeNode Add (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.TreeNode Add(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNodeCollection.Add(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">によって表示されるラベルのテキスト、<see cref="T:System.Windows.Forms.TreeNode" />です。</param>
        <summary>現在のツリー ノード コレクションの末尾に指定されたラベルのテキストを含む新しいツリー ノードを追加します。</summary>
        <returns>A<see cref="T:System.Windows.Forms.TreeNode" />コレクションに追加されているツリー ノードを表すです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 追加することも新しい<xref:System.Windows.Forms.TreeNode>オブジェクトを使用して、コレクション、<xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A>または<xref:System.Windows.Forms.TreeNodeCollection.Insert%2A>メソッドです。  
  
 削除する、<xref:System.Windows.Forms.TreeNode>以前に追加して、使用して、 <xref:System.Windows.Forms.TreeNodeCollection.Remove%2A>、 <xref:System.Windows.Forms.TreeNodeCollection.RemoveAt%2A>、または<xref:System.Windows.Forms.TreeNodeCollection.Clear%2A>メソッドです。  
  
   
  
## Examples  
 次のコード例にある顧客情報が表示されます、<xref:System.Windows.Forms.TreeView>コントロール。 ツリーのルート ノードは、顧客名を表示し、子ツリー ノードは、各顧客に割り当てられている注文番号を表示します。 この例では、1,000 人の顧客が 15 の注文に表示されます。 再描画する、<xref:System.Windows.Forms.TreeView>を使用して抑制、<xref:System.Windows.Forms.TreeView.BeginUpdate%2A>と<xref:System.Windows.Forms.TreeView.EndUpdate%2A>メソッド、および待機<xref:System.Windows.Forms.Cursor>が表示されます中に、<xref:System.Windows.Forms.TreeView>を作成し、描画、<xref:System.Windows.Forms.TreeNode>オブジェクト。 この例では、ある必要があります、`Customer`オブジェクトのコレクションが保持できる`Order`オブジェクト。 インスタンスを作成することも必要です、<xref:System.Windows.Forms.TreeView>の control 権限、<xref:System.Windows.Forms.Form>です。  
  
 [!code-cpp[TreeView#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeView/CPP/treeview.cpp#1)]
 [!code-csharp[TreeView#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeView/CS/treeview.cs#1)]
 [!code-vb[TreeView#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeView/VB/treeview.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual int Add (System.Windows.Forms.TreeNode node);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Add(class System.Windows.Forms.TreeNode node) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNodeCollection.Add(System.Windows.Forms.TreeNode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Windows.Forms.TreeNode" />
      </Parameters>
      <Docs>
        <param name="node">コレクションに追加する <see cref="T:System.Windows.Forms.TreeNode" />。</param>
        <summary>ツリー ノード コレクションの末尾には、以前に作成したツリー ノードを追加します。</summary>
        <returns>0 から始まるインデックス値、<see cref="T:System.Windows.Forms.TreeNode" />ツリー ノード コレクションに追加します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このバージョンの<xref:System.Windows.Forms.TreeNodeCollection.Add%2A>メソッドを追加できます以前に作成した<xref:System.Windows.Forms.TreeNode>ツリー ノード コレクションの末尾にオブジェクト。  
  
 追加することも新しい<xref:System.Windows.Forms.TreeNode>オブジェクトを使用して、コレクション、<xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A>または<xref:System.Windows.Forms.TreeNodeCollection.Insert%2A>メソッドです。  
  
 削除する、<xref:System.Windows.Forms.TreeNode>以前に追加して、使用して、 <xref:System.Windows.Forms.TreeNodeCollection.Remove%2A>、 <xref:System.Windows.Forms.TreeNodeCollection.RemoveAt%2A>、または<xref:System.Windows.Forms.TreeNodeCollection.Clear%2A>メソッドです。  
  
> [!NOTE]
>  A <xref:System.Windows.Forms.TreeNode> 1 つだけに割り当てることが<xref:System.Windows.Forms.TreeView>一度にコントロール。 ツリー ノードを新しいツリー ビュー コントロールを追加する必要がありますから削除するその他のツリー ビューは、最初またはそれを複製します。  
  
   
  
## Examples  
 次のコード例にある顧客情報が表示されます、<xref:System.Windows.Forms.TreeView>コントロール。 ツリーのルート ノードは、顧客名を表示し、子ツリー ノードは、各顧客に割り当てられている注文番号を表示します。 この例では、1,000 人の顧客が 15 の注文に表示されます。 再描画する、<xref:System.Windows.Forms.TreeView>を使用して抑制、<xref:System.Windows.Forms.TreeView.BeginUpdate%2A>と<xref:System.Windows.Forms.TreeView.EndUpdate%2A>メソッド、および待機<xref:System.Windows.Forms.Cursor>が表示されます中に、<xref:System.Windows.Forms.TreeView>を作成し、描画、<xref:System.Windows.Forms.TreeNode>オブジェクト。 この例では、ある必要があります、`Customer`オブジェクトのコレクションが保持できる`Order`オブジェクト。 インスタンスを作成することも必要です、<xref:System.Windows.Forms.TreeView>の control 権限、<xref:System.Windows.Forms.Form>です。  
  
 [!code-cpp[TreeView#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeView/CPP/treeview.cpp#1)]
 [!code-csharp[TreeView#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeView/CS/treeview.cs#1)]
 [!code-vb[TreeView#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeView/VB/treeview.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="node" />別に現在割り当てられて<see cref="T:System.Windows.Forms.TreeView" />です。</exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.TreeNode Add (string key, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.TreeNode Add(string key, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNodeCollection.Add(System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">ツリー ノードの名前です。</param>
        <param name="text">ツリー ノードに表示するテキストです。</param>
        <summary>文字列、および指定したキーを含む新しいツリー ノードを作成し、コレクションに追加します。</summary>
        <returns><see cref="T:System.Windows.Forms.TreeNode" />をコレクションに追加されました。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TreeNode.Name%2A>プロパティのキーに対応する<xref:System.Windows.Forms.TreeNode>で、<xref:System.Windows.Forms.TreeNodeCollection>です。  
  
 追加することも新しい<xref:System.Windows.Forms.TreeNode>オブジェクトを使用して、コレクション、<xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A>または<xref:System.Windows.Forms.TreeNodeCollection.Insert%2A>メソッドです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.TreeNode Add (string key, string text, int imageIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.TreeNode Add(string key, string text, int32 imageIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNodeCollection.Add(System.String,System.String,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="imageIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="key">ツリー ノードの名前です。</param>
        <param name="text">ツリー ノードに表示するテキストです。</param>
        <param name="imageIndex">ツリー ノードに表示するイメージのインデックス。</param>
        <summary>指定されたキー、テキスト、イメージとツリー ノードを作成し、コレクションに追加します。</summary>
        <returns><see cref="T:System.Windows.Forms.TreeNode" />をコレクションに追加されました。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TreeNode.Name%2A>プロパティのキーに対応する<xref:System.Windows.Forms.TreeNode>で、<xref:System.Windows.Forms.TreeNodeCollection>です。  
  
 `imageIndex`パラメーター内のイメージを参照、 <xref:System.Windows.Forms.TreeView.ImageList%2A> 、親<xref:System.Windows.Forms.TreeView>です。  
  
 ツリー ノードは、コレクションの末尾に追加されます。 追加することも新しい<xref:System.Windows.Forms.TreeNode>オブジェクトを使用して、コレクション、<xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A>または<xref:System.Windows.Forms.TreeNodeCollection.Insert%2A>メソッドです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.TreeNode Add (string key, string text, string imageKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.TreeNode Add(string key, string text, string imageKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNodeCollection.Add(System.String,System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="imageKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">ツリー ノードの名前です。</param>
        <param name="text">ツリー ノードに表示するテキストです。</param>
        <param name="imageKey">ツリー ノードに表示するイメージ。</param>
        <summary>指定されたキー、テキスト、イメージとツリー ノードを作成し、コレクションに追加します。</summary>
        <returns><see cref="T:System.Windows.Forms.TreeNode" />をコレクションに追加されました。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TreeNode.Name%2A>プロパティのキーに対応する<xref:System.Windows.Forms.TreeNode>で、<xref:System.Windows.Forms.TreeNodeCollection>です。  
  
 ツリー ノードは、コレクションの末尾に追加されます。 追加することも新しい<xref:System.Windows.Forms.TreeNode>オブジェクトを使用して、コレクション、<xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A>または<xref:System.Windows.Forms.TreeNodeCollection.Insert%2A>メソッドです。  
  
 `imageKey`パラメーター内のイメージを参照、 <xref:System.Windows.Forms.TreeView.ImageList%2A> 、親<xref:System.Windows.Forms.TreeView>です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.TreeNode Add (string key, string text, int imageIndex, int selectedImageIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.TreeNode Add(string key, string text, int32 imageIndex, int32 selectedImageIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNodeCollection.Add(System.String,System.String,System.Int32,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="imageIndex" Type="System.Int32" />
        <Parameter Name="selectedImageIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="key">ツリー ノードの名前です。</param>
        <param name="text">ツリー ノードに表示するテキストです。</param>
        <param name="imageIndex">ツリー ノードに表示するイメージのインデックス。</param>
        <param name="selectedImageIndex">選択した状態にあるときにツリー ノードに表示されるイメージのインデックス。</param>
        <summary>指定されたキー、テキスト、画像とツリー ノードを作成し、コレクションに追加します。</summary>
        <returns>コレクションに追加されているツリー ノード。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TreeNode.Name%2A>プロパティのキーに対応する<xref:System.Windows.Forms.TreeNode>で、<xref:System.Windows.Forms.TreeNodeCollection>です。  
  
 ツリー ノードは、コレクションの末尾に追加されます。 追加することも新しい<xref:System.Windows.Forms.TreeNode>オブジェクトを使用して、コレクション、<xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A>または<xref:System.Windows.Forms.TreeNodeCollection.Insert%2A>メソッドです。  
  
 `imageIndex`パラメーター内のイメージを参照、 <xref:System.Windows.Forms.TreeView.ImageList%2A> 、親<xref:System.Windows.Forms.TreeView>です。  
  
 `selectedImageIndex`パラメーター内のイメージを参照、 <xref:System.Windows.Forms.TreeView.StateImageList%2A> 、親<xref:System.Windows.Forms.TreeView>です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.TreeNode Add (string key, string text, string imageKey, string selectedImageKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.TreeNode Add(string key, string text, string imageKey, string selectedImageKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNodeCollection.Add(System.String,System.String,System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="imageKey" Type="System.String" />
        <Parameter Name="selectedImageKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">ツリー ノードの名前です。</param>
        <param name="text">ツリー ノードに表示するテキストです。</param>
        <param name="imageKey">ツリー ノードに表示するイメージのキー。</param>
        <param name="selectedImageKey">ノードが選択されている状態のときに表示するイメージのキー。</param>
        <summary>指定されたキー、テキスト、画像とツリー ノードを作成し、コレクションに追加します。</summary>
        <returns><see cref="T:System.Windows.Forms.TreeNode" />をコレクションに追加されました。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TreeNode.Name%2A>プロパティのキーに対応する<xref:System.Windows.Forms.TreeNode>で、<xref:System.Windows.Forms.TreeNodeCollection>です。  
  
 ツリー ノードは、コレクションの末尾に追加されます。 追加することも新しい<xref:System.Windows.Forms.TreeNode>オブジェクトを使用して、コレクション、<xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A>または<xref:System.Windows.Forms.TreeNodeCollection.Insert%2A>メソッドです。  
  
 `imageKey`パラメーター内のイメージを参照、 <xref:System.Windows.Forms.TreeView.ImageList%2A> 、親<xref:System.Windows.Forms.TreeView>です。  
  
 `selectedImageKey`パラメーター内のイメージを参照、 <xref:System.Windows.Forms.TreeView.StateImageList%2A> 、親<xref:System.Windows.Forms.TreeView>です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public virtual void AddRange (System.Windows.Forms.TreeNode[] nodes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddRange(class System.Windows.Forms.TreeNode[] nodes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNodeCollection.AddRange(System.Windows.Forms.TreeNode[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodes" Type="System.Windows.Forms.TreeNode[]" />
      </Parameters>
      <Docs>
        <param name="nodes">配列<see cref="T:System.Windows.Forms.TreeNode" />コレクションに追加するツリー ノードを表すオブジェクト。</param>
        <summary>以前に作成したツリー ノードの配列をコレクションに追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TreeNode>に含まれるオブジェクト、`nodes`配列は、コレクションの末尾に追加されます。  
  
 使用することができます、<xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A>を迅速に以前のグループを追加するメソッドが作成された<xref:System.Windows.Forms.TreeNode>オブジェクトを手動で追加するのではなくコレクション<xref:System.Windows.Forms.TreeNode>を使用してコレクションに、<xref:System.Windows.Forms.TreeNodeCollection.Add%2A>メソッドです。  
  
 削除する、<xref:System.Windows.Forms.TreeNode>以前に追加して、使用して、 <xref:System.Windows.Forms.TreeNodeCollection.Remove%2A>、 <xref:System.Windows.Forms.TreeNodeCollection.RemoveAt%2A>、または<xref:System.Windows.Forms.TreeNodeCollection.Clear%2A>メソッドです。  
  
   
  
## Examples  
 次のコード例をコピー、<xref:System.Windows.Forms.TreeNodeCollection>から、<xref:System.Windows.Forms.TreeView>一時的な<xref:System.Array>、別の配列の内容を追加および<xref:System.Windows.Forms.TreeView>を使用して、<xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A>メソッドです。 <xref:System.Windows.Forms.TreeNodeCollection>ソースから<xref:System.Windows.Forms.TreeView>を使用してがオフになって、<xref:System.Windows.Forms.TreeNodeCollection.Clear%2A>メソッドです。 この例では、2 つある必要があります<xref:System.Windows.Forms.TreeView>のコレクションを 1 つの制御<xref:System.Windows.Forms.TreeNode>オブジェクト。  
  
 [!code-cpp[TreeNodeCollection_Clear#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNodeCollection_Clear/CPP/treenodecollection_clear.cpp#1)]
 [!code-csharp[TreeNodeCollection_Clear#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNodeCollection_Clear/CS/treenodecollection_clear.cs#1)]
 [!code-vb[TreeNodeCollection_Clear#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNodeCollection_Clear/VB/treenodecollection_clear.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="nodes" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="nodes" />別の子である<see cref="T:System.Windows.Forms.TreeView" />です。</exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public virtual void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNodeCollection.Clear" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>コレクションからすべてのツリー ノードを削除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドを使用すると、ツリー ビューから、ツリー ノードのコレクション全体をクリアします。  
  
 コレクションから個別のツリー ノードを削除するには、使用、<xref:System.Windows.Forms.TreeNodeCollection.Remove%2A>または<xref:System.Windows.Forms.TreeNodeCollection.RemoveAt%2A>メソッドです。  
  
 新規に追加する<xref:System.Windows.Forms.TreeNode>をコレクションにオブジェクトを使用して、 <xref:System.Windows.Forms.TreeNodeCollection.Add%2A>、 <xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A>、または<xref:System.Windows.Forms.TreeNodeCollection.Insert%2A>メソッドです。  
  
   
  
## Examples  
 次のコード例をコピー、<xref:System.Windows.Forms.TreeNodeCollection>から、<xref:System.Windows.Forms.TreeView>一時的な<xref:System.Array>、別の配列の内容を追加および<xref:System.Windows.Forms.TreeView>を使用して、<xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A>メソッドです。 <xref:System.Windows.Forms.TreeNodeCollection>ソースから<xref:System.Windows.Forms.TreeView>を使用してがオフになって、<xref:System.Windows.Forms.TreeNodeCollection.Clear%2A>メソッドです。 この例では、2 つある必要があります<xref:System.Windows.Forms.TreeView>のコレクションを 1 つの制御<xref:System.Windows.Forms.TreeNode>オブジェクト。  
  
 [!code-cpp[TreeNodeCollection_Clear#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNodeCollection_Clear/CPP/treenodecollection_clear.cpp#1)]
 [!code-csharp[TreeNodeCollection_Clear#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNodeCollection_Clear/CS/treenodecollection_clear.cs#1)]
 [!code-vb[TreeNodeCollection_Clear#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNodeCollection_Clear/VB/treenodecollection_clear.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Windows.Forms.TreeNode node);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Windows.Forms.TreeNode node) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNodeCollection.Contains(System.Windows.Forms.TreeNode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Windows.Forms.TreeNode" />
      </Parameters>
      <Docs>
        <param name="node">コレクション内で検索する <see cref="T:System.Windows.Forms.TreeNode" />。</param>
        <summary>指定されたツリー ノード コレクションのメンバーであるかどうかを判断します。</summary>
        <returns>
          <see langword="true" />場合、<see cref="T:System.Windows.Forms.TreeNode" />コレクションのメンバーである、それ以外の<see langword="false" />します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドを使用すると、確認するかどうか、<xref:System.Windows.Forms.TreeNode>に対して操作を実行する前に、コレクションのメンバーである、<xref:System.Windows.Forms.TreeNode>です。 確認するため、このメソッドを使用することができます、<xref:System.Windows.Forms.TreeNode>に追加されたかが、コレクションのメンバーであります。  
  
 このメソッドは、時間は、大規模なコレクションを使用しないようにすることがノード コレクションのサイズに比例します。  
  
 このメソッドは、参照の等価性を確認します。 等価であるが、別のノードがコレクション内にあるかどうかを決定するのにには、これを使用できません。  
  
> [!NOTE]
>  1 つ参照の等価性の要件は、派生したは、このメソッドの動作をカスタマイズできません<xref:System.Windows.Forms.TreeNode>型をオーバーライドすることで、<xref:System.Object.Equals%2A>のメソッド、<xref:System.Windows.Forms.TreeNode>クラスです。  
  
   
  
## Examples  
 次のコード例は、指定した場合を判断<xref:System.Windows.Forms.TreeNode>内にある、 <xref:System.Windows.Forms.TreeNodeCollection>、コレクションを列挙します。 この例があることが必要です、<xref:System.Windows.Forms.Form>で、<xref:System.Windows.Forms.TreeView>を持つ、<xref:System.Windows.Forms.TreeNodeCollection>を格納している、<xref:System.Windows.Forms.TreeNode>という`myTreeNode2`です。  
  
 [!code-cpp[TreeNodeCollection_Contains_GetEnumerator#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNodeCollection_Contains_GetEnumerator/CPP/treenodecollection_contains_getenumerator.cpp#1)]
 [!code-csharp[TreeNodeCollection_Contains_GetEnumerator#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNodeCollection_Contains_GetEnumerator/CS/treenodecollection_contains_getenumerator.cs#1)]
 [!code-vb[TreeNodeCollection_Contains_GetEnumerator#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNodeCollection_Contains_GetEnumerator/VB/treenodecollection_contains_getenumerator.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainsKey">
      <MemberSignature Language="C#" Value="public virtual bool ContainsKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNodeCollection.ContainsKey(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">検索の対象となる <see cref="T:System.Windows.Forms.TreeNode" /> の名前。</param>
        <summary>コレクションが、指定されたキーにツリー ノードを含むかどうかを判断します。</summary>
        <returns>
          <see langword="true" />コレクションに含まれています、 <see cref="T:System.Windows.Forms.TreeNode" /> 、指定されたキー、それ以外の<see langword="false" />します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TreeNode.Name%2A>プロパティのキーに対応する<xref:System.Windows.Forms.TreeNode>で、<xref:System.Windows.Forms.TreeNodeCollection>です。  
  
 キーの比較は区別されません。 場合、`key`パラメーターは`null`または空の文字列、<xref:System.Windows.Forms.TreeNodeCollection.Item%2A>プロパティから返される`false`です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array dest, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array dest, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNodeCollection.CopyTo(System.Array,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dest" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dest">コピー先の配列。</param>
        <param name="index">開始位置を示す、コピー先の配列のインデックス。</param>
        <summary>配列内の指定位置にある既存の配列にコレクション全体をコピーします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例の数を表示する<xref:System.Windows.Forms.TreeNode>内のオブジェクト、 <xref:System.Windows.Forms.TreeNodeCollection>、コレクションの内容をコピー、<xref:System.Object>配列や内のツリー ノードの一覧を表示、<xref:System.Windows.Forms.Label>コントロール。 この例では、ある必要があります、<xref:System.Windows.Forms.TreeView>に少なくとも 1 つ<xref:System.Windows.Forms.TreeNode>でその<xref:System.Windows.Forms.TreeNodeCollection>、および<xref:System.Windows.Forms.Label>の control 権限、<xref:System.Windows.Forms.Form>です。  
  
 [!code-cpp[TreeNodeCollection_Count_CopyTo#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNodeCollection_Count_CopyTo/CPP/treenodecollection_count_copyto.cpp#1)]
 [!code-csharp[TreeNodeCollection_Count_CopyTo#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNodeCollection_Count_CopyTo/CS/treenodecollection_count_copyto.cs#1)]
 [!code-vb[TreeNodeCollection_Count_CopyTo#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNodeCollection_Count_CopyTo/VB/treenodecollection_count_copyto.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNodeCollection.Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>合計数を取得<see cref="T:System.Windows.Forms.TreeNode" />コレクション内のオブジェクト。</summary>
        <value>合計数<see cref="T:System.Windows.Forms.TreeNode" />コレクション内のオブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TreeNodeCollection.Count%2A>プロパティの数を保持する<xref:System.Windows.Forms.TreeNode>コレクションに割り当てられたオブジェクト。 使用することができます、<xref:System.Windows.Forms.TreeNodeCollection.Count%2A>プロパティ値のコレクションを反復処理するループの上限とします。  
  
> [!NOTE]
>  コレクションのインデックス値は、0 から始まるインデックスであるために、ループ変数から 1 を減算する必要があります。 このアカウントがない場合は、コレクションと throw の上限を超えるは、<xref:System.IndexOutOfRangeException>例外。  
  
   
  
## Examples  
 次のコード例の数を表示する<xref:System.Windows.Forms.TreeNode>内のオブジェクト、 <xref:System.Windows.Forms.TreeNodeCollection>、コレクションの内容をコピー、<xref:System.Object>配列や内のツリー ノードの一覧を表示、<xref:System.Windows.Forms.Label>コントロール。 この例では、ある必要があります、<xref:System.Windows.Forms.TreeView>に少なくとも 1 つ<xref:System.Windows.Forms.TreeNode>でその<xref:System.Windows.Forms.TreeNodeCollection>、および<xref:System.Windows.Forms.Label>の control 権限、<xref:System.Windows.Forms.Form>です。  
  
 [!code-cpp[TreeNodeCollection_Count_CopyTo#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNodeCollection_Count_CopyTo/CPP/treenodecollection_count_copyto.cpp#1)]
 [!code-csharp[TreeNodeCollection_Count_CopyTo#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNodeCollection_Count_CopyTo/CS/treenodecollection_count_copyto.cs#1)]
 [!code-vb[TreeNodeCollection_Count_CopyTo#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNodeCollection_Count_CopyTo/VB/treenodecollection_count_copyto.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TreeNode[] Find (string key, bool searchAllChildren);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.TreeNode[] Find(string key, bool searchAllChildren) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNodeCollection.Find(System.String,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="searchAllChildren" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="key">検索するツリー ノードの名前。</param>
        <param name="searchAllChildren">
          <see langword="true" />ツリー ノードの子ノードを検索するにはそれ以外の場合、<see langword="false" />です。</param>
        <summary>指定したキーにサブノードを必要に応じて検索で、ツリー ノードを検索します。</summary>
        <returns>配列<see cref="T:System.Windows.Forms.TreeNode" />オブジェクト<see cref="P:System.Windows.Forms.TreeNode.Name" />プロパティが指定したキーに一致します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TreeNode.Name%2A>プロパティのキーに対応する<xref:System.Windows.Forms.TreeNode>で、<xref:System.Windows.Forms.TreeNodeCollection>です。  
  
 キーの比較は区別されません。 場合、`key`パラメーターは`null`または空の文字列の一致がないか、<xref:System.Windows.Forms.TreeNodeCollection.Item%2A>プロパティは、空の配列を返します。`.`  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNodeCollection.GetEnumerator" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ツリー ノードのコレクションを反復処理に使用できる列挙子を返します。</summary>
        <returns><see cref="T:System.Collections.IEnumerator" />ツリー ノードのコレクションを表すです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例は、指定した場合を判断<xref:System.Windows.Forms.TreeNode>内にある、 <xref:System.Windows.Forms.TreeNodeCollection>、コレクションを列挙します。 この例があることが必要です、<xref:System.Windows.Forms.Form>で、<xref:System.Windows.Forms.TreeView>を持つ、<xref:System.Windows.Forms.TreeNodeCollection>を格納している、<xref:System.Windows.Forms.TreeNode>という`myTreeNode2`です。  
  
 [!code-cpp[TreeNodeCollection_Contains_GetEnumerator#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNodeCollection_Contains_GetEnumerator/CPP/treenodecollection_contains_getenumerator.cpp#1)]
 [!code-csharp[TreeNodeCollection_Contains_GetEnumerator#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNodeCollection_Contains_GetEnumerator/CS/treenodecollection_contains_getenumerator.cs#1)]
 [!code-vb[TreeNodeCollection_Contains_GetEnumerator#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNodeCollection_Contains_GetEnumerator/VB/treenodecollection_contains_getenumerator.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Windows.Forms.TreeNode node);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Windows.Forms.TreeNode node) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNodeCollection.IndexOf(System.Windows.Forms.TreeNode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Windows.Forms.TreeNode" />
      </Parameters>
      <Docs>
        <param name="node">コレクション内で検索する <see cref="T:System.Windows.Forms.TreeNode" />。</param>
        <summary>コレクション内の指定されたツリー ノードのインデックスを返します。</summary>
        <returns>ツリー ノード コレクションで見つかった項目の 0 から始まるインデックスそれ以外の場合、-1 を返します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、時間は、大規模なコレクションを使用しないようにすることがノード コレクションのサイズに比例します。  
  
 このメソッドは、参照の等価性を確認します。 コレクション内のと同じであるが、別のノードのインデックスを取得するのにには、これを使用できません。  
  
> [!NOTE]
>  1 つ参照の等価性の要件は、派生したは、このメソッドの動作をカスタマイズできません<xref:System.Windows.Forms.TreeNode>型をオーバーライドすることで、<xref:System.Object.Equals%2A>のメソッド、<xref:System.Windows.Forms.TreeNode>クラスです。  
  
   
  
## Examples  
 次のコード例は、指定した場合を判断<xref:System.Windows.Forms.TreeNode>内にある、 <xref:System.Windows.Forms.TreeNodeCollection>、コレクションを列挙します。 この例があることが必要です、<xref:System.Windows.Forms.Form>で、<xref:System.Windows.Forms.TreeView>を持つ、<xref:System.Windows.Forms.TreeNodeCollection>を格納している、<xref:System.Windows.Forms.TreeNode>という`myTreeNode2`です。  
  
 [!code-cpp[TreeNodeCollection_Contains_GetEnumerator#2](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNodeCollection_Contains_GetEnumerator/CPP/treenodecollection_contains_getenumerator.cpp#2)]
 [!code-csharp[TreeNodeCollection_Contains_GetEnumerator#2](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNodeCollection_Contains_GetEnumerator/CS/treenodecollection_contains_getenumerator.cs#2)]
 [!code-vb[TreeNodeCollection_Contains_GetEnumerator#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNodeCollection_Contains_GetEnumerator/VB/treenodecollection_contains_getenumerator.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOfKey">
      <MemberSignature Language="C#" Value="public virtual int IndexOfKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOfKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNodeCollection.IndexOfKey(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">検索するツリー ノードの名前。</param>
        <summary>指定されたキーにツリー ノードの最初に見つかった位置のインデックスを返します。</summary>
        <returns>指定したキーを持つツリー ノードの最初に見つかった位置の 0 から始まるインデックス場合が見つかりました。それ以外の場合、-1 を返します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 場合<xref:System.Windows.Forms.TreeNodeCollection.IndexOfKey%2A>と呼ばれる順次、最後のインデックスを最初に、キーの一致のチェックは、検索は、コレクションの先頭から開始一致が存在しない場合に返されます。  
  
 <xref:System.Windows.Forms.TreeNode.Name%2A>プロパティのキーに対応する<xref:System.Windows.Forms.TreeNode>で、<xref:System.Windows.Forms.TreeNodeCollection>です。  
  
 キーの比較は区別されません。 場合`key`は`null`または空の文字列、<xref:System.Windows.Forms.TreeNodeCollection.Item%2A>プロパティには、-1 が返されます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.TreeNode Insert (int index, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.TreeNode Insert(int32 index, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNodeCollection.Insert(System.Int32,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="index">ノードを挿入するコレクション内の位置。</param>
        <param name="text">ツリー ノードに表示するテキストです。</param>
        <summary>指定されたテキストでツリー ノードを作成し、指定したインデックス位置に挿入します。</summary>
        <returns><see cref="T:System.Windows.Forms.TreeNode" />コレクションに挿入されたことです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 場合、<xref:System.Windows.Forms.TreeView.Sorted%2A>プロパティに設定されている`true`、`index`パラメーター値は無視されます。 <xref:System.Windows.Forms.TreeNode>がツリー ビューに挿入され、<xref:System.Windows.Forms.TreeView>再度並べ替えられます。  
  
 追加することも新しい<xref:System.Windows.Forms.TreeNode>オブジェクトを使用して、コレクション、<xref:System.Windows.Forms.TreeNodeCollection.Add%2A>または<xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A>メソッドです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public virtual void Insert (int index, System.Windows.Forms.TreeNode node);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Insert(int32 index, class System.Windows.Forms.TreeNode node) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNodeCollection.Insert(System.Int32,System.Windows.Forms.TreeNode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="node" Type="System.Windows.Forms.TreeNode" />
      </Parameters>
      <Docs>
        <param name="index">ツリー ノードを挿入するコレクション内の位置を示すインデックス。</param>
        <param name="node"><see cref="T:System.Windows.Forms.TreeNode" />コレクションに挿入します。</param>
        <summary>指定した位置にツリー ノードのコレクションに既存のツリー ノードを挿入します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 場合、<xref:System.Windows.Forms.TreeView.Sorted%2A?displayProperty=nameWithType>プロパティに設定されている`true`、`index`パラメーター値は無視されます。 <xref:System.Windows.Forms.TreeNode>がツリー ビューに挿入され、<xref:System.Windows.Forms.TreeView>再度並べ替えられたりしました。  
  
 追加することも新しい<xref:System.Windows.Forms.TreeNode>オブジェクトを使用して、コレクション、<xref:System.Windows.Forms.TreeNodeCollection.Add%2A>または<xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A>メソッドです。  
  
 削除する、<xref:System.Windows.Forms.TreeNode>以前に追加して、使用して、 <xref:System.Windows.Forms.TreeNodeCollection.Remove%2A>、 <xref:System.Windows.Forms.TreeNodeCollection.RemoveAt%2A>、または<xref:System.Windows.Forms.TreeNodeCollection.Clear%2A>メソッドです。  
  
> [!NOTE]
>  A <xref:System.Windows.Forms.TreeNode> 1 つだけに割り当てることが<xref:System.Windows.Forms.TreeView>一度にコントロール。 ツリー ノードを新しいツリー ビュー コントロールを追加する必要がありますから削除するその他のツリー ビューは、最初またはそれを複製します。  
  
   
  
## Examples  
 次のコード例は、1 つから選択したツリー ノードを削除<xref:System.Windows.Forms.TreeView>し、両方のツリー ノード コレクションは読み取り専用ではない場合は別に追加します。 ときに、<xref:System.Windows.Forms.Button>がクリックされると、<xref:System.Windows.Forms.TreeNode>によって表される、<xref:System.Windows.Forms.TreeView.SelectedNode%2A?displayProperty=nameWithType>プロパティは 1 つから削除されます<xref:System.Windows.Forms.TreeView>を使用して、<xref:System.Windows.Forms.TreeNodeCollection.Remove%2A>メソッドに、他の追加と<xref:System.Windows.Forms.TreeView>を使用して、<xref:System.Windows.Forms.TreeNodeCollection.Insert%2A>メソッド。 この例では、ある必要があります、<xref:System.Windows.Forms.Form>を含む 2 つ<xref:System.Windows.Forms.TreeView>コントロールと<xref:System.Windows.Forms.Button>です。 <xref:System.Windows.Forms.TreeView>コントロールに名前を付ける`treeView1`と`treeView2`です。  
  
 [!code-cpp[TreeNodeCollection#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNodeCollection/CPP/treenodecollection.cpp#1)]
 [!code-csharp[TreeNodeCollection#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNodeCollection/CS/treenodecollection.cs#1)]
 [!code-vb[TreeNodeCollection#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNodeCollection/VB/treenodecollection.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="node" />別に現在割り当てられて<see cref="T:System.Windows.Forms.TreeView" />です。</exception>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.TreeNode Insert (int index, string key, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.TreeNode Insert(int32 index, string key, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNodeCollection.Insert(System.Int32,System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="index">ノードを挿入するコレクション内の位置。</param>
        <param name="key">ツリー ノードの名前です。</param>
        <param name="text">ツリー ノードに表示するテキストです。</param>
        <summary>指定したテキストとキー、ツリー ノードを作成し、コレクションに挿入します。</summary>
        <returns><see cref="T:System.Windows.Forms.TreeNode" />コレクションに挿入されたことです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 場合、<xref:System.Windows.Forms.TreeView.Sorted%2A>プロパティに設定されている`true`、`index`パラメーター値は無視されます。 <xref:System.Windows.Forms.TreeNode>がツリー ビューに挿入され、<xref:System.Windows.Forms.TreeView>再度並べ替えられます。  
  
 追加することも新しい<xref:System.Windows.Forms.TreeNode>オブジェクトを使用して、コレクション、<xref:System.Windows.Forms.TreeNodeCollection.Add%2A>または<xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A>メソッドです。  
  
 <xref:System.Windows.Forms.TreeNode.Name%2A>プロパティのキーに対応する<xref:System.Windows.Forms.TreeNode>で、<xref:System.Windows.Forms.TreeNodeCollection>です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.TreeNode Insert (int index, string key, string text, int imageIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.TreeNode Insert(int32 index, string key, string text, int32 imageIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNodeCollection.Insert(System.Int32,System.String,System.String,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="imageIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">ノードを挿入するコレクション内の位置。</param>
        <param name="key">ツリー ノードの名前です。</param>
        <param name="text">ツリー ノードに表示するテキストです。</param>
        <param name="imageIndex">ツリー ノードに表示するイメージのインデックス。</param>
        <summary>指定されたキー、テキスト、イメージと、ツリーのノードを作成し、コレクション内の指定したインデックス位置に挿入します。</summary>
        <returns><see cref="T:System.Windows.Forms.TreeNode" />コレクションに挿入されたことです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 場合、<xref:System.Windows.Forms.TreeView.Sorted%2A>プロパティに設定されている`true`、`index`パラメーター値は無視されます。 <xref:System.Windows.Forms.TreeNode>がツリー ビューに挿入され、<xref:System.Windows.Forms.TreeView>再度並べ替えられます。  
  
 追加することも新しい<xref:System.Windows.Forms.TreeNode>オブジェクトを使用して、コレクション、<xref:System.Windows.Forms.TreeNodeCollection.Add%2A>または<xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A>メソッドです。  
  
 <xref:System.Windows.Forms.TreeNode.Name%2A>プロパティのキーに対応する<xref:System.Windows.Forms.TreeNode>で、<xref:System.Windows.Forms.TreeNodeCollection>です。  
  
 `imageIndex`パラメーター内のイメージを参照、 <xref:System.Windows.Forms.TreeView.ImageList%2A> 、親<xref:System.Windows.Forms.TreeView>です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.TreeNode Insert (int index, string key, string text, string imageKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.TreeNode Insert(int32 index, string key, string text, string imageKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNodeCollection.Insert(System.Int32,System.String,System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="imageKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="index">ノードを挿入するコレクション内の位置。</param>
        <param name="key">ツリー ノードの名前です。</param>
        <param name="text">ツリー ノードに表示するテキストです。</param>
        <param name="imageKey">ツリー ノードに表示するイメージのキー。</param>
        <summary>指定されたキー、テキスト、イメージと、ツリーのノードを作成し、コレクション内の指定したインデックス位置に挿入します。</summary>
        <returns><see cref="T:System.Windows.Forms.TreeNode" />コレクションに挿入されたことです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 場合、<xref:System.Windows.Forms.TreeView.Sorted%2A>プロパティに設定されている`true`、`index`パラメーター値は無視されます。 <xref:System.Windows.Forms.TreeNode>がツリー ビューに挿入され、<xref:System.Windows.Forms.TreeView>再度並べ替えられます。  
  
 追加することも新しい<xref:System.Windows.Forms.TreeNode>オブジェクトを使用して、コレクション、<xref:System.Windows.Forms.TreeNodeCollection.Add%2A>または<xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A>メソッドです。  
  
 <xref:System.Windows.Forms.TreeNode.Name%2A>プロパティのキーに対応する<xref:System.Windows.Forms.TreeNode>で、<xref:System.Windows.Forms.TreeNodeCollection>です。  
  
 `imageKey`パラメーター内のイメージを参照、 <xref:System.Windows.Forms.TreeView.ImageList%2A> 、親<xref:System.Windows.Forms.TreeView>です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.TreeNode Insert (int index, string key, string text, int imageIndex, int selectedImageIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.TreeNode Insert(int32 index, string key, string text, int32 imageIndex, int32 selectedImageIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNodeCollection.Insert(System.Int32,System.String,System.String,System.Int32,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="imageIndex" Type="System.Int32" />
        <Parameter Name="selectedImageIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">ノードを挿入するコレクション内の位置。</param>
        <param name="key">ツリー ノードの名前です。</param>
        <param name="text">ツリー ノードに表示するテキストです。</param>
        <param name="imageIndex">ツリー ノードに表示するイメージのインデックス。</param>
        <param name="selectedImageIndex">選択した状態にあるときにツリー ノードに表示するイメージのインデックス。</param>
        <summary>指定されたキー、テキスト、イメージと、ツリーのノードを作成し、コレクション内の指定したインデックス位置に挿入します。</summary>
        <returns><see cref="T:System.Windows.Forms.TreeNode" />コレクションに挿入されたことです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 場合、<xref:System.Windows.Forms.TreeView.Sorted%2A>プロパティに設定されている`true`、`index`パラメーター値は無視されます。 <xref:System.Windows.Forms.TreeNode>がツリー ビューに挿入され、<xref:System.Windows.Forms.TreeView>再度並べ替えられます。  
  
 追加することも新しい<xref:System.Windows.Forms.TreeNode>オブジェクトを使用して、コレクション、<xref:System.Windows.Forms.TreeNodeCollection.Add%2A>または<xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A>メソッドです。  
  
 <xref:System.Windows.Forms.TreeNode.Name%2A>プロパティのキーに対応する<xref:System.Windows.Forms.TreeNode>で、<xref:System.Windows.Forms.TreeNodeCollection>です。  
  
 `imageIndex`パラメーター内のイメージを参照、 <xref:System.Windows.Forms.TreeView.ImageList%2A> 、親<xref:System.Windows.Forms.TreeView>です。  
  
 `selectedimageIndex`パラメーター内のイメージを参照、 <xref:System.Windows.Forms.TreeView.StateImageList%2A> 、親<xref:System.Windows.Forms.TreeView>です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.TreeNode Insert (int index, string key, string text, string imageKey, string selectedImageKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.TreeNode Insert(int32 index, string key, string text, string imageKey, string selectedImageKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNodeCollection.Insert(System.Int32,System.String,System.String,System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="imageKey" Type="System.String" />
        <Parameter Name="selectedImageKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="index">ノードを挿入するコレクション内の位置。</param>
        <param name="key">ツリー ノードの名前です。</param>
        <param name="text">ツリー ノードに表示するテキストです。</param>
        <param name="imageKey">ツリー ノードに表示するイメージのキー。</param>
        <param name="selectedImageKey">選択した状態にあるときにツリー ノードに表示するイメージのキー。</param>
        <summary>指定されたキー、テキスト、イメージと、ツリーのノードを作成し、コレクション内の指定したインデックス位置に挿入します。</summary>
        <returns><see cref="T:System.Windows.Forms.TreeNode" />コレクションに挿入されたことです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 場合、<xref:System.Windows.Forms.TreeView.Sorted%2A>プロパティに設定されている`true`、`index`パラメーター値は無視されます。 <xref:System.Windows.Forms.TreeNode>がツリー ビューに挿入され、<xref:System.Windows.Forms.TreeView>再度並べ替えられます。  
  
 追加することも新しい<xref:System.Windows.Forms.TreeNode>オブジェクトを使用して、コレクション、<xref:System.Windows.Forms.TreeNodeCollection.Add%2A>または<xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A>メソッドです。  
  
 <xref:System.Windows.Forms.TreeNode.Name%2A>プロパティのキーに対応する<xref:System.Windows.Forms.TreeNode>で、<xref:System.Windows.Forms.TreeNodeCollection>です。  
  
 `imageKey`パラメーター内のイメージを参照、 <xref:System.Windows.Forms.TreeView.ImageList%2A> 、親<xref:System.Windows.Forms.TreeView>です。  
  
 `selectedimageKey`パラメーター内のイメージを参照、 <xref:System.Windows.Forms.TreeView.StateImageList%2A> 、親<xref:System.Windows.Forms.TreeView>です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNodeCollection.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コレクションが読み取り専用かどうかを示す値を取得します。</summary>
        <value>
          コレクションが読み取り専用の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例は、1 つから選択したツリー ノードを削除<xref:System.Windows.Forms.TreeView>し、両方のツリー ノード コレクションは読み取り専用ではない場合は別に追加します。 ときに、<xref:System.Windows.Forms.Button>がクリックされると、<xref:System.Windows.Forms.TreeNode>によって表される、<xref:System.Windows.Forms.TreeView.SelectedNode%2A?displayProperty=nameWithType>プロパティは 1 つから削除されます<xref:System.Windows.Forms.TreeView>を使用して、<xref:System.Windows.Forms.TreeNodeCollection.Remove%2A>メソッドに、他の追加と<xref:System.Windows.Forms.TreeView>を使用して、<xref:System.Windows.Forms.TreeNodeCollection.Insert%2A>メソッド。 この例では、ある必要があります、<xref:System.Windows.Forms.Form>を含む 2 つ<xref:System.Windows.Forms.TreeView>コントロールと<xref:System.Windows.Forms.Button>です。 <xref:System.Windows.Forms.TreeView>コントロールに名前を付ける`treeView1`と`treeView2`です。  
  
 [!code-cpp[TreeNodeCollection#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNodeCollection/CPP/treenodecollection.cpp#1)]
 [!code-csharp[TreeNodeCollection#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNodeCollection/CS/treenodecollection.cs#1)]
 [!code-vb[TreeNodeCollection#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNodeCollection/VB/treenodecollection.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.TreeNode this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TreeNode Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNodeCollection.Item(System.Int32)" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">位置を示すインデックス、<see cref="T:System.Windows.Forms.TreeNode" />コレクション内で。</param>
        <summary>取得または設定、<see cref="T:System.Windows.Forms.TreeNode" />インデックス内の指定したコレクション内の場所を作成します。</summary>
        <value><see cref="T:System.Windows.Forms.TreeNode" />インデックス内の指定したコレクション内の場所を作成します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 割り当てる<xref:System.Windows.Forms.TreeNode>オブジェクトから取得するのにまたは特定の場所に、 <xref:System.Windows.Forms.TreeNodeCollection>、特定のインデックス値を持つコレクション オブジェクトを参照することができます。 インデックス値、 <xref:System.Windows.Forms.TreeNodeCollection> 0 から始まるインデックスです。  
  
   
  
## Examples  
 次のコード例は、最初を削除<xref:System.Windows.Forms.TreeNode>から、<xref:System.Windows.Forms.TreeView>場合その<xref:System.Windows.Forms.TreeNode.Text%2A?displayProperty=nameWithType>プロパティが"Node0"に設定します。 ときに、<xref:System.Windows.Forms.Button>がクリックすると、最初の<xref:System.Windows.Forms.TreeNode>で、<xref:System.Windows.Forms.TreeView>を使用して、削除、<xref:System.Windows.Forms.TreeNodeCollection.RemoveAt%2A>メソッドです。 この例では、作成済みである必要があります、<xref:System.Windows.Forms.TreeView>と<xref:System.Windows.Forms.Button>上、<xref:System.Windows.Forms.Form>です。 最初の<xref:System.Windows.Forms.TreeNode>で、 <xref:System.Windows.Forms.TreeView> "Node0"のテキスト プロパティが必要です  
  
 [!code-cpp[TreeNodeCollection#2](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNodeCollection/CPP/treenodecollection.cpp#2)]
 [!code-csharp[TreeNodeCollection#2](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNodeCollection/CS/treenodecollection.cs#2)]
 [!code-vb[TreeNodeCollection#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNodeCollection/VB/treenodecollection.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index" />値が 0 未満またはコレクション内のツリー ノードの数よりも大きいです。</exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.TreeNode this[string key] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TreeNode Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNodeCollection.Item(System.String)" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">名前、<see cref="T:System.Windows.Forms.TreeNode" />をコレクションから取得します。</param>
        <summary>コレクションから指定されたキーにツリー ノードを取得します。</summary>
        <value>指定したキーを持つ <see cref="T:System.Windows.Forms.TreeNode" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TreeNode.Name%2A>プロパティのキーに対応する<xref:System.Windows.Forms.TreeNode>で、<xref:System.Windows.Forms.TreeNodeCollection>です。  
  
 キーの比較は区別されません。 場合、`key`パラメーターは`null`または空の文字列、<xref:System.Windows.Forms.TreeNodeCollection.Item%2A>プロパティから返される`null`です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Windows.Forms.TreeNode node);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Windows.Forms.TreeNode node) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNodeCollection.Remove(System.Windows.Forms.TreeNode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Windows.Forms.TreeNode" />
      </Parameters>
      <Docs>
        <param name="node">削除する <see cref="T:System.Windows.Forms.TreeNode" />。</param>
        <summary>ツリー ノード コレクションから指定されたツリー ノードを削除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ときに、<xref:System.Windows.Forms.TreeNode>は後続のすべてのツリー ノードをコレクション内の 1 つの位置を移動、ツリー ノード コレクションから削除します。  
  
 削除することも、<xref:System.Windows.Forms.TreeNode>を使用して追加した、<xref:System.Windows.Forms.TreeNodeCollection.RemoveAt%2A>または<xref:System.Windows.Forms.TreeNodeCollection.Clear%2A>メソッドです。  
  
> [!NOTE]
>  コレクションを列挙して、ノードの削除はサポートされていません。  
  
 新規に追加する<xref:System.Windows.Forms.TreeNode>をコレクションにオブジェクトを使用して、 <xref:System.Windows.Forms.TreeNodeCollection.Add%2A>、 <xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A>、または<xref:System.Windows.Forms.TreeNodeCollection.Insert%2A>メソッドです。  
  
   
  
## Examples  
 次のコード例は、1 つから選択したツリー ノードを削除<xref:System.Windows.Forms.TreeView>し、両方のツリー ノード コレクションは読み取り専用ではない場合は別に追加します。 ときに、<xref:System.Windows.Forms.Button>がクリックされると、<xref:System.Windows.Forms.TreeNode>によって表される、<xref:System.Windows.Forms.TreeView.SelectedNode%2A?displayProperty=nameWithType>プロパティは 1 つから削除されます<xref:System.Windows.Forms.TreeView>を使用して、<xref:System.Windows.Forms.TreeNodeCollection.Remove%2A>メソッドに、他の追加と<xref:System.Windows.Forms.TreeView>を使用して、<xref:System.Windows.Forms.TreeNodeCollection.Insert%2A>メソッド。 この例では、ある必要があります、<xref:System.Windows.Forms.Form>を含む 2 つ<xref:System.Windows.Forms.TreeView>コントロールと<xref:System.Windows.Forms.Button>です。 <xref:System.Windows.Forms.TreeView>コントロールに名前を付ける`treeView1`と`treeView2`です。  
  
 [!code-cpp[TreeNodeCollection#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNodeCollection/CPP/treenodecollection.cpp#1)]
 [!code-csharp[TreeNodeCollection#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNodeCollection/CS/treenodecollection.cs#1)]
 [!code-vb[TreeNodeCollection#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNodeCollection/VB/treenodecollection.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public virtual void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNodeCollection.RemoveAt(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">インデックス、<see cref="T:System.Windows.Forms.TreeNode" />を削除します。</param>
        <summary>指定したインデックスにあるツリー ノード コレクションから、ツリーのノードを削除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ときに、<xref:System.Windows.Forms.TreeNode>は後続のすべてのツリー ノードをコレクション内の 1 つの位置を移動、ツリー ノード コレクションから削除します。  
  
 削除することも、<xref:System.Windows.Forms.TreeNode>を使用して追加した、<xref:System.Windows.Forms.TreeNodeCollection.Remove%2A>または<xref:System.Windows.Forms.TreeNodeCollection.Clear%2A>メソッドです。  
  
> [!NOTE]
>  コレクションを列挙して、ノードの削除はサポートされていません。  
  
 新規に追加する<xref:System.Windows.Forms.TreeNode>をコレクションにオブジェクトを使用して、 <xref:System.Windows.Forms.TreeNodeCollection.Add%2A>、 <xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A>、または<xref:System.Windows.Forms.TreeNodeCollection.Insert%2A>メソッドです。  
  
   
  
## Examples  
 次のコード例は、最初を削除<xref:System.Windows.Forms.TreeNode>から、<xref:System.Windows.Forms.TreeView>場合その<xref:System.Windows.Forms.TreeNode.Text%2A?displayProperty=nameWithType>プロパティが"Node0"に設定します。 ときに、<xref:System.Windows.Forms.Button>がクリックすると、最初の<xref:System.Windows.Forms.TreeNode>で、<xref:System.Windows.Forms.TreeView>を使用して、削除、<xref:System.Windows.Forms.TreeNodeCollection.RemoveAt%2A>メソッドです。 この例では、作成済みである必要があります、<xref:System.Windows.Forms.TreeView>と<xref:System.Windows.Forms.Button>上、<xref:System.Windows.Forms.Form>です。 最初の<xref:System.Windows.Forms.TreeNode>で、 <xref:System.Windows.Forms.TreeView> "Node0"のテキスト プロパティが必要です  
  
 [!code-cpp[TreeNodeCollection#2](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNodeCollection/CPP/treenodecollection.cpp#2)]
 [!code-csharp[TreeNodeCollection#2](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNodeCollection/CS/treenodecollection.cs#2)]
 [!code-vb[TreeNodeCollection#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNodeCollection/VB/treenodecollection.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveByKey">
      <MemberSignature Language="C#" Value="public virtual void RemoveByKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveByKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNodeCollection.RemoveByKey(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">コレクションから削除するツリー ノードの名前。</param>
        <summary>コレクションから指定されたキーにツリー ノードを削除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TreeNode.Name%2A>プロパティのキーに対応する<xref:System.Windows.Forms.TreeNode>で、<xref:System.Windows.Forms.TreeNodeCollection>です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNodeCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コレクションへのアクセスが同期されている (スレッド セーフである) かどうかを示す値を取得します。</summary>
        <value>
          常に <see langword="false" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNodeCollection.System#Collections#ICollection#SyncRoot" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コレクションへのアクセスを同期するために使用できるオブジェクトを取得します。</summary>
        <value><see cref="T:System.Windows.Forms.TreeNodeCollection" /> へのアクセスを同期するために使用できるオブジェクト。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object node);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object node) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNodeCollection.System#Collections#IList#Add(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="node">ツリー ノード コレクションに追加するオブジェクト。</param>
        <summary>ツリー ノード コレクションの末尾にオブジェクトを追加します。</summary>
        <returns>0 から始まるインデックス値、<see cref="T:System.Windows.Forms.TreeNode" />ツリー ノード コレクションに追加されました。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 場合`node`されませんが、 <xref:System.Windows.Forms.TreeNodeCollection>、<xref:System.Windows.Forms.TreeNodeCollection.System%23Collections%23IList%23Add%2A>メソッドによって返される文字列が使用されます、<xref:System.Windows.Forms.TreeNode.ToString%2A>のメソッド、<xref:System.Windows.Forms.TreeNode>クラスです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">
          <paramref name="node" />別に現在割り当てられて<see cref="T:System.Windows.Forms.TreeView" />コントロール。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="node" /> は <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object node);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object node) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNodeCollection.System#Collections#IList#Contains(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="node">コレクション内で検索するオブジェクト。</param>
        <summary>指定されたツリー ノード コレクションのメンバーであるかどうかを判断します。</summary>
        <returns>
          <see langword="true" />場合<paramref name="node" />コレクションのメンバーである、それ以外の<see langword="false" />します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 場合`node`されませんが、 <xref:System.Windows.Forms.TreeNode>、<xref:System.Windows.Forms.TreeNodeCollection.System%23Collections%23IList%23Contains%2A>メソッドを返します。`false`です。 ため、コレクションに文字列としての値を持つノードが含まれているかどうか、文字列で渡すことはできません、<xref:System.Windows.Forms.TreeNode.Text%2A>プロパティです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object node);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object node) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNodeCollection.System#Collections#IList#IndexOf(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="node">コレクション内で検索する <see cref="T:System.Windows.Forms.TreeNode" />。</param>
        <summary>コレクション内の指定されたツリー ノードのインデックスを返します。</summary>
        <returns>ツリー ノード コレクションで見つかった項目の 0 から始まるインデックスそれ以外の場合、-1 を返します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 場合`node`されませんが、 <xref:System.Windows.Forms.TreeNode>、<xref:System.Windows.Forms.TreeNodeCollection.System%23Collections%23IList%23IndexOf%2A>メソッドは-1 を返します。 したがって、として文字列の値を持つノードを検索する文字列で渡すことはできません、<xref:System.Windows.Forms.TreeNode.Text%2A>プロパティです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object node);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object node) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNodeCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="node" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">ツリー ノードを挿入するコレクション内の位置を示すインデックス。</param>
        <param name="node"><see cref="T:System.Windows.Forms.TreeNode" />コレクションに挿入します。</param>
        <summary>指定した位置にツリー ノード コレクション内の既存のツリー ノードを挿入します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 場合、<xref:System.Windows.Forms.TreeView.Sorted%2A>プロパティに設定されている`true`、`index`パラメーターは無視されます。 <xref:System.Windows.Forms.TreeNode>がツリー ビューに挿入され、<xref:System.Web.UI.WebControls.TreeView>再度並べ替えられます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="node" />別に現在割り当てられて<see cref="T:System.Windows.Forms.TreeView" />です。  
  
 または  
  
 <paramref name="node" /> が <see cref="T:System.Windows.Forms.TreeNode" /> ではありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNodeCollection.System#Collections#IList#IsFixedSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ツリー ノード コレクションが固定サイズかどうかを示す値を取得します。</summary>
        <value>
          常に <see langword="false" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNodeCollection.System#Collections#IList#Item(System.Int32)" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Get または項目を設定する位置を示す 0 から始まるインデックス。</param>
        <summary>取得またはコレクション内で指定したインデックスにあるツリー ノードを設定します。</summary>
        <value><see cref="T:System.Windows.Forms.TreeNode" />で指定したインデックス位置、<see cref="T:System.Windows.Forms.TreeNodeCollection" />です。</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">設定値はありませんが、<see cref="T:System.Windows.Forms.TreeNode" />です。</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object node);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object node) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNodeCollection.System#Collections#IList#Remove(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="node">コレクションから削除する <see cref="T:System.Windows.Forms.TreeNode" />。</param>
        <summary>ツリー ノード コレクションから指定されたツリー ノードを削除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 として文字列の値を持つノードを削除する文字列で渡すことはできません、<xref:System.Windows.Forms.TreeNode.Text%2A>プロパティです。  
  
 ときに、<xref:System.Windows.Forms.TreeNode>は後続のすべてのツリー ノードをコレクション内の 1 つの位置を移動、ツリー ノード コレクションから削除します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
