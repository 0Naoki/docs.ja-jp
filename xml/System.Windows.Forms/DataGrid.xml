<Type Name="DataGrid" FullName="System.Windows.Forms.DataGrid">
  <TypeSignature Language="C#" Value="public class DataGrid : System.Windows.Forms.Control, System.ComponentModel.ISupportInitialize, System.Windows.Forms.IDataGridEditingService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataGrid extends System.Windows.Forms.Control implements class System.ComponentModel.ISupportInitialize, class System.Windows.Forms.IDataGridEditingService" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataGrid" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.Control</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.ISupportInitialize</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Forms.IDataGridEditingService</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.ComplexBindingProperties("DataSource", "DataMember")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("Navigate")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("DataSource")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.DataGridDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>スクロールできるグリッドに ADO.NET データを表示します。 <see cref="T:System.Windows.Forms.DataGridView" /> コントロールは、<see cref="T:System.Windows.Forms.DataGrid" /> コントロールに代わると共に追加の機能を提供します。ただし、<see cref="T:System.Windows.Forms.DataGrid" /> コントロールは、下位互換性を保つ目的および将来使用する目的で保持されます。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>子テーブルへ Web のようなリンクが表示されます。 子テーブルに移動するリンクをクリックすることができます。 子テーブルが表示されたら、[戻る] ボタンは、親テーブルに戻るのクリックして可能なキャプションに表示されます。 キャプションの下と、列ヘッダーの上の親行のデータが表示されます。 [戻る] ボタンの右側にあるボタンをクリックして、親行の情報を非表示にすることができます。  
  
 テーブルを表示する、 <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType> 、実行時に使用して、<xref:System.Windows.Forms.DataGrid.SetDataBinding%2A>を設定するメソッド、<xref:System.Windows.Forms.DataGrid.DataSource%2A>と<xref:System.Windows.Forms.DataGrid.DataMember%2A>有効なデータ ソースのプロパティです。 次のデータ ソースは有効です。  
  
-   <xref:System.Data.DataTable>。  
  
-   <xref:System.Data.DataView>。  
  
-   <xref:System.Data.DataSet>。  
  
-   <xref:System.Data.DataViewManager>。  
  
-   1 次元の配列  
  
-   実装する任意のコンポーネント、<xref:System.ComponentModel.IListSource>インターフェイス  
  
-   実装する任意のコンポーネント、<xref:System.Collections.IList>インターフェイス  
  
 詳細については、<xref:System.Data.DataSet>クラスを参照してください[データセット、Datatable、および Dataview](~/docs/framework/data/adonet/dataset-datatable-dataview/index.md)です。  
  
 データを編集することができますを使用して新しい行を追加することを防止するグリッドを作成することができます、<xref:System.Data.DataView>設定とデータ ソースとして、<xref:System.Data.DataView.AllowNew%2A>プロパティを`false`です。  
  
 データ ソースは<xref:System.Windows.Forms.BindingManagerBase>オブジェクト。 データ ソースのテーブルごとに、<xref:System.Windows.Forms.BindingManagerBase>フォームから返される<xref:System.Windows.Forms.BindingContext>です。 たとえば、関連付けられたを返すことによってデータ ソースに含まれる行の数を判断できます<xref:System.Windows.Forms.BindingManagerBase>オブジェクトの<xref:System.Windows.Forms.BindingManagerBase.Count%2A>プロパティです。  
  
 データを検証するには、基になるデータと、イベントを表すオブジェクトを使用します。 たとえば、データの取得元、<xref:System.Data.DataTable>で、<xref:System.Data.DataSet>を使用して、<xref:System.Data.DataTable.ColumnChanging>と<xref:System.Data.DataTable.RowChanging>イベント。  
  
> [!NOTE]
>  列の数をカスタマイズするため (追加またはのメンバーを削除して、 <xref:System.Windows.Forms.GridColumnStylesCollection>)、行は、列で並べ替えることができ、<xref:System.Windows.Forms.DataGridCell.RowNumber%2A>と<xref:System.Windows.Forms.DataGridCell.ColumnNumber%2A>に対応するプロパティの値は保証できません<xref:System.Data.DataRow>と<xref:System.Data.DataColumn>でインデックスを作成、<xref:System.Data.DataTable>です。 これらのプロパティの使用を避ける必要がありますので、<xref:System.Windows.Forms.Control.Validating>データを検証するイベントです。  
  
 セルが選択されていることを確認するには<xref:System.Windows.Forms.DataGrid.CurrentCell%2A>プロパティです。 使用して任意のセルの値を変更、<xref:System.Windows.Forms.DataGrid.Item%2A>プロパティで、セルの行と列のインデックスまたは 1 つのいずれかにかかる<xref:System.Windows.Forms.DataGridCell>です。 モニター、<xref:System.Windows.Forms.DataGrid.CurrentCellChanged>ユーザーが別のセルを選択したときを検出するイベントです。  
  
 ユーザーがクリックしたコントロールのどの部分を確認するには<xref:System.Windows.Forms.DataGrid.HitTest%2A>メソッドで、<xref:System.Windows.Forms.Control.MouseDown>イベント。 <xref:System.Windows.Forms.DataGrid.HitTest%2A>メソッドを返します、<xref:System.Windows.Forms.DataGrid.HitTestInfo>オブジェクトで、クリックした領域の列や行が含まれています。  
  
 実行時にコントロールの外観を管理するには、色とキャプションの属性を設定するためのいくつかのプロパティが利用可能、 <xref:System.Windows.Forms.DataGrid.CaptionForeColor%2A>、 <xref:System.Windows.Forms.DataGrid.CaptionBackColor%2A>、<xref:System.Windows.Forms.DataGrid.CaptionFont%2A>のようにします。  
  
 作成することでさらに、表示されている以上のグリッド) の外観を変更することができます<xref:System.Windows.Forms.DataGridTableStyle>オブジェクトとに追加すること、 <xref:System.Windows.Forms.GridTableStylesCollection>、を通じてアクセスされる<xref:System.Windows.Forms.DataGrid.TableStyles%2A>プロパティです。 たとえば場合、<xref:System.Windows.Forms.DataGrid.DataSource%2A>に設定されている、<xref:System.Data.DataSet>を含む 3 つ<xref:System.Data.DataTable>オブジェクト、3 つ追加することができます<xref:System.Windows.Forms.DataGridTableStyle>オブジェクトをコレクションに、各テーブルに 1 つです。 各を同期するために<xref:System.Windows.Forms.DataGridTableStyle>オブジェクトを<xref:System.Data.DataTable>、設定、<xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A>の<xref:System.Windows.Forms.DataGridTableStyle>を<xref:System.Data.DataTable.TableName%2A>の<xref:System.Data.DataTable>です。 オブジェクトの配列へのバインドの詳細については、次を参照してください。、<xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A?displayProperty=nameWithType>プロパティです。  
  
 テーブルのカスタマイズされたビューを作成するには、インスタンスを作成、<xref:System.Windows.Forms.DataGridTextBoxColumn>または<xref:System.Windows.Forms.DataGridBoolColumn>クラスし、オブジェクトを追加する、<xref:System.Windows.Forms.GridTableStylesCollection>経由でアクセス、<xref:System.Windows.Forms.DataGrid.TableStyles%2A>プロパティです。 これらのクラスは、どちらも <xref:System.Windows.Forms.DataGridColumnStyle> を継承しています。 各列のスタイル設定、<xref:System.Windows.Forms.DataGridColumnStyle.MappingName%2A>を<xref:System.Data.DataColumn.ColumnName%2A>グリッドに表示する列の。 列を非表示に次のように設定します。 その<xref:System.Windows.Forms.DataGridColumnStyle.MappingName%2A>有効な以外に<xref:System.Data.DataColumn.ColumnName%2A>です。  
  
 列のテキストの書式を設定するには設定、<xref:System.Windows.Forms.DataGridTextBoxColumn.Format%2A>のプロパティ、<xref:System.Windows.Forms.DataGridTextBoxColumn>で見つかった値のいずれかに[型の書式設定](~/docs/standard/base-types/formatting-types.md)と[カスタムの日付と時刻の書式指定文字列](~/docs/standard/base-types/custom-date-and-time-format-strings.md)です。  
  
 バインドする、<xref:System.Windows.Forms.DataGrid>オブジェクトの厳密に型指定された配列には、オブジェクトの種類がパブリック プロパティを含める必要があります。 作成する、<xref:System.Windows.Forms.DataGridTableStyle>配列を表示する、設定、<xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A?displayProperty=nameWithType>プロパティを`typename[]`場所`typename`はオブジェクトの種類の名前に置換します。 また、<xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A>プロパティは、大文字小文字を区別; 型の名前は厳密に一致する必要があります。 参照してください、<xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A>例については、プロパティです。  
  
 バインドすることも、<xref:System.Windows.Forms.DataGrid>を<xref:System.Collections.ArrayList>です。 機能、<xref:System.Collections.ArrayList>は複数の型のオブジェクトに含めることが、<xref:System.Windows.Forms.DataGrid>リスト内のすべての項目が最初の項目と同じ型の場合、このようなリストにのみバインドできます。 つまり、すべてのオブジェクトで、同じ型であるか、または、一覧の最初の項目と同じクラスから継承する必要があります。 たとえば、一覧の最初の項目が、 <xref:System.Windows.Forms.Control>、2 番目の項目がある可能性があります、 <xref:System.Windows.Forms.TextBox> (から継承される<xref:System.Windows.Forms.Control>)。 その一方で、最初の項目、 <xref:System.Windows.Forms.TextBox>、2 番目のオブジェクトにすることはできません、<xref:System.Windows.Forms.Control>です。 さらに、<xref:System.Collections.ArrayList>がバインドされるときにアイテム必要があります。 空<xref:System.Collections.ArrayList>空のグリッドになります。 また、内のオブジェクト、<xref:System.Collections.ArrayList>パブリック プロパティを含める必要があります。 バインドするとき、 <xref:System.Collections.ArrayList>、設定、<xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A>の<xref:System.Windows.Forms.DataGridTableStyle>"ArrayList"(型名) にします。  
  
 各<xref:System.Windows.Forms.DataGridTableStyle>色を設定することができます、および属性のキャプションの設定を上書き、<xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>コントロール。 ただし、これらのプロパティが設定されていない場合は、コントロールの設定が既定で使用されます。 次のプロパティをオーバーライドできます<xref:System.Windows.Forms.DataGridTableStyle>プロパティ。  
  
-   <xref:System.Windows.Forms.DataGridTableStyle.AllowSorting%2A>  
  
-   <xref:System.Windows.Forms.DataGridTableStyle.AlternatingBackColor%2A>  
  
-   <xref:System.Windows.Forms.DataGridTableStyle.BackColor%2A>  
  
-   <xref:System.Windows.Forms.DataGridTableStyle.ColumnHeadersVisible%2A>  
  
-   <xref:System.Windows.Forms.DataGridTableStyle.ForeColor%2A>  
  
-   <xref:System.Windows.Forms.DataGridTableStyle.GridLineColor%2A>  
  
-   <xref:System.Windows.Forms.DataGridTableStyle.GridLineStyle%2A>  
  
-   <xref:System.Windows.Forms.DataGridTableStyle.HeaderBackColor%2A>  
  
-   <xref:System.Windows.Forms.DataGridTableStyle.HeaderFont%2A>  
  
-   <xref:System.Windows.Forms.DataGridTableStyle.HeaderForeColor%2A>  
  
-   <xref:System.Windows.Forms.DataGridTableStyle.LinkColor%2A>  
  
-   <xref:System.Windows.Forms.DataGridTableStyle.PreferredColumnWidth%2A>  
  
-   <xref:System.Windows.Forms.DataGridTableStyle.PreferredRowHeight%2A>  
  
-   <xref:System.Windows.Forms.DataGridTableStyle.ReadOnly%2A>  
  
-   <xref:System.Windows.Forms.DataGridTableStyle.RowHeadersVisible%2A>  
  
-   <xref:System.Windows.Forms.DataGridTableStyle.RowHeaderWidth%2A>  
  
-   <xref:System.Windows.Forms.DataGridTableStyle.SelectionBackColor%2A>  
  
-   <xref:System.Windows.Forms.DataGridTableStyle.SelectionForeColor%2A>  
  
 個々 の列の外観をカスタマイズする追加<xref:System.Windows.Forms.DataGridColumnStyle>オブジェクトを<xref:System.Windows.Forms.GridColumnStylesCollection>、を通じてアクセスされますが、<xref:System.Windows.Forms.DataGridTableStyle.GridColumnStyles%2A>の各プロパティ<xref:System.Windows.Forms.DataGridTableStyle>です。 各を同期するために<xref:System.Windows.Forms.DataGridColumnStyle>で、<xref:System.Data.DataColumn>で、 <xref:System.Data.DataTable>、設定、<xref:System.Windows.Forms.DataGridColumnStyle.MappingName%2A>を<xref:System.Data.DataColumn.ColumnName%2A>の<xref:System.Data.DataColumn>です。 構築するときに、<xref:System.Windows.Forms.DataGridColumnStyle>列がデータを表示する方法を指定する書式指定文字列を設定することもできます。 たとえば、列がテーブルに格納されている日付を表示する短い日付形式を使用するを指定することができます。  
  
> [!CAUTION]
>  常に作成<xref:System.Windows.Forms.DataGridColumnStyle>オブジェクトに追加して、<xref:System.Windows.Forms.GridColumnStylesCollection>追加する前に<xref:System.Windows.Forms.DataGridTableStyle>オブジェクトを<xref:System.Windows.Forms.GridTableStylesCollection>です。 空の追加と<xref:System.Windows.Forms.DataGridTableStyle>、有効な<xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A>をコレクションに値<xref:System.Windows.Forms.DataGridColumnStyle>オブジェクトが自動的に生成されます。 新規追加しようとする場合に、例外がスローされますその結果、<xref:System.Windows.Forms.DataGridColumnStyle>オブジェクトが複製によって<xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A>値を<xref:System.Windows.Forms.GridColumnStylesCollection>です。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.DataGridView> コントロールは、<xref:System.Windows.Forms.DataGrid> コントロールに代わると共に追加の機能を提供します。ただし、<xref:System.Windows.Forms.DataGrid> コントロールは、下位互換性を保つ目的および将来使用する目的で保持されます。 詳細については、「[Windows フォームの DataGridView コントロールと DataGrid コントロールの違いについて](~/docs/framework/winforms/controls/differences-between-the-windows-forms-datagridview-and-datagrid-controls.md)」を参照してください。  
  
   
  
## Examples  
 次のコード例は、Windows フォームを作成、<xref:System.Data.DataSet>を含む 2 つ<xref:System.Data.DataTable>オブジェクト、および<xref:System.Data.DataRelation>2 つのテーブルを関連します。 データを表示する、<xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>し、バインド先のコントロール、<xref:System.Data.DataSet>を通じて、<xref:System.Windows.Forms.DataGrid.SetDataBinding%2A>メソッドです。 フォーム上のボタンが 2 つ作成することで、グリッドの外観を変更<xref:System.Windows.Forms.DataGridTableStyle>オブジェクトと設定、<xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A>に各オブジェクトの<xref:System.Data.DataTable.TableName%2A>のいずれかの<xref:System.Data.DataTable>オブジェクト。 この例は、内のコードも含まれています。、<xref:System.Windows.Forms.Control.MouseUp>を使用したイベント、<xref:System.Windows.Forms.DataGrid.HitTest%2A>列、行、およびクリックされたグリッドの一部を印刷する方法です。  
  
 [!code-cpp[Classic DataGrid Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataGrid Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataGrid Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataGrid Example/CS/source.cs#1)]
 [!code-vb[Classic DataGrid Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGrid Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataGrid ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.Forms.DataGrid" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 新しく作成した設定に<xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>コントロールを設定、<xref:System.Windows.Forms.DataGrid.DataSource%2A>には、有効なソースのプロパティなど、 <xref:System.Data.DataView>、 <xref:System.Data.DataSet>、または<xref:System.Data.DataViewManager>です。  
  
   
  
## Examples  
 次のコード例が新たに作成<xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>を使用して、<xref:System.Windows.Forms.DataGrid.SetDataBinding%2A>を設定するメソッド、<xref:System.Windows.Forms.DataGrid.DataSource%2A>と<xref:System.Windows.Forms.DataGrid.DataMember%2A>プロパティです。  
  
 [!code-vb[Classic DataGrid.DataGrid Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGrid.DataGrid Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowNavigation">
      <MemberSignature Language="C#" Value="public bool AllowNavigation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowNavigation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGrid.AllowNavigation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>移動できるかどうかを示す値を取得または設定します。</summary>
        <value>
          移動できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティ設定されている場合`false`、子テーブルへのリンクは表示されません。  
  
   
  
## Examples  
 次のコード例を切り替えます、<xref:System.Windows.Forms.DataGrid.AllowNavigation%2A>プロパティの値、`true`と`false`です。  
  
 [!code-cpp[DataGrid_AllowNavigationChanged#1](~/samples/snippets/cpp/VS_Snippets_Winforms/DataGrid_AllowNavigationChanged/CPP/mydatagrid_allownavigationchanged.cpp#1)]
 [!code-csharp[DataGrid_AllowNavigationChanged#1](~/samples/snippets/csharp/VS_Snippets_Winforms/DataGrid_AllowNavigationChanged/CS/mydatagrid_allownavigationchanged.cs#1)]
 [!code-vb[DataGrid_AllowNavigationChanged#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DataGrid_AllowNavigationChanged/VB/mydatagrid_allownavigationchanged.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowNavigationChanged">
      <MemberSignature Language="C#" Value="public event EventHandler AllowNavigationChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler AllowNavigationChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGrid.AllowNavigationChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DataGrid.AllowNavigation" /> プロパティが変更された場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 場合、<xref:System.Windows.Forms.DataGrid.AllowNavigation%2A>プロパティに設定されている`false`、いない子テーブルへのリンクが表示されます。  
  
   
  
## Examples  
 次のコード例のリセット、<xref:System.Windows.Forms.DataGrid.AllowNavigation%2A>プロパティとが発生し、<xref:System.Windows.Forms.DataGrid.AllowNavigationChanged>イベント。  
  
 [!code-cpp[DataGrid_AllowNavigationChanged#1](~/samples/snippets/cpp/VS_Snippets_Winforms/DataGrid_AllowNavigationChanged/CPP/mydatagrid_allownavigationchanged.cpp#1)]
 [!code-csharp[DataGrid_AllowNavigationChanged#1](~/samples/snippets/csharp/VS_Snippets_Winforms/DataGrid_AllowNavigationChanged/CS/mydatagrid_allownavigationchanged.cs#1)]
 [!code-vb[DataGrid_AllowNavigationChanged#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DataGrid_AllowNavigationChanged/VB/mydatagrid_allownavigationchanged.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowSorting">
      <MemberSignature Language="C#" Value="public bool AllowSorting { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowSorting" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGrid.AllowSorting" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>列ヘッダーをクリックしてグリッドを並べ替え直すことができるかどうかを示す値を取得または設定します。</summary>
        <value>
          列を並べ替えることができる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティがオーバーライドされる、<xref:System.Windows.Forms.DataGridTableStyle.AllowSorting%2A?displayProperty=nameWithType>プロパティがある場合、<xref:System.Windows.Forms.DataGridTableStyle>現在コントロールを有効にします。  
  
 並べ替えは許可された場合、列ヘッダーをクリックするとはテーブル データを並べ替える列ごとにします。  
  
 式を使用して並べ替えることも、<xref:System.Data.DataColumn>です。 参照してください<xref:System.Data.DataColumn.Expression%2A>詳細については、並べ替え式を作成する方法です。  
  
 場合、<xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>にバインドされて、 <xref:System.Data.DataView>、テーブルを使用するためのカスタムの並べ替えを設定することができます、<xref:System.Data.DataView>クラスの<xref:System.Data.DataView.Sort%2A>プロパティです。 同様に場合、<xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>にバインドされて、 <xref:System.Data.DataViewManager>、内の各テーブル、<xref:System.Data.DataViewManager>を設定してカスタムの並べ替えを持つことができます、<xref:System.Data.DataViewManager.DataViewSettings%2A>クラスの<xref:System.Data.DataViewSetting.Sort%2A>プロパティです。  
  
   
  
## Examples  
 次のコード例を切り替えます、<xref:System.Windows.Forms.DataGrid.AllowSorting%2A>プロパティです。  
  
 [!code-cpp[Classic DataGrid.AllowSorting Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataGrid.AllowSorting Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataGrid.AllowSorting Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataGrid.AllowSorting Example/CS/source.cs#1)]
 [!code-vb[Classic DataGrid.AllowSorting Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGrid.AllowSorting Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AlternatingBackColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color AlternatingBackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color AlternatingBackColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGrid.AlternatingBackColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>グリッドの奇数行の背景色を取得または設定します。</summary>
        <value>代替背景色を表す <see cref="T:System.Drawing.Color" />。 既定値はウィンドウのシステム カラー (<see cref="P:System.Drawing.SystemColors.Window" />) です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 既定では、両方の<xref:System.Windows.Forms.DataGrid.BackColor%2A>と<xref:System.Windows.Forms.DataGrid.AlternatingBackColor%2A>プロパティは、同じ色に設定されます。 設定、<xref:System.Windows.Forms.DataGrid.BackColor%2A>プロパティの設定中に、唯一の偶数行に影響を与える、<xref:System.Windows.Forms.DataGrid.AlternatingBackColor%2A>のみ奇数行に影響します。  
  
   
  
## Examples  
 次のコード例のセット、<xref:System.Windows.Forms.DataGrid.AlternatingBackColor%2A>を<xref:System.Drawing.Color>値。  
  
 [!code-vb[Classic DataGrid.AlternatingBackColor Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGrid.AlternatingBackColor Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackButtonClick">
      <MemberSignature Language="C#" Value="public event EventHandler BackButtonClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BackButtonClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGrid.BackButtonClick" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>子テーブルの <see langword="Back" /> ボタンがクリックされると発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Back`子テーブルが表示されるときにボタンが表示されます。 ボタンをクリックすると、親テーブルを表示するグリッドが発生します。  
  
   
  
## Examples  
 次のコード例は、イベント ハンドラーを追加、<xref:System.Windows.Forms.DataGrid.BackButtonClick>イベント。  
  
 [!code-cpp[DataGrid_BackgroundColorChanged#1](~/samples/snippets/cpp/VS_Snippets_Winforms/DataGrid_BackgroundColorChanged/CPP/mydatagrid_backgroundcolorchanged.cpp#1)]
 [!code-csharp[DataGrid_BackgroundColorChanged#1](~/samples/snippets/csharp/VS_Snippets_Winforms/DataGrid_BackgroundColorChanged/CS/mydatagrid_backgroundcolorchanged.cs#1)]
 [!code-vb[DataGrid_BackgroundColorChanged#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DataGrid_BackgroundColorChanged/VB/mydatagrid_backgroundcolorchanged.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color BackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGrid.BackColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>グリッドの偶数行の背景色を取得または設定します。</summary>
        <value>グリッドの行の色を表す <see cref="T:System.Drawing.Color" />。 既定値はウィンドウのシステム カラー (<see cref="P:System.Drawing.SystemColors.Window" />) です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 一方、<xref:System.Windows.Forms.DataGrid.BackColor%2A>プロパティ グリッドで、行の色を決定する、 <xref:System.Windows.Forms.DataGrid.BackgroundColor%2A> nonrow 領域は、下のグリッドをスクロールするときに、または、いくつかの行がグリッドに含まれているだけの場合にのみ表示の色を決定します。  
  
 既定では、両方の<xref:System.Windows.Forms.DataGrid.BackColor%2A>と<xref:System.Windows.Forms.DataGrid.AlternatingBackColor%2A>プロパティは、同じ色に設定されます。 設定、<xref:System.Windows.Forms.DataGrid.BackColor%2A>プロパティの設定中に、唯一の偶数行に影響を与える、<xref:System.Windows.Forms.DataGrid.AlternatingBackColor%2A>のみ奇数行に影響します。  
  
   
  
## Examples  
 次のコード例では、両方を設定、<xref:System.Windows.Forms.DataGrid.BackColor%2A>と<xref:System.Windows.Forms.DataGrid.BackgroundColor%2A>プロパティを別の値にします。  
  
 [!code-cpp[Classic DataGrid.BackColor Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataGrid.BackColor Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataGrid.BackColor Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataGrid.BackColor Example/CS/source.cs#1)]
 [!code-vb[Classic DataGrid.BackColor Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGrid.BackColor Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color BackgroundColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackgroundColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGrid.BackgroundColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>グリッドの行以外の領域の色を取得または設定します。</summary>
        <value>グリッドの背景色を表す <see cref="T:System.Drawing.Color" />。 既定値は <see cref="P:System.Drawing.SystemColors.AppWorkspace" /> 色です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGrid.BackgroundColor%2A>はによってテーブルが表示されない場合にのみ表示すると、グリッドの nonrow 領域の色を決定、 <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>、または、グリッドが、下にスクロールされる基準またはのみの場合、いくつかの行がグリッドに含まれています。  
  
   
  
## Examples  
 次のコード例のセット、 <xref:System.Windows.Forms.DataGrid.BackColor%2A>、および<xref:System.Windows.Forms.DataGrid.BackgroundColor%2A>プロパティです。  
  
 [!code-cpp[Classic DataGrid.BackgroundColor Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataGrid.BackgroundColor Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataGrid.BackgroundColor Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataGrid.BackgroundColor Example/CS/source.cs#1)]
 [!code-vb[Classic DataGrid.BackgroundColor Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGrid.BackgroundColor Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundColorChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BackgroundColorChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BackgroundColorChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGrid.BackgroundColorChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DataGrid.BackgroundColor" /> が変更された場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例の変更、<xref:System.Windows.Forms.DataGrid.BackgroundColor%2A>赤と発生する黄色からプロパティ値、<xref:System.Windows.Forms.DataGrid.BackgroundColorChanged>イベント。  
  
 [!code-cpp[DataGrid_BackgroundColorChanged#2](~/samples/snippets/cpp/VS_Snippets_Winforms/DataGrid_BackgroundColorChanged/CPP/mydatagrid_backgroundcolorchanged.cpp#2)]
 [!code-csharp[DataGrid_BackgroundColorChanged#2](~/samples/snippets/csharp/VS_Snippets_Winforms/DataGrid_BackgroundColorChanged/CS/mydatagrid_backgroundcolorchanged.cs#2)]
 [!code-vb[DataGrid_BackgroundColorChanged#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DataGrid_BackgroundColorChanged/VB/mydatagrid_backgroundcolorchanged.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImage">
      <MemberSignature Language="C#" Value="public override System.Drawing.Image BackgroundImage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Image BackgroundImage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGrid.BackgroundImage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このコントロールでは、このメンバーは無効です。</summary>
        <value>コントロールに関連付けられた背景イメージ。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BackgroundImageChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BackgroundImageChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGrid.BackgroundImageChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DataGrid.BackgroundImage" /> プロパティの値が変更された場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGrid.BackgroundImage%2A>プロパティはその値を変更し、処理できますが、このコントロールでは、<xref:System.Windows.Forms.DataGrid.BackgroundImageChanged>変更を検出するイベントです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageLayout">
      <MemberSignature Language="C#" Value="public override System.Windows.Forms.ImageLayout BackgroundImageLayout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ImageLayout BackgroundImageLayout" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGrid.BackgroundImageLayout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImageLayout</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このコントロールでは、このメンバーは無効です。</summary>
        <value><see cref="T:System.Windows.Forms.ImageLayout" /> 値。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageLayoutChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BackgroundImageLayoutChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BackgroundImageLayoutChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGrid.BackgroundImageLayoutChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DataGrid.BackgroundImageLayout" /> プロパティの値が変更された場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGrid.BackgroundImageLayout%2A>プロパティはその値を変更し、処理できますが、このコントロールでは、<xref:System.Windows.Forms.DataGrid.BackgroundImageLayoutChanged>変更を検出するイベントです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginEdit">
      <MemberSignature Language="C#" Value="public bool BeginEdit (System.Windows.Forms.DataGridColumnStyle gridColumn, int rowNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool BeginEdit(class System.Windows.Forms.DataGridColumnStyle gridColumn, int32 rowNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.BeginEdit(System.Windows.Forms.DataGridColumnStyle,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gridColumn" Type="System.Windows.Forms.DataGridColumnStyle" />
        <Parameter Name="rowNumber" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="gridColumn">編集する <see cref="T:System.Windows.Forms.DataGridColumnStyle" />。</param>
        <param name="rowNumber">編集する行の番号。</param>
        <summary>グリッドが編集できる状態に移行するよう試みます。</summary>
        <returns>
          このメソッドが成功した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 セルに入力するユーザーが既に開始している場合、グリッドが編集の要求が拒否されます。 その場合は、<xref:System.Windows.Forms.DataGrid.BeginEdit%2A>メソッドが返す`false`です。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Windows.Forms.DataGrid.BeginEdit%2A>編集する場合にテスト メソッドは、指定した列と行を変更する前にします。  
  
 [!code-cpp[Classic DataGrid.BeginEdit Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataGrid.BeginEdit Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataGrid.BeginEdit Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataGrid.BeginEdit Example/CS/source.cs#1)]
 [!code-vb[Classic DataGrid.BeginEdit Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGrid.BeginEdit Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginInit">
      <MemberSignature Language="C#" Value="public void BeginInit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.BeginInit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>フォームまたは別のコンポーネントで使用する <see cref="T:System.Windows.Forms.DataGrid" /> の初期化を開始します。 初期化は実行時に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Visual Studio のデザイン環境では、このメソッドを使用して、フォームまたは別のコンポーネントで使用するコンポーネントの初期化を開始します。 <xref:System.Windows.Forms.DataGrid.EndInit%2A>メソッドが初期化を終了します。 使用して、<xref:System.Windows.Forms.DataGrid.BeginInit%2A>と<xref:System.Windows.Forms.DataGrid.EndInit%2A>メソッド使用されないように、コントロールが完全に初期化される前にします。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.BorderStyle BorderStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.BorderStyle BorderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGrid.BorderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-504)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.BorderStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>グリッドの境界線スタイルを取得または設定します。</summary>
        <value><see cref="T:System.Windows.Forms.BorderStyle" /> 列挙値のいずれか。 既定値は、<see langword="FixedSingle" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例では、グリッドの境界線のスタイルを設定します。  
  
 [!code-vb[Classic DataGrid.BorderStyle Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGrid.BorderStyle Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderStyleChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BorderStyleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BorderStyleChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGrid.BorderStyleChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DataGrid.BorderStyle" /> が変更された場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 指定できる値は`None`、 `FixedSingle`、および`Fixed3D`です。  
  
   
  
## Examples  
 次のコード例では、このメンバーの使用方法を示します。 例では、イベント ハンドラーは発生するときに報告、<xref:System.Windows.Forms.DataGrid.BorderStyleChanged>イベント。 このレポートでは、イベントが発生し、デバッグに役立つを学習するのに役立ちます。 複数のイベントまたは頻繁に発生するイベントを報告するための交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加する<xref:System.Windows.Forms.TextBox>です。  
  
 コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.DataGrid>という`DataGrid1`です。 イベント ハンドラーが関連付けられていることを確認してください、<xref:System.Windows.Forms.DataGrid.BorderStyleChanged>イベント。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#194](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#194)]
 [!code-vb[System.Windows.Forms.EventExamples#194](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#194)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelEditing">
      <MemberSignature Language="C#" Value="protected virtual void CancelEditing ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void CancelEditing() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.CancelEditing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>現在の編集操作をキャンセルし、すべての変更をロールバックします。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CaptionBackColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color CaptionBackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color CaptionBackColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGrid.CaptionBackColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>キャプション領域の背景色を取得または設定します。</summary>
        <value>キャプションの背景色を表す <see cref="T:System.Drawing.Color" />。 既定値は、<see cref="P:System.Drawing.SystemColors.ActiveCaption" /> 色です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例のセット、<xref:System.Windows.Forms.DataGrid.CaptionBackColor%2A>のプロパティ、<xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>コントロール。  
  
 [!code-vb[Classic DataGrid.CaptionBackColor Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGrid.CaptionBackColor Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CaptionFont">
      <MemberSignature Language="C#" Value="public System.Drawing.Font CaptionFont { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Font CaptionFont" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGrid.CaptionFont" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.AmbientValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>グリッドのキャプションのフォントを取得または設定します。</summary>
        <value>キャプションのフォントを表す <see cref="T:System.Drawing.Font" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A <xref:System.Drawing.Font> Windows フォントをカプセル化し、そのフォントを操作するためのメソッドを提供します。  
  
   
  
## Examples  
 次のコード例は、キャプションのフォントを設定を使用して、<xref:System.Drawing.Font>オブジェクト。  
  
 [!code-vb[Classic DataGrid.CaptionFont Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGrid.CaptionFont Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CaptionForeColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color CaptionForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color CaptionForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGrid.CaptionForeColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>キャプション領域の前景色を取得または設定します。</summary>
        <value>キャプション領域の前景色を表す <see cref="T:System.Drawing.Color" />。 既定値は、<see cref="P:System.Drawing.SystemColors.ActiveCaptionText" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例のセット、<xref:System.Windows.Forms.DataGrid.CaptionForeColor%2A>のプロパティ、<xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>コントロール。  
  
 [!code-vb[Classic DataGrid.CaptionForeColor Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGrid.CaptionForeColor Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CaptionText">
      <MemberSignature Language="C#" Value="public string CaptionText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CaptionText" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGrid.CaptionText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>グリッドのウィンドウ キャプションのテキストを取得または設定します。</summary>
        <value>グリッドのウィンドウ キャプションとして表示される文字列。 既定値は、空の文字列 ("") です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例のキャプションを設定する、<xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>です。  
  
 [!code-cpp[Classic DataGrid.CaptionText Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataGrid.CaptionText Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataGrid.CaptionText Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataGrid.CaptionText Example/CS/source.cs#1)]
 [!code-vb[Classic DataGrid.CaptionText Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGrid.CaptionText Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CaptionVisible">
      <MemberSignature Language="C#" Value="public bool CaptionVisible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CaptionVisible" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGrid.CaptionVisible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>グリッドのキャプションを表示するかどうかを示す値を取得または設定します。</summary>
        <value>
          キャプションを表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 場合<xref:System.Windows.Forms.DataGrid.CaptionVisible%2A>は`false`、**戻る**ボタン、 **ParentRow**  ボタン、およびキャプションは表示されません。 ナビゲーションは制限のため、子テーブルへのリンクも表示されませんし、<xref:System.Windows.Forms.DataGrid.AllowNavigation%2A>に設定されます`None`です。  
  
   
  
## Examples  
 次のコード例を切り替えます、<xref:System.Windows.Forms.DataGrid.CaptionVisible%2A>プロパティです。  
  
 [!code-vb[Classic DataGrid.CaptionVisible Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGrid.CaptionVisible Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CaptionVisibleChanged">
      <MemberSignature Language="C#" Value="public event EventHandler CaptionVisibleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CaptionVisibleChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGrid.CaptionVisibleChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DataGrid.CaptionVisible" /> プロパティが変更された場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例では、このイベントの使用方法を示します。  
  
 [!code-cpp[DataGrid_CaptionVisibleChanged#1](~/samples/snippets/cpp/VS_Snippets_Winforms/DataGrid_CaptionVisibleChanged/CPP/mydatagrid_captionvisiblechanged.cpp#1)]
 [!code-csharp[DataGrid_CaptionVisibleChanged#1](~/samples/snippets/csharp/VS_Snippets_Winforms/DataGrid_CaptionVisibleChanged/CS/mydatagrid_captionvisiblechanged.cs#1)]
 [!code-vb[DataGrid_CaptionVisibleChanged#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DataGrid_CaptionVisibleChanged/VB/mydatagrid_captionvisiblechanged.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Collapse">
      <MemberSignature Language="C#" Value="public void Collapse (int row);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Collapse(int32 row) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.Collapse(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="row">折りたたむ行の番号。 -1 に設定すると、行がすべて折りたたまれます。</param>
        <summary>子リレーションシップがすべての行または指定した行に存在する場合、子リレーションシップを折りたたみます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Windows.Forms.DataGrid.IsExpanded%2A>行が展開されているかどうかを調べます。  
  
   
  
## Examples  
 次のコード例は、のすべての行を折りたたむ、<xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>コントロール。  
  
 [!code-vb[Classic DataGrid.Collapse Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGrid.Collapse Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnHeadersVisible">
      <MemberSignature Language="C#" Value="public bool ColumnHeadersVisible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ColumnHeadersVisible" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGrid.ColumnHeadersVisible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>テーブルの列ヘッダーを表示するかどうかを示す値を取得または設定します。</summary>
        <value>
          列ヘッダーを表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例を切り替えます、<xref:System.Windows.Forms.DataGrid.ColumnHeadersVisible%2A>プロパティです。  
  
 [!code-vb[Classic DataGrid.ColumnHeadersVisible Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGrid.ColumnHeadersVisible Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnStartedEditing">
      <MemberSignature Language="C#" Value="protected virtual void ColumnStartedEditing (System.Drawing.Rectangle bounds);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void ColumnStartedEditing(valuetype System.Drawing.Rectangle bounds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.ColumnStartedEditing(System.Drawing.Rectangle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="bounds">編集された列の位置を定義する <see cref="T:System.Drawing.Rectangle" />。</param>
        <summary>ユーザーが指定した位置にある列の編集を開始すると、<see cref="T:System.Windows.Forms.DataGrid" /> コントロールに通知します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 呼び出されると、<xref:System.Windows.Forms.IDataGridColumnStyleEditingNotificationService.ColumnStartedEditing%2A>メソッドにより、<xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>鉛筆を行ヘッダーに表示するコントロール。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnStartedEditing">
      <MemberSignature Language="C#" Value="protected virtual void ColumnStartedEditing (System.Windows.Forms.Control editingControl);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void ColumnStartedEditing(class System.Windows.Forms.Control editingControl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.ColumnStartedEditing(System.Windows.Forms.Control)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="editingControl" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="editingControl">列の編集に使用する <see cref="T:System.Windows.Forms.Control" />。</param>
        <summary>ユーザーが指定したコントロールを使用して列の編集を開始すると、<see cref="T:System.Windows.Forms.DataGrid" /> コントロールに通知します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 呼び出されると、<xref:System.Windows.Forms.IDataGridColumnStyleEditingNotificationService.ColumnStartedEditing%2A>メソッドにより、<xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>鉛筆を行ヘッダーに表示するコントロール。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAccessibilityInstance">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.AccessibleObject CreateAccessibilityInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Forms.AccessibleObject CreateAccessibilityInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.CreateAccessibilityInstance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>このコントロールのアクセシビリティ オブジェクトの新しいインスタンスを構築します。</summary>
        <returns>このコントロールの <see cref="T:System.Windows.Forms.Control.ControlAccessibleObject" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 派生クラスでは、基本クラスを呼び出す必要がありますいない<xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A>メソッドです。  
  
 次のプロパティのみ、<xref:System.Windows.Forms.AccessibleObject>設定する必要があります。  
  
-   <xref:System.Windows.Forms.AccessibleObject.Role%2A>  
  
-   <xref:System.Windows.Forms.AccessibleObject.Description%2A>  
  
-   <xref:System.Windows.Forms.AccessibleObject.Name%2A>  
  
 その他のすべてのプロパティは、によって処理される、<xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>自体です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateGridColumn">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Forms.DataGridColumnStyle CreateGridColumn (System.ComponentModel.PropertyDescriptor prop);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Windows.Forms.DataGridColumnStyle CreateGridColumn(class System.ComponentModel.PropertyDescriptor prop) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.CreateGridColumn(System.ComponentModel.PropertyDescriptor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridColumnStyle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prop" Type="System.ComponentModel.PropertyDescriptor" />
      </Parameters>
      <Docs>
        <param name="prop">グリッドの列スタイルの作成に使用する <see cref="T:System.ComponentModel.PropertyDescriptor" />。</param>
        <summary>指定した <see cref="T:System.Windows.Forms.DataGridColumnStyle" /> を使用して、新しい <see cref="T:System.ComponentModel.PropertyDescriptor" /> を作成します。</summary>
        <returns>新しい <see cref="T:System.Windows.Forms.DataGridColumnStyle" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateGridColumn">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Forms.DataGridColumnStyle CreateGridColumn (System.ComponentModel.PropertyDescriptor prop, bool isDefault);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Windows.Forms.DataGridColumnStyle CreateGridColumn(class System.ComponentModel.PropertyDescriptor prop, bool isDefault) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.CreateGridColumn(System.ComponentModel.PropertyDescriptor,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridColumnStyle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prop" Type="System.ComponentModel.PropertyDescriptor" />
        <Parameter Name="isDefault" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="prop">グリッドの列スタイルの作成に使用する <see cref="T:System.ComponentModel.PropertyDescriptor" />。</param>
        <param name="isDefault">
          既定の列スタイルとして設定する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
        <summary>指定した <see cref="T:System.Windows.Forms.DataGridColumnStyle" /> を使用して <see cref="T:System.ComponentModel.PropertyDescriptor" /> を作成します。</summary>
        <returns>新しい <see cref="T:System.Windows.Forms.DataGridColumnStyle" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentCell">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridCell CurrentCell { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataGridCell CurrentCell" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGrid.CurrentCell" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridCell</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>フォーカスがあるセルを取得または設定します。 デザイン時には使用できません。</summary>
        <value>フォーカスがある <see cref="T:System.Windows.Forms.DataGridCell" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 設定、<xref:System.Windows.Forms.DataGrid.CurrentCell%2A>プロパティには、グリッドをスクロールし、セルを表示するかどうかに表示されていないが発生します。  
  
   
  
## Examples  
 次のコード例では、設定および現在のセルを取得する方法を示します。  
  
 [!code-cpp[Classic DataGrid.CurrentCell Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataGrid.CurrentCell Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataGrid.CurrentCell Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataGrid.CurrentCell Example/CS/source.cs#1)]
 [!code-vb[Classic DataGrid.CurrentCell Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGrid.CurrentCell Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentCellChanged">
      <MemberSignature Language="C#" Value="public event EventHandler CurrentCellChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CurrentCellChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGrid.CurrentCellChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DataGrid.CurrentCell" /> プロパティが変更された場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 現在のセルを確認するには<xref:System.Windows.Forms.DataGrid.CurrentCell%2A>プロパティです。  
  
   
  
## Examples  
 次のコード例では、このメンバーの使用方法を示します。  
  
 [!code-cpp[DataGrid_CaptionVisibleChanged#2](~/samples/snippets/cpp/VS_Snippets_Winforms/DataGrid_CaptionVisibleChanged/CPP/mydatagrid_captionvisiblechanged.cpp#2)]
 [!code-csharp[DataGrid_CaptionVisibleChanged#2](~/samples/snippets/csharp/VS_Snippets_Winforms/DataGrid_CaptionVisibleChanged/CS/mydatagrid_captionvisiblechanged.cs#2)]
 [!code-vb[DataGrid_CaptionVisibleChanged#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DataGrid_CaptionVisibleChanged/VB/mydatagrid_captionvisiblechanged.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentRowIndex">
      <MemberSignature Language="C#" Value="public int CurrentRowIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CurrentRowIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGrid.CurrentRowIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在フォーカスがある行のインデックスを取得または設定します。</summary>
        <value>現在の行の 0 から始まるインデックス番号。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 設定、<xref:System.Windows.Forms.DataGrid.CurrentRowIndex%2A>指定された行がビューに表示されるように、現在の値以外の値にプロパティがコントロールをスクロールします。  
  
 <xref:System.Windows.Forms.DataGrid.CurrentRowIndex%2A>プロパティでは、子テーブルの行を表示している場合でも、親テーブルの行を反復処理することができます。 子テーブルを表示している場合をインクリメントするなど、<xref:System.Windows.Forms.DataGrid.CurrentRowIndex%2A>により、<xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>親テーブルにリンクされている子テーブルに次のレコード セットを表示します。  
  
 ユーザーは、子リレーションシップがないと、親テーブルまたはテーブルに表示されている場合、プロパティは、現在の行の 0 から始まるインデックスを返します。  
  
   
  
## Examples  
 次のコード例を返します、<xref:System.Windows.Forms.DataGrid.CurrentRowIndex%2A>です。  
  
 [!code-cpp[Classic DataGrid.CurrentRowIndex Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataGrid.CurrentRowIndex Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataGrid.CurrentRowIndex Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataGrid.CurrentRowIndex Example/CS/source.cs#1)]
 [!code-vb[Classic DataGrid.CurrentRowIndex Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGrid.CurrentRowIndex Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">ない<see cref="T:System.Windows.Forms.CurrencyManager" />です。</exception>
      </Docs>
    </Member>
    <Member MemberName="Cursor">
      <MemberSignature Language="C#" Value="public override System.Windows.Forms.Cursor Cursor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Cursor Cursor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGrid.Cursor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Cursor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このコントロールでは、このメンバーは無効です。</summary>
        <value>マウス ポインターがオブジェクトの上に置かれたときに表示するカーソルの種類。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CursorChanged">
      <MemberSignature Language="C#" Value="public event EventHandler CursorChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CursorChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGrid.CursorChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DataGrid.Cursor" /> プロパティの値が変更された場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGrid.Cursor%2A>プロパティはその値を変更し、処理できますが、このコントロールでは、<xref:System.Windows.Forms.DataGrid.CursorChanged>変更を検出するイベントです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataMember">
      <MemberSignature Language="C#" Value="public string DataMember { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataMember" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGrid.DataMember" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataMemberListEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DataGrid.DataSource" /> コントロールでグリッドを表示するための、<see cref="T:System.Windows.Forms.DataGrid" /> 内の特定のリストを取得または設定します。</summary>
        <value><see cref="P:System.Windows.Forms.DataGrid.DataSource" /> のリスト。 既定値は、空の文字列 ("") です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 場合、<xref:System.Windows.Forms.DataGrid.DataSource%2A>複数のソースを含むデータ、設定する必要があります、<xref:System.Windows.Forms.DataGrid.DataMember%2A>ソースのいずれかにします。 たとえば場合、<xref:System.Windows.Forms.DataGrid.DataSource%2A>は、<xref:System.Data.DataSet>または<xref:System.Data.DataViewManager>という 3 つのテーブルを格納している`Customers`、 `Orders`、および`OrderDetails`にバインドするテーブルのいずれかを指定する必要があります。 場合、<xref:System.Data.DataSet>または<xref:System.Data.DataViewManager>は 1 つだけ<xref:System.Data.DataTable>、設定する必要があります、<xref:System.Windows.Forms.DataGrid.DataMember%2A>を<xref:System.Data.DataTable.TableName%2A>その<xref:System.Data.DataTable>です。  
  
 場合、<xref:System.Windows.Forms.DataGrid.DataSource%2A>に設定されている、<xref:System.Data.DataSet>を格納している<xref:System.Data.DataRelation>オブジェクトをそれぞれの行ヘッダーのプラス記号 (+) を親テーブルが表示されます。 プラス記号をクリックすると、ノードが子テーブルへのリンクを格納しているが表示されます。 たとえば場合、<xref:System.Data.DataSet>は 2 つ<xref:System.Data.DataTable>という名前のオブジェクト`Customers`と`Orders`、設定、<xref:System.Windows.Forms.DataGrid.DataMember%2A>を`Customers`原因の表に、<xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>各の行ヘッダーに表示されるプラス記号を持つ親テーブルを表示します。 場合、<xref:System.Windows.Forms.DataGrid.DataMember%2A>に設定されている`Orders`、ただし、行ヘッダーは空白になります。  
  
 場合、<xref:System.Windows.Forms.DataGrid.DataSource%2A>は、 <xref:System.Data.DataTable>、 <xref:System.Data.DataView>、コレクション、または、配列の設定、<xref:System.Windows.Forms.DataGrid.DataMember%2A>プロパティは例外をスローします。  
  
> [!NOTE]
>  使用する必要があります、実行時に、<xref:System.Windows.Forms.DataGrid.SetDataBinding%2A>をリセットする方法、<xref:System.Windows.Forms.DataGrid.DataSource%2A>プロパティです。 ただし、<xref:System.Windows.Forms.DataGrid.DataMember%2A>プロパティだけでは、いつでも有効なテーブル名をリセットすることができます。  
  
   
  
## Examples  
 次のコード例のセット、<xref:System.Windows.Forms.DataGrid.DataSource%2A>と<xref:System.Windows.Forms.DataGrid.DataMember%2A>のプロパティ、<xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>コントロール。  
  
 [!code-cpp[Classic DataGrid.DataMember Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataGrid.DataMember Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataGrid.DataMember Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataGrid.DataMember Example/CS/source.cs#1)]
 [!code-vb[Classic DataGrid.DataMember Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGrid.DataMember Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataSource">
      <MemberSignature Language="C#" Value="public object DataSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DataSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGrid.DataSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.AttributeProvider(typeof(System.ComponentModel.IListSource))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>グリッドでデータが表示される対象のデータ ソースを取得または設定します。</summary>
        <value>データ ソースとして機能するオブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 実行時に、使用、<xref:System.Windows.Forms.DataGrid.SetDataBinding%2A>を設定するメソッド、<xref:System.Windows.Forms.DataGrid.DataSource%2A>と<xref:System.Windows.Forms.DataGrid.DataMember%2A>プロパティです。  
  
 次のデータ ソースは有効です。  
  
-   <xref:System.Data.DataTable>。  
  
-   <xref:System.Data.DataView>。  
  
-   <xref:System.Data.DataSet>。  
  
-   <xref:System.Data.DataViewManager>。  
  
-   実装する任意のコンポーネント、<xref:System.ComponentModel.IListSource>インターフェイス  
  
-   実装する任意のコンポーネント、<xref:System.Collections.IList>インターフェイス  
  
 参照してください、<xref:System.Windows.Forms.Binding>詳細については、データ ソース クラスの概要です。  
  
 場合、<xref:System.Windows.Forms.DataGrid.DataSource%2A>リファレンスには、複数のテーブルが含まれています、設定する必要があります、<xref:System.Windows.Forms.DataGrid.DataMember%2A>プロパティにバインドするテーブルを指定する文字列にします。 たとえば場合、<xref:System.Windows.Forms.DataGrid.DataSource%2A>は、<xref:System.Data.DataSet>または<xref:System.Data.DataViewManager>という 3 つのテーブルを格納している`Customers`、 `Orders`、および`OrderDetails`にバインドするテーブルを指定する必要があります。  
  
 設定、<xref:System.Windows.Forms.DataGrid.DataSource%2A>を実装しないオブジェクトを<xref:System.Collections.IList>インターフェイスまたは<xref:System.ComponentModel.IListSource>例外をスローするグリッドになります。  
  
 データを編集することができますを使用して新しい行を追加することを防止するグリッドを作成することができます、<xref:System.Data.DataView>設定とデータ ソースとして、<xref:System.Data.DataView.AddNew%2A>プロパティを`false`です。  
  
 バインドする、<xref:System.Windows.Forms.DataGrid>オブジェクトの厳密に型指定された配列には、オブジェクトの種類がパブリック プロパティを含める必要があります。 作成する、<xref:System.Windows.Forms.DataGridTableStyle>配列を表示する、設定、<xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A?displayProperty=nameWithType>プロパティを`typename`場所`typename`はオブジェクトの種類の名前に置換します。 また、<xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A>プロパティは、大文字小文字を区別; 型の名前は厳密に一致する必要があります。 参照してください、<xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A>例については、プロパティです。  
  
 バインドすることも、<xref:System.Windows.Forms.DataGrid>を<xref:System.Collections.ArrayList>です。 機能、<xref:System.Collections.ArrayList>は複数の型のオブジェクトに含めることが、<xref:System.Windows.Forms.DataGrid>リスト内のすべての項目が最初の項目と同じ型の場合、このようなリストにのみバインドできます。 つまり、すべてのオブジェクトで、同じ型であるか、または、一覧の最初の項目と同じクラスから継承する必要があります。 たとえば、一覧の最初の項目が、 <xref:System.Windows.Forms.Control>、2 番目の項目がある可能性があります、 <xref:System.Windows.Forms.TextBox> (から継承される<xref:System.Windows.Forms.Control>)。 その一方で、最初の項目、 <xref:System.Windows.Forms.TextBox>、2 番目のオブジェクトにすることはできません、<xref:System.Windows.Forms.Control>です。 さらに、<xref:System.Collections.ArrayList>がバインドされるときにアイテム必要があります。 空<xref:System.Collections.ArrayList>空のグリッドになります。 また、内のオブジェクト、<xref:System.Collections.ArrayList>パブリック プロパティを含める必要があります。 バインドするとき、 <xref:System.Collections.ArrayList>、設定、<xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A>の<xref:System.Windows.Forms.DataGridTableStyle>"ArrayList"(型名) にします。  
  
   
  
## Examples  
 次のコード例は、設定する方法を示します、 <xref:System.Windows.Forms.DataGrid.DataSource%2A>、必要な場合、 <xref:System.Windows.Forms.DataGrid.DataMember%2A>、バインド、<xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>両方に、<xref:System.Data.DataView>と<xref:System.Data.DataSet>です。 データ ソースを取得する方法についても示します、<xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>です。  
  
 [!code-cpp[Classic DataGrid.DataSource Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataGrid.DataSource Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataGrid.DataSource Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataGrid.DataSource Example/CS/source.cs#1)]
 [!code-vb[Classic DataGrid.DataSource Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGrid.DataSource Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataSourceChanged">
      <MemberSignature Language="C#" Value="public event EventHandler DataSourceChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DataSourceChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGrid.DataSourceChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DataGrid.DataSource" /> プロパティ値が変更されたときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGrid.DataSourceChanged>イベントが発生したときに、<xref:System.Windows.Forms.DataGrid.DataMember%2A>値の変更、または、<xref:System.Windows.Forms.BindingContext>の<xref:System.Windows.Forms.DataGrid>変更します。  
  
   
  
## Examples  
 次のコード例では、このメンバーの使用方法を示します。  
  
 [!code-cpp[Classic DataGrid.DataSourceChanged Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataGrid.DataSourceChanged Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataGrid.DataSourceChanged Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataGrid.DataSourceChanged Example/CS/source.cs#1)]
 [!code-vb[Classic DataGrid.DataSourceChanged Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGrid.DataSourceChanged Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultSize">
      <MemberSignature Language="C#" Value="protected override System.Drawing.Size DefaultSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size DefaultSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGrid.DefaultSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールの既定のサイズを取得します。</summary>
        <value>コントロールの既定のサイズ。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.Dispose(System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          マネージ リソースとアンマネージ リソースの両方を解放する場合は <see langword="true" />。アンマネージ リソースだけを解放する場合は <see langword="false" />。</param>
        <summary><see cref="T:System.Windows.Forms.DataGrid" /> で使用されていたリソース (メモリを除く) を解放します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGrid.Dispose%2A> を使い終わったら <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType> を呼び出します。 <xref:System.Windows.Forms.DataGrid.Dispose%2A> メソッドによって、<xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType> は使用不可の状態になります。 呼び出した後<xref:System.Windows.Forms.DataGrid.Dispose%2A>、すべての参照を解放する必要があります、<xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>が使用していたメモリをガベージ コレクションによって再要求できるようにします。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Windows.Forms.DataGrid.Dispose%2A>リソースを解放します。  
  
 [!code-vb[Classic DataGrid.Dispose Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGrid.Dispose Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndEdit">
      <MemberSignature Language="C#" Value="public bool EndEdit (System.Windows.Forms.DataGridColumnStyle gridColumn, int rowNumber, bool shouldAbort);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool EndEdit(class System.Windows.Forms.DataGridColumnStyle gridColumn, int32 rowNumber, bool shouldAbort) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.EndEdit(System.Windows.Forms.DataGridColumnStyle,System.Int32,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gridColumn" Type="System.Windows.Forms.DataGridColumnStyle" />
        <Parameter Name="rowNumber" Type="System.Int32" />
        <Parameter Name="shouldAbort" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="gridColumn">編集を中断する <see cref="T:System.Windows.Forms.DataGridColumnStyle" />。</param>
        <param name="rowNumber">編集を中断する行の番号。</param>
        <param name="shouldAbort">現在の操作を中断する必要がある場合は、<see langword="true" /> に設定します。</param>
        <summary><see cref="T:System.Windows.Forms.DataGrid" /> コントロールで実行している編集操作の終了を要求します。</summary>
        <returns>
          編集操作を終了する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGrid.EndEdit%2A>メソッドを返します。`false`場合、ユーザーが編集していない (入力) セル。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Windows.Forms.DataGrid.BeginEdit%2A>と<xref:System.Windows.Forms.DataGrid.EndEdit%2A>によって表示されるグリッド内の値を編集する方法、<xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>コントロール。  
  
 [!code-cpp[Classic DataGrid.EndEdit Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataGrid.EndEdit Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataGrid.EndEdit Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataGrid.EndEdit Example/CS/source.cs#1)]
 [!code-vb[Classic DataGrid.EndEdit Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGrid.EndEdit Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndInit">
      <MemberSignature Language="C#" Value="public void EndInit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.EndInit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>フォームまたは別のコンポーネントで使用する <see cref="T:System.Windows.Forms.DataGrid" /> の初期化を終了します。 初期化は実行時に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Visual Studio のデザイン環境では、このメソッドを使用して、フォームまたは別のコンポーネントで使用するコンポーネントの初期化を終了します。 <xref:System.Windows.Forms.DataGrid.BeginInit%2A>メソッドは、初期化を開始します。 使用して、<xref:System.Windows.Forms.DataGrid.BeginInit%2A>と<xref:System.Windows.Forms.DataGrid.EndInit%2A>メソッド使用されないように、コントロールが完全に初期化される前にします。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Expand">
      <MemberSignature Language="C#" Value="public void Expand (int row);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Expand(int32 row) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.Expand(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="row">展開する行の番号。 -1 に設定すると、行がすべて展開されます。</param>
        <summary>子リレーションシップがすべての行または特定の行に存在する場合に、子リレーションシップを表示します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例では、このメンバーの使用方法を示します。  
  
 [!code-vb[Classic DataGrid.Expand Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGrid.Expand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FirstVisibleColumn">
      <MemberSignature Language="C#" Value="public int FirstVisibleColumn { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FirstVisibleColumn" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGrid.FirstVisibleColumn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>グリッドに最初に表示される列のインデックスを取得します。</summary>
        <value><see cref="T:System.Windows.Forms.DataGridColumnStyle" /> のインデックス。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 列は部分的に外から見えないように場合でも、表示されていると見なされます。  
  
 特定の列が表示されない場合は、設定、<xref:System.Windows.Forms.DataGrid.CurrentCell%2A>プロパティを表示するか、セルをします。  
  
   
  
## Examples  
 次のコード例は、最初に表示される列が 5 より大きい場合に、グリッドをスクロールします。  
  
 [!code-vb[Classic DataGrid.FirstVisibleColumn Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGrid.FirstVisibleColumn Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FlatMode">
      <MemberSignature Language="C#" Value="public bool FlatMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FlatMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGrid.FlatMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>グリッドをフラット モードで表示するかどうかを示す値を取得または設定します。</summary>
        <value>
          グリッドをフラットに表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例を調べ、<xref:System.Windows.Forms.DataGrid.FlatMode%2A>プロパティとその状態のユーザーに通知します。  
  
 [!code-cpp[MyDataGridClass_FlatMode_ReadOnly#1](~/samples/snippets/cpp/VS_Snippets_Winforms/MyDataGridClass_FlatMode_ReadOnly/CPP/mydatagridclass_flatmode_readonly.cpp#1)]
 [!code-csharp[MyDataGridClass_FlatMode_ReadOnly#1](~/samples/snippets/csharp/VS_Snippets_Winforms/MyDataGridClass_FlatMode_ReadOnly/CS/mydatagridclass_flatmode_readonly.cs#1)]
 [!code-vb[MyDataGridClass_FlatMode_ReadOnly#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MyDataGridClass_FlatMode_ReadOnly/VB/mydatagridclass_flatmode_readonly.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FlatModeChanged">
      <MemberSignature Language="C#" Value="public event EventHandler FlatModeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler FlatModeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGrid.FlatModeChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DataGrid.FlatMode" /> が変更された場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例では、このメンバーの使用方法を示します。  
  
 [!code-cpp[MyDataGridClass_FlatMode_ReadOnly#2](~/samples/snippets/cpp/VS_Snippets_Winforms/MyDataGridClass_FlatMode_ReadOnly/CPP/mydatagridclass_flatmode_readonly.cpp#2)]
 [!code-csharp[MyDataGridClass_FlatMode_ReadOnly#2](~/samples/snippets/csharp/VS_Snippets_Winforms/MyDataGridClass_FlatMode_ReadOnly/CS/mydatagridclass_flatmode_readonly.cs#2)]
 [!code-vb[MyDataGridClass_FlatMode_ReadOnly#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MyDataGridClass_FlatMode_ReadOnly/VB/mydatagridclass_flatmode_readonly.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForeColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color ForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGrid.ForeColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.DataGrid" /> コントロールの前景色 (通常はテキストの色) プロパティを取得または設定します。</summary>
        <value>前景色を表す <see cref="T:System.Drawing.Color" />。 既定値は、<see cref="P:System.Drawing.SystemBrushes.WindowText" /> 色です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例では、このメンバーの使用方法を示します。  
  
 [!code-cpp[DataGrid_ColorMembers#2](~/samples/snippets/cpp/VS_Snippets_Winforms/DataGrid_ColorMembers/CPP/datagrid_10.cpp#2)]
 [!code-csharp[DataGrid_ColorMembers#2](~/samples/snippets/csharp/VS_Snippets_Winforms/DataGrid_ColorMembers/CS/datagrid_10.cs#2)]
 [!code-vb[DataGrid_ColorMembers#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DataGrid_ColorMembers/VB/datagrid_10.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCellBounds">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle GetCellBounds (System.Windows.Forms.DataGridCell dgc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Rectangle GetCellBounds(valuetype System.Windows.Forms.DataGridCell dgc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.GetCellBounds(System.Windows.Forms.DataGridCell)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dgc" Type="System.Windows.Forms.DataGridCell" />
      </Parameters>
      <Docs>
        <param name="dgc">検索する <see cref="T:System.Windows.Forms.DataGridCell" />。</param>
        <summary><see cref="T:System.Drawing.Rectangle" /> で指定したセルの <see cref="T:System.Windows.Forms.DataGridCell" /> を取得します。</summary>
        <returns>現在のセルの四隅を定義する <see cref="T:System.Drawing.Rectangle" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例では、<xref:System.Windows.Forms.DataGrid.GetCellBounds%2A>を返すメソッドを<xref:System.Drawing.Rectangle>指定したセルのです。  
  
 [!code-cpp[Classic DataGrid.GetCellBounds1 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataGrid.GetCellBounds1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataGrid.GetCellBounds1 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataGrid.GetCellBounds1 Example/CS/source.cs#1)]
 [!code-vb[Classic DataGrid.GetCellBounds1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGrid.GetCellBounds1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCellBounds">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle GetCellBounds (int row, int col);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Rectangle GetCellBounds(int32 row, int32 col) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.GetCellBounds(System.Int32,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="System.Int32" />
        <Parameter Name="col" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="row">セルの行の番号。</param>
        <param name="col">セルの列の番号。</param>
        <summary>行番号および列番号で指定したセルの <see cref="T:System.Drawing.Rectangle" /> を取得します。</summary>
        <returns>現在のセルの四隅を定義する <see cref="T:System.Drawing.Rectangle" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 現在選択されているセルのセルの境界を取得する<xref:System.Windows.Forms.DataGrid.GetCurrentCellBounds%2A>です。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Windows.Forms.DataGrid.GetCellBounds%2A>を返すメソッドを<xref:System.Drawing.Rectangle>指定したセルのです。  
  
 [!code-cpp[Classic DataGrid.GetCellBounds Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataGrid.GetCellBounds Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataGrid.GetCellBounds Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataGrid.GetCellBounds Example/CS/source.cs#1)]
 [!code-vb[Classic DataGrid.GetCellBounds Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGrid.GetCellBounds Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentCellBounds">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle GetCurrentCellBounds ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Rectangle GetCurrentCellBounds() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.GetCurrentCellBounds" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>選択されたセルの四隅を指定する <see cref="T:System.Drawing.Rectangle" /> を取得します。</summary>
        <returns>現在のセルの四隅を定義する <see cref="T:System.Drawing.Rectangle" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 現在のセル以外のセルのセルの境界を取得する<xref:System.Windows.Forms.DataGrid.GetCellBounds%2A>です。  
  
   
  
## Examples  
 次のコード例を取得、<xref:System.Drawing.Rectangle>選択したセルのです。  
  
 [!code-cpp[Classic DataGrid.GetCurrentCellBounds Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataGrid.GetCurrentCellBounds Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataGrid.GetCurrentCellBounds Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataGrid.GetCurrentCellBounds Example/CS/source.cs#1)]
 [!code-vb[Classic DataGrid.GetCurrentCellBounds Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGrid.GetCurrentCellBounds Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOutputTextDelimiter">
      <MemberSignature Language="C#" Value="protected virtual string GetOutputTextDelimiter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetOutputTextDelimiter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.GetOutputTextDelimiter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>行のコンテンツをクリップボードにコピーするときに、列間の区切り文字となる文字列を取得します。</summary>
        <returns>行を列に分割するために使用されるタブを表す文字列値 ("\t")。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GridHScrolled">
      <MemberSignature Language="C#" Value="protected virtual void GridHScrolled (object sender, System.Windows.Forms.ScrollEventArgs se);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GridHScrolled(object sender, class System.Windows.Forms.ScrollEventArgs se) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.GridHScrolled(System.Object,System.Windows.Forms.ScrollEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="se" Type="System.Windows.Forms.ScrollEventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">コントロールに関するデータを格納している <see cref="T:System.Object" />。</param>
        <param name="se">イベント データを格納している <see cref="T:System.Windows.Forms.ScrollEventArgs" />。</param>
        <summary>水平スクロール バーのスクロール イベントを待機します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GridLineColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color GridLineColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color GridLineColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGrid.GridLineColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>グリッド線の色を取得または設定します。</summary>
        <value>グリッド線の色を表す <see cref="T:System.Drawing.Color" />。 既定値はコントロールのシステム カラー (<see cref="P:System.Drawing.SystemColors.Control" />) です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 場合のグリッド線が表示されない、<xref:System.Windows.Forms.DataGrid.GridLineStyle%2A>プロパティに設定されている`DataGridLineStyle.None`です。  
  
   
  
## Examples  
 次のコード例では、メソッドに渡された値を使用して、グリッドの線の色を設定します。  
  
 [!code-cpp[Classic DataGrid.GridLineColor Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataGrid.GridLineColor Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataGrid.GridLineColor Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataGrid.GridLineColor Example/CS/source.cs#1)]
 [!code-vb[Classic DataGrid.GridLineColor Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGrid.GridLineColor Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">値が設定されていません。</exception>
      </Docs>
    </Member>
    <Member MemberName="GridLineStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridLineStyle GridLineStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataGridLineStyle GridLineStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGrid.GridLineStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridLineStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>グリッド線のスタイルを取得または設定します。</summary>
        <value><see cref="T:System.Windows.Forms.DataGridLineStyle" /> 値の 1 つ。 既定値は、<see langword="Solid" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例の変更、<xref:System.Windows.Forms.DataGrid.GridLineStyle%2A>プロパティを表示しません。  
  
 [!code-vb[Classic DataGrid.GridLineStyle Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGrid.GridLineStyle Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GridVScrolled">
      <MemberSignature Language="C#" Value="protected virtual void GridVScrolled (object sender, System.Windows.Forms.ScrollEventArgs se);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GridVScrolled(object sender, class System.Windows.Forms.ScrollEventArgs se) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.GridVScrolled(System.Object,System.Windows.Forms.ScrollEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="se" Type="System.Windows.Forms.ScrollEventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">コントロールに関するデータを格納している <see cref="T:System.Object" />。</param>
        <param name="se">イベント データを格納している <see cref="T:System.Windows.Forms.ScrollEventArgs" />。</param>
        <summary>垂直スクロール バーのスクロール イベントを待機します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderBackColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color HeaderBackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color HeaderBackColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGrid.HeaderBackColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>すべての行ヘッダーおよび列ヘッダーの背景色を取得または設定します。</summary>
        <value>行ヘッダーおよび列ヘッダーの背景色を表す <see cref="T:System.Drawing.Color" />。 既定値はコントロールのシステム カラー (<see cref="P:System.Drawing.SystemColors.Control" />) です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例では、メソッドに渡された値を使用して、列ヘッダーの背景色を設定します。  
  
 [!code-vb[Classic DataGrid.HeaderBackColor Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGrid.HeaderBackColor Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">プロパティを設定するときに、<see langword="Color.Empty" />が渡されました。</exception>
      </Docs>
    </Member>
    <Member MemberName="HeaderFont">
      <MemberSignature Language="C#" Value="public System.Drawing.Font HeaderFont { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Font HeaderFont" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGrid.HeaderFont" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>列ヘッダーに使用するフォントを取得または設定します。</summary>
        <value>ヘッダー テキストを表す <see cref="T:System.Drawing.Font" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 いずれかをデザイナーを作成する場合にのみ通常このメソッドを使用する、 <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>、やコントロールを組み込む独自の作成、<xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderForeColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color HeaderForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color HeaderForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGrid.HeaderForeColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ヘッダーの前景色を取得または設定します。</summary>
        <value>列ヘッダーテキストやプラス/マイナス グリフを含む、グリッドの列ヘッダーの前景色を表す <see cref="T:System.Drawing.Color" />。 既定値は、<see cref="P:System.Drawing.SystemColors.ControlText" /> 色です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例では、グリッドの列ヘッダーの前景色を設定します。  
  
 [!code-vb[Classic DataGrid.HeaderForeColor Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGrid.HeaderForeColor Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HitTest">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGrid.HitTestInfo HitTest (System.Drawing.Point position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.DataGrid/HitTestInfo HitTest(valuetype System.Drawing.Point position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.HitTest(System.Drawing.Point)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGrid+HitTestInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="position">単一の x、y 座標を表す <see cref="T:System.Drawing.Point" />。</param>
        <summary>特定の <see cref="T:System.Drawing.Point" /> を使用して、クリックされたグリッド上のポイントの行番号や列番号など、グリッドに関する情報を取得します。</summary>
        <returns>グリッドに関する固有の情報を格納する <see cref="T:System.Windows.Forms.DataGrid.HitTestInfo" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGrid.HitTestInfo>、と共に、<xref:System.Windows.Forms.DataGrid.HitTest%2A>のメソッド、<xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>制御、のどの部分を決定するために使用、<xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>コントロール、ユーザーがクリックしました。 <xref:System.Windows.Forms.DataGrid.HitTestInfo>行、列、およびクリックされたグリッドの一部が含まれています。 さらに、<xref:System.Windows.Forms.DataGrid.HitTestInfo.Type%2A>プロパティから返される、<xref:System.Windows.Forms.DataGrid.HitTestType>列挙します。  
  
 <xref:System.Windows.Forms.DataGrid.HitTest%2A>メソッドには、x および y 引数によって指定される、<xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>コントロールの<xref:System.Windows.Forms.Control.DragDrop>、 <xref:System.Windows.Forms.Control.DragEnter>、 <xref:System.Windows.Forms.Control.DragOver>、 <xref:System.Windows.Forms.Control.MouseDown>、 <xref:System.Windows.Forms.Control.MouseMove>、<xref:System.Windows.Forms.Control.MouseUp>と<xref:System.Windows.Forms.Control.MouseWheel>イベント。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Windows.Forms.DataGrid.HitTest%2A>グリッドで、ユーザーがクリックしたときに発生します。  
  
 [!code-vb[Classic DataGrid.HitTest1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGrid.HitTest1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HitTest">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGrid.HitTestInfo HitTest (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.DataGrid/HitTestInfo HitTest(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.HitTest(System.Int32,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGrid+HitTestInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">座標の水平位置。</param>
        <param name="y">座標の垂直位置。</param>
        <summary>このメソッドに渡された x、y 座標を使用して、グリッド上でクリックされたポイントの行番号や列番号などの情報を取得します。</summary>
        <returns>グリッドのクリックされた部分に関する情報を格納する <see cref="T:System.Windows.Forms.DataGrid.HitTestInfo" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGrid.HitTestInfo>、と共に、<xref:System.Windows.Forms.DataGrid.HitTest%2A>のメソッド、<xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>制御、のどの部分を決定するために使用、<xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>コントロール、ユーザーがクリックしました。 <xref:System.Windows.Forms.DataGrid.HitTestInfo>行、列、およびクリックされたグリッドの一部が含まれています。 さらに、<xref:System.Windows.Forms.DataGrid.HitTestInfo.Type%2A>プロパティから返される、<xref:System.Windows.Forms.DataGrid.HitTestType>列挙します。  
  
 <xref:System.Windows.Forms.DataGrid.HitTest%2A>メソッドには、x および y 引数によって指定される、<xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>コントロールの<xref:System.Windows.Forms.Control.DragDrop>、 <xref:System.Windows.Forms.Control.DragEnter>、 <xref:System.Windows.Forms.Control.DragOver>、 <xref:System.Windows.Forms.Control.MouseDown>、 <xref:System.Windows.Forms.Control.MouseMove>、<xref:System.Windows.Forms.Control.MouseUp>と<xref:System.Windows.Forms.Control.MouseWheel>イベント。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Windows.Forms.DataGrid.HitTest%2A>グリッドで、ユーザーがクリックしたときに発生するイベントのメソッドです。  
  
 [!code-vb[Classic DataGrid.HitTest Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGrid.HitTest Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HorizScrollBar">
      <MemberSignature Language="C#" Value="protected System.Windows.Forms.ScrollBar HorizScrollBar { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ScrollBar HorizScrollBar" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGrid.HorizScrollBar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ScrollBar</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>グリッドの水平スクロール バーを取得します。</summary>
        <value>グリッドの <see cref="T:System.Windows.Forms.ScrollBar" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsExpanded">
      <MemberSignature Language="C#" Value="public bool IsExpanded (int rowNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsExpanded(int32 rowNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.IsExpanded(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowNumber" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rowNumber">該当する行の番号。</param>
        <summary>指定した行のノードを展開するか、折りたたむかを示す値を取得します。</summary>
        <returns>
          ノードを展開する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例では、グリッドの各行をテストし、展開されている行の行番号を出力します。  
  
 [!code-cpp[Classic DataGrid.IsExpanded Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataGrid.IsExpanded Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataGrid.IsExpanded Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataGrid.IsExpanded Example/CS/source.cs#1)]
 [!code-vb[Classic DataGrid.IsExpanded Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGrid.IsExpanded Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSelected">
      <MemberSignature Language="C#" Value="public bool IsSelected (int row);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsSelected(int32 row) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.IsSelected(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="row">指定した行の番号。</param>
        <summary>指定した行が選択されているかどうかを示す値を取得します。</summary>
        <returns>
          行が選択されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドを使用して、 <xref:System.Windows.Forms.DataGrid.Select%2A>、 <xref:System.Windows.Forms.DataGrid.UnSelect%2A>、および<xref:System.Windows.Forms.DataGrid.ResetSelection%2A>を特定の行の選択状態を操作するメソッド。  
  
   
  
## Examples  
 次のコード例では、このメンバーの使用方法を示します。  
  
 [!code-cpp[MyDataGridClass_ResetHeaderBackColor#5](~/samples/snippets/cpp/VS_Snippets_Winforms/MyDataGridClass_ResetHeaderBackColor/CPP/mydatagridclass_resetheaderbackcolor.cpp#5)]
 [!code-csharp[MyDataGridClass_ResetHeaderBackColor#5](~/samples/snippets/csharp/VS_Snippets_Winforms/MyDataGridClass_ResetHeaderBackColor/CS/mydatagridclass_resetheaderbackcolor.cs#5)]
 [!code-vb[MyDataGridClass_ResetHeaderBackColor#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MyDataGridClass_ResetHeaderBackColor/VB/mydatagridclass_resetheaderbackcolor.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[System.Windows.Forms.DataGridCell cell] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(valuetype System.Windows.Forms.DataGridCell)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGrid.Item(System.Windows.Forms.DataGridCell)" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cell" Type="System.Windows.Forms.DataGridCell" />
      </Parameters>
      <Docs>
        <param name="cell">グリッド内のセルを表す <see cref="T:System.Windows.Forms.DataGridCell" />。</param>
        <summary>指定した <see cref="T:System.Windows.Forms.DataGridCell" /> の値を取得または設定します。</summary>
        <value><see cref="T:System.Object" /> 型のセルの値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティを設定すると変更の位置、<xref:System.Data.DataView>指定された行にします。  
  
   
  
## Examples  
 設定および宣言することで、セルの値を取得する次のコード例、 <xref:System.Windows.Forms.DataGridCell> 、環境変数の設定、<xref:System.Windows.Forms.DataGridCell.RowNumber%2A>と<xref:System.Windows.Forms.DataGridCell.ColumnNumber%2A>、し、最初に変更すると、その値、特定のセルの値を返します。  
  
 [!code-cpp[Classic DataGrid.this1 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataGrid.this1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataGrid.this1 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataGrid.this1 Example/CS/source.cs#1)]
 [!code-vb[Classic DataGrid.this1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGrid.this1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[int rowIndex, int columnIndex] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32, int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGrid.Item(System.Int32,System.Int32)" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="columnIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rowIndex">値を格納している行の、0 から始まるインデックス番号。</param>
        <param name="columnIndex">値を格納している列の、0 から始まるインデックス番号。</param>
        <summary>指定した行および列にあるセルの値を取得または設定します。</summary>
        <value><see cref="T:System.Object" /> 型のセルの値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティを設定すると変更の位置、<xref:System.Data.DataView>指定された行にします。  
  
   
  
## Examples  
 次のコード例では、指定した行とインデックスにあるセルに含まれる値を出力します。  
  
 [!code-cpp[Classic DataGrid.this Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataGrid.this Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataGrid.this Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataGrid.this Example/CS/source.cs#1)]
 [!code-vb[Classic DataGrid.this Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGrid.this Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">取得または設定中に、<paramref name="rowIndex" />が範囲外です。  
  
 取得または設定中に、<paramref name="columnIndex" />が範囲外です。</exception>
      </Docs>
    </Member>
    <Member MemberName="LinkColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color LinkColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color LinkColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGrid.LinkColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>クリックすると子テーブルに移動できるテキストの色を取得または設定します。</summary>
        <value>クリックすると子テーブルに移動できるテキストの色を表す <see cref="T:System.Drawing.Color" />。 既定値は、<see cref="P:System.Drawing.SystemColors.HotTrack" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 いずれかをデザイナーを作成する場合にのみ通常このメソッドを使用する、 <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>、やコントロールを組み込む独自の作成、<xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LinkHoverColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color LinkHoverColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color LinkHoverColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGrid.LinkHoverColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このコントロールでは、このメンバーは無効です。</summary>
        <value>リンク テキストでホバーしたときの表示色。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListManager">
      <MemberSignature Language="C#" Value="protected System.Windows.Forms.CurrencyManager ListManager { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.CurrencyManager ListManager" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGrid.ListManager" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CurrencyManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.Windows.Forms.CurrencyManager" /> コントロールの <see cref="T:System.Windows.Forms.DataGrid" /> を取得します。</summary>
        <value>この <see cref="T:System.Windows.Forms.CurrencyManager" /> コントロールの <see cref="T:System.Windows.Forms.DataGrid" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.NavigateEventHandler Navigate;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.NavigateEventHandler Navigate" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGrid.Navigate" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.NavigateEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザーが新しいテーブルに移動すると発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Windows.Forms.DataGrid.Navigate>イベント テーブルに適切な幅などの個々 の列のプロパティをリセットします。  
  
   
  
## Examples  
 次のコード例では、このメンバーの使用方法を示します。  
  
 [!code-cpp[DataGrid_AllowNavigationChanged#2](~/samples/snippets/cpp/VS_Snippets_Winforms/DataGrid_AllowNavigationChanged/CPP/mydatagrid_allownavigationchanged.cpp#2)]
 [!code-csharp[DataGrid_AllowNavigationChanged#2](~/samples/snippets/csharp/VS_Snippets_Winforms/DataGrid_AllowNavigationChanged/CS/mydatagrid_allownavigationchanged.cs#2)]
 [!code-vb[DataGrid_AllowNavigationChanged#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DataGrid_AllowNavigationChanged/VB/mydatagrid_allownavigationchanged.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NavigateBack">
      <MemberSignature Language="C#" Value="public void NavigateBack ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void NavigateBack() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.NavigateBack" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>以前グリッドに表示されたテーブルに戻ります。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 親行グリッドがない場合は、変更は行われません。  
  
   
  
## Examples  
 次のコード例では、このメンバーの使用方法を示します。  
  
 [!code-vb[Classic DataGrid.NavigateBack Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGrid.NavigateBack Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NavigateTo">
      <MemberSignature Language="C#" Value="public void NavigateTo (int rowNumber, string relationName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void NavigateTo(int32 rowNumber, string relationName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.NavigateTo(System.Int32,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowNumber" Type="System.Int32" />
        <Parameter Name="relationName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="rowNumber">移動先の行の番号。</param>
        <param name="relationName">移動先の子のリレーションシップの名前。</param>
        <summary>行とリレーションシップ名で指定したテーブルに移動します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例は、リレーションシップの子の名前で指定されたテーブルで、指定した行番号に移動します。  
  
 [!code-csharp[Classic DataGrid.NavigateTo Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataGrid.NavigateTo Example/CS/source.cs#1)]
 [!code-vb[Classic DataGrid.NavigateTo Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGrid.NavigateTo Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAllowNavigationChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnAllowNavigationChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAllowNavigationChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.OnAllowNavigationChanged(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGrid.AllowNavigationChanged" /> イベントを発生させます。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBackButtonClicked">
      <MemberSignature Language="C#" Value="protected void OnBackButtonClicked (object sender, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnBackButtonClicked(object sender, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.OnBackButtonClicked(System.Object,System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">コントロールに関するデータを格納している <see cref="T:System.Object" />。</param>
        <param name="e">イベントに関するデータを格納する <see cref="T:System.EventArgs" />。</param>
        <summary>キャプションの [戻る] ボタンがクリックされるイベントを待機します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBackColorChanged">
      <MemberSignature Language="C#" Value="protected override void OnBackColorChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnBackColorChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.OnBackColorChanged(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.Control.BackColorChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)です。  
  
 <xref:System.Windows.Forms.DataGrid.OnBackColorChanged%2A>メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>派生クラスで <see cref="M:System.Windows.Forms.DataGrid.OnBackColorChanged(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.DataGrid.OnBackColorChanged(System.EventArgs)" /> メソッドを呼び出してください。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnBackgroundColorChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnBackgroundColorChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBackgroundColorChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.OnBackgroundColorChanged(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGrid.BackgroundColorChanged" /> イベントを発生させます。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBindingContextChanged">
      <MemberSignature Language="C#" Value="protected override void OnBindingContextChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnBindingContextChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.OnBindingContextChanged(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.Control.BindingContextChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)です。  
  
 <xref:System.Windows.Forms.DataGrid.OnBindingContextChanged%2A>メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>派生クラスで <see cref="M:System.Windows.Forms.DataGrid.OnBindingContextChanged(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.DataGrid.OnBindingContextChanged(System.EventArgs)" /> メソッドを呼び出してください。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnBorderStyleChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnBorderStyleChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBorderStyleChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.OnBorderStyleChanged(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGrid.BorderStyleChanged" /> イベントを発生させます。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCaptionVisibleChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnCaptionVisibleChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCaptionVisibleChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.OnCaptionVisibleChanged(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGrid.CaptionVisibleChanged" /> イベントを発生させます。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCurrentCellChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnCurrentCellChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCurrentCellChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.OnCurrentCellChanged(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGrid.CurrentCellChanged" /> イベントを発生させます。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDataSourceChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDataSourceChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDataSourceChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.OnDataSourceChanged(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGrid.DataSourceChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)です。  
  
 <xref:System.Windows.Forms.DataGrid.OnDataSourceChanged%2A>メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>派生クラスで <see cref="M:System.Windows.Forms.DataGrid.OnDataSourceChanged(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.DataGrid.OnDataSourceChanged(System.EventArgs)" /> メソッドを呼び出してください。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnEnter">
      <MemberSignature Language="C#" Value="protected override void OnEnter (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnEnter(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.OnEnter(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.Control.Enter" /> イベントを発生させます。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnFlatModeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnFlatModeChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnFlatModeChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.OnFlatModeChanged(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGrid.FlatModeChanged" /> イベントを発生させます。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnFontChanged">
      <MemberSignature Language="C#" Value="protected override void OnFontChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnFontChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.OnFontChanged(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.Control.FontChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)です。  
  
 <xref:System.Windows.Forms.DataGrid.OnFontChanged%2A>メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>派生クラスで <see cref="M:System.Windows.Forms.DataGrid.OnFontChanged(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.DataGrid.OnFontChanged(System.EventArgs)" /> メソッドを呼び出してください。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnForeColorChanged">
      <MemberSignature Language="C#" Value="protected override void OnForeColorChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnForeColorChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.OnForeColorChanged(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.Control.ForeColorChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)です。  
  
 <xref:System.Windows.Forms.DataGrid.OnForeColorChanged%2A>メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>派生クラスで <see cref="M:System.Windows.Forms.DataGrid.OnForeColorChanged(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.DataGrid.OnForeColorChanged(System.EventArgs)" /> メソッドを呼び出してください。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnHandleCreated">
      <MemberSignature Language="C#" Value="protected override void OnHandleCreated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnHandleCreated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.OnHandleCreated(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary><see cref="M:System.Windows.Forms.Control.CreateHandle" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)です。  
  
 <xref:System.Windows.Forms.DataGrid.OnHandleCreated%2A>メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>派生クラスで <see cref="M:System.Windows.Forms.DataGrid.OnHandleCreated(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.DataGrid.OnHandleCreated(System.EventArgs)" /> メソッドを呼び出してください。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnHandleDestroyed">
      <MemberSignature Language="C#" Value="protected override void OnHandleDestroyed (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnHandleDestroyed(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.OnHandleDestroyed(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary><see cref="M:System.Windows.Forms.Control.DestroyHandle" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)です。  
  
 <xref:System.Windows.Forms.DataGrid.OnHandleDestroyed%2A>メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>派生クラスで <see cref="M:System.Windows.Forms.DataGrid.OnHandleDestroyed(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.DataGrid.OnHandleDestroyed(System.EventArgs)" /> メソッドを呼び出してください。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnKeyDown (System.Windows.Forms.KeyEventArgs ke);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyDown(class System.Windows.Forms.KeyEventArgs ke) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.OnKeyDown(System.Windows.Forms.KeyEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ke" Type="System.Windows.Forms.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="ke"><see cref="T:System.Windows.Forms.KeyEventArgs" /> イベントに関するデータを提供する <see cref="M:System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)" />。</param>
        <summary><see cref="E:System.Windows.Forms.Control.KeyDown" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)です。  
  
 <xref:System.Windows.Forms.DataGrid.OnKeyDown%2A>メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>派生クラスで <see cref="M:System.Windows.Forms.DataGrid.OnKeyDown(System.Windows.Forms.KeyEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.DataGrid.OnKeyDown(System.Windows.Forms.KeyEventArgs)" /> メソッドを呼び出してください。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnKeyPress">
      <MemberSignature Language="C#" Value="protected override void OnKeyPress (System.Windows.Forms.KeyPressEventArgs kpe);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyPress(class System.Windows.Forms.KeyPressEventArgs kpe) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kpe" Type="System.Windows.Forms.KeyPressEventArgs" />
      </Parameters>
      <Docs>
        <param name="kpe"><see cref="T:System.Windows.Forms.KeyPressEventArgs" /> イベントに関するデータを格納する <see cref="M:System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" />。</param>
        <summary><see cref="E:System.Windows.Forms.Control.KeyPress" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)です。  
  
 <xref:System.Windows.Forms.DataGrid.OnKeyPress%2A>メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>派生クラスで <see cref="M:System.Windows.Forms.DataGrid.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.DataGrid.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" /> メソッドを呼び出してください。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnLayout">
      <MemberSignature Language="C#" Value="protected override void OnLayout (System.Windows.Forms.LayoutEventArgs levent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnLayout(class System.Windows.Forms.LayoutEventArgs levent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.OnLayout(System.Windows.Forms.LayoutEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="levent" Type="System.Windows.Forms.LayoutEventArgs" />
      </Parameters>
      <Docs>
        <param name="levent">イベント データを格納している <see cref="T:System.Windows.Forms.LayoutEventArgs" />。</param>
        <summary>コントロールを移動してスクロール バーを更新する <see cref="E:System.Windows.Forms.Control.Layout" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)です。  
  
 <xref:System.Windows.Forms.DataGrid.OnLayout%2A>メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>派生クラスで <see cref="M:System.Windows.Forms.DataGrid.OnLayout(System.Windows.Forms.LayoutEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.DataGrid.OnLayout(System.Windows.Forms.LayoutEventArgs)" /> メソッドを呼び出してください。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnLeave">
      <MemberSignature Language="C#" Value="protected override void OnLeave (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnLeave(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.OnLeave(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.Control.Leave" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)です。  
  
 <xref:System.Windows.Forms.DataGrid.OnLeave%2A>メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>派生クラスで <see cref="M:System.Windows.Forms.DataGrid.OnLeave(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.DataGrid.OnLeave(System.EventArgs)" /> メソッドを呼び出してください。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnMouseDown">
      <MemberSignature Language="C#" Value="protected override void OnMouseDown (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseDown(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.OnMouseDown(System.Windows.Forms.MouseEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.Windows.Forms.MouseEventArgs" /> イベントに関するデータを格納する <see cref="M:System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)" />。</param>
        <summary><see cref="E:System.Windows.Forms.Control.MouseDown" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 概要については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)です。  
  
   
  
## Examples  
 次のコード例では、このメンバーの使用方法を示します。  
  
 [!code-cpp[DataGrid.OnMouseDown#1](~/samples/snippets/cpp/VS_Snippets_Winforms/DataGrid.OnMouseDown/CPP/overridemousedown.cpp#1)]
 [!code-csharp[DataGrid.OnMouseDown#1](~/samples/snippets/csharp/VS_Snippets_Winforms/DataGrid.OnMouseDown/CS/overridemousedown.cs#1)]
 [!code-vb[DataGrid.OnMouseDown#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DataGrid.OnMouseDown/VB/overridemousedown.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>オーバーライドする場合<see cref="M:System.Windows.Forms.DataGrid.OnMouseDown(System.Windows.Forms.MouseEventArgs)" />派生クラスでは、基本クラスの呼び出しを必ず<see cref="M:System.Windows.Forms.DataGrid.OnMouseDown(System.Windows.Forms.MouseEventArgs)" />メソッドです。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeave">
      <MemberSignature Language="C#" Value="protected override void OnMouseLeave (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseLeave(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.OnMouseLeave(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.EventArgs" /> イベントに関するデータを格納する <see cref="M:System.Windows.Forms.Control.OnMouseLeave(System.EventArgs)" />。</param>
        <summary><see cref="E:System.Windows.Forms.Control.MouseLeave" /> イベントを作成します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 概要については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)です。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>オーバーライドする場合<see cref="M:System.Windows.Forms.DataGrid.OnMouseLeave(System.EventArgs)" />派生クラスでは、基本クラスの呼び出しを必ず<see cref="M:System.Windows.Forms.DataGrid.OnMouseLeave(System.EventArgs)" />メソッドです。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnMouseMove">
      <MemberSignature Language="C#" Value="protected override void OnMouseMove (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseMove(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.OnMouseMove(System.Windows.Forms.MouseEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.Windows.Forms.MouseEventArgs" /> イベントに関するデータを格納する <see cref="M:System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)" />。</param>
        <summary><see cref="E:System.Windows.Forms.Control.MouseMove" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 概要については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)です。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>オーバーライドする場合<see cref="M:System.Windows.Forms.DataGrid.OnMouseMove(System.Windows.Forms.MouseEventArgs)" />派生クラスでは、基本クラスの呼び出しを必ず<see cref="M:System.Windows.Forms.DataGrid.OnMouseMove(System.Windows.Forms.MouseEventArgs)" />メソッドです。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnMouseUp">
      <MemberSignature Language="C#" Value="protected override void OnMouseUp (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseUp(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.OnMouseUp(System.Windows.Forms.MouseEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.Windows.Forms.MouseEventArgs" /> イベントに関するデータを格納する <see cref="M:System.Windows.Forms.Control.OnMouseUp(System.Windows.Forms.MouseEventArgs)" />。</param>
        <summary><see cref="E:System.Windows.Forms.Control.MouseUp" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 概要については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)です。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>オーバーライドする場合<see cref="M:System.Windows.Forms.DataGrid.OnMouseUp(System.Windows.Forms.MouseEventArgs)" />派生クラスでは、基本クラスの呼び出しを必ず<see cref="M:System.Windows.Forms.DataGrid.OnMouseUp(System.Windows.Forms.MouseEventArgs)" />メソッドです。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnMouseWheel">
      <MemberSignature Language="C#" Value="protected override void OnMouseWheel (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseWheel(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.OnMouseWheel(System.Windows.Forms.MouseEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.Windows.Forms.MouseEventArgs" /> イベントに関するデータを格納する <see cref="M:System.Windows.Forms.Control.OnMouseUp(System.Windows.Forms.MouseEventArgs)" />。</param>
        <summary><see cref="E:System.Windows.Forms.Control.MouseWheel" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 概要については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)です。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>オーバーライドする場合<see cref="M:System.Windows.Forms.DataGrid.OnMouseWheel(System.Windows.Forms.MouseEventArgs)" />派生クラスでは、基本クラスの呼び出しを必ず<see cref="M:System.Windows.Forms.DataGrid.OnMouseWheel(System.Windows.Forms.MouseEventArgs)" />メソッドです。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnNavigate">
      <MemberSignature Language="C#" Value="protected void OnNavigate (System.Windows.Forms.NavigateEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnNavigate(class System.Windows.Forms.NavigateEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.OnNavigate(System.Windows.Forms.NavigateEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.NavigateEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.NavigateEventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGrid.Navigate" /> イベントが発生します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPaint">
      <MemberSignature Language="C#" Value="protected override void OnPaint (System.Windows.Forms.PaintEventArgs pe);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPaint(class System.Windows.Forms.PaintEventArgs pe) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.OnPaint(System.Windows.Forms.PaintEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pe" Type="System.Windows.Forms.PaintEventArgs" />
      </Parameters>
      <Docs>
        <param name="pe">このイベントに関するデータを格納する <see cref="T:System.Windows.Forms.PaintEventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.Control.Paint" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 概要については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)です。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>オーバーライドする場合<see cref="M:System.Windows.Forms.DataGrid.OnPaint(System.Windows.Forms.PaintEventArgs)" />派生クラスでは、基本クラスの呼び出しを必ず<see cref="M:System.Windows.Forms.DataGrid.OnPaint(System.Windows.Forms.PaintEventArgs)" />メソッドです。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnPaintBackground">
      <MemberSignature Language="C#" Value="protected override void OnPaintBackground (System.Windows.Forms.PaintEventArgs ebe);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPaintBackground(class System.Windows.Forms.PaintEventArgs ebe) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.OnPaintBackground(System.Windows.Forms.PaintEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ebe" Type="System.Windows.Forms.PaintEventArgs" />
      </Parameters>
      <Docs>
        <param name="ebe">描画するコントロールに関する情報を格納する <see cref="T:System.Windows.Forms.PaintEventArgs" />。</param>
        <summary><see cref="M:System.Windows.Forms.Control.OnPaintBackground(System.Windows.Forms.PaintEventArgs)" /> コントロールの背景を描画しないように、<see cref="T:System.Windows.Forms.DataGrid" /> をオーバーライドします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType> 、複雑なコントロールは、この上書きはアクションがない実装します。 そのため、このメソッドを呼び出す効果はありません。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnParentRowsLabelStyleChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnParentRowsLabelStyleChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnParentRowsLabelStyleChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.OnParentRowsLabelStyleChanged(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGrid.ParentRowsLabelStyleChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)です。  
  
 <xref:System.Windows.Forms.DataGrid.OnParentRowsLabelStyleChanged%2A>メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>派生クラスで <see cref="M:System.Windows.Forms.DataGrid.OnParentRowsLabelStyleChanged(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.DataGrid.OnParentRowsLabelStyleChanged(System.EventArgs)" /> メソッドを呼び出してください。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnParentRowsVisibleChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnParentRowsVisibleChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnParentRowsVisibleChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.OnParentRowsVisibleChanged(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGrid.ParentRowsVisibleChanged" /> イベントを発生させます。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnReadOnlyChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnReadOnlyChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnReadOnlyChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.OnReadOnlyChanged(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGrid.ReadOnlyChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)です。  
  
 <xref:System.Windows.Forms.DataGrid.OnReadOnlyChanged%2A>メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>派生クラスで <see cref="M:System.Windows.Forms.DataGrid.OnReadOnlyChanged(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.DataGrid.OnReadOnlyChanged(System.EventArgs)" /> メソッドを呼び出してください。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnResize">
      <MemberSignature Language="C#" Value="protected override void OnResize (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnResize(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.OnResize(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.Control.Resize" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 概要については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)です。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>オーバーライドする場合<see cref="M:System.Windows.Forms.DataGrid.OnResize(System.EventArgs)" />派生クラスでは、基本クラスの呼び出しを必ず<see cref="M:System.Windows.Forms.DataGrid.OnResize(System.EventArgs)" />メソッドです。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnRowHeaderClick">
      <MemberSignature Language="C#" Value="protected void OnRowHeaderClick (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnRowHeaderClick(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.OnRowHeaderClick(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGrid.RowHeaderClick" /> イベントを発生させます。</summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">必要があります、<see cref="T:System.Security.Permissions.UIPermission" />の安全なサブウィンドウこのプロパティを設定します。</permission>
      </Docs>
    </Member>
    <Member MemberName="OnScroll">
      <MemberSignature Language="C#" Value="protected void OnScroll (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnScroll(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.OnScroll(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGrid.Scroll" /> イベントが発生します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnShowParentDetailsButtonClicked">
      <MemberSignature Language="C#" Value="protected void OnShowParentDetailsButtonClicked (object sender, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnShowParentDetailsButtonClicked(object sender, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.OnShowParentDetailsButtonClicked(System.Object,System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">イベントのソース。</param>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGrid.ShowParentDetailsButtonClick" /> イベントを発生させます。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentRowsBackColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color ParentRowsBackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ParentRowsBackColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGrid.ParentRowsBackColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>親行の背景色を取得または設定します。</summary>
        <value>親行の色を表す <see cref="T:System.Drawing.Color" />。 既定値は <see cref="P:System.Drawing.SystemColors.Control" /> 色です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例のセット、<xref:System.Windows.Forms.DataGrid.ParentRowsBackColor%2A>新しい色をします。  
  
 [!code-vb[Classic DataGrid.ParentRowsBackColor Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGrid.ParentRowsBackColor Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentRowsForeColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color ParentRowsForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ParentRowsForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGrid.ParentRowsForeColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>親行の前景色を取得または設定します。</summary>
        <value>親行の前景色を表す <see cref="T:System.Drawing.Color" />。 既定値は <see cref="P:System.Drawing.SystemColors.WindowText" /> 色です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例のセット、<xref:System.Windows.Forms.DataGrid.ParentRowsForeColor%2A>新しい色をします。  
  
 [!code-vb[Classic DataGrid.ParentRowsForeColor Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGrid.ParentRowsForeColor Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentRowsLabelStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridParentRowsLabelStyle ParentRowsLabelStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataGridParentRowsLabelStyle ParentRowsLabelStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGrid.ParentRowsLabelStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridParentRowsLabelStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>親行ラベルの表示方法を取得または設定します。</summary>
        <value><see cref="T:System.Windows.Forms.DataGridParentRowsLabelStyle" /> 値の 1 つ。 既定値は、<see langword="Both" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例を順番に使用できる値、<xref:System.Windows.Forms.DataGrid.ParentRowsLabelStyle%2A>プロパティです。  
  
 [!code-vb[Classic DataGrid.ParentRowsLabelStyle Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGrid.ParentRowsLabelStyle Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">列挙子が無効でした。</exception>
      </Docs>
    </Member>
    <Member MemberName="ParentRowsLabelStyleChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ParentRowsLabelStyleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ParentRowsLabelStyleChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGrid.ParentRowsLabelStyleChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>親行のラベル スタイルが変更されると発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例では、このメンバーの使用方法を示します。  
  
 [!code-cpp[DataGrid_ParentRowsLabelStyleChanged#1](~/samples/snippets/cpp/VS_Snippets_Winforms/DataGrid_ParentRowsLabelStyleChanged/CPP/datagrid_parentrowslabelstylechanged.cpp#1)]
 [!code-csharp[DataGrid_ParentRowsLabelStyleChanged#1](~/samples/snippets/csharp/VS_Snippets_Winforms/DataGrid_ParentRowsLabelStyleChanged/CS/datagrid_parentrowslabelstylechanged.cs#1)]
 [!code-vb[DataGrid_ParentRowsLabelStyleChanged#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DataGrid_ParentRowsLabelStyleChanged/VB/datagrid_parentrowslabelstylechanged.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentRowsVisible">
      <MemberSignature Language="C#" Value="public bool ParentRowsVisible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ParentRowsVisible" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGrid.ParentRowsVisible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>テーブルの親行を表示するかどうかを示す値を取得または設定します。</summary>
        <value>
          親行を表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例を切り替えます、<xref:System.Windows.Forms.DataGrid.ParentRowsVisible%2A>プロパティです。  
  
 [!code-vb[Classic DataGrid.ParentRowsVisible Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGrid.ParentRowsVisible Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentRowsVisibleChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ParentRowsVisibleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ParentRowsVisibleChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGrid.ParentRowsVisibleChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Forms.DataGrid.ParentRowsVisible" /> プロパティの値が変化すると発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例では、このメンバーの使用方法を示します。  
  
 [!code-cpp[DataGrid_ParentRowsLabelStyleChanged#2](~/samples/snippets/cpp/VS_Snippets_Winforms/DataGrid_ParentRowsLabelStyleChanged/CPP/datagrid_parentrowslabelstylechanged.cpp#2)]
 [!code-csharp[DataGrid_ParentRowsLabelStyleChanged#2](~/samples/snippets/csharp/VS_Snippets_Winforms/DataGrid_ParentRowsLabelStyleChanged/CS/datagrid_parentrowslabelstylechanged.cs#2)]
 [!code-vb[DataGrid_ParentRowsLabelStyleChanged#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DataGrid_ParentRowsLabelStyleChanged/VB/datagrid_parentrowslabelstylechanged.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreferredColumnWidth">
      <MemberSignature Language="C#" Value="public int PreferredColumnWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PreferredColumnWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGrid.PreferredColumnWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(75)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.DataGridPreferredColumnWidthTypeConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>グリッドの既定の列幅 (ピクセル単位) を取得または設定します。</summary>
        <value>グリッドの列の既定の幅 (ピクセル単位)。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 リセットする前に、このプロパティを設定、<xref:System.Windows.Forms.DataGrid.DataSource%2A>と<xref:System.Windows.Forms.DataGrid.DataMember%2A>プロパティ (いずれかとは別に、または、<xref:System.Windows.Forms.DataGrid.SetDataBinding%2A>メソッド)、またはプロパティには影響はありません。  
  
 プロパティは、0 より小さい値に設定できません。  
  
   
  
## Examples  
 次のコード例では、メソッドに渡された値を既定の列の幅を設定します。  
  
 [!code-vb[Classic DataGrid.PreferredColumnWidth Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGrid.PreferredColumnWidth Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">プロパティの値が 0 未満です。</exception>
      </Docs>
    </Member>
    <Member MemberName="PreferredRowHeight">
      <MemberSignature Language="C#" Value="public int PreferredRowHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PreferredRowHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGrid.PreferredRowHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.DataGrid" /> コントロールの行の適切な高さを取得または設定します。</summary>
        <value>行の高さ。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 リセットする前に、このプロパティを設定、<xref:System.Windows.Forms.DataGrid.DataSource%2A>と<xref:System.Windows.Forms.DataGrid.DataMember%2A>プロパティ (いずれかとは別に、または、<xref:System.Windows.Forms.DataGrid.SetDataBinding%2A>メソッド)、またはプロパティには影響はありません。  
  
   
  
## Examples  
 次のコード例は、まず新しいフォントを設定し、設定、<xref:System.Windows.Forms.DataGrid.PreferredRowHeight%2A>新しいフォントの高さと同じにします。  
  
 [!code-cpp[Classic DataGrid.PreferredRowHeight Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataGrid.PreferredRowHeight Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataGrid.PreferredRowHeight Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataGrid.PreferredRowHeight Example/CS/source.cs#1)]
 [!code-vb[Classic DataGrid.PreferredRowHeight Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGrid.PreferredRowHeight Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessDialogKey">
      <MemberSignature Language="C#" Value="protected override bool ProcessDialogKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ProcessDialogKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.ProcessDialogKey(System.Windows.Forms.Keys)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">押されたキーに関するデータを格納する <see cref="T:System.Windows.Forms.Keys" />。</param>
        <summary>キーを処理する必要があるかどうかを示す値を取得または設定します。</summary>
        <returns>
          キーを処理する必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 メソッドのオーバーライド、<xref:System.Windows.Forms.Control.ProcessDialogKey%2A>グリッドのキーボード ナビゲーションを実装するメソッド。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessGridKey">
      <MemberSignature Language="C#" Value="protected bool ProcessGridKey (System.Windows.Forms.KeyEventArgs ke);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool ProcessGridKey(class System.Windows.Forms.KeyEventArgs ke) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.ProcessGridKey(System.Windows.Forms.KeyEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ke" Type="System.Windows.Forms.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="ke">キーの上下のイベントに関するデータを格納する <see cref="T:System.Windows.Forms.KeyEventArgs" />。</param>
        <summary>グリッドを移動するためのキーを処理します。</summary>
        <returns>
          キーが処理された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessKeyPreview">
      <MemberSignature Language="C#" Value="protected override bool ProcessKeyPreview (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ProcessKeyPreview(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.ProcessKeyPreview(System.Windows.Forms.Message@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m">イベントに関するデータを格納する <see cref="T:System.Windows.Forms.Message" />。 パラメーターは参照渡しです。</param>
        <summary>キーボードによるメッセージをプレビューし、キーが使用されたかどうかを示す値を返します。</summary>
        <returns>
          キーが使用された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 子コントロールがキーボード メッセージを受信すると、子コントロールがこのメソッドが呼び出されます。 子コントロールは、メッセージのキーボード イベントを生成する前に、このメソッドを呼び出します。 このメソッドが戻る場合`true`、子コントロールが使用されたと見なされ、キーボード イベントを生成しません。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessTabKey">
      <MemberSignature Language="C#" Value="protected bool ProcessTabKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool ProcessTabKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.ProcessTabKey(System.Windows.Forms.Keys)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">押されたキーに関するデータを格納する <see cref="T:System.Windows.Forms.Keys" />。</param>
        <summary>Tab キーを処理する必要があるかどうかを示す値を取得します。</summary>
        <returns>
          Tab キーを処理する必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">UI を表示します。 関連する列挙値:<see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />です。</permission>
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public bool ReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGrid.ReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>グリッドが読み取り専用モードかどうかを示す値を取得または設定します。</summary>
        <value>
          グリッドが読み取り専用モードの場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 読み取り専用モードで、グリッドがスクロール可能、ノードを展開または折りたたまれている場合などです。 ただし、追加、編集、または削除は行われません。  
  
 <xref:System.Windows.Forms.DataGridColumnStyle>も、<xref:System.Windows.Forms.DataGridColumnStyle.ReadOnly%2A>データが列、列単位で、編集されていることを防ぐために true に設定できるプロパティです。  
  
 <xref:System.Windows.Forms.DataGrid.ReadOnly%2A>ユーザーがデータで直接編集することを禁止する場合は true に設定することができます、<xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>です。 ユーザーは、テーブル内のすべての列を参照してください。 特定のフィールドを編集することを許可するなど、を通してのみ<xref:System.Windows.Forms.TextBox>さまざまなフォーム上のコントロールです。  
  
   
  
## Examples  
 次のコード例を切り替えます、<xref:System.Windows.Forms.DataGrid.ReadOnly%2A>プロパティです。  
  
 [!code-vb[Classic DataGrid.ReadOnly Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGrid.ReadOnly Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadOnlyChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ReadOnlyChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ReadOnlyChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGrid.ReadOnlyChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Forms.DataGrid.ReadOnly" /> プロパティの値が変化すると発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例では、このメンバーの使用方法を示します。  
  
 [!code-cpp[MyDataGridClass_FlatMode_ReadOnly#2](~/samples/snippets/cpp/VS_Snippets_Winforms/MyDataGridClass_FlatMode_ReadOnly/CPP/mydatagridclass_flatmode_readonly.cpp#2)]
 [!code-csharp[MyDataGridClass_FlatMode_ReadOnly#2](~/samples/snippets/csharp/VS_Snippets_Winforms/MyDataGridClass_FlatMode_ReadOnly/CS/mydatagridclass_flatmode_readonly.cs#2)]
 [!code-vb[MyDataGridClass_FlatMode_ReadOnly#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MyDataGridClass_FlatMode_ReadOnly/VB/mydatagridclass_flatmode_readonly.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetAlternatingBackColor">
      <MemberSignature Language="C#" Value="public void ResetAlternatingBackColor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetAlternatingBackColor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.ResetAlternatingBackColor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DataGrid.AlternatingBackColor" /> プロパティを既定の色にリセットします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 いずれかをデザイナーを作成する場合は通常このメソッドを使用する、<xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>やコントロールを組み込む独自の作成、<xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>です。 使用することができます、<xref:System.Windows.Forms.DataGrid.ShouldSerializeAlternatingBackColor%2A>プロパティの値が既定値から変更されたかどうかを調べます。  
  
   
  
## Examples  
 次のコード例では、このメンバーの使用方法を示します。  
  
 [!code-cpp[DataGrid_ColorMembers#2](~/samples/snippets/cpp/VS_Snippets_Winforms/DataGrid_ColorMembers/CPP/datagrid_10.cpp#2)]
 [!code-csharp[DataGrid_ColorMembers#2](~/samples/snippets/csharp/VS_Snippets_Winforms/DataGrid_ColorMembers/CS/datagrid_10.cs#2)]
 [!code-vb[DataGrid_ColorMembers#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DataGrid_ColorMembers/VB/datagrid_10.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetBackColor">
      <MemberSignature Language="C#" Value="public override void ResetBackColor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ResetBackColor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.ResetBackColor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DataGrid.BackColor" /> プロパティを既定値にリセットします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 いずれかをデザイナーを作成する場合は通常このメソッドを使用する、<xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>やコントロールを組み込む独自の作成、<xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>です。  
  
   
  
## Examples  
 次のコード例では、このメンバーの使用方法を示します。  
  
 [!code-cpp[DataGrid_ColorMembers#2](~/samples/snippets/cpp/VS_Snippets_Winforms/DataGrid_ColorMembers/CPP/datagrid_10.cpp#2)]
 [!code-csharp[DataGrid_ColorMembers#2](~/samples/snippets/csharp/VS_Snippets_Winforms/DataGrid_ColorMembers/CS/datagrid_10.cs#2)]
 [!code-vb[DataGrid_ColorMembers#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DataGrid_ColorMembers/VB/datagrid_10.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetForeColor">
      <MemberSignature Language="C#" Value="public override void ResetForeColor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ResetForeColor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.ResetForeColor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DataGrid.ForeColor" /> プロパティを既定値にリセットします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 いずれかをデザイナーを作成する場合は通常このメソッドを使用する、<xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>やコントロールを組み込む独自の作成、<xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>です。  
  
   
  
## Examples  
 次のコード例では、このメンバーの使用方法を示します。  
  
 [!code-cpp[DataGrid_ColorMembers#2](~/samples/snippets/cpp/VS_Snippets_Winforms/DataGrid_ColorMembers/CPP/datagrid_10.cpp#2)]
 [!code-csharp[DataGrid_ColorMembers#2](~/samples/snippets/csharp/VS_Snippets_Winforms/DataGrid_ColorMembers/CS/datagrid_10.cs#2)]
 [!code-vb[DataGrid_ColorMembers#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DataGrid_ColorMembers/VB/datagrid_10.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetGridLineColor">
      <MemberSignature Language="C#" Value="public void ResetGridLineColor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetGridLineColor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.ResetGridLineColor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DataGrid.GridLineColor" /> プロパティを既定値にリセットします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 いずれかをデザイナーを作成する場合は通常このメソッドを使用する、<xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>やコントロールを組み込む独自の作成、<xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>です。 使用することができます、<xref:System.Windows.Forms.DataGrid.ShouldSerializeGridLineColor%2A>プロパティの値が既定値から変更されたかどうかを調べます。  
  
   
  
## Examples  
 次のコード例では、このメンバーの使用方法を示します。  
  
 [!code-cpp[DataGrid_ColorMembers#2](~/samples/snippets/cpp/VS_Snippets_Winforms/DataGrid_ColorMembers/CPP/datagrid_10.cpp#2)]
 [!code-csharp[DataGrid_ColorMembers#2](~/samples/snippets/csharp/VS_Snippets_Winforms/DataGrid_ColorMembers/CS/datagrid_10.cs#2)]
 [!code-vb[DataGrid_ColorMembers#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DataGrid_ColorMembers/VB/datagrid_10.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetHeaderBackColor">
      <MemberSignature Language="C#" Value="public void ResetHeaderBackColor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetHeaderBackColor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.ResetHeaderBackColor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DataGrid.HeaderBackColor" /> プロパティを既定値にリセットします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 いずれかをデザイナーを作成する場合は通常このメソッドを使用する、<xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>やコントロールを組み込む独自の作成、<xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>です。 使用することができます、<xref:System.Windows.Forms.DataGrid.ShouldSerializeHeaderBackColor%2A>プロパティの値が既定値から変更されたかどうかを調べます。  
  
   
  
## Examples  
 次のコード例では、このメンバーの使用方法を示します。  
  
 [!code-cpp[MyDataGridClass_ResetHeaderBackColor#1](~/samples/snippets/cpp/VS_Snippets_Winforms/MyDataGridClass_ResetHeaderBackColor/CPP/mydatagridclass_resetheaderbackcolor.cpp#1)]
 [!code-csharp[MyDataGridClass_ResetHeaderBackColor#1](~/samples/snippets/csharp/VS_Snippets_Winforms/MyDataGridClass_ResetHeaderBackColor/CS/mydatagridclass_resetheaderbackcolor.cs#1)]
 [!code-vb[MyDataGridClass_ResetHeaderBackColor#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MyDataGridClass_ResetHeaderBackColor/VB/mydatagridclass_resetheaderbackcolor.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetHeaderFont">
      <MemberSignature Language="C#" Value="public void ResetHeaderFont ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetHeaderFont() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.ResetHeaderFont" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DataGrid.HeaderFont" /> プロパティを既定値にリセットします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 いずれかをデザイナーを作成する場合は通常このメソッドを使用する、<xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>やコントロールを組み込む独自の作成、<xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>です。 使用することができます、<xref:System.Windows.Forms.DataGrid.ShouldSerializeHeaderFont%2A>プロパティの値が既定値から変更されたかどうかを調べます。  
  
   
  
## Examples  
 次のコード例では、このメンバーの使用方法を示します。  
  
 [!code-cpp[MyDataGridClass_ResetHeaderBackColor#3](~/samples/snippets/cpp/VS_Snippets_Winforms/MyDataGridClass_ResetHeaderBackColor/CPP/mydatagridclass_resetheaderbackcolor.cpp#3)]
 [!code-csharp[MyDataGridClass_ResetHeaderBackColor#3](~/samples/snippets/csharp/VS_Snippets_Winforms/MyDataGridClass_ResetHeaderBackColor/CS/mydatagridclass_resetheaderbackcolor.cs#3)]
 [!code-vb[MyDataGridClass_ResetHeaderBackColor#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MyDataGridClass_ResetHeaderBackColor/VB/mydatagridclass_resetheaderbackcolor.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetHeaderForeColor">
      <MemberSignature Language="C#" Value="public void ResetHeaderForeColor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetHeaderForeColor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.ResetHeaderForeColor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DataGrid.HeaderForeColor" /> プロパティを既定値にリセットします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 いずれかをデザイナーを作成する場合は通常このメソッドを使用する、<xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>やコントロールを組み込む独自の作成、<xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>です。 使用することができます、<xref:System.Windows.Forms.DataGrid.ShouldSerializeHeaderForeColor%2A>プロパティの値が既定値から変更されたかどうかを調べます。  
  
   
  
## Examples  
 次のコード例では、このメンバーの使用方法を示します。  
  
 [!code-cpp[MyDataGridClass_ResetHeaderBackColor#2](~/samples/snippets/cpp/VS_Snippets_Winforms/MyDataGridClass_ResetHeaderBackColor/CPP/mydatagridclass_resetheaderbackcolor.cpp#2)]
 [!code-csharp[MyDataGridClass_ResetHeaderBackColor#2](~/samples/snippets/csharp/VS_Snippets_Winforms/MyDataGridClass_ResetHeaderBackColor/CS/mydatagridclass_resetheaderbackcolor.cs#2)]
 [!code-vb[MyDataGridClass_ResetHeaderBackColor#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MyDataGridClass_ResetHeaderBackColor/VB/mydatagridclass_resetheaderbackcolor.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetLinkColor">
      <MemberSignature Language="C#" Value="public void ResetLinkColor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetLinkColor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.ResetLinkColor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DataGrid.LinkColor" /> プロパティを既定値にリセットします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 いずれかをデザイナーを作成する場合は通常このメソッドを使用する、<xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>やコントロールを組み込む独自の作成、<xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>です。  
  
   
  
## Examples  
 次のコード例では、このメンバーの使用方法を示します。  
  
 [!code-cpp[DataGrid_ColorMembers#2](~/samples/snippets/cpp/VS_Snippets_Winforms/DataGrid_ColorMembers/CPP/datagrid_10.cpp#2)]
 [!code-csharp[DataGrid_ColorMembers#2](~/samples/snippets/csharp/VS_Snippets_Winforms/DataGrid_ColorMembers/CS/datagrid_10.cs#2)]
 [!code-vb[DataGrid_ColorMembers#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DataGrid_ColorMembers/VB/datagrid_10.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetLinkHoverColor">
      <MemberSignature Language="C#" Value="public void ResetLinkHoverColor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetLinkHoverColor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.ResetLinkHoverColor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DataGrid.LinkHoverColor" /> プロパティを既定値にリセットします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 いずれかをデザイナーを作成する場合は通常このメソッドを使用する、<xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>やコントロールを組み込む独自の作成、<xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>です。 使用することができます、<xref:System.Windows.Forms.DataGrid.ShouldSerializeLinkHoverColor%2A>プロパティの値が既定値から変更されたかどうかを調べます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetSelection">
      <MemberSignature Language="C#" Value="protected void ResetSelection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ResetSelection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.ResetSelection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>選択されているすべての行についての選択項目をオフにします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドを使用して、 <xref:System.Windows.Forms.DataGrid.IsSelected%2A>、 <xref:System.Windows.Forms.DataGrid.Select%2A>、および<xref:System.Windows.Forms.DataGrid.UnSelect%2A>を特定の行の選択状態を操作するメソッド。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetSelectionBackColor">
      <MemberSignature Language="C#" Value="public void ResetSelectionBackColor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetSelectionBackColor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.ResetSelectionBackColor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DataGrid.SelectionBackColor" /> プロパティを既定値にリセットします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 いずれかをデザイナーを作成する場合は通常このメソッドを使用する、<xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>やコントロールを組み込む独自の作成、<xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>です。 使用することができます、<xref:System.Windows.Forms.DataGrid.ShouldSerializeSelectionBackColor%2A>プロパティの値が既定値から変更されたかどうかを調べます。  
  
   
  
## Examples  
 次のコード例では、このメンバーの使用方法を示します。  
  
 [!code-cpp[DataGrid_ColorMembers#2](~/samples/snippets/cpp/VS_Snippets_Winforms/DataGrid_ColorMembers/CPP/datagrid_10.cpp#2)]
 [!code-csharp[DataGrid_ColorMembers#2](~/samples/snippets/csharp/VS_Snippets_Winforms/DataGrid_ColorMembers/CS/datagrid_10.cs#2)]
 [!code-vb[DataGrid_ColorMembers#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DataGrid_ColorMembers/VB/datagrid_10.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetSelectionForeColor">
      <MemberSignature Language="C#" Value="public void ResetSelectionForeColor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetSelectionForeColor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.ResetSelectionForeColor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DataGrid.SelectionForeColor" /> プロパティを既定値にリセットします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 いずれかをデザイナーを作成する場合は通常このメソッドを使用する、<xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>やコントロールを組み込む独自の作成、<xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>です。 使用することができます、<xref:System.Windows.Forms.DataGrid.ShouldSerializeSelectionForeColor%2A>プロパティの値が既定値から変更されたかどうかを調べます。  
  
   
  
## Examples  
 次のコード例では、このメンバーの使用方法を示します。  
  
 [!code-cpp[DataGrid_ColorMembers#2](~/samples/snippets/cpp/VS_Snippets_Winforms/DataGrid_ColorMembers/CPP/datagrid_10.cpp#2)]
 [!code-csharp[DataGrid_ColorMembers#2](~/samples/snippets/csharp/VS_Snippets_Winforms/DataGrid_ColorMembers/CS/datagrid_10.cs#2)]
 [!code-vb[DataGrid_ColorMembers#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DataGrid_ColorMembers/VB/datagrid_10.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RowHeaderClick">
      <MemberSignature Language="C#" Value="protected event EventHandler RowHeaderClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler RowHeaderClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGrid.RowHeaderClick" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>行ヘッダーがクリックされると発生します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RowHeadersVisible">
      <MemberSignature Language="C#" Value="public bool RowHeadersVisible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RowHeadersVisible" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGrid.RowHeadersVisible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>行ヘッダーを表示するかどうかを指定する値を取得または設定します。</summary>
        <value>
          行ヘッダーを表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RowHeaderWidth">
      <MemberSignature Language="C#" Value="public int RowHeaderWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RowHeaderWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGrid.RowHeaderWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(35)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>行ヘッダーの幅を取得または設定します。</summary>
        <value><see cref="T:System.Windows.Forms.DataGrid" /> の行ヘッダーの幅。 既定値は 35 です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例では、このメンバーの使用方法を示します。  
  
 [!code-cpp[MyDataGridClass_ResetHeaderBackColor#6](~/samples/snippets/cpp/VS_Snippets_Winforms/MyDataGridClass_ResetHeaderBackColor/CPP/mydatagridclass_resetheaderbackcolor.cpp#6)]
 [!code-csharp[MyDataGridClass_ResetHeaderBackColor#6](~/samples/snippets/csharp/VS_Snippets_Winforms/MyDataGridClass_ResetHeaderBackColor/CS/mydatagridclass_resetheaderbackcolor.cs#6)]
 [!code-vb[MyDataGridClass_ResetHeaderBackColor#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MyDataGridClass_ResetHeaderBackColor/VB/mydatagridclass_resetheaderbackcolor.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scroll">
      <MemberSignature Language="C#" Value="public event EventHandler Scroll;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Scroll" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGrid.Scroll" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザーが <see cref="T:System.Windows.Forms.DataGrid" /> コントロールをスクロールすると発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例では、このメンバーの使用方法を示します。  
  
 [!code-cpp[DataGrid_CaptionVisibleChanged#3](~/samples/snippets/cpp/VS_Snippets_Winforms/DataGrid_CaptionVisibleChanged/CPP/mydatagrid_captionvisiblechanged.cpp#3)]
 [!code-csharp[DataGrid_CaptionVisibleChanged#3](~/samples/snippets/csharp/VS_Snippets_Winforms/DataGrid_CaptionVisibleChanged/CS/mydatagrid_captionvisiblechanged.cs#3)]
 [!code-vb[DataGrid_CaptionVisibleChanged#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DataGrid_CaptionVisibleChanged/VB/mydatagrid_captionvisiblechanged.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public void Select (int row);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Select(int32 row) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.Select(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="row">選択する行のインデックス。</param>
        <summary>指定した行を選択します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドを使用して、 <xref:System.Windows.Forms.DataGrid.IsSelected%2A>、 <xref:System.Windows.Forms.DataGrid.UnSelect%2A>、および<xref:System.Windows.Forms.DataGrid.ResetSelection%2A>を特定の行の選択状態を操作するメソッド。  
  
   
  
## Examples  
 次のコード例では、このメンバーの使用方法を示します。  
  
 [!code-cpp[MyDataGridClass_ResetHeaderBackColor#4](~/samples/snippets/cpp/VS_Snippets_Winforms/MyDataGridClass_ResetHeaderBackColor/CPP/mydatagridclass_resetheaderbackcolor.cpp#4)]
 [!code-csharp[MyDataGridClass_ResetHeaderBackColor#4](~/samples/snippets/csharp/VS_Snippets_Winforms/MyDataGridClass_ResetHeaderBackColor/CS/mydatagridclass_resetheaderbackcolor.cs#4)]
 [!code-vb[MyDataGridClass_ResetHeaderBackColor#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MyDataGridClass_ResetHeaderBackColor/VB/mydatagridclass_resetheaderbackcolor.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionBackColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color SelectionBackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color SelectionBackColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGrid.SelectionBackColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>選択された行の背景色を取得または設定します。</summary>
        <value>選択された行の背景色を表す <see cref="T:System.Drawing.Color" />。 既定値は <see cref="P:System.Drawing.SystemBrushes.ActiveCaption" /> 色です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 いずれかをデザイナーを作成する場合は通常このメソッドを使用する、<xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>やコントロールを組み込む独自の作成、<xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>です。  
  
   
  
## Examples  
 次のコード例では、このメンバーの使用方法を示します。  
  
 [!code-cpp[DataGrid_ColorMembers#2](~/samples/snippets/cpp/VS_Snippets_Winforms/DataGrid_ColorMembers/CPP/datagrid_10.cpp#2)]
 [!code-csharp[DataGrid_ColorMembers#2](~/samples/snippets/csharp/VS_Snippets_Winforms/DataGrid_ColorMembers/CS/datagrid_10.cs#2)]
 [!code-vb[DataGrid_ColorMembers#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DataGrid_ColorMembers/VB/datagrid_10.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionForeColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color SelectionForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color SelectionForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGrid.SelectionForeColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>選択された行の前景色を取得または設定します。</summary>
        <value>選択された行の前景色を表す <see cref="T:System.Drawing.Color" />。 既定値は <see cref="P:System.Drawing.SystemBrushes.ActiveCaptionText" /> 色です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例では、このメンバーの使用方法を示します。  
  
 [!code-cpp[DataGrid_ColorMembers#2](~/samples/snippets/cpp/VS_Snippets_Winforms/DataGrid_ColorMembers/CPP/datagrid_10.cpp#2)]
 [!code-csharp[DataGrid_ColorMembers#2](~/samples/snippets/csharp/VS_Snippets_Winforms/DataGrid_ColorMembers/CS/datagrid_10.cs#2)]
 [!code-vb[DataGrid_ColorMembers#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DataGrid_ColorMembers/VB/datagrid_10.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDataBinding">
      <MemberSignature Language="C#" Value="public void SetDataBinding (object dataSource, string dataMember);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetDataBinding(object dataSource, string dataMember) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.SetDataBinding(System.Object,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Object" />
        <Parameter Name="dataMember" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataSource"><see cref="T:System.Windows.Forms.DataGrid" /> コントロールのデータ ソース。</param>
        <param name="dataMember"><see cref="P:System.Windows.Forms.DataGrid.DataMember" /> プロパティによって返されたオブジェクト内で、バインド先のテーブルを指定する <see cref="P:System.Windows.Forms.DataGrid.DataSource" /> 文字列。</param>
        <summary>実行時に <see cref="P:System.Windows.Forms.DataGrid.DataSource" /> プロパティと <see cref="P:System.Windows.Forms.DataGrid.DataMember" /> プロパティを設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用する必要があります、<xref:System.Windows.Forms.DataGrid.SetDataBinding%2A>実行時にリセットする方法、<xref:System.Windows.Forms.DataGrid.DataSource%2A>プロパティです。  
  
 参照してください、<xref:System.Windows.Forms.DataGrid.DataSource%2A>プロパティの詳細については、有効なデータ ソースの設定をします。  
  
 データを編集することができますを使用して新しい行を追加することを防止するグリッドを作成することができます、<xref:System.Data.DataView>設定とデータ ソースとして、<xref:System.Data.DataView.AllowNew%2A>プロパティを`false`です。 ときに、<xref:System.Windows.Forms.DataGrid.DataSource%2A>は、<xref:System.Data.DataView>または<xref:System.Data.DataTable>、設定、<xref:System.Windows.Forms.DataGrid.DataMember%2A>に空の文字列 ("") です。  
  
   
  
## Examples  
 次のコード例のセット、<xref:System.Windows.Forms.DataGrid.DataSource%2A>と<xref:System.Windows.Forms.DataGrid.DataMember%2A>を<xref:System.Data.DataSet>、および<xref:System.Data.DataTable>で、 <xref:System.Data.DataSet>、それぞれします。  
  
 [!code-cpp[Classic DataGrid.SetDataBinding Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataGrid.SetDataBinding Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataGrid.SetDataBinding Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataGrid.SetDataBinding Example/CS/source.cs#1)]
 [!code-vb[Classic DataGrid.SetDataBinding Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGrid.SetDataBinding Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">1 つ以上の引数が有効ではありません。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="dataSource" /> 引数が <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeAlternatingBackColor">
      <MemberSignature Language="C#" Value="protected virtual bool ShouldSerializeAlternatingBackColor ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool ShouldSerializeAlternatingBackColor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.ShouldSerializeAlternatingBackColor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DataGrid.AlternatingBackColor" /> プロパティを永続化する必要があるかどうかを示します。</summary>
        <returns>
          プロパティの値が既定値から変更されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 いずれかをデザイナーを作成する場合は通常このメソッドを使用する、<xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>やコントロールを組み込む独自の作成、<xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeBackgroundColor">
      <MemberSignature Language="C#" Value="protected virtual bool ShouldSerializeBackgroundColor ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool ShouldSerializeBackgroundColor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.ShouldSerializeBackgroundColor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DataGrid.BackgroundColor" /> プロパティを永続化する必要があるかどうかを示します。</summary>
        <returns>
          プロパティの値が既定値から変更されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 いずれかをデザイナーを作成する場合は通常このメソッドを使用する、<xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>やコントロールを組み込む独自の作成、<xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeCaptionBackColor">
      <MemberSignature Language="C#" Value="protected virtual bool ShouldSerializeCaptionBackColor ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool ShouldSerializeCaptionBackColor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.ShouldSerializeCaptionBackColor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DataGrid.CaptionBackColor" /> プロパティを永続化する必要があるかどうかを示す値を取得します。</summary>
        <returns>
          プロパティの値が既定値から変更されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 いずれかをデザイナーを作成する場合にのみ通常このメソッドを使用する、 <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>、やコントロールを組み込む独自の作成、<xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeCaptionForeColor">
      <MemberSignature Language="C#" Value="protected virtual bool ShouldSerializeCaptionForeColor ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool ShouldSerializeCaptionForeColor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.ShouldSerializeCaptionForeColor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DataGrid.CaptionForeColor" /> プロパティを永続化する必要があるかどうかを示す値を取得します。</summary>
        <returns>
          プロパティの値が既定値から変更されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 いずれかをデザイナーを作成する場合にのみ通常このメソッドを使用する、 <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>、やコントロールを組み込む独自の作成、<xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeGridLineColor">
      <MemberSignature Language="C#" Value="protected virtual bool ShouldSerializeGridLineColor ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool ShouldSerializeGridLineColor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.ShouldSerializeGridLineColor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DataGrid.GridLineColor" /> プロパティを永続化する必要があるかどうかを示します。</summary>
        <returns>
          プロパティの値が既定値から変更されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 いずれかをデザイナーを作成する場合は通常このメソッドを使用する、<xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>やコントロールを組み込む独自の作成、<xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeHeaderBackColor">
      <MemberSignature Language="C#" Value="protected virtual bool ShouldSerializeHeaderBackColor ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool ShouldSerializeHeaderBackColor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.ShouldSerializeHeaderBackColor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DataGrid.HeaderBackColor" /> プロパティを永続化する必要があるかどうかを示します。</summary>
        <returns>
          プロパティの値が既定値から変更されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 いずれかをデザイナーを作成する場合は通常このメソッドを使用する、<xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>やコントロールを組み込む独自の作成、<xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeHeaderFont">
      <MemberSignature Language="C#" Value="protected bool ShouldSerializeHeaderFont ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool ShouldSerializeHeaderFont() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.ShouldSerializeHeaderFont" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DataGrid.HeaderFont" /> プロパティを永続化する必要があるかどうかを示します。</summary>
        <returns>
          プロパティの値が既定値から変更されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 いずれかをデザイナーを作成する場合は通常このメソッドを使用する、<xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>やコントロールを組み込む独自の作成、<xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeHeaderForeColor">
      <MemberSignature Language="C#" Value="protected virtual bool ShouldSerializeHeaderForeColor ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool ShouldSerializeHeaderForeColor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.ShouldSerializeHeaderForeColor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DataGrid.HeaderForeColor" /> プロパティを永続化する必要があるかどうかを示します。</summary>
        <returns>
          プロパティの値が既定値から変更されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 いずれかをデザイナーを作成する場合は通常このメソッドを使用する、<xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>やコントロールを組み込む独自の作成、<xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeLinkHoverColor">
      <MemberSignature Language="C#" Value="protected virtual bool ShouldSerializeLinkHoverColor ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool ShouldSerializeLinkHoverColor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.ShouldSerializeLinkHoverColor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DataGrid.LinkHoverColor" /> プロパティを永続化する必要があるかどうかを示します。</summary>
        <returns>
          プロパティの値が既定値から変更されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 いずれかをデザイナーを作成する場合は通常このメソッドを使用する、<xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>やコントロールを組み込む独自の作成、<xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeParentRowsBackColor">
      <MemberSignature Language="C#" Value="protected virtual bool ShouldSerializeParentRowsBackColor ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool ShouldSerializeParentRowsBackColor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.ShouldSerializeParentRowsBackColor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DataGrid.ParentRowsBackColor" /> プロパティを永続化する必要があるかどうかを示します。</summary>
        <returns>
          プロパティの値が既定値から変更されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 いずれかをデザイナーを作成する場合にのみ通常このメソッドを使用する、 <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>、やコントロールを組み込む独自の作成、<xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeParentRowsForeColor">
      <MemberSignature Language="C#" Value="protected virtual bool ShouldSerializeParentRowsForeColor ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool ShouldSerializeParentRowsForeColor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.ShouldSerializeParentRowsForeColor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DataGrid.ParentRowsForeColor" /> プロパティを永続化する必要があるかどうかを示します。</summary>
        <returns>
          プロパティの値が既定値から変更されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 いずれかをデザイナーを作成する場合にのみ通常このメソッドを使用する、 <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>、やコントロールを組み込む独自の作成、<xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializePreferredRowHeight">
      <MemberSignature Language="C#" Value="protected bool ShouldSerializePreferredRowHeight ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool ShouldSerializePreferredRowHeight() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.ShouldSerializePreferredRowHeight" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DataGrid.PreferredRowHeight" /> プロパティを永続化する必要があるかどうかを示します。</summary>
        <returns>
          プロパティの値が既定値から変更されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 いずれかをデザイナーを作成する場合は通常このメソッドを使用する、<xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>やコントロールを組み込む独自の作成、<xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeSelectionBackColor">
      <MemberSignature Language="C#" Value="protected bool ShouldSerializeSelectionBackColor ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool ShouldSerializeSelectionBackColor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.ShouldSerializeSelectionBackColor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DataGrid.SelectionBackColor" /> プロパティを永続化する必要があるかどうかを示します。</summary>
        <returns>
          プロパティの値が既定値から変更されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 いずれかをデザイナーを作成する場合は通常このメソッドを使用する、<xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>やコントロールを組み込む独自の作成、<xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeSelectionForeColor">
      <MemberSignature Language="C#" Value="protected virtual bool ShouldSerializeSelectionForeColor ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool ShouldSerializeSelectionForeColor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.ShouldSerializeSelectionForeColor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DataGrid.SelectionForeColor" /> プロパティを永続化する必要があるかどうかを示します。</summary>
        <returns>
          プロパティの値が既定値から変更されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 いずれかをデザイナーを作成する場合は通常このメソッドを使用する、<xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>やコントロールを組み込む独自の作成、<xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowParentDetailsButtonClick">
      <MemberSignature Language="C#" Value="public event EventHandler ShowParentDetailsButtonClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ShowParentDetailsButtonClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGrid.ShowParentDetailsButtonClick" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see langword="ShowParentDetails" /> ボタンがクリックされたときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例では、このメンバーの使用方法を示します。  
  
 [!code-cpp[DataGrid_ShowParentDetailsButtonClick#1](~/samples/snippets/cpp/VS_Snippets_Winforms/DataGrid_ShowParentDetailsButtonClick/CPP/datagrid_showparentdetailsbuttonclick.cpp#1)]
 [!code-csharp[DataGrid_ShowParentDetailsButtonClick#1](~/samples/snippets/csharp/VS_Snippets_Winforms/DataGrid_ShowParentDetailsButtonClick/CS/datagrid_showparentdetailsbuttonclick.cs#1)]
 [!code-vb[DataGrid_ShowParentDetailsButtonClick#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DataGrid_ShowParentDetailsButtonClick/VB/datagrid_showparentdetailsbuttonclick.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Site">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.ISite Site { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.ISite Site" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGrid.Site" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ISite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールのサイトを取得または設定します。</summary>
        <value>コントロールに関連付けられた <see cref="T:System.ComponentModel.ISite" /> (存在する場合)。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SubObjectsSiteChange">
      <MemberSignature Language="C#" Value="public void SubObjectsSiteChange (bool site);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SubObjectsSiteChange(bool site) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.SubObjectsSiteChange(System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="site" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="site">
          コンテナーに <see langword="true" /> オブジェクトを追加する場合は <see cref="T:System.Windows.Forms.DataGridTableStyle" />。削除する場合は <see langword="false" />。</param>
        <summary><see cref="T:System.Windows.Forms.DataGridTableStyle" /> に関連付けられているコンテナーに <see cref="T:System.Windows.Forms.DataGrid" /> オブジェクトを追加するか、コンテナーからそのオブジェクトを削除します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TableStyles">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.GridTableStylesCollection TableStyles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.GridTableStylesCollection TableStyles" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGrid.TableStyles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.GridTableStylesCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>グリッドの <see cref="T:System.Windows.Forms.DataGridTableStyle" /> オブジェクトのコレクションを取得します。</summary>
        <value><see cref="T:System.Windows.Forms.GridTableStylesCollection" /> オブジェクトのコレクションを表す <see cref="T:System.Windows.Forms.DataGridTableStyle" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Windows.Forms.GridTableStylesCollection>を介して取得、<xref:System.Windows.Forms.DataGrid.TableStyles%2A>プロパティをカスタマイズしたビューによって表示されている各テーブルの作成、<xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>コントロール。  
  
 によって既定では、コレクションが返される<xref:System.Windows.Forms.DataGrid.TableStyles%2A>プロパティ含まない<xref:System.Windows.Forms.DataGridTableStyle>オブジェクト。 カスタマイズされたビューのセットを作成します。  
  
1.  <xref:System.Windows.Forms.DataGridTableStyle> を作成します。  
  
2.  設定、<xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A>グリッド テーブル オブジェクトの<xref:System.Data.DataTable.TableName%2A>の<xref:System.Data.DataTable>です。  
  
3.  追加<xref:System.Windows.Forms.DataGridColumnStyle>オブジェクト、表示にする各グリッド列に 1 つ、<xref:System.Windows.Forms.GridColumnStylesCollection>によって返される、<xref:System.Windows.Forms.DataGridTableStyle.GridColumnStyles%2A>プロパティです。  
  
4.  設定、<xref:System.Windows.Forms.DataGridColumnStyle.MappingName%2A>各<xref:System.Windows.Forms.DataGridColumnStyle>を<xref:System.Data.DataColumn.ColumnName%2A>の<xref:System.Data.DataColumn>です。  
  
5.  追加、<xref:System.Windows.Forms.DataGridTableStyle>によって返されるコレクションにオブジェクトを<xref:System.Windows.Forms.DataGrid.TableStyles%2A>プロパティです。  
  
> [!CAUTION]
>  常に作成<xref:System.Windows.Forms.DataGridColumnStyle>オブジェクトに追加して、<xref:System.Windows.Forms.GridColumnStylesCollection>追加する前に<xref:System.Windows.Forms.DataGridTableStyle>オブジェクトを<xref:System.Windows.Forms.GridTableStylesCollection>です。 空の追加と<xref:System.Windows.Forms.DataGridTableStyle>、有効な<xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A>をコレクションに値<xref:System.Windows.Forms.DataGridColumnStyle>オブジェクトが自動的に生成されます。 新規追加しようとする場合に、例外がスローされますその結果、<xref:System.Windows.Forms.DataGridColumnStyle>オブジェクトが複製によって<xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A>値を<xref:System.Windows.Forms.GridColumnStylesCollection>です。  
  
   
  
## Examples  
 次のコード例は、1 つ作成<xref:System.Windows.Forms.DataGridTableStyle>各<xref:System.Data.DataTable>で見つかった、 <xref:System.Data.DataSet>、設定と、<xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A>の<xref:System.Windows.Forms.DataGridTableStyle>を<xref:System.Data.DataTable.TableName%2A>の<xref:System.Data.DataTable>です。 <xref:System.Windows.Forms.DataGridTableStyle>に追加し、<xref:System.Windows.Forms.GridTableStylesCollection>によって返される、<xref:System.Windows.Forms.DataGrid.TableStyles%2A>プロパティです。 出力、<xref:System.Windows.Forms.DataGridColumnStyle.MappingName%2A>各<xref:System.Windows.Forms.DataGridColumnStyle>で、<xref:System.Windows.Forms.GridColumnStylesCollection>によって返される、<xref:System.Windows.Forms.DataGridTableStyle.GridColumnStyles%2A>の各プロパティ<xref:System.Windows.Forms.DataGridTableStyle>で、<xref:System.Windows.Forms.GridTableStylesCollection>です。  
  
 [!code-cpp[Classic DataGrid.TableStyles Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataGrid.TableStyles Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataGrid.TableStyles Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataGrid.TableStyles Example/CS/source.cs#1)]
 [!code-vb[Classic DataGrid.TableStyles Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGrid.TableStyles Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public override string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGrid.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このコントロールでは、このメンバーは無効です。</summary>
        <value>このコントロールに関連付けられたテキスト。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextChanged">
      <MemberSignature Language="C#" Value="public event EventHandler TextChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler TextChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGrid.TextChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DataGrid.Text" /> プロパティの値が変更された場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGrid.Text%2A>プロパティはその値を変更し、処理できますが、このコントロールでは、<xref:System.Windows.Forms.DataGrid.TextChanged>変更を検出するイベントです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnSelect">
      <MemberSignature Language="C#" Value="public void UnSelect (int row);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UnSelect(int32 row) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.UnSelect(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="row">選択を解除する行のインデックス。</param>
        <summary>指定した行の選択を解除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドを使用して、 <xref:System.Windows.Forms.DataGrid.IsSelected%2A>、 <xref:System.Windows.Forms.DataGrid.Select%2A>、および<xref:System.Windows.Forms.DataGrid.ResetSelection%2A>を特定の行の選択状態を操作するメソッド。  
  
   
  
## Examples  
 次のコード例では、このメンバーの使用方法を示します。  
  
 [!code-cpp[DataGrid_UnSelect#1](~/samples/snippets/cpp/VS_Snippets_Winforms/DataGrid_UnSelect/CPP/datagrid_unselect.cpp#1)]
 [!code-csharp[DataGrid_UnSelect#1](~/samples/snippets/csharp/VS_Snippets_Winforms/DataGrid_UnSelect/CS/datagrid_unselect.cs#1)]
 [!code-vb[DataGrid_UnSelect#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DataGrid_UnSelect/VB/datagrid_unselect.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VertScrollBar">
      <MemberSignature Language="C#" Value="protected System.Windows.Forms.ScrollBar VertScrollBar { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ScrollBar VertScrollBar" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGrid.VertScrollBar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ScrollBar</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールの垂直スクロール バーを取得します。</summary>
        <value>グリッドの垂直 <see cref="T:System.Windows.Forms.ScrollBar" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisibleColumnCount">
      <MemberSignature Language="C#" Value="public int VisibleColumnCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 VisibleColumnCount" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGrid.VisibleColumnCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>表示される列の数を取得します。</summary>
        <value>ビューポートに表示される列の数。 ビューポートはグリッドが表示される四角形領域です。 ビューポートのサイズは、<see cref="T:System.Windows.Forms.DataGrid" /> コントロールのサイズによって異なります。ユーザーがコントロールのサイズを変更できるようにしている場合は、ビューポートも影響を受けます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 表示する列の数は、その幅に応じて変更できます。 たとえば、すべての列の既定の幅を設定すると、新しい列の幅が大きなとして 2 回設定されている場合、表示されている列の数は少なくとも 1 つで削減できます。  
  
   
  
## Examples  
 次のコード例では、表示されている列の数を返します。  
  
 [!code-vb[Classic DataGrid.VisibleColumnCount Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGrid.VisibleColumnCount Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VisibleRowCount">
      <MemberSignature Language="C#" Value="public int VisibleRowCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 VisibleRowCount" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGrid.VisibleRowCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>表示される行の数を取得します。</summary>
        <value>ビューポートに表示される行の数。 ビューポートはグリッドが表示される四角形領域です。 ビューポートのサイズは、<see cref="T:System.Windows.Forms.DataGrid" /> コントロールのサイズによって異なります。ユーザーがコントロールのサイズを変更できるようにしている場合は、ビューポートも影響を受けます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 サイズを変更するユーザーが許可された場合、実行時に表示されている行の数を変更できる、<xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>コントロール。  
  
   
  
## Examples  
 次のコード例がで表示される行の数を返します、<xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>コントロール。  
  
 [!code-vb[Classic DataGrid.VisibleRowCount Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGrid.VisibleRowCount Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
