<Type Name="DrawItemEventArgs" FullName="System.Windows.Forms.DrawItemEventArgs">
  <TypeSignature Language="C#" Value="public class DrawItemEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DrawItemEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DrawItemEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><see langword="DrawItem" /> イベントのデータを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `DrawItem`イベントは、オーナー描画コントロールなど、<xref:System.Windows.Forms.ListBox>と<xref:System.Windows.Forms.ComboBox>コントロール。 項目のインデックスを含む、指定した項目を描画するために必要なすべての情報が含まれている、 <xref:System.Drawing.Rectangle>、および<xref:System.Drawing.Graphics>で描画を実行する必要があります。  
  
   
  
## Examples  
 次の例は、オーナー描画を作成する方法を示します<xref:System.Windows.Forms.ListBox>項目。 コードを使用して、<xref:System.Windows.Forms.ListBox.DrawMode%2A>描画された項目が固定されることを指定するプロパティのサイズと<xref:System.Windows.Forms.ListBox.DrawItem>に各項目の描画を実行するイベント、<xref:System.Windows.Forms.ListBox>です。 プロパティとメソッドのコード例を使用して、<xref:System.Windows.Forms.DrawItemEventArgs>クラスは、項目を描画するイベント ハンドラーにパラメーターとして渡されます。 この例では、<xref:System.Windows.Forms.ListBox>というコントロール`listBox1`がフォームに追加されました、<xref:System.Windows.Forms.ListBox.DrawItem>コード例で定義されているイベント ハンドラーでイベントが処理します。 前提とする項目が追加されている、<xref:System.Windows.Forms.ListBox>をこの順序で"Apple"、「オレンジ」および「プラム」のテキスト。  
  
 [!code-csharp[ListBox.DrawMode#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListBox.DrawMode/CS/form1.cs#1)]
 [!code-vb[ListBox.DrawMode#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListBox.DrawMode/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DrawItemEventArgs (System.Drawing.Graphics graphics, System.Drawing.Font font, System.Drawing.Rectangle rect, int index, System.Windows.Forms.DrawItemState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Graphics graphics, class System.Drawing.Font font, valuetype System.Drawing.Rectangle rect, int32 index, valuetype System.Windows.Forms.DrawItemState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DrawItemEventArgs.#ctor(System.Drawing.Graphics,System.Drawing.Font,System.Drawing.Rectangle,System.Int32,System.Windows.Forms.DrawItemState)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="state" Type="System.Windows.Forms.DrawItemState" />
      </Parameters>
      <Docs>
        <param name="graphics"><see cref="T:System.Drawing.Graphics" />を描画する画面です。</param>
        <param name="font"><see cref="T:System.Drawing.Font" />使用するには通常、親コントロールの<see cref="T:System.Drawing.Font" />プロパティです。</param>
        <param name="rect"><see cref="T:System.Drawing.Rectangle" />境界内に描画します。</param>
        <param name="index"><see cref="T:System.Windows.Forms.Control.ControlCollection" />描画されている項目のインデックス値。</param>
        <param name="state">コントロールの<see cref="T:System.Windows.Forms.DrawItemState" />情報。</param>
        <summary>新しいインスタンスを初期化、<see cref="T:System.Windows.Forms.DrawItemEventArgs" />と指定したフォント、状態、画面に描画する境界内に描画する指定したコントロールのクラスです。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DrawItemEventArgs (System.Drawing.Graphics graphics, System.Drawing.Font font, System.Drawing.Rectangle rect, int index, System.Windows.Forms.DrawItemState state, System.Drawing.Color foreColor, System.Drawing.Color backColor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Graphics graphics, class System.Drawing.Font font, valuetype System.Drawing.Rectangle rect, int32 index, valuetype System.Windows.Forms.DrawItemState state, valuetype System.Drawing.Color foreColor, valuetype System.Drawing.Color backColor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DrawItemEventArgs.#ctor(System.Drawing.Graphics,System.Drawing.Font,System.Drawing.Rectangle,System.Int32,System.Windows.Forms.DrawItemState,System.Drawing.Color,System.Drawing.Color)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="state" Type="System.Windows.Forms.DrawItemState" />
        <Parameter Name="foreColor" Type="System.Drawing.Color" />
        <Parameter Name="backColor" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="graphics"><see cref="T:System.Drawing.Graphics" />を描画する画面です。</param>
        <param name="font"><see cref="T:System.Drawing.Font" />使用するには通常、親コントロールの<see cref="T:System.Drawing.Font" />プロパティです。</param>
        <param name="rect"><see cref="T:System.Drawing.Rectangle" />境界内に描画します。</param>
        <param name="index"><see cref="T:System.Windows.Forms.Control.ControlCollection" />描画されている項目のインデックス値。</param>
        <param name="state">コントロールの<see cref="T:System.Windows.Forms.DrawItemState" />情報。</param>
        <param name="foreColor">フォア グラウンド<see cref="T:System.Drawing.Color" />でコントロールを描画します。</param>
        <param name="backColor">バック グラウンド<see cref="T:System.Drawing.Color" />でコントロールを描画します。</param>
        <summary>新しいインスタンスを初期化、<see cref="T:System.Windows.Forms.DrawItemEventArgs" />と、指定されたフォント、状態、前景の色、背景色、画面に描画する境界内に描画する指定したコントロールのクラスです。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color BackColor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawItemEventArgs.BackColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>描画されている項目の背景色を取得します。</summary>
        <value>バック グラウンド<see cref="T:System.Drawing.Color" />描画されている項目の。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 場合は、項目の状態が<xref:System.Windows.Forms.DrawItemState?displayProperty=nameWithType>、<xref:System.Windows.Forms.DrawItemEventArgs.BackColor%2A>に設定されている<xref:System.Drawing.SystemColors.HighlightText%2A?displayProperty=nameWithType>です。 アイテムの状態がない場合<xref:System.Windows.Forms.DrawItemState.Selected>、<xref:System.Windows.Forms.DrawItemEventArgs.BackColor%2A>プロパティに設定されている<xref:System.Drawing.SystemColors.Window%2A?displayProperty=nameWithType>です。  
  
   
  
## Examples  
 次のコード例では、このメンバーの使用方法を示します。 例では、イベント ハンドラーは発生するときに報告、<xref:System.Windows.Forms.ListBox.DrawItem?displayProperty=nameWithType>イベント。 このレポートでは、イベントが発生してデバッグに役立つについて学びます。  
  
 コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.ListBox>という`ListBox1`です。 イベント ハンドラーが関連付けられているかどうかを確認し、<xref:System.Windows.Forms.ListBox.DrawItem?displayProperty=nameWithType>イベント。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#153](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#153)]
 [!code-vb[System.Windows.Forms.EventExamples#153](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#153)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Bounds">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle Bounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle Bounds" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawItemEventArgs.Bounds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>描画されている項目の境界を表す四角形を取得します。</summary>
        <value><see cref="T:System.Drawing.Rectangle" />描画されている項目の境界を表すです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次の例は、オーナー描画を作成する方法を示します<xref:System.Windows.Forms.ListBox>項目。 コードを使用して、<xref:System.Windows.Forms.ListBox.DrawMode%2A>描画された項目が固定されることを指定するプロパティのサイズと<xref:System.Windows.Forms.ListBox.DrawItem>に各項目の描画を実行するイベント、<xref:System.Windows.Forms.ListBox>です。 プロパティとメソッドのコード例を使用して、<xref:System.Windows.Forms.DrawItemEventArgs>クラスは、項目を描画するイベント ハンドラーにパラメーターとして渡されます。 この例では、<xref:System.Windows.Forms.ListBox>というコントロール`listBox1`がフォームに追加されました、<xref:System.Windows.Forms.ListBox.DrawItem>コード例で定義されているイベント ハンドラーでイベントが処理します。 前提とする項目が追加されている、<xref:System.Windows.Forms.ListBox>をこの順序で"Apple"、「オレンジ」および「プラム」のテキスト。  
  
 [!code-csharp[ListBox.DrawMode#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListBox.DrawMode/CS/form1.cs#1)]
 [!code-vb[ListBox.DrawMode#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListBox.DrawMode/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawBackground">
      <MemberSignature Language="C#" Value="public virtual void DrawBackground ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DrawBackground() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DrawItemEventArgs.DrawBackground" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>指定された境界内で背景を描画、<see cref="Overload:System.Windows.Forms.DrawItemEventArgs.#ctor" />コンス トラクターと適切な色を使用します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 描画されている項目がある場合<xref:System.Windows.Forms.DrawItemState.Selected>、強調表示されているテキストの背景を描画します。  
  
   
  
## Examples  
 次の例は、オーナー描画を作成する方法を示します<xref:System.Windows.Forms.ListBox>項目。 コードを使用して、<xref:System.Windows.Forms.ListBox.DrawMode%2A>描画された項目が固定サイズであることを指定するプロパティと<xref:System.Windows.Forms.ListBox.DrawItem>に各項目の描画を実行するイベント、<xref:System.Windows.Forms.ListBox>です。 プロパティとメソッドのコード例を使用して、<xref:System.Windows.Forms.DrawItemEventArgs>クラスは、項目を描画するイベント ハンドラーにパラメーターとして渡されます。 この例では、<xref:System.Windows.Forms.ListBox>という名前のコントロール`listBox1`フォームに追加された、<xref:System.Windows.Forms.ListBox.DrawItem>コード例で定義されているイベント ハンドラーでイベントが処理します。 例では、さらに項目が追加されたこと、<xref:System.Windows.Forms.ListBox>をこの順序で"Apple"、「オレンジ」および「プラム」のテキスト。  
  
 [!code-csharp[ListBox.DrawMode#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListBox.DrawMode/CS/form1.cs#1)]
 [!code-vb[ListBox.DrawMode#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListBox.DrawMode/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>オーバーライドする場合<see cref="M:System.Windows.Forms.DrawItemEventArgs.DrawBackground" />派生クラスでを呼び出すことを確認、<see cref="M:System.Windows.Forms.DrawItemEventArgs.DrawBackground" />基底クラスのメソッドです。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="DrawFocusRectangle">
      <MemberSignature Language="C#" Value="public virtual void DrawFocusRectangle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DrawFocusRectangle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DrawItemEventArgs.DrawFocusRectangle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>指定された境界内でフォーカス四角形を描画、<see cref="Overload:System.Windows.Forms.DrawItemEventArgs.#ctor" />コンス トラクターです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 描画されるアイテムに<xref:System.Windows.Forms.DrawItemState.Focus>、フォーカス四角形を描画します。  
  
   
  
## Examples  
 次の例は、オーナー描画を作成する方法を示します<xref:System.Windows.Forms.ListBox>項目。 コードを使用して、<xref:System.Windows.Forms.ListBox.DrawMode%2A>描画された項目が固定サイズであることを指定するプロパティと<xref:System.Windows.Forms.ListBox.DrawItem>に各項目の描画を実行するイベント、<xref:System.Windows.Forms.ListBox>です。 プロパティとメソッドのコード例を使用して、<xref:System.Windows.Forms.DrawItemEventArgs>クラスは、項目を描画するイベント ハンドラーにパラメーターとして渡されます。 この例では、<xref:System.Windows.Forms.ListBox>という名前のコントロール`listBox1`フォームに追加された、<xref:System.Windows.Forms.ListBox.DrawItem>コード例で定義されているイベント ハンドラーでイベントが処理します。 例では、さらに項目が追加されたこと、<xref:System.Windows.Forms.ListBox>をこの順序で"Apple"、「オレンジ」および「プラム」のテキスト。  
  
 [!code-csharp[ListBox.DrawMode#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListBox.DrawMode/CS/form1.cs#1)]
 [!code-vb[ListBox.DrawMode#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListBox.DrawMode/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>オーバーライドする場合<see cref="M:System.Windows.Forms.DrawItemEventArgs.DrawFocusRectangle" />派生クラスでを呼び出すことを確認、<see cref="M:System.Windows.Forms.DrawItemEventArgs.DrawFocusRectangle" />基底クラスのメソッドです。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Font">
      <MemberSignature Language="C#" Value="public System.Drawing.Font Font { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Font Font" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawItemEventArgs.Font" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>描画されている項目に割り当てられているフォントを取得します。</summary>
        <value><see cref="T:System.Drawing.Font" />描画されている項目に割り当てられています。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 推奨<xref:System.Drawing.Font>、通常、<xref:System.Windows.Forms.Control.Font%2A>親コントロールのプロパティです。  
  
   
  
## Examples  
 次の例は、オーナー描画を作成する方法を示します<xref:System.Windows.Forms.ListBox>項目。 コードを使用して、<xref:System.Windows.Forms.ListBox.DrawMode%2A>描画された項目が固定サイズであることを指定するプロパティと<xref:System.Windows.Forms.ListBox.DrawItem>に各項目の描画を実行するイベント、<xref:System.Windows.Forms.ListBox>です。 プロパティとメソッドのコード例を使用して、<xref:System.Windows.Forms.DrawItemEventArgs>クラスは、項目を描画するイベント ハンドラーにパラメーターとして渡されます。 この例では、<xref:System.Windows.Forms.ListBox>という名前のコントロール`listBox1`フォームに追加された、<xref:System.Windows.Forms.ListBox.DrawItem>コード例で定義されているイベント ハンドラーでイベントが処理します。 例では、さらに項目が追加されたこと、<xref:System.Windows.Forms.ListBox>をこの順序で"Apple"、「オレンジ」および「プラム」のテキスト。  
  
 [!code-csharp[ListBox.DrawMode#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListBox.DrawMode/CS/form1.cs#1)]
 [!code-vb[ListBox.DrawMode#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListBox.DrawMode/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForeColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color ForeColor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawItemEventArgs.ForeColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>前景色を取得、描画されている項目の。</summary>
        <value>フォア グラウンド<see cref="T:System.Drawing.Color" />描画されている項目の。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 場合は、項目の状態が<xref:System.Windows.Forms.DrawItemState?displayProperty=nameWithType>、<xref:System.Windows.Forms.DrawItemEventArgs.ForeColor%2A>に設定されている<xref:System.Drawing.SystemColors.HighlightText%2A?displayProperty=nameWithType>です。 アイテムの状態がない場合<xref:System.Windows.Forms.DrawItemState.Selected>、<xref:System.Windows.Forms.DrawItemEventArgs.ForeColor%2A>プロパティに設定されている<xref:System.Drawing.SystemColors.WindowText%2A?displayProperty=nameWithType>です。  
  
   
  
## Examples  
 次のコード例では、このメンバーの使用方法を示します。 例では、イベント ハンドラーは発生するときに報告、<xref:System.Windows.Forms.ListBox.DrawItem?displayProperty=nameWithType>イベント。 このレポートでは、イベントが発生してデバッグに役立つについて学びます。  
  
 コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.ListBox>という`ListBox1`です。 イベント ハンドラーが関連付けられているかどうかを確認し、<xref:System.Windows.Forms.ListBox.DrawItem?displayProperty=nameWithType>イベント。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#153](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#153)]
 [!code-vb[System.Windows.Forms.EventExamples#153](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#153)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Graphics">
      <MemberSignature Language="C#" Value="public System.Drawing.Graphics Graphics { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Graphics Graphics" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawItemEventArgs.Graphics" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Graphics</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>項目を描画するグラフィックスの表面を取得します。</summary>
        <value><see cref="T:System.Drawing.Graphics" />サーフェイスに項目を描画します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次の例は、オーナー描画を作成する方法を示します<xref:System.Windows.Forms.ListBox>項目。 コードを使用して、<xref:System.Windows.Forms.ListBox.DrawMode%2A>描画された項目が固定サイズであることを指定するプロパティと<xref:System.Windows.Forms.ListBox.DrawItem>に各項目の描画を実行するイベント、<xref:System.Windows.Forms.ListBox>です。 プロパティとメソッドのコード例を使用して、<xref:System.Windows.Forms.DrawItemEventArgs>クラスは、項目を描画するイベント ハンドラーにパラメーターとして渡されます。 この例では、<xref:System.Windows.Forms.ListBox>という名前のコントロール`listBox1`フォームに追加された、<xref:System.Windows.Forms.ListBox.DrawItem>コード例で定義されているイベント ハンドラーでイベントが処理します。 例では、さらに項目が追加されたこと、<xref:System.Windows.Forms.ListBox>をこの順序で"Apple"、「オレンジ」および「プラム」のテキスト。  
  
 [!code-csharp[ListBox.DrawMode#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListBox.DrawMode/CS/form1.cs#1)]
 [!code-vb[ListBox.DrawMode#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListBox.DrawMode/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Index">
      <MemberSignature Language="C#" Value="public int Index { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Index" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawItemEventArgs.Index" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>描画されている項目のインデックス値を取得します。</summary>
        <value>表す数値、<see cref="P:System.Windows.Forms.Control.ControlCollection.Item(System.Int32)" />描画されている項目の値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティを返します、<xref:System.Windows.Forms.Control.ControlCollection.Item%2A>描画されている項目の値、<xref:System.Windows.Forms.Control.ControlCollection?displayProperty=nameWithType>です。 このプロパティは、itemswere が、一覧から削除された場合、-1 を返すことができます。  
  
   
  
## Examples  
 次の例は、オーナー描画を作成する方法を示します<xref:System.Windows.Forms.ListBox>項目。 コードを使用して、<xref:System.Windows.Forms.ListBox.DrawMode%2A>描画された項目が固定サイズであることを指定するプロパティと<xref:System.Windows.Forms.ListBox.DrawItem>に各項目の描画を実行するイベント、<xref:System.Windows.Forms.ListBox>です。 プロパティとメソッドのコード例を使用して、<xref:System.Windows.Forms.DrawItemEventArgs>クラスは、項目を描画するイベント ハンドラーにパラメーターとして渡されます。 この例では、<xref:System.Windows.Forms.ListBox>という名前のコントロール`listBox1`フォームに追加された、<xref:System.Windows.Forms.ListBox.DrawItem>コード例で定義されているイベント ハンドラーでイベントが処理します。 例では、さらに項目が追加されたこと、<xref:System.Windows.Forms.ListBox>をこの順序で"Apple"、「オレンジ」および「プラム」のテキスト。  
  
 [!code-csharp[ListBox.DrawMode#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListBox.DrawMode/CS/form1.cs#1)]
 [!code-vb[ListBox.DrawMode#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListBox.DrawMode/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DrawItemState State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DrawItemState State" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawItemEventArgs.State" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DrawItemState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>描画されている項目の状態を取得します。</summary>
        <value><see cref="T:System.Windows.Forms.DrawItemState" />描画されている項目の状態を表すです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティの値の組み合わせを指定できます、<xref:System.Windows.Forms.DrawItemState>列挙型メンバー。 ビットごとの演算子を使用してメンバーを組み合わせることができます。  
  
   
  
## Examples  
 次のコード例では、このメンバーの使用方法を示します。 例では、イベント ハンドラーは発生するときに報告、<xref:System.Windows.Forms.ListBox.DrawItem?displayProperty=nameWithType>イベント。 このレポートでは、イベントが発生してデバッグに役立つについて学びます。  
  
 コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.ListBox>という`ListBox1`です。 イベント ハンドラーが関連付けられているかどうかを確認し、<xref:System.Windows.Forms.ListBox.DrawItem?displayProperty=nameWithType>イベント。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#153](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#153)]
 [!code-vb[System.Windows.Forms.EventExamples#153](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#153)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
