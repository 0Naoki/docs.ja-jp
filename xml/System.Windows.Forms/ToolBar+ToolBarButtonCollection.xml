<Type Name="ToolBar+ToolBarButtonCollection" FullName="System.Windows.Forms.ToolBar+ToolBarButtonCollection">
  <TypeSignature Language="C#" Value="public class ToolBar.ToolBarButtonCollection : System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit ToolBar/ToolBarButtonCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ToolBar.ToolBarButtonCollection" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>コレクションをカプセル化<see cref="T:System.Windows.Forms.ToolBarButton" />で使用するためのコントロール、<see cref="T:System.Windows.Forms.ToolBar" />クラスです。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection> 0 から始まるインデックス付きコレクションで使用されるは、<xref:System.Windows.Forms.ToolBar>すべてを保持するクラス、<xref:System.Windows.Forms.ToolBarButton>ツールバーに割り当てられているコントロール。 使用して、<xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Add%2A>を個々 のボタンを追加するメソッドと<xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Remove%2A>それらを削除するメソッド。 呼び出す、<xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Clear%2A>コレクションからすべてのボタンを削除する方法です。  
  
   
  
## Examples  
 次のコード例は、作成し、初期化、 <xref:System.Windows.Forms.ToolBar> 3<xref:System.Windows.Forms.ToolBarButton>コントロール。 ツールバーのボタンがツールバーに割り当てられているし、ツールバーは、フォームに追加します。 このコードでは、する必要があります、<xref:System.Windows.Forms.Form>既に作成されています。  
  
 [!code-cpp[Classic ToolBar.Buttons Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ToolBar.Buttons Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ToolBar.Buttons Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ToolBar.Buttons Example/CS/source.cs#1)]
 [!code-vb[Classic ToolBar.Buttons Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ToolBar.Buttons Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ToolBarButtonCollection (System.Windows.Forms.ToolBar owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.ToolBar owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolBar.ToolBarButtonCollection.#ctor(System.Windows.Forms.ToolBar)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.ToolBar" />
      </Parameters>
      <Docs>
        <param name="owner"><see cref="T:System.Windows.Forms.ToolBar" />のコレクションの親である<see cref="T:System.Windows.Forms.ToolBarButton" />コントロール。</param>
        <summary>新しいインスタンスを初期化、<see cref="T:System.Windows.Forms.ToolBar.ToolBarButtonCollection" />クラスし、指定されたツールバーに割り当てられます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 通常作成しない、<xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection>コンス トラクターを明示的に呼び出すとします。 参照することによって、<xref:System.Windows.Forms.ToolBar.Buttons%2A>のプロパティ、<xref:System.Windows.Forms.ToolBar>コントロール、<xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection>を作成します。 そのプロパティやメソッドにアクセスし、割り当てる<xref:System.Windows.Forms.ToolBarButton>コレクションへのコントロールです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Add(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Add(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">新しい表示されるテキストを<see cref="T:System.Windows.Forms.ToolBarButton" />です。</param>
        <summary>指定したツール バー ボタンのコレクションの末尾に新しいツール バー ボタンを追加<see cref="P:System.Windows.Forms.ToolBarButton.Text" />プロパティの値。</summary>
        <returns>0 から始まるインデックス値、<see cref="T:System.Windows.Forms.ToolBarButton" />コレクションに追加します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 追加することも新しい<xref:System.Windows.Forms.ToolBarButton>オブジェクトを使用して、コレクション、<xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.AddRange%2A>または<xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Insert%2A>メソッド、またはその他のバージョンの<xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Add%2A>メソッドです。  
  
 削除する、<xref:System.Windows.Forms.ToolBarButton>先ほど追加したが、使用して、 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Remove%2A>、<xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.RemoveAt%2A>または<xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Clear%2A>メソッドです。  
  
   
  
## Examples  
 次のコード例では、既存を削除します<xref:System.Windows.Forms.ToolBarButton>から、<xref:System.Windows.Forms.ToolBar>が存在し、追加し、新しい挿入します。 4 つの場合は、制御<xref:System.Windows.Forms.ToolBarButton>オブジェクトを、<xref:System.Windows.Forms.ToolBar>です。 この例では、ある必要があります、<xref:System.Windows.Forms.Form>で、<xref:System.Windows.Forms.ToolBar>コントロール。  
  
 [!code-cpp[ToolBar#2](~/samples/snippets/cpp/VS_Snippets_Winforms/ToolBar/CPP/mytoolbar.cpp#2)]
 [!code-csharp[ToolBar#2](~/samples/snippets/csharp/VS_Snippets_Winforms/ToolBar/CS/mytoolbar.cs#2)]
 [!code-vb[ToolBar#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ToolBar/VB/mytoolbar.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (System.Windows.Forms.ToolBarButton button);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Add(class System.Windows.Forms.ToolBarButton button) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Add(System.Windows.Forms.ToolBarButton)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="button" Type="System.Windows.Forms.ToolBarButton" />
      </Parameters>
      <Docs>
        <param name="button"><see cref="T:System.Windows.Forms.ToolBarButton" />に既存のすべてのボタンの後に追加します。</param>
        <summary>ツール バー ボタンのコレクションの末尾に、指定したツール バー ボタンを追加します。</summary>
        <returns>0 から始まるインデックス値、<see cref="T:System.Windows.Forms.ToolBarButton" />コレクションに追加します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 追加することも新しい<xref:System.Windows.Forms.ToolBarButton>オブジェクトを使用して、コレクション、<xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.AddRange%2A>または<xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Insert%2A>メソッド、またはその他のバージョンの<xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Add%2A>メソッドです。  
  
 削除する、<xref:System.Windows.Forms.ToolBarButton>先ほど追加したが、使用して、 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Remove%2A>、<xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.RemoveAt%2A>または<xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Clear%2A>メソッドです。  
  
   
  
## Examples  
 次のコード例は、新しく追加<xref:System.Windows.Forms.ToolBarButton>を既存の制御<xref:System.Windows.Forms.ToolBar>の既存のボタンがあります。 ツール バー ボタンの末尾に追加されます、<xref:System.Windows.Forms.ToolBar.Buttons%2A?displayProperty=nameWithType>コレクション。  
  
 [!code-cpp[Classic ToolBar.ToolBarButtonCollection.Add Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ToolBar.ToolBarButtonCollection.Add Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ToolBar.ToolBarButtonCollection.Add Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ToolBar.ToolBarButtonCollection.Add Example/CS/source.cs#1)]
 [!code-vb[Classic ToolBar.ToolBarButtonCollection.Add Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ToolBar.ToolBarButtonCollection.Add Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.Windows.Forms.ToolBarButton[] buttons);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.Windows.Forms.ToolBarButton[] buttons) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolBar.ToolBarButtonCollection.AddRange(System.Windows.Forms.ToolBarButton[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buttons" Type="System.Windows.Forms.ToolBarButton[]" />
      </Parameters>
      <Docs>
        <param name="buttons">コレクション<see cref="T:System.Windows.Forms.ToolBarButton" />にこれを追加するコントロール<see cref="T:System.Windows.Forms.ToolBar.ToolBarButtonCollection" />配列に含まれます。</param>
        <summary>このツール バー ボタンのコレクションには、ツール バー ボタンのコレクションを追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ToolBarButton>に含まれるオブジェクト、`nodes`配列は、コレクションの末尾に追加されます。  
  
 以前に作成のグループをすばやく追加する方法を使用することができます<xref:System.Windows.Forms.ToolBarButton>オブジェクトを手動で追加するのではなくコレクション<xref:System.Windows.Forms.ToolBarButton>を使用してコレクションに、<xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Add%2A>メソッドです。  
  
 削除する、<xref:System.Windows.Forms.ToolBarButton>先ほど追加したが、使用して、 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Remove%2A>、<xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.RemoveAt%2A>または<xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Clear%2A>メソッドです。  
  
   
  
## Examples  
 次のコード例では、既存を削除します<xref:System.Windows.Forms.ToolBarButton>から、<xref:System.Windows.Forms.ToolBar>が存在し、追加し、新しい挿入します。 4 つの場合は、制御<xref:System.Windows.Forms.ToolBarButton>オブジェクトを、<xref:System.Windows.Forms.ToolBar>です。 この例では、ある必要があります、<xref:System.Windows.Forms.Form>で、<xref:System.Windows.Forms.ToolBar>コントロール。  
  
 [!code-cpp[ToolBar#2](~/samples/snippets/cpp/VS_Snippets_Winforms/ToolBar/CPP/mytoolbar.cpp#2)]
 [!code-csharp[ToolBar#2](~/samples/snippets/csharp/VS_Snippets_Winforms/ToolBar/CS/mytoolbar.cs#2)]
 [!code-vb[ToolBar#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ToolBar/VB/mytoolbar.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Clear" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ツール バー ボタンのコレクションからすべてのボタンを削除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Clear%2A>メソッドは、コレクションを反復処理しに割り当てられているすべてのツール バー ボタンの削除、<xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection>です。  
  
 コレクションから個々 のツールバー ボタンを削除するには、使用、<xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Remove%2A>または<xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.RemoveAt%2A>メソッドです。  
  
 新規に追加する<xref:System.Windows.Forms.ToolBarButton>をコレクションにオブジェクトを使用して、 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Add%2A>、<xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.AddRange%2A>または<xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Insert%2A>メソッドです。  
  
   
  
## Examples  
 次のコード例では表示、<xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Count%2A>の<xref:System.Windows.Forms.ToolBar.Buttons%2A>前に、と後、<xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Clear%2A>メソッドが呼び出されます。 このコードでは、する必要があります、<xref:System.Windows.Forms.ToolBar>に少なくとも 1 つ<xref:System.Windows.Forms.ToolBarButton>が作成されました。  
  
 [!code-cpp[Classic ToolBar.ToolBarButtonCollection.Count Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ToolBar.ToolBarButtonCollection.Count Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ToolBar.ToolBarButtonCollection.Count Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ToolBar.ToolBarButtonCollection.Count Example/CS/source.cs#1)]
 [!code-vb[Classic ToolBar.ToolBarButtonCollection.Count Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ToolBar.ToolBarButtonCollection.Count Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Windows.Forms.ToolBarButton button);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Windows.Forms.ToolBarButton button) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Contains(System.Windows.Forms.ToolBarButton)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="button" Type="System.Windows.Forms.ToolBarButton" />
      </Parameters>
      <Docs>
        <param name="button">コレクション内で検索する <see cref="T:System.Windows.Forms.ToolBarButton" />。</param>
        <summary>かどうか、指定したツール バー ボタンは、コレクションのメンバーを決定します。</summary>
        <returns>
          <see langword="true" />場合、<see cref="T:System.Windows.Forms.ToolBarButton" />コレクションのメンバーである、それ以外の<see langword="false" />します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドでは、確認することができるかどうか、<xref:System.Windows.Forms.ToolBarButton>に対して操作を実行する前に、コレクションのメンバーである、<xref:System.Windows.Forms.ToolBarButton>です。 確認するため、このメソッドを使用することができます、<xref:System.Windows.Forms.ToolBarButton>に追加されたかが、コレクションのメンバーであります。  
  
   
  
## Examples  
 次のコード例では、既存を削除します<xref:System.Windows.Forms.ToolBarButton>から、<xref:System.Windows.Forms.ToolBar>が存在し、追加し、新しい挿入します。 4 つの場合は、制御<xref:System.Windows.Forms.ToolBarButton>オブジェクトを、<xref:System.Windows.Forms.ToolBar>です。 この例では、ある必要があります、<xref:System.Windows.Forms.Form>で、<xref:System.Windows.Forms.ToolBar>コントロール。  
  
 [!code-cpp[ToolBar#2](~/samples/snippets/cpp/VS_Snippets_Winforms/ToolBar/CPP/mytoolbar.cpp#2)]
 [!code-csharp[ToolBar#2](~/samples/snippets/csharp/VS_Snippets_Winforms/ToolBar/CS/mytoolbar.cs#2)]
 [!code-vb[ToolBar#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ToolBar/VB/mytoolbar.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainsKey">
      <MemberSignature Language="C#" Value="public virtual bool ContainsKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolBar.ToolBarButtonCollection.ContainsKey(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">検索の対象となる <see cref="T:System.Windows.Forms.ToolBarButton" /> の名前。</param>
        <summary>かどうかを<see cref="T:System.Windows.Forms.ToolBarButton" />指定されたキーには、コレクションに含まれています。</summary>
        <returns>
          <see langword="true" />示すために、<see cref="T:System.Windows.Forms.ToolBarButton" />指定されたキーには、それ以外の<see langword="false" />します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ToolBarButton.Name%2A>プロパティのキーに対応する<xref:System.Windows.Forms.ToolBarButton>で、<xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection>です。  
  
 キーの比較は区別されません。 場合、`key`パラメーターは`null`または空の文字列、<xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Item%2A>を返します`false.`  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ツール バー ボタンのコレクション内のボタンの数を取得します。</summary>
        <value>数、<see cref="T:System.Windows.Forms.ToolBarButton" />ツールバーに割り当てられているコントロール。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Count%2A>プロパティの実際の数を保持する<xref:System.Windows.Forms.ToolBarButton>をコレクションに割り当てられているコントロール。 使用するが一般的、<xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Count%2A>プロパティ値のコレクションを反復処理するループの上限とします。 コレクションのインデックス値は 0 から始まるインデックス、ループ変数から 1 を減算する必要がありますのでそれ以外の場合、コレクションの上限を超えるして例外をスローします。  
  
   
  
## Examples  
 次のコード例では表示、<xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Count%2A>の<xref:System.Windows.Forms.ToolBar.Buttons%2A>前に、と後、<xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Clear%2A>メソッドが呼び出されます。 このコードでは、する必要があります、<xref:System.Windows.Forms.ToolBar>に少なくとも 1 つ<xref:System.Windows.Forms.ToolBarButton>が作成されました。  
  
 [!code-cpp[Classic ToolBar.ToolBarButtonCollection.Count Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ToolBar.ToolBarButtonCollection.Count Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ToolBar.ToolBarButtonCollection.Count Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ToolBar.ToolBarButtonCollection.Count Example/CS/source.cs#1)]
 [!code-vb[Classic ToolBar.ToolBarButtonCollection.Count Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ToolBar.ToolBarButtonCollection.Count Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolBar.ToolBarButtonCollection.GetEnumerator" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ツール バー ボタンのコレクションを反復処理に使用できる列挙子を返します。</summary>
        <returns><see cref="T:System.Collections.IEnumerator" />ツリー ノードのコレクションを表すです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例では、既存を削除します<xref:System.Windows.Forms.ToolBarButton>から、<xref:System.Windows.Forms.ToolBar>が存在し、追加し、新しい挿入します。 4 つの場合は、制御<xref:System.Windows.Forms.ToolBarButton>オブジェクトを、<xref:System.Windows.Forms.ToolBar>です。 この例では、ある必要があります、<xref:System.Windows.Forms.Form>で、<xref:System.Windows.Forms.ToolBar>コントロール。  
  
 [!code-cpp[ToolBar#2](~/samples/snippets/cpp/VS_Snippets_Winforms/ToolBar/CPP/mytoolbar.cpp#2)]
 [!code-csharp[ToolBar#2](~/samples/snippets/csharp/VS_Snippets_Winforms/ToolBar/CS/mytoolbar.cs#2)]
 [!code-vb[ToolBar#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ToolBar/VB/mytoolbar.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Windows.Forms.ToolBarButton button);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Windows.Forms.ToolBarButton button) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolBar.ToolBarButtonCollection.IndexOf(System.Windows.Forms.ToolBarButton)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="button" Type="System.Windows.Forms.ToolBarButton" />
      </Parameters>
      <Docs>
        <param name="button">コレクション内で検索する <see cref="T:System.Windows.Forms.ToolBarButton" />。</param>
        <summary>コレクション内の指定されたツール バー ボタンのインデックスを取得します。</summary>
        <returns>コレクションに見つかった項目の 0 から始まるインデックスそれ以外の場合、-1 を返します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドにより、簡単にアクセスのインデックス値、<xref:System.Windows.Forms.ToolBarButton>コレクション内で。 インデックス値を使用すると、これを容易に判別<xref:System.Windows.Forms.ToolBarButton>でクリックしてされた、<xref:System.Windows.Forms.ToolBar>です。 <xref:System.Windows.Forms.ToolBarButton>クリック評価することで決定できます、<xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.IndexOf%2A>の値、<xref:System.Windows.Forms.ToolBarButtonClickEventArgs.Button%2A?displayProperty=nameWithType>プロパティです。  
  
   
  
## Examples  
 次のコード例を作成、 <xref:System.Windows.Forms.ToolBar> 3<xref:System.Windows.Forms.ToolBarButton>コントロール。 ツールバーのボタンがボタンのコレクションに割り当てられているコレクションは、ツールバーに割り当てられて、ツールバーは、フォームに追加します。 <xref:System.Windows.Forms.ToolBar.ButtonClick> 、ツールバーのイベント、<xref:System.Windows.Forms.ToolBarButtonClickEventArgs.Button%2A>のプロパティ、<xref:System.Windows.Forms.ToolBarButtonClickEventArgs>が評価され、適切なダイアログ ボックスを開くとします。 このコードでは、する必要があります、 <xref:System.Windows.Forms.Form>、 <xref:System.Windows.Forms.OpenFileDialog>、 <xref:System.Windows.Forms.SaveFileDialog>、および<xref:System.Windows.Forms.PrintDialog>がすべて作成されています。  
  
 [!code-cpp[Classic ToolBar.ToolBarButtonCollection.IndexOf Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ToolBar.ToolBarButtonCollection.IndexOf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ToolBar.ToolBarButtonCollection.IndexOf Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ToolBar.ToolBarButtonCollection.IndexOf Example/CS/source.cs#1)]
 [!code-vb[Classic ToolBar.ToolBarButtonCollection.IndexOf Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ToolBar.ToolBarButtonCollection.IndexOf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOfKey">
      <MemberSignature Language="C#" Value="public virtual int IndexOfKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOfKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolBar.ToolBarButtonCollection.IndexOfKey(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">検索の対象となる <see cref="T:System.Windows.Forms.ToolBarButton" /> の名前。</param>
        <summary>最初に見つかった位置のインデックスを取得、<see cref="T:System.Windows.Forms.ToolBarButton" />指定されたキーにします。</summary>
        <returns>最初に見つかった位置のインデックス、 <see cref="T:System.Windows.Forms.ToolBarButton" /> 、それ以外の場合、指定したキーに-1 です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 場合<xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.IndexOfKey%2A>と呼ばれる順次、最後のインデックスを最初に、キーの一致のチェックは、検索は、コレクションの先頭から開始一致が存在しない場合に返されます。  
  
 <xref:System.Windows.Forms.ToolBarButton.Name%2A>プロパティのキーに対応する<xref:System.Windows.Forms.ToolBarButton>で、<xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection>です。  
  
 キーの比較は区別されません。 場合、`key`パラメーターは`null`または空の文字列、 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Item%2A> -1 を返します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, System.Windows.Forms.ToolBarButton button);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(int32 index, class System.Windows.Forms.ToolBarButton button) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Insert(System.Int32,System.Windows.Forms.ToolBarButton)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="button" Type="System.Windows.Forms.ToolBarButton" />
      </Parameters>
      <Docs>
        <param name="index">ツール バー ボタンを挿入するコレクション内の位置を示すインデックス。</param>
        <param name="button">挿入する <see cref="T:System.Windows.Forms.ToolBarButton" />。</param>
        <summary>指定した位置にツール バー ボタンのコレクションに既存のツール バー ボタンを挿入します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 追加することも新しい<xref:System.Windows.Forms.ToolBarButton>オブジェクトを使用して、コレクション、<xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Add%2A>または<xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.AddRange%2A>メソッドです。  
  
 削除する、<xref:System.Windows.Forms.ToolBarButton>先ほど追加したが、使用して、 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Remove%2A>、<xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.RemoveAt%2A>または<xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Clear%2A>メソッドです。  
  
   
  
## Examples  
 次のコード例では、既存を削除します<xref:System.Windows.Forms.ToolBarButton>から、<xref:System.Windows.Forms.ToolBar>が存在し、追加し、新しい挿入します。 4 つの場合は、制御<xref:System.Windows.Forms.ToolBarButton>オブジェクトを、<xref:System.Windows.Forms.ToolBar>です。 この例では、ある必要があります、<xref:System.Windows.Forms.Form>で、<xref:System.Windows.Forms.ToolBar>コントロール。  
  
 [!code-cpp[ToolBar#2](~/samples/snippets/cpp/VS_Snippets_Winforms/ToolBar/CPP/mytoolbar.cpp#2)]
 [!code-csharp[ToolBar#2](~/samples/snippets/csharp/VS_Snippets_Winforms/ToolBar/CS/mytoolbar.cs#2)]
 [!code-vb[ToolBar#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ToolBar/VB/mytoolbar.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolBar.ToolBarButtonCollection.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コレクションが読み取り専用かどうかを示す値を取得します。</summary>
        <value>
          コレクションが読み取り専用の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例では、既存を削除します<xref:System.Windows.Forms.ToolBarButton>から、<xref:System.Windows.Forms.ToolBar>が存在し、追加し、新しい挿入します。 4 つの場合は、制御<xref:System.Windows.Forms.ToolBarButton>オブジェクトを、<xref:System.Windows.Forms.ToolBar>です。 この例では、ある必要があります、<xref:System.Windows.Forms.Form>で、<xref:System.Windows.Forms.ToolBar>コントロール。  
  
 [!code-cpp[ToolBar#2](~/samples/snippets/cpp/VS_Snippets_Winforms/ToolBar/CPP/mytoolbar.cpp#2)]
 [!code-csharp[ToolBar#2](~/samples/snippets/csharp/VS_Snippets_Winforms/ToolBar/CS/mytoolbar.cs#2)]
 [!code-vb[ToolBar#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ToolBar/VB/mytoolbar.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ToolBarButton this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ToolBarButton Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Item(System.Int32)" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ToolBarButton</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">位置を示すインデックス、<see cref="T:System.Windows.Forms.ToolBarButton" />コレクション内で。</param>
        <summary>取得またはツール バー ボタンのコレクションで指定したインデックス位置にあるツールバーのボタンを設定します。</summary>
        <value>A<see cref="T:System.Windows.Forms.ToolBarButton" />を表す、指定したインデックス位置にあるツールバー ボタンをクリックします。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 割り当てる<xref:System.Windows.Forms.ToolBarButton>またはをから取得する特定の場所を制御、 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection>、特定のインデックス値を持つコレクション オブジェクトを参照することができます。 インデックス値、 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection> 0 から始まるインデックスです。  
  
   
  
## Examples  
 次のコード例では、ツールバーにある最後のツール バー ボタンが置き換えられます。 このコードでは、する必要があります、<xref:System.Windows.Forms.ToolBar>と 1 つ以上<xref:System.Windows.Forms.ToolBarButton>が作成されています。 この例では、ツールバーのボタンの数を取得し、新しく作成された最後のボタンに置き換えます。 `index`に置き換えられる、ツール バー ボタンの値が設定されている、<xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Count%2A>プロパティから、1 を引いた後、<xref:System.Windows.Forms.ToolBarButton>コレクションは、0 から始まるインデックス。  
  
 [!code-cpp[Classic ToolBar.ToolBarButtonCollection.this Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ToolBar.ToolBarButtonCollection.this Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ToolBar.ToolBarButtonCollection.this Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ToolBar.ToolBarButtonCollection.this Example/CS/source.cs#1)]
 [!code-vb[Classic ToolBar.ToolBarButtonCollection.this Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ToolBar.ToolBarButtonCollection.this Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="index" /> 値は <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index" />値が 0 未満です。  
  
 または  
  
 <paramref name="index" />値が、コレクション内のボタンの数を超えると、ボタンのコレクションが<see langword="null" />です。</exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ToolBarButton this[string key] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ToolBarButton Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Item(System.String)" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ToolBarButton</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">取得する <see cref="T:System.Windows.Forms.ToolBarButton" /> の名前。</param>
        <summary>取得、<see cref="T:System.Windows.Forms.ToolBarButton" />コレクションから指定されたキーにします。</summary>
        <value><see cref="T:System.Windows.Forms.ToolBarButton" />が<see cref="P:System.Windows.Forms.ToolBarButton.Name" />プロパティが指定したキーに一致します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ToolBarButton.Name%2A>プロパティのキーに対応する<xref:System.Windows.Forms.ToolBarButton>で、<xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection>です。  
  
 キーの比較は区別されません。 場合、`key`パラメーターは`null`または空の文字列、<xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Item%2A>返します`null`です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Windows.Forms.ToolBarButton button);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Windows.Forms.ToolBarButton button) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Remove(System.Windows.Forms.ToolBarButton)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="button" Type="System.Windows.Forms.ToolBarButton" />
      </Parameters>
      <Docs>
        <param name="button">コレクションから削除する <see cref="T:System.Windows.Forms.ToolBarButton" />。</param>
        <summary>ツール バー ボタンのコレクションから指定したボタンを削除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ツール バー ボタンをコレクションから削除するには、使用、 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.RemoveAt%2A>、または<xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Clear%2A>メソッドです。  
  
 新規に追加する<xref:System.Windows.Forms.ToolBarButton>をコレクションにオブジェクトを使用して、 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Add%2A>、<xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.AddRange%2A>または<xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Insert%2A>メソッドです。  
  
   
  
## Examples  
 次のコード例では、既存を削除します<xref:System.Windows.Forms.ToolBarButton>から、<xref:System.Windows.Forms.ToolBar>が存在し、追加し、新しい挿入します。 4 つの場合は、制御<xref:System.Windows.Forms.ToolBarButton>オブジェクトを、<xref:System.Windows.Forms.ToolBar>です。 この例では、ある必要があります、<xref:System.Windows.Forms.Form>で、<xref:System.Windows.Forms.ToolBar>コントロール。  
  
 [!code-cpp[ToolBar#2](~/samples/snippets/cpp/VS_Snippets_Winforms/ToolBar/CPP/mytoolbar.cpp#2)]
 [!code-csharp[ToolBar#2](~/samples/snippets/csharp/VS_Snippets_Winforms/ToolBar/CS/mytoolbar.cs#2)]
 [!code-vb[ToolBar#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ToolBar/VB/mytoolbar.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolBar.ToolBarButtonCollection.RemoveAt(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">位置を示すインデックス、<see cref="T:System.Windows.Forms.ToolBarButton" />コレクション内で。</param>
        <summary>ツール バー ボタンのコレクションから指定したボタンを削除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Remove%2A>メソッドの削除、<xref:System.Windows.Forms.ToolBarButton>で指定した場所にある、<xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection>です。 すべてを削除する場合<xref:System.Windows.Forms.ToolBarButton>をコレクションからコントロールを使用して、<xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Clear%2A>メソッドです。  
  
   
  
## Examples  
 次のコード例が削除最後<xref:System.Windows.Forms.ToolBarButton>上、<xref:System.Windows.Forms.ToolBar>です。 削除する、ツール バー ボタンのインデックス値を設定、<xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Count%2A>プロパティから、1 を引いたので、<xref:System.Windows.Forms.ToolBarButton>コレクションは、0 から始まるインデックス。  
  
 [!code-cpp[Classic ToolBar.ToolBarButtonCollection.RemoveAt Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ToolBar.ToolBarButtonCollection.RemoveAt Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ToolBar.ToolBarButtonCollection.RemoveAt Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ToolBar.ToolBarButtonCollection.RemoveAt Example/CS/source.cs#1)]
 [!code-vb[Classic ToolBar.ToolBarButtonCollection.RemoveAt Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ToolBar.ToolBarButtonCollection.RemoveAt Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index" />値が 0 未満か、コレクション内のボタンの数を超えています。</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveByKey">
      <MemberSignature Language="C#" Value="public virtual void RemoveByKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveByKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolBar.ToolBarButtonCollection.RemoveByKey(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">名前、<see cref="T:System.Windows.Forms.ToolBarButton" />をコレクションから削除します。</param>
        <summary>削除、<see cref="T:System.Windows.Forms.ToolBarButton" />コレクションから指定されたキーにします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ToolBarButton.Name%2A>プロパティのキーに対応する<xref:System.Windows.Forms.ToolBarButton>で、<xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection>です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array dest, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array dest, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolBar.ToolBarButtonCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dest" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dest"><see cref="T:System.Array" /> から要素がコピーされる 1 次元の <see cref="T:System.Collections.ICollection" />。 <see cref="T:System.Array" /> には、0 から始まるインデックス番号が必要です。</param>
        <param name="index">内の 0 から始まるインデックス<c>dest</c>コピーの開始位置。</param>
        <summary><see cref="T:System.Collections.ICollection" /> の要素を <see cref="T:System.Array" /> にコピーします。<see cref="T:System.Array" /> の特定のインデックスからコピーが開始されます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection> が <xref:System.Collections.ICollection> インターフェイスにキャストされた場合にのみ使用できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolBar.ToolBarButtonCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コレクションへのアクセスが同期されている (スレッド セーフである) かどうかを示す値を取得します。</summary>
        <value>
          常に <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection> が <xref:System.Collections.ICollection> インターフェイスにキャストされた場合にのみ使用できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolBar.ToolBarButtonCollection.System#Collections#ICollection#SyncRoot" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ボタンのコレクションへのアクセスを同期するために使用できるオブジェクトを取得します。</summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection> が <xref:System.Collections.ICollection> インターフェイスにキャストされた場合にのみ使用できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object button);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object button) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolBar.ToolBarButtonCollection.System#Collections#IList#Add(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="button" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="button"><see cref="T:System.Windows.Forms.ToolBarButton" />に既存のすべてのボタンの後に追加します。</param>
        <summary>ツール バー ボタンのコレクションの末尾に、指定したツール バー ボタンを追加します。</summary>
        <returns>0 から始まるインデックス値、<see cref="T:System.Windows.Forms.ToolBarButton" />コレクションに追加します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection> が <xref:System.Collections.IList> インターフェイスにキャストされた場合にのみ使用できます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="button" /> が <see cref="T:System.Windows.Forms.ToolBarButton" /> ではありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object button);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object button) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolBar.ToolBarButtonCollection.System#Collections#IList#Contains(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="button" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="button">コレクション内で検索する項目。</param>
        <summary>コレクションに特定の値が格納されているかどうかを判断します。</summary>
        <returns>
          <see langword="true" />コレクション内の項目が見つかった場合それ以外の場合、<see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection> が <xref:System.Collections.IList> インターフェイスにキャストされた場合にのみ使用できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object button);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object button) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolBar.ToolBarButtonCollection.System#Collections#IList#IndexOf(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="button" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="button">コレクション内で検索する項目。</param>
        <summary>コレクション内の特定の項目のインデックスを決定します。</summary>
        <returns>リストに存在する場合は <paramref name="button" /> のインデックス。それ以外の場合は -1。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection> が <xref:System.Collections.IList> インターフェイスにキャストされた場合にのみ使用できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object button);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object button) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolBar.ToolBarButtonCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="button" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">ツール バー ボタンを挿入するコレクション内の位置を示すインデックス。</param>
        <param name="button">挿入する <see cref="T:System.Windows.Forms.ToolBarButton" />。</param>
        <summary>指定した位置にツール バー ボタンのコレクションに既存のツール バー ボタンを挿入します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection> が <xref:System.Collections.IList> インターフェイスにキャストされた場合にのみ使用できます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="button" /> が <see cref="T:System.Windows.Forms.ToolBarButton" /> ではありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolBar.ToolBarButtonCollection.System#Collections#IList#IsFixedSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コレクションが固定サイズかどうかを示す値を取得します。</summary>
        <value>
          常に <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection> が <xref:System.Collections.IList> インターフェイスにキャストされた場合にのみ使用できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolBar.ToolBarButtonCollection.System#Collections#IList#Item(System.Int32)" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">取得または設定する要素の、0 から始まるインデックス番号。</param>
        <summary>取得または指定したインデックス位置の項目を設定します。</summary>
        <value>指定したインデックス位置にある要素。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection> が <xref:System.Collections.IList> インターフェイスにキャストされた場合にのみ使用できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object button);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object button) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolBar.ToolBarButtonCollection.System#Collections#IList#Remove(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="button" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="button"><see cref="T:System.Object" /> から削除する <see cref="T:System.Collections.IList" />。</param>
        <summary>コレクションから最初に見つかった位置の項目を削除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection> が <xref:System.Collections.IList> インターフェイスにキャストされた場合にのみ使用できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
