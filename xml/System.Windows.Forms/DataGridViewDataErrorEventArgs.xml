<Type Name="DataGridViewDataErrorEventArgs" FullName="System.Windows.Forms.DataGridViewDataErrorEventArgs">
  <TypeSignature Language="C#" Value="public class DataGridViewDataErrorEventArgs : System.Windows.Forms.DataGridViewCellCancelEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataGridViewDataErrorEventArgs extends System.Windows.Forms.DataGridViewCellCancelEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataGridViewDataErrorEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.DataGridViewCellCancelEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><see cref="E:System.Windows.Forms.DataGridView.DataError" /> イベントのデータを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 処理、<xref:System.Windows.Forms.DataGridView.DataError>イベントできます (たとえば、外部データ ソース) をコントロールの外部コードによってスローされる例外を処理します。 使用して、<xref:System.Windows.Forms.DataGridViewDataErrorEventArgs.Context%2A>プロパティの状態を判断、<xref:System.Windows.Forms.DataGridView>例外時にします。 使用して、<xref:System.Windows.Forms.DataGridViewDataErrorEventArgs.Exception%2A>例外データを取得するプロパティです。 追加のイベント ハンドラーによって例外を処理する場合は、設定、<xref:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException%2A>プロパティを`true`です。  
  
 <xref:System.Windows.Forms.DataGridViewCellCancelEventArgs.ColumnIndex%2A>と<xref:System.Windows.Forms.DataGridViewCellCancelEventArgs.RowIndex%2A>プロパティは、通常、データ エラーが発生したセルを示します。 外部データ ソースでエラーが発生するときにただし、データ ソースでは、エラーが発生した列が提供されません可能性があります。 ここで、<xref:System.Windows.Forms.DataGridViewCellCancelEventArgs.ColumnIndex%2A>プロパティは通常、エラーの発生時に現在のセルの列を示します。  
  
   
  
## Examples  
 次のコード例は、によって提供される情報に応答する方法を示します、<xref:System.Windows.Forms.DataGridViewDataErrorEventArgs>クラスです。 この例で使用できる例の一部である、<xref:System.Windows.Forms.DataGridViewComboBoxColumn>クラスの概要に関するトピック。  
  
 [!code-cpp[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#50](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/CPP/employees.cpp#50)]
 [!code-csharp[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#50](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/CS/employees.cs#50)]
 [!code-vb[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#50](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/VB/employees.vb#50)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataGridViewDataErrorEventArgs (Exception exception, int columnIndex, int rowIndex, System.Windows.Forms.DataGridViewDataErrorContexts context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Exception exception, int32 columnIndex, int32 rowIndex, valuetype System.Windows.Forms.DataGridViewDataErrorContexts context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewDataErrorEventArgs.#ctor(System.Exception,System.Int32,System.Int32,System.Windows.Forms.DataGridViewDataErrorContexts)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" />
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="context" Type="System.Windows.Forms.DataGridViewDataErrorContexts" />
      </Parameters>
      <Docs>
        <param name="exception">発生した例外。</param>
        <param name="columnIndex">発生したセルの列のインデックス、<see cref="E:System.Windows.Forms.DataGridView.DataError" />です。</param>
        <param name="rowIndex">発生したセルの行インデックス、<see cref="E:System.Windows.Forms.DataGridView.DataError" />です。</param>
        <param name="context">ビットごとの組み合わせ<see cref="T:System.Windows.Forms.DataGridViewDataErrorContexts" />エラーが発生したコンテキストを示す値。</param>
        <summary><see cref="T:System.Windows.Forms.DataGridViewDataErrorEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewDataErrorContexts Context { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataGridViewDataErrorContexts Context" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.Context" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewDataErrorContexts</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>状態に関する詳細を取得、<see cref="T:System.Windows.Forms.DataGridView" />エラーが発生しました。</summary>
        <value>ビットごとの組み合わせ、<see cref="T:System.Windows.Forms.DataGridViewDataErrorContexts" />エラーが発生したコンテキストを指定する値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 メンバー、<xref:System.Windows.Forms.DataGridViewDataErrorContexts>列挙体は、演算を使用して組み合わせることができます`OR`データ バインドの状態を表す演算子<xref:System.Windows.Forms.DataGridView>データ エラーが発生しました。 たとえば、ユーザー (日付を必要とするセルの名前を入力します) など、無効なセル値を入力し、別のセルを選択、<xref:System.Windows.Forms.DataGridView>は無効なセルの値をコミットを再試行してください。 コミットが失敗したときに、<xref:System.Windows.Forms.DataGridView>が生成されます、<xref:System.Windows.Forms.DataGridView.DataError>イベントが<xref:System.Windows.Forms.DataGridViewDataErrorEventArgs.Context%2A>の値を持つ<xref:System.Windows.Forms.DataGridViewDataErrorContexts.Commit>と<xref:System.Windows.Forms.DataGridViewDataErrorContexts.CurrentCellChange>です。  
  
   
  
## Examples  
 次のコード例では、エラーのコンテキストを調査する方法を示します。 この例で使用できる例の一部である、<xref:System.Windows.Forms.DataGridViewComboBoxColumn>クラスの概要に関するトピック。  
  
 [!code-cpp[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#50](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/CPP/employees.cpp#50)]
 [!code-csharp[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#50](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/CS/employees.cs#50)]
 [!code-vb[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#50](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/VB/employees.vb#50)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.Exception" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>エラーを表す例外を取得します。</summary>
        <value><see cref="T:System.Exception" />エラーを表すです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 1 つ以上の例外を処理する<xref:System.Windows.Forms.DataGridViewDataErrorEventHandler>を設定して、ハンドラーの最後にもう一度例外をスローする、<xref:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException%2A>プロパティを`true`です。  
  
   
  
## Examples  
 次のコード例では、チェックを示しています、<xref:System.Windows.Forms.DataGridViewDataErrorEventArgs.Exception%2A>プロパティです。 この例で使用できる例の一部である、<xref:System.Windows.Forms.DataGridViewComboBoxColumn>クラスの概要に関するトピック。  
  
 [!code-cpp[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#50](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/CPP/employees.cpp#50)]
 [!code-csharp[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#50](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/CS/employees.cs#50)]
 [!code-vb[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#50](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/VB/employees.vb#50)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThrowException">
      <MemberSignature Language="C#" Value="public bool ThrowException { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ThrowException" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または後に例外をスローするかどうかを示す値を設定、<see cref="T:System.Windows.Forms.DataGridViewDataErrorEventHandler" />デリゲートは、操作を終了します。</summary>
        <value>
          <see langword="true" />例外をスローする場合それ以外の場合、<see langword="false" />です。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティを設定`false`場合、<xref:System.Windows.Forms.DataGridViewDataErrorEventHandler>によって表される例外に取り組んでおり、<xref:System.Windows.Forms.DataGridViewDataErrorEventArgs.Exception%2A>プロパティ、およびする、別の例外を反映しないように<xref:System.Windows.Forms.DataGridViewDataErrorEventHandler>を処理することがあります、<xref:System.Windows.Forms.DataGridView.DataError>イベント。  
  
 デバッグのため、例外が反映され、スタック トレース、エラーのコンテキストに関する情報を検査すると便利ですができます。  
  
   
  
## Examples  
 次のコード例では、使用方法を示します、<xref:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException%2A>例外がスローされないことを示すプロパティです。 この例で使用できる例の一部である、<xref:System.Windows.Forms.DataGridViewComboBoxColumn>クラスの概要に関するトピック。  
  
 [!code-cpp[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#50](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/CPP/employees.cpp#50)]
 [!code-csharp[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#50](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/CS/employees.cs#50)]
 [!code-vb[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#50](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/VB/employees.vb#50)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">このプロパティに設定すると<see langword="true" />、<see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.Exception" />プロパティの値が<see langword="null" />です。</exception>
      </Docs>
    </Member>
  </Members>
</Type>
