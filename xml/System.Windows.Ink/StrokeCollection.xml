<Type Name="StrokeCollection" FullName="System.Windows.Ink.StrokeCollection">
  <TypeSignature Language="C#" Value="public class StrokeCollection : System.Collections.ObjectModel.Collection&lt;System.Windows.Ink.Stroke&gt;, System.Collections.Specialized.INotifyCollectionChanged, System.ComponentModel.INotifyPropertyChanged" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit StrokeCollection extends System.Collections.ObjectModel.Collection`1&lt;class System.Windows.Ink.Stroke&gt; implements class System.Collections.Specialized.INotifyCollectionChanged, class System.ComponentModel.INotifyPropertyChanged" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Ink.StrokeCollection" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Collections.ObjectModel.Collection&lt;System.Windows.Ink.Stroke&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="!0">System.Windows.Ink.Stroke</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Specialized.INotifyCollectionChanged</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.INotifyPropertyChanged</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.StrokeCollectionConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><see cref="T:System.Windows.Ink.Stroke" /> オブジェクトのコレクションを表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Ink.StrokeCollection>ヒット テスト、領域、およびストロークを消去などの機能を実行することができます。 <xref:System.Windows.Controls.InkCanvas>コントロールより詳細に制御が必要な場合は、これらの関数の多くを実行、<xref:System.Windows.Controls.InkCanvas>を提供する、<xref:System.Windows.Ink.StrokeCollection>より多くのオプションを提供します。  
  
 次の表は、カスタム コントロールでデジタル インクの管理について説明する場所を一覧表示します。  
  
|これを行う.|この記事を参照してください。|  
|-----------------|----------------------|  
|デジタル インクを収集するコントロールを作成します。|[インク入力コントロールの作成](~/docs/framework/wpf/advanced/creating-an-ink-input-control.md)|  
|ユーザーがインクを選択できるコントロールを作成します。|[方法: カスタム コントロールからインクを選択](~/docs/framework/wpf/advanced/how-to-select-ink-from-a-custom-control.md)|  
|消しゴムのインクをユーザーができるコントロールを作成します。|[方法: カスタム コントロールでインクを消去します。](~/docs/framework/wpf/advanced/how-to-erase-ink-on-a-custom-control.md)|  
  
<a name="xamlAttributeUsage_StrokeCollection"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
  
```  
<object StrokeCollection="isfString"/>  
```  
  
<a name="xamlObjectElementUsage_StrokeCollection"></a>   
## <a name="xaml-object-element-usage"></a>XAML オブジェクト要素の使用方法  
  
```  
<object>isfString</object>  
```  
  
<a name="xamlValues_StrokeCollection"></a>   
## <a name="xaml-values"></a>XAML 値  
  
|用語|定義|  
|----------|----------------|  
|`isfString`|Base 64 にストロークを表す文字列は、インクをシリアル化形式 (ISF) をエンコードします。|  
  
   
  
## Examples  
 次の例は、いずれかでインクをコピーする方法を示します<xref:System.Windows.Controls.InkCanvas>別に<xref:System.Windows.Controls.InkCanvas>です。 この例では。  
  
-   2 つ<xref:System.Windows.Controls.InkCanvas>と呼ばれるオブジェクト`inkCanvas1`と`inkCanvas2`です。  
  
-   <xref:System.Windows.Controls.Primitives.ButtonBase.Click>イベントがイベント ハンドラーに接続されています。  
  
 [!code-csharp[StrokeCollectionMethods#21](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/Window2.xaml.cs#21)]
 [!code-vb[StrokeCollectionMethods#21](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/Window2.xaml.vb#21)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StrokeCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.Ink.StrokeCollection" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StrokeCollection (System.Collections.Generic.IEnumerable&lt;System.Windows.Ink.Stroke&gt; strokes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Ink.Stroke&gt; strokes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Ink.Stroke})" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="strokes" Type="System.Collections.Generic.IEnumerable&lt;System.Windows.Ink.Stroke&gt;" />
      </Parameters>
      <Docs>
        <param name="strokes">追加するストローク、<see cref="T:System.Windows.Ink.StrokeCollection" />です。</param>
        <summary>新しいインスタンスを初期化、<see cref="T:System.Windows.Ink.StrokeCollection" />を指定したストロークを含むクラスです。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StrokeCollection (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.#ctor(System.IO.Stream)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">インクのデータを格納するストリーム。</param>
        <summary>初期化、<see cref="T:System.Windows.Ink.StrokeCollection" />から、指定した<see cref="T:System.IO.Stream" />インク シリアル化された形式 (ISF) のです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次の例では、保存および読み込み方法、<xref:System.Windows.Ink.StrokeCollection>です。 この例では、<xref:System.Windows.Controls.InkCanvas>と呼ばれる`inkCanvas1`です。  
  
 [!code-csharp[StrokeCollectionMethods#10](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/Window2.xaml.cs#10)]
 [!code-vb[StrokeCollectionMethods#10](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/Window2.xaml.vb#10)]  
[!code-csharp[StrokeCollectionMethods#11](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/Window2.xaml.cs#11)]
[!code-vb[StrokeCollectionMethods#11](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/Window2.xaml.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Windows.Ink.StrokeCollection strokes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Windows.Ink.StrokeCollection strokes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.Add(System.Windows.Ink.StrokeCollection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="strokes" Type="System.Windows.Ink.StrokeCollection" />
      </Parameters>
      <Docs>
        <param name="strokes">コレクションに追加する <see cref="T:System.Windows.Ink.StrokeCollection" />。</param>
        <summary>指定したストロークを追加、<see cref="T:System.Windows.Ink.StrokeCollection" />です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Ink.StrokeCollection.Add%2A> メソッドは、<xref:System.Windows.Ink.StrokeCollection.StrokesChanged> イベントを発生させます。  
  
   
  
## Examples  
 次の例は、いずれかでインクをコピーする方法を示します<xref:System.Windows.Controls.InkCanvas>別に<xref:System.Windows.Controls.InkCanvas>です。 この例では。  
  
-   2 つ<xref:System.Windows.Controls.InkCanvas>と呼ばれるオブジェクト`inkCanvas1`と`inkCanvas2`です。  
  
-   <xref:System.Windows.Controls.Primitives.ButtonBase.Click>イベントがイベント ハンドラーに接続されています。  
  
 [!code-csharp[StrokeCollectionMethods#21](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/Window2.xaml.cs#21)]
 [!code-vb[StrokeCollectionMethods#21](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/Window2.xaml.vb#21)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">A<see cref="T:System.Windows.Ink.Stroke" />で<paramref name="strokes" />のメンバーである、<see cref="T:System.Windows.Ink.StrokeCollection" />です。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="strokes" /> は <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddPropertyData">
      <MemberSignature Language="C#" Value="public void AddPropertyData (Guid propertyDataId, object propertyData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddPropertyData(valuetype System.Guid propertyDataId, object propertyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.AddPropertyData(System.Guid,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyDataId" Type="System.Guid" />
        <Parameter Name="propertyData" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="propertyDataId"><see cref="T:System.Guid" />カスタム プロパティに関連付けます。</param>
        <param name="propertyData">カスタム プロパティの値です。 <c>propertyData</c>型でなければなりません<see cref="T:System.Char" />、 <see cref="T:System.Byte" />、 <see cref="T:System.Int16" />、 <see cref="T:System.UInt16" />、 <see cref="T:System.Int32" />、 <see cref="T:System.UInt32" />、 <see cref="T:System.Int64" />、 <see cref="T:System.UInt64" />、 <see cref="T:System.Single" />、 <see cref="T:System.Double" />、 <see cref="T:System.DateTime" />、 <see cref="T:System.Boolean" />、 <see cref="T:System.String" />、 <see cref="T:System.Decimal" /> 、またはこれらのデータ型の配列を除く<see cref="T:System.String" />、これは許可されません。</param>
        <summary>カスタム プロパティを追加、<see cref="T:System.Windows.Ink.StrokeCollection" />です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Ink.StrokeCollection.AddPropertyData%2A>メソッドでは、カスタム プロパティを追加することができます、<xref:System.Windows.Ink.StrokeCollection>です。 余分な情報を含めることができますし、<xref:System.Windows.Ink.StrokeCollection>です。  
  
   
  
## Examples  
 次の例では、追加し、カスタム プロパティのデータを取得する方法を示します。 `AddTimeStamp_Click`メソッドを使用、<xref:System.Windows.Ink.StrokeCollection.AddPropertyData%2A>を現在の時刻を追加するメソッド、<xref:System.Windows.Ink.StrokeCollection>です。 `GetTimeStap_Click`メソッドを使用、<xref:System.Windows.Ink.StrokeCollection.GetPropertyData%2A>からのタイムスタンプを取得する方法を<xref:System.Windows.Ink.StrokeCollection>です。 この例では、<xref:System.Windows.Controls.InkCanvas>と呼ばれる`inkCanvas1`です。  
  
 [!code-csharp[StrokeCollectionMethods#12](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/Window2.xaml.cs#12)]
 [!code-vb[StrokeCollectionMethods#12](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/Window2.xaml.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="propertyDataId" /> が空の <see cref="T:System.Guid" /> です。  
  
 または  
  
 <paramref name="propertyData" />使用できるデータ型のいずれかではない、<see langword="Parameters" />セクションです。</exception>
      </Docs>
    </Member>
    <Member MemberName="ClearItems">
      <MemberSignature Language="C#" Value="protected override sealed void ClearItems ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ClearItems() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.ClearItems" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>すべてのストロークを消去、<see cref="T:System.Windows.Ink.StrokeCollection" />です。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clip">
      <MemberSignature Language="C#" Value="public void Clip (System.Collections.Generic.IEnumerable&lt;System.Windows.Point&gt; lassoPoints);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clip(class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Windows.Point&gt; lassoPoints) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.Clip(System.Collections.Generic.IEnumerable{System.Windows.Point})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lassoPoints" Type="System.Collections.Generic.IEnumerable&lt;System.Windows.Point&gt;" />
      </Parameters>
      <Docs>
        <param name="lassoPoints">型の配列<see cref="T:System.Drawing.Point" />にクリップする領域を指定します。</param>
        <summary>内のすべてのストロークを削除、<see cref="T:System.Windows.Ink.StrokeCollection" />の指定された境界の外側にある<see cref="T:System.Drawing.Point" />配列。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Ink.StrokeCollection.Clip%2A>メソッド内の最初と最後のポイントを接続する`lassoPoints`なげなわを作成します。  
  
 <xref:System.Windows.Ink.StrokeCollection.Clip%2A>メソッドが発生し、<xref:System.Windows.Ink.StrokeCollection.StrokesChanged>各イベント<xref:System.Windows.Ink.Stroke>クリップします。  
  
   
  
## Examples  
 次の例では、内のストロークをクリップする方法、<xref:System.Windows.Ink.StrokeCollection>です。 この例では、<xref:System.Windows.Controls.InkPresenter>と呼ばれる`presenter`です。  
  
 [!code-csharp[StrokeCollectionMethods#13](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/StrokeCollectionDemo.cs#13)]
 [!code-vb[StrokeCollectionMethods#13](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/StrokeCollectionDemo.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clip">
      <MemberSignature Language="C#" Value="public void Clip (System.Windows.Rect bounds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clip(valuetype System.Windows.Rect bounds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.Clip(System.Windows.Rect)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bounds" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="bounds">A<see cref="T:System.Windows.Rect" />にクリップする領域を指定します。</param>
        <summary>指定した四角形を指定した四角形を超えることはない新しいストロークにクリップされているすべてのストロークを置き換えます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 指定した四角形の完全外部にあるすべての線が削除されます。  
  
   
  
## Examples  
 次の例は、の境界の外側にあるインクを消去する方法を示します、<xref:System.Windows.Rect>です。 この例では、<xref:System.Windows.Controls.InkPresenter>と呼ばれる`presenter`です。  
  
 [!code-csharp[StrokeCollectionMethods#35](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/StrokeCollectionDemo.cs#35)]
 [!code-vb[StrokeCollectionMethods#35](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/StrokeCollectionDemo.vb#35)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Ink.StrokeCollection Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Ink.StrokeCollection Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.Clone" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Ink.StrokeCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>コピー、<see cref="T:System.Windows.Ink.StrokeCollection" />です。</summary>
        <returns><see cref="T:System.Windows.Ink.StrokeCollection" /> のコピー。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Ink.StrokeCollection.Clone%2A>メソッドは、各コピー <xref:System.Windows.Ink.Stroke> 、コレクションと新しい<xref:System.Windows.Ink.StrokeCollection>新しいストロークを参照します。  
  
   
  
## Examples  
 次の例は、いずれかでインクをコピーする方法を示します<xref:System.Windows.Controls.InkCanvas>別に<xref:System.Windows.Controls.InkCanvas>です。 この例では。  
  
-   2 つ<xref:System.Windows.Controls.InkCanvas>と呼ばれるオブジェクト`inkCanvas1`と`inkCanvas2.`  
  
-   <xref:System.Windows.Controls.Primitives.ButtonBase.Click>イベントがイベント ハンドラーに接続されています。  
  
 [!code-csharp[StrokeCollectionMethods#21](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/Window2.xaml.cs#21)]
 [!code-vb[StrokeCollectionMethods#21](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/Window2.xaml.vb#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainsPropertyData">
      <MemberSignature Language="C#" Value="public bool ContainsPropertyData (Guid propertyDataId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ContainsPropertyData(valuetype System.Guid propertyDataId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.ContainsPropertyData(System.Guid)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyDataId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="propertyDataId"><see cref="T:System.Windows.Ink.StrokeCollection" /> 内で検索される <see cref="T:System.Guid" />。</param>
        <summary>指定のカスタム プロパティの識別子があるかどうかを返します、<see cref="T:System.Windows.Ink.StrokeCollection" />です。</summary>
        <returns>
          <see langword="true" />指定のカスタム プロパティの識別子がの場合、 <see cref="T:System.Windows.Ink.StrokeCollection" />、それ以外の<see langword="false" />します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次の例では、カスタム プロパティをチェックする方法、<xref:System.Windows.Ink.StrokeCollection>です。 カスタム プロパティが関連付けられている場合`timestamp`、例では、そのカスタム プロパティを取得および表示、<xref:System.Windows.Ink.StrokeCollection>保存されました。 この例では、<xref:System.Windows.Controls.InkCanvas>と呼ばれる`inkCanvas1`です。  
  
 [!code-csharp[StrokeCollectionMethods#12](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/Window2.xaml.cs#12)]
 [!code-vb[StrokeCollectionMethods#12](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/Window2.xaml.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Draw">
      <MemberSignature Language="C#" Value="public void Draw (System.Windows.Media.DrawingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Draw(class System.Windows.Media.DrawingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.Draw(System.Windows.Media.DrawingContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Windows.Media.DrawingContext" />
      </Parameters>
      <Docs>
        <param name="context"><see cref="T:System.Windows.Media.DrawingContext" />を描画する、<see cref="T:System.Windows.Ink.StrokeCollection" />です。</param>
        <summary>ストロークを描画、<see cref="T:System.Windows.Ink.StrokeCollection" />です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次の例の縮小表示ビューを表示するカスタム要素を作成する、<xref:System.Windows.Controls.InkCanvas>です。 カスタムの要素への参照を保持する、<xref:System.Windows.Controls.InkCanvas>し、それ自体を再描画時に、<xref:System.Windows.Controls.InkCanvas.StrokeCollected>イベントが発生します。  
  
 [!code-csharp[StrokeCollectionMethods#33](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/Window3.xaml.cs#33)]
 [!code-vb[StrokeCollectionMethods#33](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/Window3.xaml.vb#33)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Erase">
      <MemberSignature Language="C#" Value="public void Erase (System.Collections.Generic.IEnumerable&lt;System.Windows.Point&gt; lassoPoints);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Erase(class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Windows.Point&gt; lassoPoints) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.Erase(System.Collections.Generic.IEnumerable{System.Windows.Point})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lassoPoints" Type="System.Collections.Generic.IEnumerable&lt;System.Windows.Point&gt;" />
      </Parameters>
      <Docs>
        <param name="lassoPoints">型の配列<see cref="T:System.Drawing.Point" />消去する領域を指定します。</param>
        <summary>指定された領域の境界内にあるインクを削除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Ink.StrokeCollection.Erase%2A>メソッド内の最初と最後のポイントを接続する`lassoPoints`なげなわを作成します。  
  
 <xref:System.Windows.Ink.StrokeCollection>後に新しいストロークを含めることが、<xref:System.Windows.Ink.StrokeCollection.Erase%2A>メソッドが呼び出されます。 たとえば、指定された領域は、中央のを通じて、 <xref:System.Windows.Ink.Stroke>、消去メソッドを削除する<xref:System.Windows.Ink.Stroke>し、2 つの新しいストロークを作成します。  
  
 <xref:System.Windows.Ink.StrokeCollection.Erase%2A>メソッドが発生し、<xref:System.Windows.Ink.StrokeCollection.StrokesChanged>各イベント<xref:System.Windows.Ink.Stroke>を消去します。  
  
   
  
## Examples  
 次の例は、のストロークを消去する方法を示します、<xref:System.Windows.Ink.StrokeCollection>です。 この例では、<xref:System.Windows.Controls.InkPresenter>と呼ばれる`presenter`です。  
  
 [!code-csharp[StrokeCollectionMethods#2](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/StrokeCollectionDemo.cs#2)]
 [!code-vb[StrokeCollectionMethods#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/StrokeCollectionDemo.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Erase">
      <MemberSignature Language="C#" Value="public void Erase (System.Windows.Rect bounds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Erase(valuetype System.Windows.Rect bounds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.Erase(System.Windows.Rect)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bounds" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="bounds">消去する領域を指定する <see cref="T:System.Windows.Rect" />。</param>
        <summary>指定された四角形でクリップされているすべてのストロークを、指定された四角形の範囲に入らない新しいストロークに置き換えます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Ink.StrokeCollection>後に新しいストロークを含めることが、<xref:System.Windows.Ink.StrokeCollection.Erase%2A>メソッドが呼び出されます。 たとえば、指定された領域は、中央のを通じて、 <xref:System.Windows.Ink.Stroke>、消去メソッドを削除する<xref:System.Windows.Ink.Stroke>し、2 つの新しいストロークを作成します。  指定した四角形内に完全にあるすべての線が削除されます。  
  
 <xref:System.Windows.Ink.StrokeCollection.Erase%2A>メソッドが発生し、<xref:System.Windows.Ink.StrokeCollection.StrokesChanged>各イベント<xref:System.Windows.Ink.Stroke>を消去します。  
  
   
  
## Examples  
 次の例は、内でインクを消去する方法を示します、<xref:System.Windows.Rect>です。 この例では、<xref:System.Windows.Controls.InkPresenter>と呼ばれる`presenter`です。  
  
 [!code-csharp[StrokeCollectionMethods#34](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/StrokeCollectionDemo.cs#34)]
 [!code-vb[StrokeCollectionMethods#34](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/StrokeCollectionDemo.vb#34)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Erase">
      <MemberSignature Language="C#" Value="public void Erase (System.Collections.Generic.IEnumerable&lt;System.Windows.Point&gt; eraserPath, System.Windows.Ink.StylusShape eraserShape);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Erase(class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Windows.Point&gt; eraserPath, class System.Windows.Ink.StylusShape eraserShape) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.Erase(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Windows.Ink.StylusShape)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eraserPath" Type="System.Collections.Generic.IEnumerable&lt;System.Windows.Point&gt;" />
        <Parameter Name="eraserShape" Type="System.Windows.Ink.StylusShape" />
      </Parameters>
      <Docs>
        <param name="eraserPath">型の配列<see cref="T:System.Windows.Point" />消去するパスを指定します。</param>
        <param name="eraserShape">A<see cref="T:System.Windows.Ink.StylusShape" />消しゴムの形状を指定します。</param>
        <summary>指定したによって作成された地域がクリップされているすべてのストロークを置き換えます<see cref="T:System.Windows.Ink.StylusShape" />地域によってはクリップされません新しい線で指定したパスに沿ったです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Ink.StrokeCollection>後に新しいストロークを含めることが、<xref:System.Windows.Ink.StrokeCollection.Erase%2A>メソッドが呼び出されます。 たとえば場合、`path`の中央と交差する、 <xref:System.Windows.Ink.Stroke>、消去メソッドを削除する<xref:System.Windows.Ink.Stroke>し、2 つの新しいストロークを作成します。  
  
 <xref:System.Windows.Ink.StrokeCollection.Erase%2A>メソッドが発生し、<xref:System.Windows.Ink.StrokeCollection.StrokesChanged>各イベント<xref:System.Windows.Ink.Stroke>を消去します。  
  
   
  
## Examples  
 次の例では、特定のパスに沿ってインクを消去する方法を示します。 この例では、<xref:System.Windows.Controls.InkPresenter>と呼ばれる`presenter`です。  
  
 [!code-csharp[StrokeCollectionMethods#14](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/StrokeCollectionDemo.cs#14)]
 [!code-vb[StrokeCollectionMethods#14](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/StrokeCollectionDemo.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBounds">
      <MemberSignature Language="C#" Value="public System.Windows.Rect GetBounds ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Rect GetBounds() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.GetBounds" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>コレクション内のストロークの境界を返します。</summary>
        <returns>A<see cref="T:System.Windows.Rect" />内のストロークの境界を格納している、<see cref="T:System.Windows.Ink.StrokeCollection" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Ink.StrokeCollection.GetBounds%2A>メソッドを返します、 <xref:System.Windows.Rect> 、表示の外観を受け取る<xref:System.Windows.Ink.Stroke>です。 たとえば場合、 <xref:System.Windows.Ink.Stroke> 10 表示独立したピクセル (DIP) を<xref:System.Windows.Rect>の幅全体が含まれています、<xref:System.Windows.Ink.Stroke>です。  
  
   
  
## Examples  
 次の例は、の境界を取得する方法を示します、<xref:System.Windows.Ink.StrokeCollection>し、コントロール上で描画します。 この例では、<xref:System.Windows.Controls.InkCanvas>と呼ばれる`inkCanvas1`です。  
  
 [!code-csharp[StrokeCollectionMethods#20](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/Window2.xaml.cs#20)]
 [!code-vb[StrokeCollectionMethods#20](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/Window2.xaml.vb#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIncrementalLassoHitTester">
      <MemberSignature Language="C#" Value="public System.Windows.Ink.IncrementalLassoHitTester GetIncrementalLassoHitTester (int percentageWithinLasso);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Ink.IncrementalLassoHitTester GetIncrementalLassoHitTester(int32 percentageWithinLasso) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.GetIncrementalLassoHitTester(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Ink.IncrementalLassoHitTester</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="percentageWithinLasso" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="percentageWithinLasso">それぞれの最小割合<see cref="T:System.Windows.Ink.Stroke" />ヒントとして見なされるには、なげなわ含まする必要があります。</param>
        <summary>作成、<see cref="T:System.Windows.Ink.IncrementalLassoHitTester" />をヒット テスト、<see cref="T:System.Windows.Ink.StrokeCollection" />なげなわ (フリーハンド) パスにします。</summary>
        <returns><see cref="T:System.Windows.Ink.IncrementalLassoHitTester" />をヒット テスト、<see cref="T:System.Windows.Ink.StrokeCollection" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Ink.StrokeCollection.GetIncrementalLassoHitTester%2A>メソッドを返します、<xref:System.Windows.Ink.IncrementalLassoHitTester>考慮する、 <xref:System.Windows.Ink.Stroke> 「ヒット」なげなわパスがそれを囲むときにします。 これは、なげなわツールを使用して線を選択する機能などの機能を実装するために役立ちます。 <xref:System.Windows.Controls.InkCanvas>を使用して、<xref:System.Windows.Ink.IncrementalLassoHitTester>なげなわ選択ツールを実装します。  
  
   
  
## Examples  
 次の例は、取得する方法を示します、<xref:System.Windows.Ink.IncrementalLassoHitTester>なげなわツールを使用して線を選択するユーザーを有効にします。 ユーザーがインクを選択できるようにするコントロールを作成するを参照してください。[する方法: カスタム コントロールからの選択のインク](~/docs/framework/wpf/advanced/how-to-select-ink-from-a-custom-control.md)です。  
  
 [!code-csharp[StrokeCollectionMethods#17](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/InkSelector.cs#17)]
 [!code-vb[StrokeCollectionMethods#17](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/InkSelector.vb#17)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIncrementalStrokeHitTester">
      <MemberSignature Language="C#" Value="public System.Windows.Ink.IncrementalStrokeHitTester GetIncrementalStrokeHitTester (System.Windows.Ink.StylusShape eraserShape);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Ink.IncrementalStrokeHitTester GetIncrementalStrokeHitTester(class System.Windows.Ink.StylusShape eraserShape) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.GetIncrementalStrokeHitTester(System.Windows.Ink.StylusShape)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Ink.IncrementalStrokeHitTester</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eraserShape" Type="System.Windows.Ink.StylusShape" />
      </Parameters>
      <Docs>
        <param name="eraserShape">A<see cref="T:System.Windows.Ink.StylusShape" />スタイラスの先端を指定します。</param>
        <summary>作成、<see cref="T:System.Windows.Ink.IncrementalStrokeHitTester" />をヒット テスト、<see cref="T:System.Windows.Ink.StrokeCollection" />パス。</summary>
        <returns><see cref="T:System.Windows.Ink.IncrementalStrokeHitTester" />をヒット テスト、<see cref="T:System.Windows.Ink.StrokeCollection" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Ink.StrokeCollection.GetIncrementalStrokeHitTester%2A>メソッドを返します、<xref:System.Windows.Ink.IncrementalStrokeHitTester>考慮する、 <xref:System.Windows.Ink.Stroke> 「ヒット」消しゴムのパスとが交差しているときにします。 これは、一部を消去する機能などの機能を実装するために便利な<xref:System.Windows.Ink.Stroke>します。 <xref:System.Windows.Controls.InkCanvas>を使用して、<xref:System.Windows.Ink.IncrementalStrokeHitTester>ときに、<xref:System.Windows.Controls.InkCanvas.EditingMode%2A>プロパティに設定されている<xref:System.Windows.Controls.InkCanvasEditingMode.EraseByPoint>です。  
  
   
  
## Examples  
 次の例は、取得する方法を示します、<xref:System.Windows.Ink.IncrementalStrokeHitTester>の一部の消去に使用できる、<xref:System.Windows.Ink.Stroke>です。 ユーザーがインクを消去できるようにするコントロールを作成するを参照してください。[する方法: カスタム コントロールでインクを消去](~/docs/framework/wpf/advanced/how-to-erase-ink-on-a-custom-control.md)です。  
  
 [!code-csharp[InkEraser#4](~/samples/snippets/csharp/VS_Snippets_Wpf/InkEraser/CSharp/InkEraser.cs#4)]
 [!code-vb[InkEraser#4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkEraser/VisualBasic/InkEraser.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyData">
      <MemberSignature Language="C#" Value="public object GetPropertyData (Guid propertyDataId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetPropertyData(valuetype System.Guid propertyDataId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.GetPropertyData(System.Guid)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyDataId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="propertyDataId"><see cref="T:System.Guid" />取得するカスタム プロパティに関連付けられています。</param>
        <summary>指定したに関連付けられているカスタム プロパティの値を返します<see cref="T:System.Guid" />です。</summary>
        <returns>指定したに関連付けられているカスタム プロパティの値<see cref="T:System.Guid" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Ink.StrokeCollection.AddPropertyData%2A>と<xref:System.Windows.Ink.StrokeCollection.GetPropertyData%2A>メソッドを使用すると、カスタム プロパティを追加、<xref:System.Windows.Ink.StrokeCollection>です。 余分な情報を含めることができますし、<xref:System.Windows.Ink.StrokeCollection>です。  
  
   
  
## Examples  
 次の例では、追加し、カスタム プロパティのデータを取得する方法を示します。 `AddTimeStamp_Click`メソッドを使用、<xref:System.Windows.Ink.StrokeCollection.AddPropertyData%2A>を現在の時刻を追加するメソッド、<xref:System.Windows.Ink.StrokeCollection>です。 `GetTimeStap_Click`メソッドを使用、<xref:System.Windows.Ink.StrokeCollection.GetPropertyData%2A>からのタイムスタンプを取得する方法を<xref:System.Windows.Ink.StrokeCollection>です。 この例では、<xref:System.Windows.Controls.InkCanvas>と呼ばれる`inkCanvas1`です。  
  
 [!code-csharp[StrokeCollectionMethods#12](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/Window2.xaml.cs#12)]
 [!code-vb[StrokeCollectionMethods#12](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/Window2.xaml.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="propertyDataId" />カスタム プロパティに関連付けられていない、<see cref="T:System.Windows.Ink.StrokeCollection" />です。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyDataIds">
      <MemberSignature Language="C#" Value="public Guid[] GetPropertyDataIds ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Guid[] GetPropertyDataIds() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.GetPropertyDataIds" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>すべてのカスタム プロパティに関連付けられている Guid を返します、<see cref="T:System.Windows.Ink.StrokeCollection" />です。</summary>
        <returns>型の配列<see cref="T:System.Guid" />を表すカスタム プロパティの識別子。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次の例からカスタム プロパティの識別子を取得する方法を示します、<xref:System.Windows.Ink.StrokeCollection>です。  
  
 [!code-csharp[StrokeCollectionMethods#27](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/Window2.xaml.cs#27)]
 [!code-vb[StrokeCollectionMethods#27](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/Window2.xaml.vb#27)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HitTest">
      <MemberSignature Language="C#" Value="public System.Windows.Ink.StrokeCollection HitTest (System.Windows.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Ink.StrokeCollection HitTest(valuetype System.Windows.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.HitTest(System.Windows.Point)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Ink.StrokeCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point">ヒット テストをポイントします。</param>
        <summary>指定した点と交差するストロークのコレクションを返します。</summary>
        <returns>コレクション<see cref="T:System.Windows.Ink.Stroke" />指定した点と交差するオブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次の例は、指定したと交差するストロークを取得する方法を示します<xref:System.Windows.Point>です。 この例では、<xref:System.Windows.Controls.InkPresenter>と呼ばれる`presenter`です。  
  
 [!code-csharp[StrokeCollectionMethods#15](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/StrokeCollectionDemo.cs#15)]
 [!code-vb[StrokeCollectionMethods#15](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/StrokeCollectionDemo.vb#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HitTest">
      <MemberSignature Language="C#" Value="public System.Windows.Ink.StrokeCollection HitTest (System.Collections.Generic.IEnumerable&lt;System.Windows.Point&gt; lassoPoints, int percentageWithinLasso);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Ink.StrokeCollection HitTest(class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Windows.Point&gt; lassoPoints, int32 percentageWithinLasso) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.HitTest(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Ink.StrokeCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lassoPoints" Type="System.Collections.Generic.IEnumerable&lt;System.Windows.Point&gt;" />
        <Parameter Name="percentageWithinLasso" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="lassoPoints">型の配列<see cref="T:System.Windows.Point" />ことを表しますにヒットする領域の境界をテストします。</param>
        <param name="percentageWithinLasso">許容される長さ、 <see cref="T:System.Windows.Ink.Stroke" />、割合としての<c>lassoPoints</c>を格納します。</param>
        <summary>ストロークに必要な最小限の長さの指定した割合の指定された領域内のコレクションを返します。</summary>
        <returns>A<see cref="T:System.Windows.Ink.StrokeCollection" />のストロークを少なくともを持つ指定したパーセンテージ、<see cref="T:System.Windows.Point" />配列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次の例は、少なくとも 80% から指定したなげなわ内にあるすべてのストロークを削除する方法を示します、<xref:System.Windows.Ink.StrokeCollection>です。 これにより、カスタム コントロールが有効にするユーザーをなげなわを使用してインクを選択できます。 ユーザーがなげなわを使用してインクを選択できるようにするコントロールを作成するを参照してください。[する方法: カスタム コントロールからのインクの選択](~/docs/framework/wpf/advanced/how-to-select-ink-from-a-custom-control.md)です。  
  
 [!code-csharp[StrokeCollectionMethods#16](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/StrokeCollectionDemo.cs#16)]
 [!code-vb[StrokeCollectionMethods#16](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/StrokeCollectionDemo.vb#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="lassoPoints" /> は <see langword="null" /> です。  
  
 -または-  
  
 <paramref name="percentageWithinLasso" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="lassoPoints" />空の配列が含まれています。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="percentageWithinLasso" />0 未満か、100 より大きい。</exception>
      </Docs>
    </Member>
    <Member MemberName="HitTest">
      <MemberSignature Language="C#" Value="public System.Windows.Ink.StrokeCollection HitTest (System.Collections.Generic.IEnumerable&lt;System.Windows.Point&gt; path, System.Windows.Ink.StylusShape stylusShape);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Ink.StrokeCollection HitTest(class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Windows.Point&gt; path, class System.Windows.Ink.StylusShape stylusShape) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.HitTest(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Windows.Ink.StylusShape)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Ink.StrokeCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.Collections.Generic.IEnumerable&lt;System.Windows.Point&gt;" />
        <Parameter Name="stylusShape" Type="System.Windows.Ink.StylusShape" />
      </Parameters>
      <Docs>
        <param name="path">入力配列<see cref="T:System.Windows.Point" />ことを表しますにヒットするパスをテストします。</param>
        <param name="stylusShape"><see cref="T:System.Windows.Ink.StylusShape" />の形状を指定する<c>eraserPath</c>です。</param>
        <summary>指定されたパスと交差するストロークのコレクションを返します。</summary>
        <returns>A<see cref="T:System.Windows.Ink.StrokeCollection" />と交差するストロークの<paramref name="path" />します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次の例は、すべてのストロークのパスと交差するによって作成されるの色を変更、<xref:System.Windows.Point>配列。  この例では、<xref:System.Windows.Controls.InkPresenter>と呼ばれる`presenter`です。  
  
 [!code-csharp[StrokeCollectionMethods#37](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/StrokeCollectionDemo.cs#37)]
 [!code-vb[StrokeCollectionMethods#37](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/StrokeCollectionDemo.vb#37)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HitTest">
      <MemberSignature Language="C#" Value="public System.Windows.Ink.StrokeCollection HitTest (System.Windows.Point point, double diameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Ink.StrokeCollection HitTest(valuetype System.Windows.Point point, float64 diameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.HitTest(System.Windows.Point,System.Double)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Ink.StrokeCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
        <Parameter Name="diameter" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="point">ヒット テストを行う対象の <see cref="T:System.Windows.Point" />。</param>
        <param name="diameter">周囲のサイズ、<see cref="T:System.Windows.Point" />ヒット テストを行う。</param>
        <summary>指定した領域と交差するストロークのコレクションを返します。</summary>
        <returns>コレクション<see cref="T:System.Windows.Ink.Stroke" />指定した点と交差するオブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次の例は、指定したと交差するストロークを取得する方法を示します<xref:System.Windows.Point>です。 この例では、<xref:System.Windows.Controls.InkPresenter>と呼ばれる`presenter`です。  
  
 [!code-csharp[StrokeCollectionMethods#15](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/StrokeCollectionDemo.cs#15)]
 [!code-vb[StrokeCollectionMethods#15](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/StrokeCollectionDemo.vb#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HitTest">
      <MemberSignature Language="C#" Value="public System.Windows.Ink.StrokeCollection HitTest (System.Windows.Rect bounds, int percentageWithinBounds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Ink.StrokeCollection HitTest(valuetype System.Windows.Rect bounds, int32 percentageWithinBounds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.HitTest(System.Windows.Rect,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Ink.StrokeCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bounds" Type="System.Windows.Rect" />
        <Parameter Name="percentageWithinBounds" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bounds">A<see cref="T:System.Windows.Rect" />にヒットする境界のテストを指定します。</param>
        <param name="percentageWithinBounds">最小値には、ヒントとして見なされるには、境界内に存在する必要があります、ストロークの長さが必要です。</param>
        <summary>指定した四角形内で長さの指定された割合以上であるストロークのコレクションを返します。</summary>
        <returns>A<see cref="T:System.Windows.Ink.StrokeCollection" />のストロークを少なくともを持つ指定したパーセンテージ、<see cref="T:System.Windows.Rect" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次の例は、少なくとも 50% の範囲内にあるストロークを消去、<xref:System.Windows.Rect>です。 この例では、<xref:System.Windows.Controls.InkPresenter>と呼ばれる`presenter`です。  
  
 [!code-csharp[StrokeCollectionMethods#36](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/StrokeCollectionDemo.cs#36)]
 [!code-vb[StrokeCollectionMethods#36](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/StrokeCollectionDemo.vb#36)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Windows.Ink.Stroke stroke);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Windows.Ink.Stroke stroke) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.IndexOf(System.Windows.Ink.Stroke)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stroke" Type="System.Windows.Ink.Stroke" />
      </Parameters>
      <Docs>
        <param name="stroke">つながるようにひと筆の位置が必要です。</param>
        <summary>指定したインデックスを返します<see cref="T:System.Windows.Ink.Stroke" />で、<see cref="T:System.Windows.Ink.StrokeCollection" />です。</summary>
        <returns>ストロークのインデックス。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Ink.StrokeCollection.IndexOf%2A>場合、メソッドは-1 を返します`stroke`のメンバーではない、<xref:System.Windows.Ink.StrokeCollection>です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InkSerializedFormat">
      <MemberSignature Language="C#" Value="public static readonly string InkSerializedFormat;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string InkSerializedFormat" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Ink.StrokeCollection.InkSerializedFormat" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>インク データの持続性のネイティブ形式を表します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Windows.Ink.StrokeCollection.InkSerializedFormat>の形式を指定するフィールド、<xref:System.Windows.Ink.StrokeCollection>をコピーする場合などのデータを転送する場合、<xref:System.Windows.Ink.StrokeCollection>をクリップボードにします。  
  
   
  
## Examples  
 次の例をコピーする方法を示しています、<xref:System.Windows.Ink.StrokeCollection>をクリップボードにします。 この例で指定する、<xref:System.Windows.Ink.StrokeCollection>が設定されてでインクをシリアル化形式 (ISF)、その他のプログラムなど、Microsoft Office Word でコピーしたデータを受け入れることができます。  
  
 [!code-csharp[StrokeCollectionMethods#5](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/StrokeCollectionDemo.cs#5)]
 [!code-vb[StrokeCollectionMethods#5](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/StrokeCollectionDemo.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertItem">
      <MemberSignature Language="C#" Value="protected override sealed void InsertItem (int index, System.Windows.Ink.Stroke stroke);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InsertItem(int32 index, class System.Windows.Ink.Stroke stroke) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.InsertItem(System.Int32,System.Windows.Ink.Stroke)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="stroke" Type="System.Windows.Ink.Stroke" />
      </Parameters>
      <Docs>
        <param name="index">指定したインデックス。</param>
        <param name="stroke">指定されたストローク</param>
        <summary>ストロークを指定されたインデックス位置の <see cref="T:System.Windows.Ink.StrokeCollection" /> に挿入します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPropertyChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnPropertyChanged (System.ComponentModel.PropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPropertyChanged(class System.ComponentModel.PropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.PropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データ。</param>
        <summary>されたときに発生<see cref="T:System.Windows.Ink.StrokeCollection" />プロパティが変更されました。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPropertyDataChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnPropertyDataChanged (System.Windows.Ink.PropertyDataChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPropertyDataChanged(class System.Windows.Ink.PropertyDataChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.OnPropertyDataChanged(System.Windows.Ink.PropertyDataChangedEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Ink.PropertyDataChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Windows.Ink.PropertyDataChangedEventArgs" />。</param>
        <summary><see cref="E:System.Windows.Ink.StrokeCollection.PropertyDataChanged" /> イベントを発生させます。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnStrokesChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnStrokesChanged (System.Windows.Ink.StrokeCollectionChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStrokesChanged(class System.Windows.Ink.StrokeCollectionChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.OnStrokesChanged(System.Windows.Ink.StrokeCollectionChangedEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Ink.StrokeCollectionChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Windows.Ink.StrokeCollectionChangedEventArgs" />。</param>
        <summary><see cref="E:System.Windows.Ink.StrokeCollection.StrokesChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。  
  
 <xref:System.Windows.Ink.StrokeCollection.OnStrokesChanged%2A>メソッドでは、派生クラスが派生クラスでイベントを処理するための手法をお勧めするデリゲートを結び付けずに、イベントを処理することもできます。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>オーバーライドする場合<see cref="M:System.Windows.Ink.StrokeCollection.OnStrokesChanged(System.Windows.Ink.StrokeCollectionChangedEventArgs)" />派生クラスでは、呼び出しに必ず、<see cref="M:System.Windows.Ink.StrokeCollection.OnStrokesChanged(System.Windows.Ink.StrokeCollectionChangedEventArgs)" />デリゲートを登録するための基本クラスのメソッドは、イベントを受信します。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="PropertyDataChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Ink.PropertyDataChangedEventHandler PropertyDataChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Ink.PropertyDataChangedEventHandler PropertyDataChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Ink.StrokeCollection.PropertyDataChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Ink.PropertyDataChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>カスタム プロパティが追加または削除するときに発生、<see cref="T:System.Windows.Ink.StrokeCollection" />です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次の例は、処理する方法を示します、<xref:System.Windows.Ink.StrokeCollection.PropertyDataChanged>イベント。 この例では、<xref:System.Guid>と呼ばれる`dateTimeGuid`と<xref:System.Windows.Ink.StrokeCollection.PropertyDataChanged>イベントは、この例で定義されているイベント ハンドラーに関連付けられています。  
  
 [!code-csharp[StrokeCollectionMethods#29](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/StrokeCollectionDemo.cs#29)]
 [!code-vb[StrokeCollectionMethods#29](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/StrokeCollectionDemo.vb#29)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Windows.Ink.StrokeCollection strokes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Windows.Ink.StrokeCollection strokes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.Remove(System.Windows.Ink.StrokeCollection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="strokes" Type="System.Windows.Ink.StrokeCollection" />
      </Parameters>
      <Docs>
        <param name="strokes">コレクションから削除する <see cref="T:System.Windows.Ink.StrokeCollection" />。</param>
        <summary>指定したストロークをコレクションから削除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Ink.StrokeCollection.Remove%2A>メソッドが発生し、<xref:System.Windows.Ink.StrokeCollection.StrokesChanged>各イベント<xref:System.Windows.Ink.Stroke>が削除されます。  
  
   
  
## Examples  
 次の例は、少なくとも 80% から指定したなげなわ内にあるすべてのストロークを削除する方法を示します、<xref:System.Windows.Ink.StrokeCollection>です。 これにより、カスタム コントロールが有効にするユーザーをなげなわを使用してインクを選択できます。 ユーザーがなげなわを使用してインクを選択できるようにするコントロールを作成するを参照してください。[する方法: カスタム コントロールからのインクの選択](~/docs/framework/wpf/advanced/how-to-select-ink-from-a-custom-control.md)です。  
  
 [!code-csharp[StrokeCollectionMethods#16](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/StrokeCollectionDemo.cs#16)]
 [!code-vb[StrokeCollectionMethods#16](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/StrokeCollectionDemo.vb#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveItem">
      <MemberSignature Language="C#" Value="protected override sealed void RemoveItem (int index);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RemoveItem(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.RemoveItem(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">指定したインデックス。</param>
        <summary>指定されたインデックス位置にあるストロークを削除、<see cref="T:System.Windows.Ink.StrokeCollection" />です。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePropertyData">
      <MemberSignature Language="C#" Value="public void RemovePropertyData (Guid propertyDataId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemovePropertyData(valuetype System.Guid propertyDataId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.RemovePropertyData(System.Guid)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyDataId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="propertyDataId"><see cref="T:System.Guid" />を削除するカスタム プロパティに関連付けられています。</param>
        <summary>指定したに関連付けられているカスタム プロパティを削除<see cref="T:System.Guid" />です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次の例からカスタム プロパティを削除する方法を示します、<xref:System.Windows.Ink.StrokeCollection>です。 この例では、<xref:System.Windows.Controls.InkCanvas>と呼ばれる`inkCanvas1`と<xref:System.Guid>と呼ばれる`timestamp`です。  
  
 [!code-csharp[StrokeCollectionMethods#28](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/Window2.xaml.cs#28)]
 [!code-vb[StrokeCollectionMethods#28](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/Window2.xaml.vb#28)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public void Replace (System.Windows.Ink.Stroke strokeToReplace, System.Windows.Ink.StrokeCollection strokesToReplaceWith);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Replace(class System.Windows.Ink.Stroke strokeToReplace, class System.Windows.Ink.StrokeCollection strokesToReplaceWith) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.Replace(System.Windows.Ink.Stroke,System.Windows.Ink.StrokeCollection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="strokeToReplace" Type="System.Windows.Ink.Stroke" />
        <Parameter Name="strokesToReplaceWith" Type="System.Windows.Ink.StrokeCollection" />
      </Parameters>
      <Docs>
        <param name="strokeToReplace"><see cref="T:System.Windows.Ink.Stroke" />を置き換えます。</param>
        <param name="strokesToReplaceWith">コピー元 <see cref="T:System.Windows.Ink.StrokeCollection" />。</param>
        <summary>指定した置換<see cref="T:System.Windows.Ink.Stroke" />、指定した<see cref="T:System.Windows.Ink.StrokeCollection" />です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Ink.StrokeCollection.Replace%2A> メソッドは、<xref:System.Windows.Ink.StrokeCollection.StrokesChanged> イベントを発生させます。  
  
   
  
## Examples  
 次の例では、選択されたストロークを交換する方法、<xref:System.Windows.Controls.InkCanvas>別<xref:System.Windows.Ink.StrokeCollection>です。 この例では、<xref:System.Windows.Controls.InkCanvas>と呼ばれる`inkCanvas1`です。  
  
 [!code-csharp[StrokeCollectionMethods#7](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/Window2.xaml.cs#7)]
 [!code-vb[StrokeCollectionMethods#7](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/Window2.xaml.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="strokesToReplace" /> が空です。  
  
 または  
  
 <paramref name="strokesToReplaceWith" /> が空です。  
  
 または  
  
 A<see cref="T:System.Windows.Ink.Stroke" />で<paramref name="strokesToReplaceWith" />既に<paramref name="strokesToReplace" />です。</exception>
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public void Replace (System.Windows.Ink.StrokeCollection strokesToReplace, System.Windows.Ink.StrokeCollection strokesToReplaceWith);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Replace(class System.Windows.Ink.StrokeCollection strokesToReplace, class System.Windows.Ink.StrokeCollection strokesToReplaceWith) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.Replace(System.Windows.Ink.StrokeCollection,System.Windows.Ink.StrokeCollection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="strokesToReplace" Type="System.Windows.Ink.StrokeCollection" />
        <Parameter Name="strokesToReplaceWith" Type="System.Windows.Ink.StrokeCollection" />
      </Parameters>
      <Docs>
        <param name="strokesToReplace">コピー先 <see cref="T:System.Windows.Ink.StrokeCollection" />。</param>
        <param name="strokesToReplaceWith">コピー元 <see cref="T:System.Windows.Ink.StrokeCollection" />。</param>
        <summary>指定した置換<see cref="T:System.Windows.Ink.StrokeCollection" />を新しい<see cref="T:System.Windows.Ink.StrokeCollection" />です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Ink.StrokeCollection.Replace%2A>メソッドが発生し、<xref:System.Windows.Ink.StrokeCollection.StrokesChanged>各イベント<xref:System.Windows.Ink.Stroke>に置き換えられます。  
  
   
  
## Examples  
 次の例では、選択されたストロークを交換する方法、<xref:System.Windows.Controls.InkCanvas>別<xref:System.Windows.Ink.StrokeCollection>です。 この例では、<xref:System.Windows.Controls.InkCanvas>と呼ばれる`inkCanvas1`です。  
  
 [!code-csharp[StrokeCollectionMethods#7](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/Window2.xaml.cs#7)]
 [!code-vb[StrokeCollectionMethods#7](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/Window2.xaml.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="strokesToReplace" /> が空です。  
  
 または  
  
 <paramref name="strokesToReplaceWith" /> が空です。  
  
 または  
  
 A<see cref="T:System.Windows.Ink.Stroke" />で<paramref name="strokesToReplaceWith" />既に<paramref name="strokesToReplace." />  
  
 または  
  
 内のストローク<paramref name="strokesToReplaceWith" />が連続していません。</exception>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.Save(System.IO.Stream)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream"><see cref="T:System.IO.Stream" /> の保存先となる <see cref="T:System.Windows.Ink.StrokeCollection" />。</param>
        <summary>保存、<see cref="T:System.Windows.Ink.StrokeCollection" />を指定した<see cref="T:System.IO.Stream" />です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Ink.StrokeCollection.Save%2A>メソッド保存、<xref:System.Windows.Ink.StrokeCollection>インク シリアル化された形式 (ISF) として。  
  
   
  
## Examples  
 次の例では、保存、<xref:System.Windows.Ink.StrokeCollection>を使用してファイルを<xref:System.Windows.Ink.StrokeCollection.Save%28System.IO.Stream%2CSystem.Boolean%29>メソッドです。 この例では、<xref:System.Windows.Controls.InkCanvas>と呼ばれる`inkCanvas1`です。  
  
 [!code-csharp[StrokeCollectionMethods#10](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/Window2.xaml.cs#10)]
 [!code-vb[StrokeCollectionMethods#10](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/Window2.xaml.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public virtual void Save (System.IO.Stream stream, bool compress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Save(class System.IO.Stream stream, bool compress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.Save(System.IO.Stream,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="compress" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="stream"><see cref="T:System.IO.Stream" /> の保存先となる <see cref="T:System.Windows.Ink.StrokeCollection" />。</param>
        <param name="compress">
          <see langword="true" />圧縮する、 <see cref="T:System.Windows.Ink.StrokeCollection" />、それ以外の<see langword="false" />します。</param>
        <summary>保存、<see cref="T:System.Windows.Ink.StrokeCollection" />を指定した<see cref="T:System.IO.Stream" />を展開し、指定した場合。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Ink.StrokeCollection.Save%2A>メソッド保存、<xref:System.Windows.Ink.StrokeCollection>インク シリアル化された形式 (ISF) として。  
  
   
  
## Examples  
 次の例では、保存、<xref:System.Windows.Ink.StrokeCollection>を使用してファイルを<xref:System.Windows.Ink.StrokeCollection.Save%28System.IO.Stream%2CSystem.Boolean%29>メソッドです。 この例では、<xref:System.Windows.Controls.InkCanvas>と呼ばれる`inkCanvas1`です。  
  
 [!code-csharp[StrokeCollectionMethods#10](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/Window2.xaml.cs#10)]
 [!code-vb[StrokeCollectionMethods#10](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/Window2.xaml.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetItem">
      <MemberSignature Language="C#" Value="protected override sealed void SetItem (int index, System.Windows.Ink.Stroke stroke);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetItem(int32 index, class System.Windows.Ink.Stroke stroke) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.SetItem(System.Int32,System.Windows.Ink.Stroke)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="stroke" Type="System.Windows.Ink.Stroke" />
      </Parameters>
      <Docs>
        <param name="index">ストロークを置換する位置。</param>
        <param name="stroke">現在のストロークを置き換えるストローク。</param>
        <summary>指定したインデックス位置にあるストロークを置き換えます。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StrokesChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Ink.StrokeCollectionChangedEventHandler StrokesChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Ink.StrokeCollectionChangedEventHandler StrokesChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Ink.StrokeCollection.StrokesChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Ink.StrokeCollectionChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>発生したときに、<see cref="T:System.Windows.Ink.Stroke" />コレクションが変更されます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次の例では、カスタム プロパティとして、現在の時刻を追加で新しいストロークごとに、<xref:System.Windows.Ink.StrokeCollection.StrokesChanged>イベント ハンドラー。 例では、<xref:System.Windows.Ink.StrokeCollection.StrokesChanged>イベントがこの例で定義されたイベント ハンドラーに関連付けられています。  
  
 [!code-csharp[DrawingAttributes#4](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingAttributes/CSharp/Window1.xaml.cs#4)]
 [!code-vb[DrawingAttributes#4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingAttributes/VisualBasic/Window1.xaml.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Windows.Media.Matrix transformMatrix, bool applyToStylusTip);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(valuetype System.Windows.Media.Matrix transformMatrix, bool applyToStylusTip) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.Transform(System.Windows.Media.Matrix,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transformMatrix" Type="System.Windows.Media.Matrix" />
        <Parameter Name="applyToStylusTip" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="transformMatrix">A<see cref="T:System.Windows.Media.Matrix" />で実行する変換を指定する、<see cref="T:System.Windows.Ink.StrokeCollection" />です。</param>
        <param name="applyToStylusTip">
          <see langword="true" />スタイラスの先端に変換を適用するにはそれ以外の場合、<see langword="false" />です。</param>
        <summary>それぞれの変更、<see cref="P:System.Windows.Ink.Stroke.StylusPoints" />し、必要に応じて、<see cref="P:System.Windows.Ink.DrawingAttributes.StylusTipTransform" />でストロークごとに、<see cref="T:System.Windows.Ink.StrokeCollection" />指定に従って<see cref="T:System.Windows.Media.Matrix" />です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ときに`applyToStylusTip`は`true`、<xref:System.Windows.Ink.StrokeCollection.Transform%2A>メソッドは、スタイラスの先端の形およびストロークの位置に適用されます。 たとえば、回転する場合、 <xref:System.Windows.Ink.StrokeCollection> 90 °、ストロークが軸を中心に移動して、ストロークの幅と高さが反転される表示します。  
  
   
  
## Examples  
 次の例では、上のすべてのストロークを移動する方法、<xref:System.Windows.Controls.InkCanvas>です。 この例では、<xref:System.Windows.Controls.InkCanvas>と呼ばれる`inkCanvas1`です。  
  
 [!code-csharp[StrokeCollectionMethods#9](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/Window2.xaml.cs#9)]
 [!code-vb[StrokeCollectionMethods#9](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/Window2.xaml.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
