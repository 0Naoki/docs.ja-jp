<Type Name="TransactionManager" FullName="System.Transactions.TransactionManager">
  <TypeSignature Language="C#" Value="public static class TransactionManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed TransactionManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Transactions.TransactionManager" />
  <AssemblyInfo>
    <AssemblyName>System.Transactions</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Transactions.Local</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>トランザクションの管理に使用するメソッドが含まれています。 このクラスは継承できません。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このクラスには、静的プロパティおよびメソッドのトランザクション オプションの既定値に関する情報を取得するために使用が含まれています。 永続的なリソースが失敗したときに、持続性のあるリソースの復旧に使用する複数の静的メソッドも含まれています。 特別な操作は必要ありません、持続性のあるリソースの Microsoft 分散トランザクション コーディネーター (MSDTC) が失敗した場合です。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="DefaultTimeout">
      <MemberSignature Language="C#" Value="public static TimeSpan DefaultTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.TimeSpan DefaultTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Transactions.TransactionManager.DefaultTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>新しいトランザクションの既定のタイムアウト間隔を取得します。</summary>
        <value>A<see cref="T:System.TimeSpan" />新しいトランザクションのタイムアウト間隔を指定する値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 トランザクションのタイムアウト間隔は、トランザクションが完了する必要がある時間です。 場合は、トランザクション マネージャーは、タイムアウト間隔に含まれるすべてのトランザクションの参加者から聞こえないが、トランザクションを中止します。  
  
 この値を設定することができます、`DefaultSettingsSection`構成ファイルのです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DistributedTransactionStarted">
      <MemberSignature Language="C#" Value="public static event System.Transactions.TransactionStartedEventHandler DistributedTransactionStarted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Transactions.TransactionStartedEventHandler DistributedTransactionStarted" />
      <MemberSignature Language="DocId" Value="E:System.Transactions.TransactionManager.DistributedTransactionStarted" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Transactions.TransactionStartedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>分散トランザクションが開始されたことを示します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 **注意**サインアップするこのイベントがすべての分散トランザクションのパフォーマンスが低下します。 ローカル トランザクションは、パフォーマンスがさらに影響を受けるようには監視されません。  
  
 **注**このメソッドを使用して<xref:System.Security.Permissions.SecurityAction.LinkDemand>されないようにするで、信頼されていないコードから呼び出されます。 ただし、直前の呼び出し元だけが所有する必要が、`FullTrust`権限セットです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HostCurrentCallback">
      <MemberSignature Language="C#" Value="public static System.Transactions.HostCurrentTransactionCallback HostCurrentCallback { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Transactions.HostCurrentTransactionCallback HostCurrentCallback" />
      <MemberSignature Language="DocId" Value="P:System.Transactions.TransactionManager.HostCurrentCallback" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Transactions.HostCurrentTransactionCallback</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはカスタム トランザクションのファクトリを設定します。</summary>
        <value>A<see cref="T:System.Transactions.HostCurrentTransactionCallback" />カスタム トランザクションのファクトリを格納します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 **注**このメソッドを使用して<xref:System.Security.Permissions.SecurityAction.LinkDemand>されないようにするで、信頼されていないコードから呼び出されます。 ただし、直前の呼び出し元だけが所有する必要が、`FullTrust`権限セットです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximumTimeout">
      <MemberSignature Language="C#" Value="public static TimeSpan MaximumTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.TimeSpan MaximumTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Transactions.TransactionManager.MaximumTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>新しいトランザクションの既定の最大タイムアウト間隔を取得します。</summary>
        <value>A<see cref="T:System.TimeSpan" />新しいトランザクションを作成する場合に許可される最大タイムアウト間隔を指定する値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 タイムアウト間隔の詳細については、ドキュメントを参照して、<xref:System.Transactions.TransactionManager.DefaultTimeout%2A>プロパティです。  
  
 この値を設定することができます、`MachineSettingsSection`構成ファイルのです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RecoveryComplete">
      <MemberSignature Language="C#" Value="public static void RecoveryComplete (Guid manager);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RecoveryComplete(valuetype System.Guid manager) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.TransactionManager.RecoveryComplete(System.Guid)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceManagerIdentifier" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="manager">To be added.</param>
        <summary>障害から復旧するリソース マネージャーのすべての未解決のトランザクションの参加が完了したことをトランザクション マネージャーに通知します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 すべての永続的なリソース マネージャーが起動したとき最初に呼び出すことによって回復を行う必要があります、<xref:System.Transactions.TransactionManager.Reenlist%2A>未解決のトランザクションごとのメソッドです。  完了したら、reenlistments のすべての場合にのみ呼び出す必要があります、リソース マネージャー<xref:System.Transactions.TransactionManager.RecoveryComplete%2A>です。  
  
 回復の詳細については、次を参照してください。[を実行する回復](http://msdn.microsoft.com/en-us/d342c5c7-da64-4a4c-8e63-b52f4fbf2691)です。  
  
 **注**このメソッドを使用して<xref:System.Security.Permissions.SecurityAction.LinkDemand>されないようにするで、信頼されていないコードから呼び出されます。 ただし、直前の呼び出し元だけが所有する必要が、`FullTrust`権限セットです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="manager" /> パラメーターが <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="Reenlist">
      <MemberSignature Language="C#" Value="public static System.Transactions.Enlistment Reenlist (Guid manager, byte[] recoveryInfo, System.Transactions.IEnlistmentNotification notification);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Transactions.Enlistment Reenlist(valuetype System.Guid manager, unsigned int8[] recoveryInfo, class System.Transactions.IEnlistmentNotification notification) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.TransactionManager.Reenlist(System.Guid,System.Byte[],System.Transactions.IEnlistmentNotification)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Transactions.Enlistment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceManagerIdentifier" Type="System.Guid" />
        <Parameter Name="recoveryInformation" Type="System.Byte[]" />
        <Parameter Name="enlistmentNotification" Type="System.Transactions.IEnlistmentNotification" />
      </Parameters>
      <Docs>
        <param name="manager">To be added.</param>
        <param name="recoveryInfo">To be added.</param>
        <param name="notification">To be added.</param>
        <summary>トランザクションで永続参加要素を reenlists です。</summary>
        <returns><see cref="T:System.Transactions.Enlistment" />参加リストを記述します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 リソース マネージャーは、リソース障害の後にトランザクション参加要素を再参加させることにより、トランザクションの永続参加リストの解決を容易にします。  
  
 `resourceManagerIdentifier`パラメーターは、リソースの障害が発生した場合、トランザクションの参加要素を一貫してラベル付けに使用します。  呼び出すときに、<xref:System.Transactions.TransactionManager.Reenlist%2A>メソッド、リソース マネージャー指定する必要あります同じ`resourceManagerIdentifier`最初と呼ばれるときに使用される、<xref:System.Transactions.Transaction.EnlistDurable%2A>参加中に、メソッド、または<xref:System.Transactions.TransactionException>がスローされます。  
  
 参加要素がこのメソッドを使用して再参加すると、トランザクションの結果に対応した <xref:System.Transactions.IEnlistmentNotification> のフェーズ 2 のメソッド (つまり、<xref:System.Transactions.IEnlistmentNotification.Commit%2A>、<xref:System.Transactions.IEnlistmentNotification.Rollback%2A>、または <xref:System.Transactions.IEnlistmentNotification.InDoubt%2A>) が必要に応じて呼び出されます。  
  
 参加者は正常に再参加、後に呼び出す必要はし、<xref:System.Transactions.TransactionManager.RecoveryComplete%2A>回復が完了します。  
  
 障害からリソース マネージャーの再起動時にのみ、このメソッドを呼び出す必要があります。 また、2 フェーズ コミットの最初の準備フェーズ中に、リソース マネージャーによってログ記録された未解決トランザクションのみを再参加させる必要があります。 無効な時間にこのメソッドを呼び出した場合、間違った結果が生成される可能性があります。  
  
 トランザクション マネージャーが失敗すると、リソース マネージャーが実行して場合回復短時間のみを呼び出した後に、<xref:System.Transactions.PreparingEnlistment.Prepared%2A>フェーズ 1 では、2 フェーズ コミット プロトコルの参加リストのメソッドは、リソース マネージャーは受信可能性がありますか、<xref:System.Transactions.IEnlistmentNotification.InDoubt%2A>または<xref:System.Transactions.IEnlistmentNotification.Rollback%2A>コールバック。  
  
 回復の詳細については、次を参照してください。[を実行する回復](http://msdn.microsoft.com/en-us/d342c5c7-da64-4a4c-8e63-b52f4fbf2691)です。  
  
 **注**このメソッドを使用して<xref:System.Security.Permissions.SecurityAction.LinkDemand>されないようにするで、信頼されていないコードから呼び出されます。 ただし、直前の呼び出し元だけが所有する必要が、`FullTrust`権限セットです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="recoveryInformation" /> が無効です。  
  
 または  
  
 トランザクション マネージャーの情報で<paramref name="recoveryInformation" />構成済みのトランザクション マネージャーと一致しません。  
  
 または  
  
 <paramref name="RecoveryInformation" />によって認識されない<see cref="N:System.Transactions" />です。</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="M:System.Transactions.TransactionManager.RecoveryComplete(System.Guid)" />既に呼び出されて、指定された<paramref name="resourceManagerIdentifier" />です。 再参加を拒否します。</exception>
        <exception cref="T:System.Transactions.TransactionException"><paramref name="resourceManagerIdentifier" />で指定された回復情報の内容と一致しません<paramref name="recoveryInformation" />です。</exception>
      </Docs>
    </Member>
  </Members>
</Type>
