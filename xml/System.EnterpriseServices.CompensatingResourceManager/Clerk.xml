<Type Name="Clerk" FullName="System.EnterpriseServices.CompensatingResourceManager.Clerk">
  <TypeSignature Language="C#" Value="public sealed class Clerk" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Clerk extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.EnterpriseServices.CompensatingResourceManager.Clerk" />
  <AssemblyInfo>
    <AssemblyName>System.EnterpriseServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>トランザクションのアクションのレコードをログに書き込みます。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 各クラークは、compensator では、2 フェーズ コミット トランザクションの中にアクションを実行するコールバックに関連付けられます。  
  
   
  
## Examples  
 次のコード例では、このクラスの使用を示します。  
  
 [!code-cpp[EnterpriseServices_Crm#10](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServices_Crm/cpp/crmserver.cpp#10)]
 [!code-csharp[EnterpriseServices_Crm#10](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices_Crm/CS/crmserver.cs#10)]
 [!code-vb[EnterpriseServices_Crm#10](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServices_Crm/VB/crmserver.vb#10)]  
  
 次のコード例では、対応を示します<xref:System.EnterpriseServices.CompensatingResourceManager.Compensator>クラスです。  
  
 [!code-cpp[EnterpriseServices_Crm#30](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServices_Crm/cpp/crmclient.cpp#30)]
 [!code-csharp[EnterpriseServices_Crm#30](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices_Crm/CS/crmclient.cs#30)]
 [!code-vb[EnterpriseServices_Crm#30](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServices_Crm/VB/crmclient.vb#30)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.EnterpriseServices.CompensatingResourceManager.Clerk" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Clerk (string compensator, string description, System.EnterpriseServices.CompensatingResourceManager.CompensatorOptions flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string compensator, string description, valuetype System.EnterpriseServices.CompensatingResourceManager.CompensatorOptions flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.CompensatingResourceManager.Clerk.#ctor(System.String,System.String,System.EnterpriseServices.CompensatingResourceManager.CompensatorOptions)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="compensator" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="flags" Type="System.EnterpriseServices.CompensatingResourceManager.CompensatorOptions" />
      </Parameters>
      <Docs>
        <param name="compensator">Compensator の名前。</param>
        <param name="description">Compensator の説明です。</param>
        <param name="flags"><see cref="T:System.EnterpriseServices.CompensatingResourceManager.CompensatorOptions" /> 値のビットごとの組み合わせ。</param>
        <summary><see cref="T:System.EnterpriseServices.CompensatingResourceManager.Clerk" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Clerk (Type compensator, string description, System.EnterpriseServices.CompensatingResourceManager.CompensatorOptions flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type compensator, string description, valuetype System.EnterpriseServices.CompensatingResourceManager.CompensatorOptions flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.CompensatingResourceManager.Clerk.#ctor(System.Type,System.String,System.EnterpriseServices.CompensatingResourceManager.CompensatorOptions)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="compensator" Type="System.Type" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="flags" Type="System.EnterpriseServices.CompensatingResourceManager.CompensatorOptions" />
      </Parameters>
      <Docs>
        <param name="compensator">Compensator を表す型。</param>
        <param name="description">Compensator の説明です。</param>
        <param name="flags"><see cref="T:System.EnterpriseServices.CompensatingResourceManager.CompensatorOptions" /> 値のビットごとの組み合わせ。</param>
        <summary><see cref="T:System.EnterpriseServices.CompensatingResourceManager.Clerk" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例では、このコンス トラクターの使用を示します。  
  
 [!code-cpp[EnterpriseServices_Crm#11](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServices_Crm/cpp/crmserver.cpp#11)]
 [!code-csharp[EnterpriseServices_Crm#11](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices_Crm/CS/crmserver.cs#11)]
 [!code-vb[EnterpriseServices_Crm#11](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServices_Crm/VB/crmserver.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~Clerk ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.CompensatingResourceManager.Clerk.Finalize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ガベージ コレクターによって収集される前に、現在のクラークのリソースを解放します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForceLog">
      <MemberSignature Language="C#" Value="public void ForceLog ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ForceLog() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.CompensatingResourceManager.Clerk.ForceLog" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>すべてのログ レコードは、ディスクへ強制的に実行します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 マネージャー CRM (Compensating Resource) ワーカーと CRM Compensator は、このメソッドを使用して、ログは、それらが行われない持続性のあるまで、ログに、強制されていることを意味するのに遅延レコードを書き込みます。 呼び出す<xref:System.EnterpriseServices.CompensatingResourceManager.Clerk.ForceLog%2A>ディスク上に書き込まれたすべてのログ レコードの持続性です。  
  
   
  
## Examples  
 次のコード例では、このメソッドの使用方法を示します。  
  
 [!code-cpp[EnterpriseServices_Crm#12](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServices_Crm/cpp/crmserver.cpp#12)]
 [!code-csharp[EnterpriseServices_Crm#12](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices_Crm/CS/crmserver.cs#12)]
 [!code-vb[EnterpriseServices_Crm#12](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServices_Crm/VB/crmserver.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForceTransactionToAbort">
      <MemberSignature Language="C#" Value="public void ForceTransactionToAbort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ForceTransactionToAbort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.CompensatingResourceManager.Clerk.ForceTransactionToAbort" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>トランザクションを即時中断呼び出しを実行します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForgetLogRecord">
      <MemberSignature Language="C#" Value="public void ForgetLogRecord ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ForgetLogRecord() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.CompensatingResourceManager.Clerk.ForgetLogRecord" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>最後のログ レコードが書き込まれたこのインターフェイスのこのインスタンスによってを配信しません。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 これは最後のレコードのことを忘れがちのみ使用できます、入れ子の概念はありません。つまり、「書き込み、破棄、書き込み、破棄」は有効な場合が、「書き込み、書き込み、破棄、破棄」です。 マネージャー CRM (Compensating Resource) Compensator には、忘れられたログ レコードはトランザクションの結果の通知中に配信されません。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LogRecordCount">
      <MemberSignature Language="C#" Value="public int LogRecordCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LogRecordCount" />
      <MemberSignature Language="DocId" Value="P:System.EnterpriseServices.CompensatingResourceManager.Clerk.LogRecordCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ログ レコードの数を取得します。</summary>
        <value>ログ レコードの数。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransactionUOW">
      <MemberSignature Language="C#" Value="public string TransactionUOW { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TransactionUOW" />
      <MemberSignature Language="DocId" Value="P:System.EnterpriseServices.CompensatingResourceManager.Clerk.TransactionUOW" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>トランザクション作業単位 (UOW) を表す値を取得します。</summary>
        <value>UOW を表す GUID です。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteLogRecord">
      <MemberSignature Language="C#" Value="public void WriteLogRecord (object record);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteLogRecord(object record) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.CompensatingResourceManager.Clerk.WriteLogRecord(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="record" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="record">ログに書き込むログ レコード。</param>
        <summary>構造化されていないログ レコードをログに書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例では、このコンス トラクターの使用を示します。  
  
 [!code-cpp[EnterpriseServices_Crm#11](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServices_Crm/cpp/crmserver.cpp#11)]
 [!code-csharp[EnterpriseServices_Crm#11](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices_Crm/CS/crmserver.cs#11)]
 [!code-vb[EnterpriseServices_Crm#11](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServices_Crm/VB/crmserver.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
