<Type Name="SayAs" FullName="System.Speech.Synthesis.TtsEngine.SayAs">
  <TypeSignature Language="C#" Value="public class SayAs" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi beforefieldinit SayAs extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Synthesis.TtsEngine.SayAs" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>テキスト ファイルを再生する方法を決定する (通貨、日付、またはアドレス) などのコンテンツの種類や言語構成要素について説明します。</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SayAs ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.TtsEngine.SayAs.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>新しいインスタンスを作成、 <c>SayAs</c>クラスです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 プロパティ、<xref:System.Speech.Synthesis.TtsEngine.SayAs>の属性の値を取得または設定クラスを使用、 `say-as` SSML マークアップ内の要素。 <xref:System.Speech.Synthesis.TtsEngine.FragmentState.SayAs%2A>プロパティの使用、<xref:System.Speech.Synthesis.TtsEngine.SayAs>インスタンスに通知する、<xref:System.Speech.Synthesis.SpeechSynthesizer>に含まれているテキストを読み上げる方法、<xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextToSpeak%2A>のプロパティ、<xref:System.Speech.Synthesis.TtsEngine.TextFragment>です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Detail">
      <MemberSignature Language="C#" Value="public string Detail { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Detail" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.TtsEngine.SayAs.Detail" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の値、<c>詳細</c>属性を<c>言う-として</c>プロンプトの SSML マークアップ言語内の要素。</summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Speech.Synthesis.TtsEngine.FragmentState.SayAs%2A?displayProperty=nameWithType>プロパティを取得または設定の値、<xref:System.Speech.Synthesis.TtsEngine.SayAs.Detail%2A>プロパティに、<xref:System.Speech.Synthesis.TtsEngine.SayAs>インスタンス。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public string Format { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Format" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.TtsEngine.SayAs.Format" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の値、<c>形式</c>属性を<c>言う-として</c>プロンプトの SSML マークアップ言語内の要素。</summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Speech.Synthesis.TtsEngine.FragmentState.SayAs%2A?displayProperty=nameWithType>プロパティを取得または設定の値、<xref:System.Speech.Synthesis.TtsEngine.SayAs.Format%2A>プロパティに、<xref:System.Speech.Synthesis.TtsEngine.SayAs>インスタンス。  
  
 たとえば、プロンプトが語句を含む可能性があります"、時刻は`<say-as interpret-as="time"> 05:00 </say-as>`"です。  この例では`05:00`「5 時」または"5 AM"ように読み上げられます可能性がありますか"$embedded$ 500"です。 <xref:System.Speech.Synthesis.TtsEngine.SayAs.Format%2A>プロパティの値を使用する、`interpret-as`拡張を読み上げるためにどの時間形式を指定する属性。 場合の値、`interpret-as`属性は、「時間: 24 時間」、<xref:System.Speech.Synthesis.SpeechSynthesizer>話す"$embedded$ 500"です。 場合の値、`interpret-as`属性が「時: 12 時間」、 <xref:System.Speech.Synthesis.SpeechSynthesizer> 「5 M A」を話します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InterpretAs">
      <MemberSignature Language="C#" Value="public string InterpretAs { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InterpretAs" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.TtsEngine.SayAs.InterpretAs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の値、<c>解釈-として</c>属性を<c>言う-として</c>プロンプトの SSML マークアップ言語内の要素。</summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Speech.Synthesis.TtsEngine.FragmentState.SayAs%2A?displayProperty=nameWithType>プロパティを取得または設定の値、<xref:System.Speech.Synthesis.TtsEngine.SayAs.InterpretAs%2A>プロパティに、<xref:System.Speech.Synthesis.TtsEngine.SayAs>インスタンス。  
  
 <xref:System.Speech.Synthesis.SpeechSynthesizer>によって示されるコンテンツの種類を使用して、<xref:System.Speech.Synthesis.TtsEngine.SayAs.InterpretAs%2A>プロパティを指定したテキストを表示する方法を決定します。  
  
 いえばでした名として読み上げる名など:"My name is といえば"です。 指定されている、小文字からスペルでしたまたは、`interpret-as`この文に属性:"自分の名前は`<say-as interpret-as="spell-out"> Edgar </say-as>`"。 ここで、 <xref:System.Speech.Synthesis.SpeechSynthesizer> "E D G A R"としてといえばを話します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
