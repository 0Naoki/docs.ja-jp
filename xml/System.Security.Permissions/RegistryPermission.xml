<Type Name="RegistryPermission" FullName="System.Security.Permissions.RegistryPermission">
  <TypeSignature Language="C#" Value="public sealed class RegistryPermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit RegistryPermission extends System.Security.CodeAccessPermission implements class System.Security.Permissions.IUnrestrictedPermission" />
  <TypeSignature Language="DocId" Value="T:System.Security.Permissions.RegistryPermission" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.CodeAccessPermission</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Security.Permissions.IUnrestrictedPermission</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>レジストリ変数へのアクセスを制御します。 このクラスは継承できません。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.Permissions.RegistryPermission>レジストリ変数で保護された操作をについて説明します。 レジストリ変数は、<xref:System.Security.Permissions.RegistryPermission> を持たないコードがアクセスできるメモリの場所には格納しないようにする必要があります。 信頼されていない呼び出し元に、レジストリ オブジェクトが渡された場合は悪用ことができます。  
  
 許可されているレジストリのアクセスの種類によって定義されます<xref:System.Security.Permissions.RegistryPermissionAccess>です。 アクセスの 2 つ以上の種類を使用する場合は、組み合わせてことができます、ビットごとの OR 演算を使用して次のコード例に示すようにします。  
  
 レジストリのアクセス許可は、標準絶対パスで定義されます。チェックは、正規のパス名を常に実行する必要があります。 キーへのアクセスは、含まれるすべての値とその下にあるすべての変数へのアクセスを意味します。  
  
> [!NOTE]
>  前に .NET Framework のバージョンでは、 [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]、使用する可能性があります、<xref:System.Security.CodeAccessPermission.Deny%2A?displayProperty=nameWithType>に信頼されたコードによってシステム リソースを不注意によるアクセスを阻止する方法です。 <xref:System.Security.CodeAccessPermission.Deny%2A>現在使用されていません、およびリソースへのアクセスが付与されたアクセス許可がアセンブリのセットによってのみ決定されますようになりました。 ファイルへのアクセスを制限するには、するには、サンド ボックスで部分信頼コードを実行し、コードのアクセスが許可されているリソースにのみアクセス許可を割り当てます。 サンド ボックスで、アプリケーションの実行方法の詳細については、次を参照してください。[する方法: 実行部分信頼コードをサンド ボックスで](~/docs/framework/misc/how-to-run-partially-trusted-code-in-a-sandbox.md)です。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RegistryPermission (System.Security.Permissions.PermissionState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.PermissionState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.RegistryPermission.#ctor(System.Security.Permissions.PermissionState)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="state" Type="System.Security.Permissions.PermissionState" />
      </Parameters>
      <Docs>
        <param name="state"><see cref="T:System.Security.Permissions.PermissionState" /> 値のいずれか。</param>
        <summary>新しいインスタンスを初期化、<see cref="T:System.Security.Permissions.RegistryPermission" />指定に従って完全に制限されているまたは無制限のアクセス許可を持つクラス。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 完全に制限されているいずれかが作成されます (`None`) または`Unrestricted`レジストリ変数へのアクセス。  
  
   
  
## Examples  
 次のコード例の使用を示しています、<xref:System.Security.Permissions.RegistryPermission.%23ctor%28System.Security.Permissions.PermissionState%29>コンス トラクターです。  
  
 [!code-csharp[System.Security.Permissions.RegistryPermission#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.RegistryPermission/CS/registrypermission.cs#7)]
 [!code-vb[System.Security.Permissions.RegistryPermission#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.RegistryPermission/VB/registrypermission.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="state" /> パラメーターが <see cref="T:System.Security.Permissions.PermissionState" /> の正しい値ではありません。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RegistryPermission (System.Security.Permissions.RegistryPermissionAccess access, string pathList);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.RegistryPermissionAccess access, string pathList) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.RegistryPermission.#ctor(System.Security.Permissions.RegistryPermissionAccess,System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="access" Type="System.Security.Permissions.RegistryPermissionAccess" />
        <Parameter Name="pathList" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="access"><see cref="T:System.Security.Permissions.RegistryPermissionAccess" /> 値のいずれか。</param>
        <param name="pathList">アクセスが許可されているレジストリ変数の一覧 (セミコロン区切り)。</param>
        <summary>新しいインスタンスを初期化、<see cref="T:System.Security.Permissions.RegistryPermission" />指定したレジストリ変数へのアクセスを持つクラス。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このコンス トラクターでの 1 つだけ、<xref:System.Security.Permissions.RegistryPermissionAccess>値を指定します。 このアクセスは、表示されているレジストリ変数すべてに適用されます。 使用して<xref:System.Security.Permissions.RegistryPermission.AddPathList%2A>より複雑な権限を定義します。  
  
   
  
## Examples  
 次のコード例の使用を示しています、<xref:System.Security.Permissions.RegistryPermission.%23ctor%28System.Security.Permissions.RegistryPermissionAccess%2CSystem.String%29>コンス トラクターです。  
  
 [!code-csharp[System.Security.Permissions.RegistryPermission#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.RegistryPermission/CS/registrypermission.cs#10)]
 [!code-vb[System.Security.Permissions.RegistryPermission#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.RegistryPermission/VB/registrypermission.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="access" /> パラメーターが <see cref="T:System.Security.Permissions.RegistryPermissionAccess" /> の正しい値ではありません。  
  
 -または-  
  
 <paramref name="pathList" /> パラメーターが有効な文字列ではありません。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RegistryPermission (System.Security.Permissions.RegistryPermissionAccess access, System.Security.AccessControl.AccessControlActions control, string pathList);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.RegistryPermissionAccess access, valuetype System.Security.AccessControl.AccessControlActions control, string pathList) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.RegistryPermission.#ctor(System.Security.Permissions.RegistryPermissionAccess,System.Security.AccessControl.AccessControlActions,System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="access" Type="System.Security.Permissions.RegistryPermissionAccess" />
        <Parameter Name="control" Type="System.Security.AccessControl.AccessControlActions" />
        <Parameter Name="pathList" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="access"><see cref="T:System.Security.Permissions.RegistryPermissionAccess" /> 値のいずれか。</param>
        <param name="control"><see cref="T:System.Security.AccessControl.AccessControlActions" /> 値のビットごとの組み合わせ。</param>
        <param name="pathList">アクセスが許可されているレジストリ変数の一覧 (セミコロン区切り)。</param>
        <summary>新しいインスタンスを初期化、<see cref="T:System.Security.Permissions.RegistryPermission" />指定したレジストリ変数へのアクセスとレジストリ制御情報への指定したアクセス権を持つクラス。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このコンス トラクターでの 1 つだけ、<xref:System.Security.Permissions.RegistryPermissionAccess>値を指定します。 このアクセスは、表示されているレジストリ変数すべてに適用されます。 使用して<xref:System.Security.Permissions.RegistryPermission.AddPathList%2A>より複雑な権限を定義します。  
  
 `control`パラメーターを指定するかどうかのアクセス制御リスト (ACL) で指定されたレジストリ キーの`pathList`変更できますが、表示、またはアクセスできません。  
  
> [!IMPORTANT]
>  アクセス制御リスト (ACL) には、個人またはグループがある、または権限がない、指定したレジストリ キーの特定のアクションをユーザーがについて説明します。  変更したり、ACL を表示できるように重大なアクセス許可は、慎重に付与する必要があります。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="access" /> パラメーターが <see cref="T:System.Security.Permissions.RegistryPermissionAccess" /> の正しい値ではありません。  
  
 -または-  
  
 <paramref name="pathList" /> パラメーターが有効な文字列ではありません。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddPathList">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指定したレジストリ変数へのアクセス権を既存のアクセス許可の状態に追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 現在のアクセス許可オブジェクトの状態にそのパスのセットを追加してレジストリ変数へのアクセスを変更するのにには、このメソッドを使用します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddPathList">
      <MemberSignature Language="C#" Value="public void AddPathList (System.Security.Permissions.RegistryPermissionAccess access, string pathList);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddPathList(valuetype System.Security.Permissions.RegistryPermissionAccess access, string pathList) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.RegistryPermission.AddPathList(System.Security.Permissions.RegistryPermissionAccess,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="access" Type="System.Security.Permissions.RegistryPermissionAccess" />
        <Parameter Name="pathList" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="access"><see cref="T:System.Security.Permissions.RegistryPermissionAccess" /> 値のいずれか。</param>
        <param name="pathList">レジストリ変数の一覧 (セミコロン区切り)。</param>
        <summary>指定したレジストリ変数へのアクセス権を既存のアクセス許可の状態に追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 現在のアクセス許可オブジェクトの状態を追加してレジストリ変数へのアクセスを変更するのにには、このメソッドを使用します。  
  
   
  
## Examples  
 次のコード例の使用を示しています、<xref:System.Security.Permissions.RegistryPermission.AddPathList%28System.Security.Permissions.RegistryPermissionAccess%2CSystem.String%29>メソッドです。  
  
 [!code-csharp[System.Security.Permissions.RegistryPermission#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.RegistryPermission/CS/registrypermission.cs#9)]
 [!code-vb[System.Security.Permissions.RegistryPermission#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.RegistryPermission/VB/registrypermission.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="access" /> パラメーターが <see cref="T:System.Security.Permissions.RegistryPermissionAccess" /> の正しい値ではありません。  
  
 -または-  
  
 <paramref name="pathList" /> パラメーターが有効な文字列ではありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddPathList">
      <MemberSignature Language="C#" Value="public void AddPathList (System.Security.Permissions.RegistryPermissionAccess access, System.Security.AccessControl.AccessControlActions control, string pathList);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddPathList(valuetype System.Security.Permissions.RegistryPermissionAccess access, valuetype System.Security.AccessControl.AccessControlActions control, string pathList) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.RegistryPermission.AddPathList(System.Security.Permissions.RegistryPermissionAccess,System.Security.AccessControl.AccessControlActions,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="access" Type="System.Security.Permissions.RegistryPermissionAccess" />
        <Parameter Name="control" Type="System.Security.AccessControl.AccessControlActions" />
        <Parameter Name="pathList" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="access"><see cref="T:System.Security.Permissions.RegistryPermissionAccess" /> 値のいずれか。</param>
        <param name="control"><see cref="T:System.Security.AccessControl.AccessControlActions" /> 値のいずれか。</param>
        <param name="pathList">レジストリ変数の一覧 (セミコロン区切り)。</param>
        <summary>指定されたレジストリ変数のために、権限の既存の状態へのアクセスを追加し、レジストリのアクセス許可とアクセス制御のアクションを指定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 現在のアクセス許可オブジェクトの状態にそのパスのセットを追加してレジストリ変数へのアクセスを変更するのにには、このメソッドを使用します。 このオーバー ロードでは、アクセス制御の操作だけでなく、レジストリのアクセス許可を指定することができます。  
  
 `control`パラメーターを指定するかどうかのアクセス制御リスト (ACL) で指定されたレジストリ キーの`pathList`変更できますが、表示、またはアクセスできません。  
  
> [!IMPORTANT]
>  アクセス制御リスト (ACL) には、個人またはグループがある、または権限がない、指定したレジストリ キーの特定のアクションをユーザーがについて説明します。  変更したり、ACL を表示できるように重大なアクセス許可は、慎重に付与する必要があります。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="access" /> パラメーターが <see cref="T:System.Security.Permissions.RegistryPermissionAccess" /> の正しい値ではありません。  
  
 -または-  
  
 <paramref name="pathList" /> パラメーターが有効な文字列ではありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.RegistryPermission.Copy" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>現在のアクセス許可の同一のコピーを作成して返します。</summary>
        <returns>現在のアクセス許可のコピー。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 アクセス許可のコピーは、元のアクセス許可としてリソースに対して同じアクセス権を表します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromXml">
      <MemberSignature Language="C#" Value="public override void FromXml (System.Security.SecurityElement esd);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void FromXml(class System.Security.SecurityElement esd) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.RegistryPermission.FromXml(System.Security.SecurityElement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="esd" Type="System.Security.SecurityElement" />
      </Parameters>
      <Docs>
        <param name="esd">アクセス許可の再構築に使用する XML エンコード。</param>
        <summary>XML エンコードから指定された状態で、アクセス許可を再構築します。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="esd" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="esd" />パラメーターが有効なアクセス許可要素ではありません。  
  
 -または-  
  
 <paramref name="esd" />パラメーターのバージョン番号が無効です。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetPathList">
      <MemberSignature Language="C#" Value="public string GetPathList (System.Security.Permissions.RegistryPermissionAccess access);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetPathList(valuetype System.Security.Permissions.RegistryPermissionAccess access) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.RegistryPermission.GetPathList(System.Security.Permissions.RegistryPermissionAccess)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="access" Type="System.Security.Permissions.RegistryPermissionAccess" />
      </Parameters>
      <Docs>
        <param name="access">1 つ、<see cref="T:System.Security.Permissions.RegistryPermissionAccess" />レジストリ変数アクセスの単一の型を表す値です。</param>
        <summary>指定したレジストリ変数のすべてのパスを取得<see cref="T:System.Security.Permissions.RegistryPermissionAccess" />です。</summary>
        <returns>指定したレジストリ変数 (セミコロン区切り) の一覧<see cref="T:System.Security.Permissions.RegistryPermissionAccess" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドを使用すると、現在のアクセス許可の状態を取得します。 このメソッドは、アクセスの種類ごとに個別に呼び出す必要があります。  
  
> [!NOTE]
>  `access`パラメーターがの値に制限<xref:System.Security.Permissions.RegistryPermissionAccess>、レジストリ変数アクセスの 1 つの型として表示されています。 それらの値が<xref:System.Security.Permissions.RegistryPermissionAccess.Read>、 <xref:System.Security.Permissions.RegistryPermissionAccess.Write>、および<xref:System.Security.Permissions.RegistryPermissionAccess.Create>です。 値を許容できる`access`を含めないでください<xref:System.Security.Permissions.RegistryPermissionAccess.NoAccess>と<xref:System.Security.Permissions.RegistryPermissionAccess.AllAccess>、レジストリ変数アクセスの 1 つの型を表していません。  
  
   
  
## Examples  
 次のコード例の使用を示しています、<xref:System.Security.Permissions.RegistryPermission.GetPathList%2A>メソッドです。  
  
 [!code-csharp[System.Security.Permissions.RegistryPermission#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.RegistryPermission/CS/registrypermission.cs#9)]
 [!code-vb[System.Security.Permissions.RegistryPermission#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.RegistryPermission/VB/registrypermission.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="access" />有効な値ではない<see cref="T:System.Security.Permissions.RegistryPermissionAccess" />です。  
  
 または  
  
 <paramref name="access" /><see cref="F:System.Security.Permissions.RegistryPermissionAccess.AllAccess" />、レジストリ変数へのアクセスの 2 つ以上の型を表しているか、 <see cref="F:System.Security.Permissions.RegistryPermissionAccess.NoAccess" />、レジストリ変数アクセスのどの型も表していません。</exception>
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Intersect (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Intersect(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.RegistryPermission.Intersect(System.Security.IPermission)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">現在のアクセス許可との共通部分のあるアクセス許可。 これは、現在のアクセス許可と同じ型であることが必要です。</param>
        <summary>現在のアクセス許可と指定したアクセス許可の積集合であるアクセス許可を作成して返します。</summary>
        <returns>現在のアクセス許可と指定したアクセス許可の共通部分を表す新しいアクセス許可。 この新しいアクセス許可は<see langword="null" />積集合が空の場合。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 2 つのアクセス許可の積集合は、一連の両方に共通する操作を説明する権限です。 元の両方の権限を通過する要求だけでは、積集合を渡されます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="target" />パラメーターではありません<see langword="null" />と現在のアクセス許可と同じ型でもありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="IsSubsetOf">
      <MemberSignature Language="C#" Value="public override bool IsSubsetOf (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsSubsetOf(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.RegistryPermission.IsSubsetOf(System.Security.IPermission)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">サブセット リレーションシップをテストするアクセス許可。 このアクセス許可は、現在のアクセス許可と同じ型であることが必要です。</param>
        <summary>現在のアクセス許可が、指定したアクセス許可のサブセットであるかどうかを判断します。</summary>
        <returns>
          <see langword="true" />現在のアクセス許可が指定した権限のサブセットの場合それ以外の場合、<see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 現在のアクセス許可は、現在のアクセス許可を指定した権限によって完全に含まれる一連の操作を指定する場合、指定したアクセス許可のサブセットです。 たとえば、C:\example.txt へのアクセスを表すアクセス許可は、c: へのアクセスを表すためのアクセス許可のサブセット\\です。 このメソッドが戻る場合`true`、現在のアクセス許可は、アクセスは保護されたリソースには、指定した権限を表します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="target" />パラメーターではありません<see langword="null" />と現在のアクセス許可と同じ型でもありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="IsUnrestricted">
      <MemberSignature Language="C#" Value="public bool IsUnrestricted ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsUnrestricted() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.RegistryPermission.IsUnrestricted" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>現在のアクセス許可が無制限かどうかを示す値を返します。</summary>
        <returns>
          <see langword="true" />現在のアクセス許可が無制限ではない場合それ以外の場合、<see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 無制限のアクセス許可は、アクセス許可によって保護されていると、すべてのリソースへのアクセスを表します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPathList">
      <MemberSignature Language="C#" Value="public void SetPathList (System.Security.Permissions.RegistryPermissionAccess access, string pathList);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetPathList(valuetype System.Security.Permissions.RegistryPermissionAccess access, string pathList) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.RegistryPermission.SetPathList(System.Security.Permissions.RegistryPermissionAccess,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="access" Type="System.Security.Permissions.RegistryPermissionAccess" />
        <Parameter Name="pathList" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="access"><see cref="T:System.Security.Permissions.RegistryPermissionAccess" /> 値のいずれか。</param>
        <param name="pathList">レジストリ変数の一覧 (セミコロン区切り)。</param>
        <summary>指定したレジストリの変数名の新しいアクセス権を、既存のアクセス許可の状態に設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 現在のアクセス許可の以前の状態は上書きされます。  
  
   
  
## Examples  
 次のコード例の使用を示しています、<xref:System.Security.Permissions.RegistryPermission.SetPathList%2A>メソッドです。  
  
 [!code-csharp[System.Security.Permissions.RegistryPermission#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.RegistryPermission/CS/registrypermission.cs#9)]
 [!code-vb[System.Security.Permissions.RegistryPermission#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.RegistryPermission/VB/registrypermission.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="access" /> パラメーターが <see cref="T:System.Security.Permissions.RegistryPermissionAccess" /> の正しい値ではありません。  
  
 -または-  
  
 <paramref name="pathList" /> パラメーターが有効な文字列ではありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="ToXml">
      <MemberSignature Language="C#" Value="public override System.Security.SecurityElement ToXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.SecurityElement ToXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.RegistryPermission.ToXml" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>アクセス許可とその現在の状態の XML エンコードを作成します。</summary>
        <returns>状態情報を含む、アクセス許可の XML エンコード。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Union (System.Security.IPermission other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Union(class System.Security.IPermission other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.RegistryPermission.Union(System.Security.IPermission)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="other">現在のアクセス許可と結合するアクセス許可。 これは、現在のアクセス許可と同じ型であることが必要です。</param>
        <summary>現在のアクセス許可と指定されたアクセス許可の和集合であるアクセス許可を作成します。</summary>
        <returns>現在のアクセス許可と指定されたアクセス許可の和集合を表す新しいアクセス許可。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 呼び出しの結果<xref:System.Security.Permissions.RegistryPermission.Union%2A>は、現在のアクセス許可と、指定した権限の両方で表されるすべての操作を表す権限。 いずれかのアクセス許可に適合する要求は、その共用体を渡します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="other" />パラメーターではありません<see langword="null" />と現在のアクセス許可と同じ型でもありません。</exception>
      </Docs>
    </Member>
  </Members>
</Type>
