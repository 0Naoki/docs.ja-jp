<Type Name="KeyContainerPermissionAccessEntryEnumerator" FullName="System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator">
  <TypeSignature Language="C#" Value="public sealed class KeyContainerPermissionAccessEntryEnumerator : System.Collections.IEnumerator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit KeyContainerPermissionAccessEntryEnumerator extends System.Object implements class System.Collections.IEnumerator" />
  <TypeSignature Language="DocId" Value="T:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerator</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>列挙子を表す<see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" />内のオブジェクト、<see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection" />です。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 列挙子は、コレクション内のデータを読み取るだけを許可します。 列挙子を使用して、基になるコレクションを変更することはできません。  
  
 最初に、列挙子はコレクション内の 1 番目の要素の前に位置付けられます。 <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A>メソッドがこの位置に戻さも、列挙子を表示します。 この位置で、呼び出し、<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A>プロパティは例外をスローします。 そのため、呼び出す必要があります、<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A>メソッドの値を読み取る前に、コレクションの最初の要素に列挙子を進める、<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A>プロパティです。  
  
 <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> は、<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> または <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A> が呼び出されるまでは同じオブジェクトを返します。 <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> は、<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> を次の要素に設定します。  
  
 コレクションの末尾を過ぎると、列挙子はコレクションの最後の要素の後ろに配置され、<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> を呼び出すと `false` が返されます。 場合は、最後の呼び出し<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A>返される`false`、呼び出し元<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A>例外をスローします。 リセットする<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A>コレクションの最初の要素を呼び出す<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A>への呼び出しを続けて<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A>です。  
  
 コレクションが変更されない限り、列挙子は有効です。 無効になり、次の呼び出しに変更を追加するなど、コレクションを変更、または要素を削除するには、列挙子は回復不可能<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A>または<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A>スロー、<xref:System.InvalidOperationException>です。 呼び出し元のコレクションが変更された場合<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A>と<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A>、<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A>列挙子が既に無効になっている場合でもが現在設定される、要素を返します。  
  
 列挙子にはコレクションへの排他アクセス権限はないため、コレクションの列挙処理は本質的にスレッド セーフな処理ではありません。 コレクションの同期がとられている場合でも、別のスレッドによってそのコレクションを変更できるため、変更の結果として列挙子は例外をスローします。 列挙処理を確実にスレッド セーフに行うには、列挙中にコレクションをロックするか、他のスレッドによって行われた変更によってスローされる例外をキャッチします。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyContainerPermissionAccessEntryEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public System.Security.Permissions.KeyContainerPermissionAccessEntry Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Permissions.KeyContainerPermissionAccessEntry Current" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Permissions.KeyContainerPermissionAccessEntry</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コレクション内の現在のエントリを取得します。</summary>
        <value>現在<see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" />コレクション内のオブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 列挙子の作成時に、オブジェクトを指していませんので、<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A>プロパティが無効である場合は、アクセス例外がスローされます。 最初に呼び出す必要があります、<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A>メソッドをコレクションの最初のオブジェクトにカーソルを合わせます。  
  
 取得する、<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A>なしの介在する呼び出しで複数回プロパティ<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A>は同じを返します<xref:System.Security.Permissions.KeyContainerPermissionAccessEntry>オブジェクトごとにします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current" />プロパティへのアクセスは、最初の呼び出しの前に、<see cref="M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext" />メソッドです。 カーソルは、コレクションの最初のオブジェクトの前に位置します。  
  
 または  
  
 <see cref="P:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current" />プロパティへの呼び出し後へのアクセス、<see cref="M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext" />メソッドを返します。 <see langword="false" />、コレクション内の最後のオブジェクトの後のカーソルがあることを示します。</exception>
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public bool MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>コレクション内の次の要素に移動します。</summary>
        <returns>
          列挙子が次の要素に正常に進んだ場合は <see langword="true" />。列挙子がコレクションの末尾を越えた場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A>メソッドを返します。`false`コレクション内にオブジェクトが存在しない場合は直ちにです。  
  
 <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A>返します`true`コレクションの末尾に達するまでします。 これは、後、返します`false`連続する呼び出しごとにします。 ただし、いったん<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A>が返されました`false`へのアクセス、<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A>プロパティは例外をスローします。  
  
 作成時に、列挙子が 1 つ目の前に位置付けられます<xref:System.Security.Permissions.KeyContainerPermissionAccessEntry>コレクション、および最初の呼び出しでオブジェクト<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A>コレクション内の最初のオブジェクトに、列挙子を配置します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>列挙子をコレクションの先頭にリセットします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 列挙子は、順方向専用の方向に移動します。 コレクションの先頭に戻るには、このメソッドを使用します。  
  
 <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A>メソッドがコレクション内の最初のオブジェクトにカーソルを位置付けます。 呼び出した後<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A>を呼び出す必要はありません<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A>に最初のオブジェクトにカーソルを前方に移動します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerator.Current">
      <MemberSignature Language="C#" Value="object System.Collections.IEnumerator.Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IEnumerator.Current" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.System#Collections#IEnumerator#Current" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コレクション内の現在のオブジェクトを取得します。</summary>
        <value>コレクション内の現在のオブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドを呼び出す必要はありません。使用して、<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A>プロパティ代わりにします。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
