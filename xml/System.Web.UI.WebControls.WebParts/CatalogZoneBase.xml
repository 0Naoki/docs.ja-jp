<Type Name="CatalogZoneBase" FullName="System.Web.UI.WebControls.WebParts.CatalogZoneBase">
  <TypeSignature Language="C#" Value="public abstract class CatalogZoneBase : System.Web.UI.WebControls.WebParts.ToolZone, System.Web.UI.IPostBackDataHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit CatalogZoneBase extends System.Web.UI.WebControls.WebParts.ToolZone implements class System.Web.UI.IPostBackDataHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.WebParts.ToolZone</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackDataHandler</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>カタログとして機能するすべてのゾーン コントロールの基底クラスとして機能します。 ユーザーが Web ページに追加できる <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールの一覧を含んだカタログ。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>クラスは、基本クラスから継承する、<xref:System.Web.UI.WebControls.WebParts.ToolZone>クラスです。 派生ゾーンの動作の基本セットを提供します。  
  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>クラスを追加するユーザーを有効にする一意のユーザー インターフェイス (UI) を提供する<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロールと Web ページには、他のサーバー コントロールです。 派生したコントロールを<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>クラスなど<xref:System.Web.UI.WebControls.WebParts.CatalogZone>コントロールで実際に配置された Web ページは、します。 呼ばれる、その他のコントロールのコンテナーとして機能する<xref:System.Web.UI.WebControls.WebParts.CatalogPart>ページに追加するユーザー用のサーバー コントロールのリストを作成するコントロール。 派生するゾーン、<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>クラスでは、ページがカタログ表示モードが場合にのみ表示されることができます。  
  
> [!NOTE]
>  A<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>ゾーンにのみ含めることができます<xref:System.Web.UI.WebControls.WebParts.CatalogPart>コントロール、およびこれに対し、<xref:System.Web.UI.WebControls.WebParts.CatalogPart>コントロールはのみに置くことができます<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>ゾーンです。  
  
 サーバー コントロールのカタログを追加するためのメカニズムは、ベースから派生した 3 つのコントロールの次のセット<xref:System.Web.UI.WebControls.WebParts.CatalogPart>クラスです。  
  
|コントロール|説明|  
|-------------|-----------------|  
|<xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>|ページで閉じられているコントロールへの参照を保持します。 ユーザーによっては、これらのコントロールを (ページに再度追加する) 再度開くことができます。|  
|<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>|Web パーツのカタログの Web ページのマークアップで宣言されているコントロールへの参照が含まれています。 これらのコントロールは、ユーザーが Web ページに追加できます。|  
|<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>|ユーザーが Web ページにコントロールを追加できるように、カタログに定義ファイルをアップロードするための UI を提供します。 定義ファイルを含む XML ファイルは、します。コントロールの設定をインポートする web パーツのファイル名拡張子。 コントロールは、定義ファイルをインポートする前に、サーバー上に存在する必要があります。|  
  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>クラスにはさまざまなプロパティのカタログを表示するための便利な<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロール。 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.AddVerb%2A>プロパティは、ページに、カタログから選択したコントロールを追加する動詞を参照中に、<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CloseVerb%2A>プロパティは、カタログを閉じますしてブラウズ モードをページの表示モードを返す動詞を参照します。 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CatalogParts%2A>プロパティは、すべてのコレクションを参照<xref:System.Web.UI.WebControls.WebParts.CatalogPart>ゾーン内のコントロールです。 いくつかのテキスト指向プロパティなど<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.EmptyZoneText%2A>、 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.HeaderText%2A>、および<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.InstructionText%2A>カタログの適切な既定のテキストを提供する基本プロパティをオーバーライドします。 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectTargetZoneText%2A>プロパティにコントロールをどのゾーンに追加されますを選択できるドロップダウン リスト コントロールの横のテキストが含まれています。  
  
 その他のいくつかのプロパティに含まれる、<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>クラスです。 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedCatalogPartID%2A>プロパティは、現在選択されている一意の文字列識別子<xref:System.Web.UI.WebControls.WebParts.CatalogPart>コントロール。 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.ShowCatalogIcons%2A>プロパティを関連付けることができるコントロールを設定してアイコンを表示するかどうかを示します、<xref:System.Web.UI.WebControls.WebParts.WebPart.CatalogIconImageUrl%2A>プロパティを<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロール。  
  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.PartLinkStyle%2A>プロパティにはへのリンクのスタイル属性が含まれています、<xref:System.Web.UI.WebControls.WebParts.CatalogPart>ゾーンで現在選択されていないコントロール。 これに対し、<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedPartLinkStyle%2A>プロパティにはへのリンクのスタイル属性が含まれています、<xref:System.Web.UI.WebControls.WebParts.CatalogPart>ユーザーが、ゾーンで現在選択されているコントロール。  
  
 プロパティに加えてもいくつかのメソッド、<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>クラス、だけでなく、標準的なイベント処理し、その他の基本コントロール、コントロールのカタログを処理するためには一意に設計されていますから継承されたメソッドを表示します。 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogPartChrome%2A>メソッドを囲む各 chrome (周辺 UI 要素に罫線、動詞、アイコン、および、タイトルなど) を作成する<xref:System.Web.UI.WebControls.WebParts.CatalogPart>ゾーン内のコントロールも、コントロールのレンダリングを処理します。 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogParts%2A>メソッドは、抽象メソッドです。 派生クラスでオーバーライドのすべてのインスタンスを作成するために、<xref:System.Web.UI.WebControls.WebParts.CatalogPart>ゾーンに含まれるコントロール。 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.InvalidateCatalogParts%2A>場合、派生クラスでメソッドを呼び出すことが、コレクションの<xref:System.Web.UI.WebControls.WebParts.CatalogPart>ゾーンの変更の一部のプログラムによる理由、および派生クラス内のコントロールは、コレクションを再作成する必要があります。 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.LoadPostData%2A>メソッドが横のチェック ボックスの既存の状態を読み込みます、<xref:System.Web.UI.WebControls.WebParts.WebPart>ページがサーバーにポストバックされるときに、カタログ内のコントロール逆に、<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SaveControlState%2A>メソッドは、チェック ボックスの状態を保存します。 最後に、<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderCatalogPartLinks%2A>メソッドを提供する各リンクのすべてのレンダリング<xref:System.Web.UI.WebControls.WebParts.CatalogPart>ゾーンに含まれるコントロール。  
  
   
  
## Examples  
 次のコード例では、いくつかの宣言を示しますのプログラムを使用して、<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>クラスです。 コード例を使用して、派生したクラスは抽象であるため、<xref:System.Web.UI.WebControls.WebParts.CatalogZone>クラスから継承するメソッドとプロパティを示す、Web パーツ コントロール セットに付属している、<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>クラスです。  
  
 このコード例では、4 つの部分があります。  
  
-   ユーザー コントロールを Web ページの表示モードを変更することができます。  
  
-   Web ページへの参照を含む、<xref:System.Web.UI.WebControls.WebParts.CatalogZone>制御、およびいくつかのキーの使用状況を示すいくつかのコード<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>クラス メンバーです。  
  
-   カスタム<xref:System.Web.UI.WebControls.WebParts.WebPart>カスタムに追加されるコントロール<xref:System.Web.UI.WebControls.WebParts.CatalogZone>コントロール。  
  
-   ブラウザーでの例の動作についての説明です。  
  
 このコード例の最初の部分は、ユーザー コントロール、ページの表示モードを変更することができます。 詳細については、このコントロールでモードと、ソース コードの説明を表示を参照してください[チュートリアル: Web パーツ ページの表示モードの変更](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)です。  
  
 [!code-aspx-csharp[WebParts_CatalogZoneBase_Overview#8](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/CS/displaymodemenucs.ascx#8)]
 [!code-aspx-vb[WebParts_CatalogZoneBase_Overview#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/VB/displaymodemenuvb.ascx#8)]  
  
 コード例の 2 番目の部分は、Web ページへの参照を宣言を含む、<xref:System.Web.UI.WebControls.WebParts.CatalogZone>コントロール。 ページの上部には、2 つ`Register`ディレクティブ--ユーザー コントロールのいずれかと、カスタムの 1 つ<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロール。 注意してください次のとおりです、`<asp:WebPartZone>`要素は、`<asp: CatalogZone>`要素をカスタムの宣言型の参照を含む<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロール、および ASP.NET を<xref:System.Web.UI.WebControls.Calendar>コントロール。 ゾーンにもさまざまなタグされ、その外観と動作を決定するプロパティを設定します。 間、`<script>`ページ内のタグは、さまざまなイベント処理コードを使用して最もあり、さまざまなプログラムを示しています、<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>メンバー。  
  
 [!code-aspx-csharp[WebParts_CatalogZoneBase_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/CS/catalogzonebasecs.aspx#1)]
 [!code-aspx-vb[WebParts_CatalogZoneBase_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/VB/catalogzonebasevb.aspx#1)]  
  
 コード例の 3 番目の部分は、カスタム<xref:System.Web.UI.WebControls.WebParts.WebPart>という名前のコントロール`TextDisplayWebPart`です。 ゾーン内で宣言されているエンド ユーザーことができます、追加し、カタログからのページに。 コード例を実行するには、このソース コードをコンパイルする必要があります。 コンパイルするには明示的にし、Web サイトの Bin フォルダーまたはグローバル アセンブリ キャッシュに結果として得られるアセンブリを配置できます。 またはを動的にコンパイルされる実行時に、サイトの App_Code フォルダー内のソース コードを配置することができます。 両方のコンパイル方法のデモについては、次を参照してください。[チュートリアル: カスタム Web サーバー コントロールの開発と](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)です。  
  
 [!code-csharp[WebParts_CatalogZoneBase_Overview#9](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/CS/textdisplaywebpart.cs#9)]
 [!code-vb[WebParts_CatalogZoneBase_Overview#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/VB/textdisplaywebpart.vb#9)]  
  
 コード例を使用する設定があること、Web パーツの記述ファイルをエクスポートできるようにするために Web.config ファイルに追加する必要がありますに注意してください。 このコード例の Web ページと同じディレクトリ内の Web.config ファイルがあることを確認します。 内で、`<system.web>`セクションであることを確認、`<webParts>`を持つ要素が`enableExport`属性に設定`true`マークアップを次のように、します。  
  
 `<webParts enableExport="true">`  
  
 `...`  
  
 `</webParts>`  
  
 ブラウザーでページを読み込むときに選択**カタログ**カタログ表示モードに切り替えるには、ドロップダウン リスト ボックスからです。 宣言とプログラムを使用するとカタログが表示、ページに、カタログから追加できる 2 つのサーバー コントロールを表示することができますも注意してください、ui の影響、<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>クラス メンバーです。  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>ホストするため、カスタム ゾーンを開発するかどうか<see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />コントロール、ゾーンのテンプレートのサポートを提供するかどうか決定する必要があります。 実装する型によってゾーンのテンプレートが作成された、<see cref="T:System.Web.UI.ITemplate" />インターフェイス、および必要なを参照する、カスタム ゾーンを使用しているページ開発者を有効にする場合は、 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> Web ページの宣言型マークアップで、ゾーン内のコントロールです。 テンプレートのサポートをゾーニングする必要がある場合から継承する必要があります、<see cref="T:System.Web.UI.WebControls.WebParts.CatalogZone" />クラスです。 これに対し場合、カスタム ゾーンとその<see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />コントロールしようとする自己完結型、およびゾーンのテンプレートで宣言によってコントロールを指定するページのオプションを指定しないでプログラムによって作成されます、直接継承することができます<see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" />クラスです。 継承する場合、<see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" />クラスがオーバーライドする必要があります、<see cref="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogParts" />メソッドを追加し、<see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />またはその他のサーバー コントロールが、カタログにする、<see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartCollection" />オブジェクト。</para>
    </block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CatalogZoneBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>継承クラス インスタンスによって使用されるクラスを初期化します。 このコンストラクターは、継承クラスによってのみ呼び出すことができます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 派生クラスが初期化されるときなど、コンス トラクターが呼び出されます、 <xref:System.Web.UI.WebControls.WebParts.CatalogZone> Web パーツ コントロール セットで提供されるクラスです。 基本<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.%23ctor%2A>コンス トラクターは、適切なを渡すことによって、Web パーツ カタログ ユーザー インターフェイス (UI) を表示するページを準備するのに役立ちます<xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>オブジェクトを<xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロール。 具体的には、コンス トラクター パス、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode>オブジェクト。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddVerb">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.WebPartVerb AddVerb { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartVerb AddVerb" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.CatalogZoneBase.AddVerb" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartVerb</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>参照を取得、<see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" />カタログから Web パーツ ページにコントロールを追加するエンドユーザーを有効にするオブジェクト。</summary>
        <value>A<see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" />をエンドユーザーをカタログから Web ページにコントロールを追加します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Add 動詞がによって参照される、<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.AddVerb%2A>から派生したコントロールのプロパティ、<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>クラスです。 Add 動詞は、Web ページに、カタログでエンドユーザーが選択するコントロールを追加します。 通常、add 動詞として表示されます、ユーザー インターフェイス (UI) で、<xref:System.Web.UI.WebControls.Button>を制御することもできますリンクやイメージがします。  
  
 Add 動詞は、ゾーン レベルのコントロールをいくつかありますが<xref:System.Web.UI.WebControls.WebParts.CatalogPart>カタログ内のコントロール、追加動詞は、ユーザーが選択したすべてのコントロールに適用され、選択されたゾーンに追加します。  
  
   
  
## Examples  
 次のコード例は、アクセスする方法を示します、<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.AddVerb%2A>プロパティ宣言またはプログラムによってです。 例を実行するために必要な完全なコードのセクションの例を参照してください、<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>クラスの概要です。  
  
 このコード例の最初の部分にアクセスする方法を示しています、 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.ApplyVerb%2A> Web ページで、宣言します。 この例では、動詞のテキストをカスタマイズします。  
  
 [!code-aspx-csharp[WebParts_CatalogZoneBase_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/CS/catalogzonebasecs.aspx#2)]
 [!code-aspx-vb[WebParts_CatalogZoneBase_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/VB/catalogzonebasevb.aspx#2)]  
  
 例の 2 番目の部分にアクセスする方法を示しています、<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.AddVerb%2A>プロパティ プログラムを使用して、トグル ボタンを有効または無効にします。  
  
 [!code-csharp[WebParts_CatalogZoneBase_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/CS/catalogzonebasecs.aspx#3)]
 [!code-vb[WebParts_CatalogZoneBase_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/VB/catalogzonebasevb.aspx#3)]  
  
 ブラウザーでページを読み込むときに選択**カタログ**カタログ表示モードに切り替えるにはドロップダウン リストからです。 カタログが表示されたら、カスタマイズされたテキストを調べることができます、 <xref:System.Web.UI.WebControls.Button> add 動詞とするためのコントロールをクリックして、**有効化または無効にする動詞**apply 動詞をプログラムでアクセスできることを示すためにボタンをクリックします。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CatalogPartChrome">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.CatalogPartChrome CatalogPartChrome { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.CatalogPartChrome CatalogPartChrome" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CatalogPartChrome" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.CatalogPartChrome</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>インスタンスへの参照を取得、<see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartChrome" />クラスに関連付けられている、<see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" />ゾーンです。</summary>
        <value>A<see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartChrome" />ゾーンに関連付けられています。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ときに、<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogPartChrome%2A>メソッドが呼び出されると、1 つのインスタンスを作成、<xref:System.Web.UI.WebControls.WebParts.CatalogPartChrome>クラス、およびこのインスタンスがすべての周辺機器のユーザー インターフェイス (UI) 要素 (クロムとも呼ばれます) を表示するために使用される<xref:System.Web.UI.WebControls.WebParts.CatalogPart>ゾーン内のコントロールです。  
  
 個々 の chrome 要素<xref:System.Web.UI.WebControls.WebParts.CatalogPart>コントロールがその境界線およびタイトルのテキストを記載します。 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> Web パーツ コントロール セットに付属するコントロールでは、既定では、ヘッダーの動詞はありません。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CatalogParts">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.CatalogPartCollection CatalogParts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.CatalogPartCollection CatalogParts" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CatalogParts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.CatalogPartCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>すべてのコレクションを取得、<see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />に含まれるコントロール、<see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" />ゾーンです。</summary>
        <value>A<see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartCollection" />を含むすべての個人<see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />ゾーン内のコントロールです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CatalogParts%2A>プロパティは、すべてのコレクションへの参照を提供、<xref:System.Web.UI.WebControls.WebParts.CatalogPart>ゾーン内のコントロールです。 両方を参照して、 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> Web パーツ コントロール セット、および任意のカスタム コントロール<xref:System.Web.UI.WebControls.WebParts.CatalogPart>をゾーンに追加されるコントロールです。  
  
 別のメソッドにアクセスするときに最初に、コレクションが作成、<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CatalogParts%2A>プロパティ、およびプロパティの呼び出し、<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogParts%2A>メソッドです。  
  
> [!NOTE]
>  注意してください<xref:System.Web.UI.WebControls.WebParts.CatalogPart>のコレクションに追加されている<xref:System.Web.UI.WebControls.WebParts.CatalogPart>の実装内のコントロール、<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogParts%2A>メソッドは、ID プロパティに割り当てられている値を持つ必要があります、例外がスローする、コレクションに割り当てるときにそれ以外の場合、<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CatalogParts%2A>プロパティです。  
  
   
  
## Examples  
 次のコード例は、アクセスする方法を示します、<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CatalogParts%2A>プロパティ プログラムでします。 例を実行するために必要な完全なコードのセクションの例を参照してください、<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>クラスの概要です。  
  
 このコード例にアクセスする方法を示しています、<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CatalogParts%2A>プロパティが、コレクションを反復処理し、すべての Id を一覧表示、<xref:System.Web.UI.WebControls.WebParts.CatalogPart>ゾーン内のコントロールです。  
  
 [!code-csharp[WebParts_CatalogZoneBase_Overview#4](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/CS/catalogzonebasecs.aspx#4)]
 [!code-vb[WebParts_CatalogZoneBase_Overview#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/VB/catalogzonebasevb.aspx#4)]  
  
 ブラウザーでページを読み込むときに選択**カタログ**カタログ表示モードに切り替えるにはドロップダウン リストからです。 カタログが表示されている場合に選択できます、**されたら**をデモンストレーションするにはボタン方法、<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CatalogParts%2A>プロパティにアクセスすることができます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">A<see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />コレクションに追加されているがありませんでした、ID プロパティに割り当てられた値。</exception>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="protected override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.Close" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>カタログの表示モードから通常のブラウズ モードの Web ページに切り替えます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.Close%2A>メソッドは、カタログ内の現在選択されているコントロールを無視します。 呼び出すだけ、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロールを Web ページをブラウズ モードを返します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseVerb">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.WebPartVerb CloseVerb { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartVerb CloseVerb" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CloseVerb" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartVerb</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>参照を取得、<see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" />カタログのユーザー インターフェイス (UI) を終了し、ページを通常のブラウズ モードに戻りますにエンドユーザーを有効にするオブジェクト。</summary>
        <value>A<see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" />をエンドユーザーをカタログ UI には、Web ページを閉じます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 閉じる動詞がによって参照される、<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CloseVerb%2A>から派生したコントロールのプロパティ、<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>クラスです。  
  
 ユーザーは、閉じる動詞ゾーンのフッターには、をクリックします。 ユーザーがクリックすると、閉じる動詞、<xref:System.Web.UI.WebControls.WebParts.CatalogPart>ユーザーが選択したコントロールは無視されます、UI を閉じると、カタログ、およびページは、通常のブラウズ モードに戻ります。  
  
 閉じる動詞は、ゾーン レベルの制御、そのアクションが全体のゾーンのレベルで適用されることを意味します。 ユーザーには、閉じる動詞がクリックすると、任意のコントロールを選択されましたが、ページに追加されませんが無視されます、カタログは閉じられ、ページは、ブラウズ モードに戻ります。  
  
   
  
## Examples  
 次のコード例は、アクセスする方法を示します、<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CloseVerb%2A>プロパティ宣言またはプログラムによってです。 例を実行するために必要な完全なコードのセクションの例を参照してください、<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>クラスの概要です。  
  
 このコード例の最初の部分にアクセスする方法を示しています、 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CloseVerb%2A> Web ページで、宣言します。 この例をカスタマイズ、<xref:System.Web.UI.WebControls.WebParts.WebPartVerb.Description%2A>動詞のプロパティです。  
  
 [!code-aspx-csharp[WebParts_CatalogZoneBase_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/CS/catalogzonebasecs.aspx#2)]
 [!code-aspx-vb[WebParts_CatalogZoneBase_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/VB/catalogzonebasevb.aspx#2)]  
  
 例の 2 番目の部分にアクセスする方法を示しています、<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CloseVerb%2A>プロパティ プログラムを使用して、トグル ボタンを有効または無効にします。  
  
 [!code-csharp[WebParts_CatalogZoneBase_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/CS/catalogzonebasecs.aspx#3)]
 [!code-vb[WebParts_CatalogZoneBase_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/VB/catalogzonebasevb.aspx#3)]  
  
 ブラウザーでページを読み込むときに選択**カタログ**カタログ表示モードに切り替えるにはドロップダウン リストからです。 ときに、カタログは、によって表示の上にマウス ポインターを置く、**閉じる**ボタン、ツールヒントにその説明のテキストを確認できます。 クリックすることも、**有効化または無効にする動詞**閉じる動詞をプログラムでアクセスできることを示すためにボタンをクリックします。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateCatalogPartChrome">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.WebParts.CatalogPartChrome CreateCatalogPartChrome ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.WebParts.CatalogPartChrome CreateCatalogPartChrome() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogPartChrome" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.CatalogPartChrome</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>インスタンスを作成、<see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartChrome" />周辺機器のユーザー インターフェイス (UI) 要素を表示するために使用されるオブジェクト<see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />ゾーン内のコントロールです。</summary>
        <returns>A<see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartChrome" />ゾーンの周辺の UI 要素を表示します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogPartChrome%2A> メソッドは <xref:System.Web.UI.WebControls.WebParts.CatalogPartChrome> オブジェクトを返します。 個々 の chrome 要素<xref:System.Web.UI.WebControls.WebParts.CatalogPart>コントロールがその境界線およびタイトルのテキストを記載します。 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> Web パーツ コントロール セットに付属するコントロールでは、既定では、ヘッダーの動詞はありません。 ただし、設定することは、<xref:System.Web.UI.WebControls.WebParts.Part.ChromeState%2A>のプロパティ、<xref:System.Web.UI.WebControls.WebParts.CatalogPart>制御、最小化したり、必要に応じて、コントロールをプログラムで復元できるようにします。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateCatalogParts">
      <MemberSignature Language="C#" Value="protected abstract System.Web.UI.WebControls.WebParts.CatalogPartCollection CreateCatalogParts ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.WebParts.CatalogPartCollection CreateCatalogParts() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogParts" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.CatalogPartCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>作成の詳細を処理するゾーンを派生する基本メソッド宣言をオーバーライドできますを提供、<see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />ゾーンに含まれるコントロール。</summary>
        <returns>A<see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartCollection" />のコレクションを含む<see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />ゾーンに関連付けられているコントロール。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogParts%2A>メソッドは実装を提供します。 派生クラスで実装するものでは、コレクションのインスタンスを作成するために使用する必要があります<xref:System.Web.UI.WebControls.WebParts.CatalogPart>ホストする Web ページがカタログ モードになるたびに、ゾーンに含まれるコントロール。 <xref:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts%2A?displayProperty=nameWithType>メソッドの実装の 1 つの例には、<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogParts%2A>メソッドです。  
  
> [!NOTE]
>  注意してください<xref:System.Web.UI.WebControls.WebParts.CatalogPart>のコレクションに追加されている<xref:System.Web.UI.WebControls.WebParts.CatalogPart>の実装内のコントロール、<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogParts%2A>メソッドは、ID プロパティに割り当てられている値を持つ必要があります、例外がスローする、コレクションに割り当てるときにそれ以外の場合、<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CatalogParts%2A>プロパティです。  
  
 メソッドを作成できる、<xref:System.Web.UI.WebControls.WebParts.CatalogPart>いくつかのソースからのコントロール: 内で永続化の形式で宣言されているコントロール、<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>コントロール、または XML ファイルやデータベースなどのさまざまなストレージ機構に保存されているコントロール。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>カスタムを作成する開発者<see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />コントロールを継承する必要があります、<see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" />または<see cref="T:System.Web.UI.WebControls.WebParts.CatalogZone" />クラス、およびカスタムを作成する場合は、このメソッドをオーバーライド<see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartChrome" />、ユーザー設定を表示するためにオブジェクト<see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />コントロール。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="CreateChildControls">
      <MemberSignature Language="C#" Value="protected override void CreateChildControls ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void CreateChildControls() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateChildControls" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>関連付けられたコントロールの子のセットを作成、<see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" />ゾーンです。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EmptyZoneText">
      <MemberSignature Language="C#" Value="public override string EmptyZoneText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EmptyZoneText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.CatalogZoneBase.EmptyZoneText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ゾーンにコントロールが含まれないときに表示されるメッセージを取得または設定します。</summary>
        <value>空のゾーンに表示されるメッセージを含む文字列。 カルチャ固有の既定の文字列は、.NET Framework によって提供されます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 文字列値、<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.EmptyZoneText%2A>プロパティは、Web ページがカタログ モードになる場合、表示は、<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>ゾーンが含まれていませんには<xref:System.Web.UI.WebControls.WebParts.CatalogPart>コントロール。  
  
   
  
## Examples  
 次のコード例を使用する方法を示しています、<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.EmptyZoneText%2A>プロパティ宣言します。 例を実行するために必要な完全なコードのセクションの例を参照してください、<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>クラスの概要です。  
  
 コード例に、2 つを宣言ことに注意してください。`<asp:catalogzone>`要素、および、もう 1 つで宣言されていない<xref:System.Web.UI.WebControls.WebParts.CatalogPart>を制御する場合に値を割り当てることは、<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.EmptyZoneText%2A>プロパティです。  
  
 [!code-aspx-csharp[WebParts_CatalogZoneBase_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/CS/catalogzonebasecs.aspx#2)]
 [!code-aspx-vb[WebParts_CatalogZoneBase_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/VB/catalogzonebasevb.aspx#2)]  
  
 ブラウザーでページを読み込むときに選択**カタログ**カタログ表示モードに切り替えるにはドロップダウン リストからです。 カタログが表示されている場合は、最初のゾーンでは、以下が含まれている 2 つに注意してください。<xref:System.Web.UI.WebControls.WebParts.CatalogPart>コントロール、2 番目のゾーンが表示され、の内容を表示、<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.EmptyZoneText%2A>プロパティ コントロールが含まれていないためです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderText">
      <MemberSignature Language="C#" Value="public override string HeaderText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HeaderText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.CatalogZoneBase.HeaderText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ゾーンのヘッダー領域のテキストを取得または設定します。</summary>
        <value>ゾーンのヘッダー テキストを含む文字列。 カルチャ固有の既定の文字列は、.NET Framework によって提供されます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 文字列値、<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.HeaderText%2A>のヘッダー領域でプロパティを表示、<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>ゾーン、ゾーンの最上位にあります。 テキスト、<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.HeaderText%2A>ページ カタログ モードに入るし、カタログのユーザー インターフェイス (UI) が表示され、プロパティが表示されます。  
  
   
  
## Examples  
 次のコード例を使用する方法を示しています、<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.HeaderText%2A>プロパティをプログラムで宣言します。 例を実行するために必要な完全なコードのセクションの例を参照してください、<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>クラスの概要です。  
  
 コード例に、2 つを宣言ことに注意してください。`<asp:catalogzone>`要素。 2 番目の例で宣言されていない<xref:System.Web.UI.WebControls.WebParts.CatalogPart>、コントロールが、両方の値を宣言、<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.HeaderText%2A>プロパティです。  
  
 [!code-aspx-csharp[WebParts_CatalogZoneBase_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/CS/catalogzonebasecs.aspx#2)]
 [!code-aspx-vb[WebParts_CatalogZoneBase_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/VB/catalogzonebasevb.aspx#2)]  
  
 コード例は、の値の 2 番目の部分で、<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.HeaderText%2A>最初にゾーンのプロパティが別の値にプログラムによって割り当てられています。  
  
 [!code-csharp[WebParts_CatalogZoneBase_Overview#5](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/CS/catalogzonebasecs.aspx#5)]
 [!code-vb[WebParts_CatalogZoneBase_Overview#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/VB/catalogzonebasevb.aspx#5)]  
  
 ブラウザーでページを読み込むときに選択**カタログ**カタログ表示モードに切り替えるにはドロップダウン リストからです。 カタログが表示されている場合は、それぞれの値に注意してください<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.HeaderText%2A>各ゾーンのヘッダー領域にプロパティが表示されます。 クリックすることができます、**ゾーン テキストのプロパティの設定**ボタン、および<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.HeaderText%2A>上のゾーンのプロパティが、コードでそれに割り当てられた値に設定します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InstructionText">
      <MemberSignature Language="C#" Value="public override string InstructionText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InstructionText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.CatalogZoneBase.InstructionText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはエンドユーザーの指示を提供するゾーンでのテキストを設定します。</summary>
        <value>エンドユーザーの指示を格納する文字列。 既定では、カルチャに固有の文字列は、Web パーツ コントロール セットによって提供されます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 文字列値、<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.InstructionText%2A>のヘッダー領域のすぐ下に表示されるプロパティ、<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>ゾーンです。 テキスト、<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.InstructionText%2A>ページ カタログ モードに入るし、カタログのユーザー インターフェイス (UI) が表示され、プロパティが表示されます。  
  
 目的、<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.InstructionText%2A>プロパティは、一般的な手順については、カタログの UI が表示される場合の対処方法をユーザーに提供します。  
  
   
  
## Examples  
 次のコード例を使用する方法を示しています、<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.InstructionText%2A>プロパティをプログラムで宣言します。 例を実行するために必要な完全なコードのセクションの例を参照してください、<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>クラスの概要です。  
  
 コード例に、2 つを宣言ことに注意してください。`<asp:catalogzone>`要素、および 1 つ目の宣言の値、<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.InstructionText%2A>プロパティです。  
  
 [!code-aspx-csharp[WebParts_CatalogZoneBase_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/CS/catalogzonebasecs.aspx#2)]
 [!code-aspx-vb[WebParts_CatalogZoneBase_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/VB/catalogzonebasevb.aspx#2)]  
  
 コード例は、の値の 2 番目の部分で、<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.InstructionText%2A>最初にゾーンのプロパティが別の値にプログラムによって割り当てられています。  
  
 [!code-csharp[WebParts_CatalogZoneBase_Overview#5](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/CS/catalogzonebasecs.aspx#5)]
 [!code-vb[WebParts_CatalogZoneBase_Overview#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/VB/catalogzonebasevb.aspx#5)]  
  
 ブラウザーでページを読み込むときに選択**カタログ**カタログ表示モードに切り替えるにはドロップダウン リストからです。 カタログが表示されているときの値に注意してください、<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.InstructionText%2A>各ゾーンのヘッダー領域にプロパティが表示されます。 クリックすることができます、**ゾーン テキストのプロパティの設定**ボタン、および<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.InstructionText%2A>上のゾーンのプロパティが、コードでそれに割り当てられた値に設定します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidateCatalogParts">
      <MemberSignature Language="C#" Value="protected void InvalidateCatalogParts ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void InvalidateCatalogParts() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.InvalidateCatalogParts" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>コレクションを破棄<see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />コントロールに関連付けられている、<see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" />ゾーンです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.InvalidateCatalogParts%2A>場合、派生クラスでメソッドを呼び出すことが一連の<xref:System.Web.UI.WebControls.WebParts.CatalogPart>コントロールに関連付けられている、<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>いくつかの理由から、ゾーンが変更され、派生クラスは、更新の一覧を取得する必要があります<xref:System.Web.UI.WebControls.WebParts.CatalogPart>コントロール。 派生クラスを呼び出す必要があります最初<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.InvalidateCatalogParts%2A>、現在のコレクションとし、基本クラスの破棄を呼び出す<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogParts%2A>ように更新されたコレクションを作成するために必要です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadControlState">
      <MemberSignature Language="C#" Value="protected override void LoadControlState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void LoadControlState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.LoadControlState(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">以前に保存された状態データ。</param>
        <summary>コントロールのビュー ステートが無効になっている場合でも、ポストバック間で永続化する必要がありますコントロールのプロパティの前のページ要求の状態を読み込みます。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="savedState" />有効なコントロールの状態はありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="LoadPostData">
      <MemberSignature Language="C#" Value="protected virtual bool LoadPostData (string postDataKey, System.Collections.Specialized.NameValueCollection postCollection);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LoadPostData(string postDataKey, class System.Collections.Specialized.NameValueCollection postCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="postDataKey" Type="System.String" />
        <Parameter Name="postCollection" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="postDataKey">コントロールのキー識別子。</param>
        <param name="postCollection">サーバーにポストされた名前と値のペアのコレクション。</param>
        <summary>プロセスのチェック ボックスをオンの状態、<see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />ページがサーバーにポストされたときに、カタログ内のコントロールです。</summary>
        <returns>オーバーライドされた基底メソッドとは異なり、このメソッドは常に返します<see langword="false" />クラスが変更イベントを公開しないため、します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、のコレクションを反復処理<xref:System.Web.UI.WebControls.CheckBox>決定するためのコントロール<xref:System.Web.UI.WebControls.WebParts.WebPart>カタログ内の他のサーバー コントロールは、ユーザーが選択されているか。 選択した項目は、Web ページに対応するコントロールを追加し、処理される内部の配列に割り当てられます。  
  
 メソッドは、コードから呼び出されるものでありません。Web パーツ コントロール セットによって内部的に使用されます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.LoadViewState(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">以前に保存された状態データ。</param>
        <summary>以前に保存されたゾーンの状態情報を読み込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、主に、.NET Framework インフラストラクチャによって使用され、コードから直接使用するものではありません。 ただし、カスタム サーバー コントロールがそのビューステートを復元する方法を指定するには、このメソッドをオーバーライドすることができます。 詳細については、次を参照してください。 [ASP.NET 状態管理の概要](http://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce)です。  
  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.LoadViewState%2A>メソッドが最初に既存の状態情報を読み込めません基本メソッドを呼び出します。 次に、add 動詞、close の動詞の状態情報を含むビュー状態データ オブジェクトを追加、<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.PartLinkStyle%2A>オブジェクト、および<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedPartLinkStyle%2A>オブジェクト。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">サイズ、<paramref name="savedState" />オブジェクトが現在のビュー状態オブジェクトのサイズと等しくないです。</exception>
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.OnInit(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>ページ コントロールの状態を必要とされるようにページ オブジェクトを登録します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.OnPreRender(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>発生させる、<see cref="E:System.Web.UI.Control.PreRender" />イベントと、ページのオブジェクトがポストバックを要求できるように登録します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PartLinkStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style PartLinkStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style PartLinkStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.CatalogZoneBase.PartLinkStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>スタイル属性を含むオブジェクトを取得、<see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />ゾーンで現在選択されていないコントロール。</summary>
        <value>A<see cref="T:System.Web.UI.WebControls.Style" />現在選択されていないコントロールのスタイル属性を格納しています。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> 、ゾーンの種類ごとにリンクが表示されます<xref:System.Web.UI.WebControls.WebParts.CatalogPart>コントロール: <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>、 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>、および<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>です。 ユーザーがクリックしたとき、対応する、リンクのいずれかの<xref:System.Web.UI.WebControls.WebParts.CatalogPart>コントロール、選択したコントロールになり、その選択したコントロールに含まれる子コントロールが見えるようになります。  
  
 <xref:System.Web.UI.WebControls.Style>によって参照されるオブジェクト、<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.PartLinkStyle%2A>プロパティにはスタイル属性が含まれています、<xref:System.Web.UI.WebControls.WebParts.CatalogPart>現在選択されていないコントロール。 プロパティによって参照されるオブジェクトは、読み取り専用をそのまま使用する、選択されていないため、基になるスタイル特性を設定する<xref:System.Web.UI.WebControls.WebParts.CatalogPart>コントロール。  
  
   
  
## Examples  
 次のコード例を使用する方法を示しています、<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.PartLinkStyle%2A>プロパティをプログラムで宣言します。 例を実行するために必要な完全なコードのセクションの例を参照してください、<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>クラスの概要です。  
  
 2 つのコード例の最初の部分を宣言することを確認`<asp:catalogzone>`要素、および 1 つ目の宣言の値、<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.PartLinkStyle%2A>プロパティです。  
  
 [!code-aspx-csharp[WebParts_CatalogZoneBase_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/CS/catalogzonebasecs.aspx#2)]
 [!code-aspx-vb[WebParts_CatalogZoneBase_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/VB/catalogzonebasevb.aspx#2)]  
  
 コード例の 2 番目の部分で、テキストの色を選択されていない<xref:System.Web.UI.WebControls.WebParts.CatalogPart>コントロールが別の値に設定します。  
  
 [!code-csharp[WebParts_CatalogZoneBase_Overview#7](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/CS/catalogzonebasecs.aspx#7)]
 [!code-vb[WebParts_CatalogZoneBase_Overview#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/VB/catalogzonebasevb.aspx#7)]  
  
 ブラウザーでページを読み込むときに選択**カタログ**カタログ表示モードに切り替えるにはドロップダウン リストからです。 カタログが表示されたら、選択されていないのスタイル属性に注意してください<xref:System.Web.UI.WebControls.WebParts.CatalogPart>ゾーンでのコントロールが表示されている (既定では、選択した<xref:System.Web.UI.WebControls.WebParts.CatalogPart>コントロールは、<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>コントロール)。 クリックすることができます、**一部リンク スタイルの変更**をオフになっているコントロールのテキストの色を変更するボタンをクリックします。 コントロールが選択されているときにスタイル属性の変更を表示する、選択されていないコントロールについては、リンクをクリックすることもできます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RaisePostBackEvent">
      <MemberSignature Language="C#" Value="protected override void RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RaisePostBackEvent(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">A<see cref="T:System.String" />イベントの引数を格納しています。</param>
        <summary>ゾーン動詞のいずれかに関連付けられたアクションを実行するか、サーバーへのポストバック イベントが発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 場合、 `eventArgument` add 動詞または close 動詞がクリックされたという、パラメーターのデータを示します、<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RaisePostBackEvent%2A>メソッドを追加するなどの動詞に関連付けられているアクションが実行<xref:System.Web.UI.WebControls.WebParts.WebPart> ページで、またはカタログを終了するコントロール。 メソッドは、その他の何らかの理由で呼び出されているが場合、サーバーにポストバック イベントを生成する基本メソッドが呼び出されます。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>カスタム動詞を追加する場合、<see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" />ゾーン、オーバーライドする必要があります、<see cref="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RaisePostBackEvent(System.String)" />カスタム動詞がクリックすると、イベントを処理するメソッド。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><see cref="T:System.Web.UI.HtmlTextWriter" />ゾーンの内容を受け取る。</param>
        <summary>指定されたゾーンをレンダリング<see cref="T:System.Web.UI.HtmlTextWriter" />オブジェクト。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.Render%2A>メソッドから基本メソッドをオーバーライド、<xref:System.Web.UI.WebControls.WebControl>クラスを呼び出して、<xref:System.Web.UI.Page.VerifyRenderingInServerForm%2A>メソッドで、実行時に、ゾーン コントロールの HTML フォームが表示されることを確認します。 検証した後に、メソッドは、ゾーンの残りの内容を表示します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderBody">
      <MemberSignature Language="C#" Value="protected override void RenderBody (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RenderBody(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderBody(System.Web.UI.HtmlTextWriter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><see cref="T:System.Web.UI.HtmlTextWriter" />ゾーンの本文の内容を受け取る。</param>
        <summary>派生したゾーンの本体領域を表示するために基本メソッドをオーバーライドして、<see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" />クラスです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderBody%2A>メソッドの本体領域の表示、<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>ゾーンでは、ヘッダーとページ フッターの領域間でのメイン コンテンツ領域は、含む<xref:System.Web.UI.WebControls.WebParts.CatalogPart>コントロール。  
  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderBody%2A>メソッドで基本メソッドをオーバーライドします<xref:System.Web.UI.WebControls.WebParts.WebZone>レイアウトとスタイルに対応する特殊な表示属性を提供するクラスがのみに適用<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>ゾーンです。 メソッドは、本文の内容全体を含むテーブルを出力し、そのテーブル内に設定など、さまざまな条件に応じて別の属性値数<xref:System.Web.UI.WebControls.WebParts.CatalogPart>コントロールは、ゾーンにします。 複数ある場合<xref:System.Web.UI.WebControls.WebParts.CatalogPart>コントロール、リンクが作成された各コントロールについて、および現在選択されているコントロールの内容のみが表示されます。 特別なスタイル属性が設定されて、 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CatalogPartChrome%2A> 、選択したプロパティ<xref:System.Web.UI.WebControls.WebParts.CatalogPart>コントロールと、現在選択されていません。  
  
 ある場合ありません<xref:System.Web.UI.WebControls.WebParts.CatalogPart>ゾーンでは、コントロール、<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderBody%2A>メソッドの値を表示する、<xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EmptyZoneText%2A>プロパティです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderCatalogPartLinks">
      <MemberSignature Language="C#" Value="protected virtual void RenderCatalogPartLinks (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RenderCatalogPartLinks(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderCatalogPartLinks(System.Web.UI.HtmlTextWriter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><see cref="T:System.Web.UI.HtmlTextWriter" />ゾーンのコントロールへのリンクの内容を受け取る。</param>
        <summary>リンクを個別にレンダリング<see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />コントロールで、<see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" />ゾーンです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderCatalogPartLinks%2A>メソッドは、個別にリンクを表示<xref:System.Web.UI.WebControls.WebParts.CatalogPart>が複数ある場合に、ゾーンで制御<xref:System.Web.UI.WebControls.WebParts.CatalogPart>コントロール。  
  
 現在選択されているリンク<xref:System.Web.UI.WebControls.WebParts.CatalogPart>コントロールを表示する異なる方法で選択されていないコントロールから目立つようにします。 開発者を使用してリンクについては、選択されていると、選択されていないコントロールのスタイル属性を設定することができます、<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedPartLinkStyle%2A>と<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.PartLinkStyle%2A>プロパティ、それぞれします。  
  
 リンク、<xref:System.Web.UI.WebControls.WebParts.CatalogPart>ゾーン内のコントロールがナビゲーションではないです、コントロールのユーザー インターフェイス (UI) を表示するためです。 ユーザーは、コントロールへのリンクをクリックすると、表示されている他のコントロールの UI は非表示で、選択したコントロールの UI が表示されます。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>継承するカスタム クラスを作成する場合、<see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" />クラス、必要に応じてオーバーライドできます、<see cref="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderCatalogPartLinks(System.Web.UI.HtmlTextWriter)" />メソッドです。 このメソッドに制御するプログラムによる方法へのリンク<see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />ゾーンでのコントロールが表示されます。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="RenderFooter">
      <MemberSignature Language="C#" Value="protected override void RenderFooter (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RenderFooter(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderFooter(System.Web.UI.HtmlTextWriter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><see cref="T:System.Web.UI.HtmlTextWriter" />ゾーンのフッターの領域を表示します。</param>
        <summary>フッター領域を表示、<see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" />ゾーンです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 フッター、<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>ゾーンとは、動詞を追加し、閉じる動詞などゾーン レベルの動詞を含むゾーンの下の領域。 マークアップでは、基になる、フッターは、HTML テーブルのセルだけです。  
  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderFooter%2A>メソッドは、まず、フッターのスタイル属性を作成しを呼び出して、<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderVerbs%2A>メソッドは、追加の表示を閉じる動詞です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderVerbs">
      <MemberSignature Language="C#" Value="protected override void RenderVerbs (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RenderVerbs(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderVerbs(System.Web.UI.HtmlTextWriter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><see cref="T:System.Web.UI.HtmlTextWriter" />ゾーンの動詞を表示します。</param>
        <summary>ページ フッターの領域で、動詞を表示、<see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" />ゾーンです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderVerbs%2A>メソッドは、add 動詞およびフッター領域内で閉じる動詞を表示、<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>ゾーンです。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><see cref="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderVerbs(System.Web.UI.HtmlTextWriter)" />メソッドが任意のカスタムの描画を処理していない<see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" />開発者がカスタムに追加するオブジェクト<see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" />ゾーンです。 カスタム動詞を追加する場合、<see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" />クラスから継承する必要があります、<see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" />クラス、し、上書き、<see cref="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderVerbs(System.Web.UI.HtmlTextWriter)" />メソッドで、ゾーンのカスタム動詞を表示するために使用することができます。 上書きすることも必要があります、<see cref="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RaisePostBackEvent(System.String)" />カスタム動詞が、ユーザーがクリックされたときにイベントを処理するメソッド。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="SaveControlState">
      <MemberSignature Language="C#" Value="protected override object SaveControlState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance object SaveControlState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SaveControlState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>変更を保存、 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" /> Web ページがサーバーにポストされた後に発生するコントロールの状態。</summary>
        <returns><see cref="T:System.Object" />コントロールの状態データを格納します。 このメソッドを返しますのかどうかがない状態の変更、<see langword="null" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SaveControlState%2A>メソッドは、状態データを (インデックスやキーワードの場合) などのコントロールの操作に不可欠であり、コントロールのビュー状態データとは別に関係します。  
  
 メソッドは、まず、コントロールの既存の状態データを保存する基本メソッドを呼び出します。 次に、それを決定するかどうか、<xref:System.Web.UI.WebControls.WebParts.CatalogPart>をチェックして、ゾーン内のコントロールは現在選択するかどうか、<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedCatalogPartID%2A>プロパティ値を持ちます。 選択したコントロールがある場合、メソッドは、選択したコントロールの状態データで既存の状態データを更新し、すべての状態データを返します。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>必要に応じてオーバーライドできます、<see cref="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SaveControlState" />派生クラスでメソッドが、ゾーン内の他のカスタム オブジェクトの保存されているコントロールの状態を更新できるようにします。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SaveViewState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ページがサーバーにポスト バックされた後で発生したビューステートの変更を保存します。</summary>
        <returns>ゾーン コントロールの現在のビュー ステートを返します。 ビュー ステートがいないかどうか、ゾーンに関連付け、このメソッドが戻る<see langword="null" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SaveViewState%2A>メソッドに関連付けられているビュー ステートを保存する基本メソッドを呼び出し、<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>ゾーンです。 次とでの追加と閉じる動詞は、任意のビュー状態を保存、<xref:System.Web.UI.WebControls.Style>オブジェクトに関連付けられている、<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.PartLinkStyle%2A>と<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedPartLinkStyle%2A>プロパティです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedCatalogPartID">
      <MemberSignature Language="C#" Value="public string SelectedCatalogPartID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectedCatalogPartID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedCatalogPartID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在選択されている識別子としての文字列の設定を取得または<see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />ゾーン内のコントロールです。</summary>
        <value>現在選択されているコントロールの識別子として機能する文字列。 既定では、コントロールの値<see cref="P:System.Web.UI.Control.ID" />プロパティです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedCatalogPartID%2A>プロパティでは、現在選択されている任意の識別子を設定できます。<xref:System.Web.UI.WebControls.WebParts.CatalogPart>コントロール。 これは、コントロールは変更されません<xref:System.Web.UI.Control.ID%2A>プロパティの値のプログラムの目的でこのプロパティを使用できるようにします。 たとえば、する場合は常に実行で現在選択されているプログラムによる操作<xref:System.Web.UI.WebControls.WebParts.CatalogPart>コントロール、このプロパティを使用するコントロールにアクセスすることを事前に設定する既知の値を使用します。  
  
 テーマまたはスタイル シート テーマによっては、このプロパティを設定できません。 詳細については、次を参照してください。<xref:System.Web.UI.ThemeableAttribute>と[ASP.NET のテーマとスキン](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)です。  
  
   
  
## Examples  
 次のコード例を使用する方法を示しています、<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedCatalogPartID%2A>プロパティをプログラムで宣言します。 例を実行するために必要な完全なコードのセクションの例を参照してください、<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>クラスの概要です。  
  
 2 つのコード例の最初の部分を宣言することを確認`<asp:catalogzone>`要素、および 1 つ目の宣言の値、<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedCatalogPartID%2A>プロパティです。  
  
 [!code-aspx-csharp[WebParts_CatalogZoneBase_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/CS/catalogzonebasecs.aspx#2)]
 [!code-aspx-vb[WebParts_CatalogZoneBase_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/VB/catalogzonebasevb.aspx#2)]  
  
 コード例の 2 番目の部分では、テキストの値、<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedCatalogPartID%2A>現在選択されているコントロールのプロパティが表示されます。  
  
 [!code-csharp[WebParts_CatalogZoneBase_Overview#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/CS/catalogzonebasecs.aspx#6)]
 [!code-vb[WebParts_CatalogZoneBase_Overview#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/VB/catalogzonebasevb.aspx#6)]  
  
 ブラウザーでページを読み込むときに選択**カタログ**カタログ表示モードに切り替えるにはドロップダウン リストからです。 カタログが表示されたらへのリンクのいずれかをクリックして、<xref:System.Web.UI.WebControls.WebParts.CatalogPart>コントロールを選択します。 をクリックして、**選択された CatalogPart の ID を表示する**プロパティ値を表示するボタンをクリックします。 プロパティの値は、ゾーンの宣言によって設定された値であることを確認します。 その他に、選択した場合<xref:System.Web.UI.WebControls.WebParts.CatalogPart>ゾーン内のコントロール、同じ値の値になります、<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedCatalogPartID%2A>が選択されている場合は、各コントロールのプロパティです。 値が設定されていない場合、<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedCatalogPartID%2A>プロパティの既定値は常に、値の<xref:System.Web.UI.Control.ID%2A>現在選択されているコントロールのプロパティです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedPartLinkStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style SelectedPartLinkStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style SelectedPartLinkStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedPartLinkStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>スタイル属性を含むオブジェクトを取得、<see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />ゾーンで現在選択されているコントロール。</summary>
        <value>A<see cref="T:System.Web.UI.WebControls.Style" />現在選択されているコントロールのスタイル属性を格納しています。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> 、ゾーンの種類ごとにリンクが表示されます<xref:System.Web.UI.WebControls.WebParts.CatalogPart>コントロール: <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>、 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>、および<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>です。 ユーザーがクリックしたとき、対応する、リンクのいずれかの<xref:System.Web.UI.WebControls.WebParts.CatalogPart>コントロール、選択したコントロールになり、その選択したコントロールに含まれる子コントロールが見えるようになります。  
  
 <xref:System.Web.UI.WebControls.Style>によって参照されるオブジェクト、<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedPartLinkStyle%2A>プロパティにはへのリンクのスタイル属性が含まれています、<xref:System.Web.UI.WebControls.WebParts.CatalogPart>現在選択されているコントロール。 プロパティによって参照されるオブジェクトは、読み取り専用をそのまま使用する、選択した基になるスタイル特性を設定する<xref:System.Web.UI.WebControls.WebParts.CatalogPart>コントロール。  
  
   
  
## Examples  
 次のコード例を使用する方法を示しています、<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedPartLinkStyle%2A>プロパティをプログラムで宣言します。 例を実行するために必要な完全なコードのセクションの例を参照してください、<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>クラスの概要です。  
  
 2 つのコード例の最初の部分を宣言することを確認`<asp:catalogzone>`要素、および 1 つ目の宣言の値、<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedPartLinkStyle%2A>プロパティです。  
  
 [!code-aspx-csharp[WebParts_CatalogZoneBase_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/CS/catalogzonebasecs.aspx#2)]
 [!code-aspx-vb[WebParts_CatalogZoneBase_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/VB/catalogzonebasevb.aspx#2)]  
  
 コード例の 2 番目の部分で、テキストの色、選択した<xref:System.Web.UI.WebControls.WebParts.CatalogPart>コントロールが別の値に設定します。  
  
 [!code-csharp[WebParts_CatalogZoneBase_Overview#7](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/CS/catalogzonebasecs.aspx#7)]
 [!code-vb[WebParts_CatalogZoneBase_Overview#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/VB/catalogzonebasevb.aspx#7)]  
  
 ブラウザーでページを読み込むときに選択**カタログ**カタログ表示モードに切り替えるにはドロップダウン リストからです。 カタログが表示されている場合は、表示されるのいずれかのリンクをクリックして<xref:System.Web.UI.WebControls.WebParts.CatalogPart>コントロール、および選択したコントロールのスタイル属性に注意してください。 クリックすることができます、**一部リンク スタイルの変更**を選択したコントロールのテキストの色を変更するボタンをクリックします。 コントロールが選択されているときにスタイル属性の変更を表示する、選択されていないコントロールについては、リンクをクリックすることもできます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectTargetZoneText">
      <MemberSignature Language="C#" Value="public virtual string SelectTargetZoneText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectTargetZoneText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectTargetZoneText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはコントロールの横のテキストをユーザーに、選択したコントロールを追加するには、あるゾーンを選択できるようにカタログ ユーザー インターフェイス (UI) に設定します。</summary>
        <value>ゾーンの選択コントロールの横に表示するテキストを含む文字列です。 カルチャ固有の既定の文字列は、.NET Framework によって提供されます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ユーザーがのいずれかを選択できるカタログ UI が最初に表示されたときに、<xref:System.Web.UI.WebControls.WebParts.CatalogPart>などのコントロール<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>、格納している<xref:System.Web.UI.WebControls.WebParts.WebPart>または Web ページに追加できる他のサーバー コントロールです。 ユーザーが 1 つまたは複数のコントロールを選択しを使用して、<xref:System.Web.UI.WebControls.DropDownList>フッターの領域で、カタログを制御し、選択、<xref:System.Web.UI.WebControls.WebParts.WebPartZone>を選択したサーバー コントロールを配置するページ上のコントロールです。 テキスト値、<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectTargetZoneText%2A>と共にプロパティが表示されます、<xref:System.Web.UI.WebControls.DropDownList>単純な命令と同様に制御します。  
  
 このプロパティの値を設定すると、デザイナーのツールを使用して、リソース ファイルに自動的に保存できます。 詳細については、次を参照してください。<xref:System.ComponentModel.LocalizableAttribute>と[グローバリゼーションとローカリゼーション](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)です。  
  
   
  
## Examples  
 次のコード例を使用する方法を示しています、<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectTargetZoneText%2A>プロパティをプログラムで宣言します。 例を実行するために必要な完全なコードのセクションの例を参照してください、<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>クラスの概要です。  
  
 2 つのコード例の最初の部分を宣言することを確認`<asp:catalogzone>`要素、および 1 つ目の宣言の値、<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectTargetZoneText%2A>プロパティです。  
  
 [!code-aspx-csharp[WebParts_CatalogZoneBase_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/CS/catalogzonebasecs.aspx#2)]
 [!code-aspx-vb[WebParts_CatalogZoneBase_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/VB/catalogzonebasevb.aspx#2)]  
  
 コード例は、の値の 2 番目の部分で、<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectTargetZoneText%2A>プロパティをプログラムで変更します。  
  
 [!code-csharp[WebParts_CatalogZoneBase_Overview#5](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/CS/catalogzonebasecs.aspx#5)]
 [!code-vb[WebParts_CatalogZoneBase_Overview#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/VB/catalogzonebasevb.aspx#5)]  
  
 ブラウザーでページを読み込むときに選択**カタログ**カタログ表示モードに切り替えるにはドロップダウン リストからです。 カタログが表示されている場合は、と共に表示されるテキストを注意してください、<xref:System.Web.UI.WebControls.DropDownList>カタログのフッター内のコントロールです。 クリックすることができます、**ゾーン テキストのプロパティの設定**プロパティのテキスト値を変更するボタンをクリックします。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowCatalogIcons">
      <MemberSignature Language="C#" Value="public virtual bool ShowCatalogIcons { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowCatalogIcons" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.CatalogZoneBase.ShowCatalogIcons" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはカタログ内のサーバー コントロールがカタログに対応するアイコンを表示するかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" />場合は、カタログ内のサーバー コントロールに関連付けられているアイコンを表示する必要があります。それ以外の場合、<see langword="false" />です。 既定値は、<see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPart>コントロールおよびその他のサーバー コントロールとしてラップされている<xref:System.Web.UI.WebControls.WebParts.GenericWebPart>実行時にコントロールがある、<xref:System.Web.UI.WebControls.WebParts.WebPart.CatalogIconImageUrl%2A>プロパティです。 このプロパティの値は、コントロールのカタログでコントロールを表すアイコンとして使用するイメージ URL です。  
  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.ShowCatalogIcons%2A>プロパティがアイコンに関連付けられているかどうかを示す<xref:System.Web.UI.WebControls.WebParts.WebPart>カタログにその他のサーバー コントロールが表示されます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackDataHandler.LoadPostData">
      <MemberSignature Language="C#" Value="bool IPostBackDataHandler.LoadPostData (string postDataKey, System.Collections.Specialized.NameValueCollection postCollection);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Web.UI.IPostBackDataHandler.LoadPostData(string postDataKey, class System.Collections.Specialized.NameValueCollection postCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="postDataKey" Type="System.String" />
        <Parameter Name="postCollection" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="postDataKey">コントロールのキー識別子。</param>
        <param name="postCollection">サーバーにポストされた名前と値のペアのコレクション。</param>
        <summary>実装して、<see cref="M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />メソッドを呼び出して、<see cref="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />のメソッド、<see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" />クラスです。</summary>
        <returns>
          <see langword="true" />データが変更されたことを示すために、イベントを発生させる場合それ以外の場合<see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> のインスタンスが <xref:System.Web.UI.IPostBackDataHandler> インターフェイスにキャストされる場合にのみ、使用できます。 メソッドを呼び出すだけ、<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.LoadPostData%2A>メソッドを<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>クラスは、さらに、カタログ内のサーバー コントロールに対応するカタログのチェック ボックスの状態を処理します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent">
      <MemberSignature Language="C#" Value="void IPostBackDataHandler.RaisePostDataChangedEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>このメンバーの詳細については、「<see cref="M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent" />」をご覧ください。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> のインスタンスが <xref:System.Web.UI.IPostBackDataHandler> インターフェイスにキャストされる場合にのみ、使用できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.TrackViewState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ゾーン コントロールのビューステートの変更を追跡します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.TrackViewState%2A>メソッドは最初基本メソッドを呼び出して、<xref:System.Web.UI.WebControls.WebParts.ToolZone>ビュー状態を追跡するクラスに関連付けられている、<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>ゾーンです。 次に、メソッドは、閉じる動詞と追加のビュー状態の追跡を開始だけでなく<xref:System.Web.UI.WebControls.Style>オブジェクトに関連付けられている、<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.PartLinkStyle%2A>と<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedPartLinkStyle%2A>プロパティです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
