<Type Name="SignedCms" FullName="System.Security.Cryptography.Pkcs.SignedCms">
  <TypeSignature Language="C#" Value="public sealed class SignedCms" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SignedCms extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.Pkcs.SignedCms" />
  <AssemblyInfo>
    <AssemblyName>System.Security</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><see cref="T:System.Security.Cryptography.Pkcs.SignedCms" />クラスには、署名と CMS/PKCS #7 メッセージの検証ができるようにします。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 暗号化メッセージ構文 RFC は、これらのコンテンツ タイプで、次の MIME の種類と CMS/PKCS #7 メッセージのファイル名拡張子を指定します。  
  
|コンテンツの種類|MIME の種類|拡張子|  
|------------------|---------------|---------------|  
|envelopedData|アプリケーション/pkcs7 mime|.p7m|  
|signedData|アプリケーション/pkcs7 で署名|。 p7s.p7c|  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SignedCms ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor" /> コンストラクターは、<see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> クラスのインスタンスを作成します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.Cryptography.Pkcs.SignedCms>クラスには次の既定のプロパティ値。  
  
|プロパティ|既定値|  
|--------------|-------------------|  
|<xref:System.Security.Cryptography.Pkcs.SignedCms.ContentInfo%2A>|1.2.840.113549.1.7.1 (データ) の長さ: 0|  
|<xref:System.Security.Cryptography.Pkcs.SignedCms.Detached%2A>|デタッチ済み状態:`false`署名情報と共に CMS/PKCS #7 メッセージに署名されているコンテンツが含まれています。|  
  
 既定値<xref:System.Security.Cryptography.Pkcs.SubjectIdentifierType>署名者は SubjectIdentifierType.IssuerAndSerialNumber します。  
  
 デタッチ済み状態の場合`false`(既定)、署名情報と共に CMS/PKCS #7 メッセージに署名されたコンテンツが含まれています。 デタッチ済みの状態が場合`true`、S/MIME メッセージをデコードできないクライアントことができますもを参照してください、メッセージのコンテンツが個別に送信される場合。 これは、メッセージの送信者の信頼性を検証できるかどうかは、メッセージの内容をアーカイブするアーカイブのアプリケーションで役に立ちます可能性があります。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Null 参照は、有効な引数として受け付けないメソッドに渡されました。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SignedCms (System.Security.Cryptography.Pkcs.ContentInfo content);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Cryptography.Pkcs.ContentInfo content) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contentInfo" Type="System.Security.Cryptography.Pkcs.ContentInfo" />
      </Parameters>
      <Docs>
        <param name="content">To be added.</param>
        <summary><see cref="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo)" />コンス トラクターのインスタンスを作成する、<see cref="T:System.Security.Cryptography.Pkcs.SignedCms" />内部コンテンツとして指定したコンテンツ情報を使用してクラスです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このコンス トラクターで使用される既定のプロパティ値を参照してください。<xref:System.Security.Cryptography.Pkcs.SignedCms.%23ctor>です。  
  
 デタッチ済み状態の場合`false`(既定)、署名情報と共に CMS/PKCS #7 メッセージに署名されているコンテンツが含まれています。 デタッチ済みの状態が場合`true`、S/MIME メッセージをデコードできないクライアントことができますもを参照してください、メッセージのコンテンツが個別に送信される場合。 これは、メッセージの送信者の信頼性を検証できるかどうかは、メッセージの内容をアーカイブするアーカイブのアプリケーションで役に立ちます可能性があります。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Null 参照は、有効な引数として受け付けないメソッドに渡されました。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SignedCms (System.Security.Cryptography.Pkcs.SubjectIdentifierType signerIdentifierType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Cryptography.Pkcs.SubjectIdentifierType signerIdentifierType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="signerIdentifierType" Type="System.Security.Cryptography.Pkcs.SubjectIdentifierType" />
      </Parameters>
      <Docs>
        <param name="signerIdentifierType">A<see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifierType" />署名者の既定の件名識別子の型を指定するメンバー。</param>
        <summary><see cref="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType)" />コンス トラクターのインスタンスを作成する、<see cref="T:System.Security.Cryptography.Pkcs.SignedCms" />署名者の既定の件名識別子の型として指定された件名識別子の型を使用してクラスです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このコンス トラクターで使用される既定のプロパティ値を参照してください。<xref:System.Security.Cryptography.Pkcs.SignedCms.%23ctor>です。  
  
 デタッチ済み状態の場合`false`(既定)、署名情報と共に CMS/PKCS #7 メッセージに署名されているコンテンツが含まれています。 デタッチ済みの状態が場合`true`、S/MIME メッセージをデコードできないクライアントことができますもを参照してください、メッセージのコンテンツが個別に送信される場合。 これは、メッセージの送信者の信頼性を検証できるかどうかは、メッセージの内容をアーカイブするアーカイブのアプリケーションで役に立ちます可能性があります。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Null 参照は、有効な引数として受け付けないメソッドに渡されました。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SignedCms (System.Security.Cryptography.Pkcs.ContentInfo content, bool detached);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Cryptography.Pkcs.ContentInfo content, bool detached) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo,System.Boolean)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contentInfo" Type="System.Security.Cryptography.Pkcs.ContentInfo" />
        <Parameter Name="detached" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="content">To be added.</param>
        <param name="detached">A<see cref="T:System.Boolean" />値を指定するかどうか、<see cref="T:System.Security.Cryptography.Pkcs.SignedCms" />オブジェクトはデタッチされた署名します。 場合<c>デタッチ</c>は<see langword="true" />署名をデタッチします。 場合<c>デタッチ</c>は<see langword="false" />署名はデタッチできません。</param>
        <summary><see cref="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo,System.Boolean)" />コンス トラクターのインスタンスを作成する、<see cref="T:System.Security.Cryptography.Pkcs.SignedCms" />クラス内部コンテンツとして指定したコンテンツ情報を使用して、デタッチされた状態を使用しています。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このコンス トラクターで使用される既定のプロパティ値を参照してください。<xref:System.Security.Cryptography.Pkcs.SignedCms.%23ctor>です。  
  
 デタッチ済み状態の場合`false`(既定)、署名情報と共に CMS/PKCS #7 メッセージに署名されているコンテンツが含まれています。 デタッチ済みの状態が場合`true`、S/MIME メッセージをデコードできないクライアントことができますもを参照してください、メッセージのコンテンツが個別に送信される場合。 これは、メッセージの送信者の信頼性を検証できるかどうかは、メッセージの内容をアーカイブするアーカイブのアプリケーションで役に立ちます可能性があります。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Null 参照は、有効な引数として受け付けないメソッドに渡されました。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SignedCms (System.Security.Cryptography.Pkcs.SubjectIdentifierType signerIdentifierType, System.Security.Cryptography.Pkcs.ContentInfo content);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Cryptography.Pkcs.SubjectIdentifierType signerIdentifierType, class System.Security.Cryptography.Pkcs.ContentInfo content) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.Pkcs.ContentInfo)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="signerIdentifierType" Type="System.Security.Cryptography.Pkcs.SubjectIdentifierType" />
        <Parameter Name="contentInfo" Type="System.Security.Cryptography.Pkcs.ContentInfo" />
      </Parameters>
      <Docs>
        <param name="signerIdentifierType">A<see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifierType" />署名者の既定の件名識別子の型を指定するメンバー。</param>
        <param name="content">To be added.</param>
        <summary><see cref="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.Pkcs.ContentInfo)" />コンス トラクターのインスタンスを作成する、<see cref="T:System.Security.Cryptography.Pkcs.SignedCms" />署名者と内部コンテンツとしてコンテンツ情報の既定の件名識別子の型として指定された件名識別子の型を使用してクラスです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このコンス トラクターで使用される既定のプロパティ値を参照してください。<xref:System.Security.Cryptography.Pkcs.SignedCms.%23ctor>です。  
  
 デタッチ済み状態の場合`false`(既定)、署名情報と共に CMS/PKCS #7 メッセージに署名されているコンテンツが含まれています。 デタッチ済みの状態が場合`true`、S/MIME メッセージをデコードできないクライアントことができますもを参照してください、メッセージのコンテンツが個別に送信される場合。 これは、メッセージの送信者の信頼性を検証できるかどうかは、メッセージの内容をアーカイブするアーカイブのアプリケーションで役に立ちます可能性があります。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Null 参照は、有効な引数として受け付けないメソッドに渡されました。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SignedCms (System.Security.Cryptography.Pkcs.SubjectIdentifierType signerIdentifierType, System.Security.Cryptography.Pkcs.ContentInfo content, bool detached);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Cryptography.Pkcs.SubjectIdentifierType signerIdentifierType, class System.Security.Cryptography.Pkcs.ContentInfo content, bool detached) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.Pkcs.ContentInfo,System.Boolean)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="signerIdentifierType" Type="System.Security.Cryptography.Pkcs.SubjectIdentifierType" />
        <Parameter Name="contentInfo" Type="System.Security.Cryptography.Pkcs.ContentInfo" />
        <Parameter Name="detached" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="signerIdentifierType">A<see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifierType" />署名者の既定の件名識別子の型を指定するメンバー。</param>
        <param name="content">To be added.</param>
        <param name="detached">A<see cref="T:System.Boolean" />値を指定するかどうか、<see cref="T:System.Security.Cryptography.Pkcs.SignedCms" />オブジェクトはデタッチされた署名します。 場合<c>デタッチ</c>は<see langword="true" />署名をデタッチします。 デタッチされた場合は、<see langword="false" />署名はデタッチできません。</param>
        <summary><see cref="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.Pkcs.ContentInfo,System.Boolean)" />コンス トラクターのインスタンスを作成する、<see cref="T:System.Security.Cryptography.Pkcs.SignedCms" />クラス内部のコンテンツとコンテンツ情報の署名者の既定の件名識別子の型として指定された件名識別子の型を使用して、デタッチされた状態を使用しています。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 デタッチ済み状態の場合`false`(既定)、署名情報と共に CMS/PKCS #7 メッセージに署名されているコンテンツが含まれています。 デタッチ済みの状態が場合`true`、S/MIME メッセージをデコードできないクライアントことができますもを参照してください、メッセージのコンテンツが個別に送信される場合。 これは、メッセージの送信者の信頼性を検証できるかどうかは、メッセージの内容をアーカイブするアーカイブのアプリケーションで役に立ちます可能性があります。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Null 参照は、有効な引数として受け付けないメソッドに渡されました。</exception>
      </Docs>
    </Member>
    <Member MemberName="Certificates">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509Certificate2Collection Certificates { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X509Certificate2Collection Certificates" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Pkcs.SignedCms.Certificates" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509Certificate2Collection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Security.Cryptography.Pkcs.SignedCms.Certificates" />プロパティは、エンコードの CMS/PKCS #7 メッセージに関連付けられている証明書を取得します。</summary>
        <value><see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" />エンコードの CMS/PKCS #7 メッセージ用の証明書のセットを表すコレクション。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckHash">
      <MemberSignature Language="C#" Value="public void CheckHash ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CheckHash() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.SignedCms.CheckHash" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="M:System.Security.Cryptography.Pkcs.SignedCms.CheckHash" />メソッドを CMS/PKCS #7 メッセージのデータの整合性を確認します。 <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.CheckHash" />特殊なメソッド使用して特定のセキュリティ インフラストラクチャのアプリケーションでその唯一のウィッシュを完全デジタル署名の検証を実行するのではなく、CMS メッセージのハッシュを確認します。 <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.CheckHash" />このメソッドでは、デジタル署名の検証は関係しませんのでに作成者も、メッセージの送信者を認証しません。 汎用の CMS/PKCS #7 メッセージの信頼性、整合性の確認、使用、<see cref="M:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Boolean)" />または<see cref="M:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)" />メソッドです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、CMS/PKCS #7 メッセージの認証を提供していません。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">メソッドの呼び出しは、オブジェクトの現在の状態に対して無効でした。</exception>
      </Docs>
    </Member>
    <Member MemberName="CheckSignature">
      <MemberSignature Language="C#" Value="public void CheckSignature (bool verifySignatureOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CheckSignature(bool verifySignatureOnly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="verifySignatureOnly" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="verifySignatureOnly">A<see cref="T:System.Boolean" />デジタル署名だけを検証せず、署名者の証明書が検証されるかどうかを指定する値。  
  
 場合<c>verifySignatureOnly</c>は<see langword="true" />、デジタル署名だけが検証されます。 場合は<see langword="false" />、デジタル署名、署名者の証明書が検証されたら、および証明書の目的が検証されます。 証明書の目的では証明書のキー使用法があるない場合、またはキーの使用法には、デジタル署名と否認不可がサポートされている場合、有効と見なされます。</param>
        <summary><see cref="M:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Boolean)" />メソッドは、符号付きの CMS/PKCS #7 メッセージのデジタル署名を検証し、必要に応じて、署名者の証明書を検証します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、CMS/PKCS #7 メッセージに、副署名を含む、すべての署名を検証します。 メッセージに含まれている署名付きの属性がある場合、これらの属性も検証されます。 このオプションを選択して、証明書の検証、証明書チェーンの含まれるすべての部分が検証されます。  
  
 このメソッドは、デジタル署名の検証に失敗した、または検証の要件が満たされなかった場合に例外をスローします。  
  
   
  
## Examples  
 次の例は、の位置を示しています。<xref:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature%28System.Boolean%29>上の署名を検証するために必要な手順の中で、<xref:System.Security.Cryptography.Pkcs.SignedCms>メッセージ。 この例では、メッセージの内容は分離されていません。 メッセージの内容が含まれている、<xref:System.Security.Cryptography.Pkcs.SignedCms>メッセージ。  
  
 [!code-csharp[mpkcs_SignedCMS#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/mpkcs_SignedCMS/cs/Program.cs#1)]
 [!code-vb[mpkcs_SignedCMS#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/mpkcs_SignedCMS/vb/Program.vb#1)]  
  
 次の例は、の位置を示しています。<xref:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature%28System.Boolean%29>上の署名を検証するために必要な手順の中で、<xref:System.Security.Cryptography.Pkcs.SignedCms>メッセージ。 この例では、メッセージの内容は、デタッチとは無関係に、メッセージの内容を確認する必要がありますので、<xref:System.Security.Cryptography.Pkcs.SignedCms>メッセージ。  
  
 [!code-csharp[mpkcs_SignedCMS#2](~/samples/snippets/csharp/VS_Snippets_WindowsServer/mpkcs_SignedCMS/cs/Program.cs#2)]
 [!code-vb[mpkcs_SignedCMS#2](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/mpkcs_SignedCMS/vb/Program.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Null 参照は、有効な引数として受け付けないメソッドに渡されました。</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">暗号操作を完了できませんでした。</exception>
        <exception cref="T:System.InvalidOperationException">メソッドの呼び出しは、オブジェクトの現在の状態に対して無効でした。</exception>
      </Docs>
    </Member>
    <Member MemberName="CheckSignature">
      <MemberSignature Language="C#" Value="public void CheckSignature (System.Security.Cryptography.X509Certificates.X509Certificate2Collection extraStore, bool verifySignatureOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CheckSignature(class System.Security.Cryptography.X509Certificates.X509Certificate2Collection extraStore, bool verifySignatureOnly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="extraStore" Type="System.Security.Cryptography.X509Certificates.X509Certificate2Collection" />
        <Parameter Name="verifySignatureOnly" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="extraStore"><see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" />証明書チェーンの検証に使用できるオブジェクト。 証明書チェーンの検証を使用するために使用する追加の証明書がない場合<see cref="M:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Boolean)" />の代わりに<see cref="M:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)" />です。</param>
        <param name="verifySignatureOnly">A<see cref="T:System.Boolean" />デジタル署名だけを検証せず、署名者の証明書が検証されるかどうかを指定する値。  
  
 場合<c>verifySignatureOnly</c>は<see langword="true" />、デジタル署名だけが検証されます。 場合は<see langword="false" />、デジタル署名、署名者の証明書が検証されたら、および証明書の目的が検証されます。 証明書の目的では証明書のキー使用法があるない場合、またはキーの使用法には、デジタル署名と否認不可がサポートされている場合、有効と見なされます。</param>
        <summary><see cref="M:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)" />メソッドは、指定された証明書のコレクションを使用して、署名付きの CMS/PKCS #7 メッセージのデジタル署名を検証し、必要に応じて、署名者の証明書を検証します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、CMS/PKCS #7 メッセージに、副署名を含む、すべての署名を検証します。 メッセージに含まれている署名付きの属性がある場合、これらの属性も検証されます。 このオプションを選択して、証明書の検証、証明書チェーンの含まれるすべての部分が検証されます。  
  
 このメソッドは、デジタル署名の検証に失敗した、または検証の要件が満たされなかった場合に例外をスローします。  
  
   
  
## Examples  
 次の例は、の位置を示しています。<xref:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature%28System.Security.Cryptography.X509Certificates.X509Certificate2Collection%2CSystem.Boolean%29>上の署名を検証するために必要な手順の中で、<xref:System.Security.Cryptography.Pkcs.SignedCms>メッセージ。 この例では、メッセージの内容が切り離されていないで、メッセージの内容が含まれているように、<xref:System.Security.Cryptography.Pkcs.SignedCms>メッセージ。  
  
 [!code-csharp[mpkcs_SignedCMS#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/mpkcs_SignedCMS/cs/Program.cs#1)]
 [!code-vb[mpkcs_SignedCMS#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/mpkcs_SignedCMS/vb/Program.vb#1)]  
  
 次の例は、の位置を示しています。<xref:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature%28System.Security.Cryptography.X509Certificates.X509Certificate2Collection%2CSystem.Boolean%29>上の署名を検証するために必要な手順の中で、<xref:System.Security.Cryptography.Pkcs.SignedCms>メッセージ。 この例では、メッセージの内容は、デタッチとは無関係に、メッセージの内容を確認する必要がありますので、<xref:System.Security.Cryptography.Pkcs.SignedCms>メッセージ。  
  
 [!code-csharp[mpkcs_SignedCMS#2](~/samples/snippets/csharp/VS_Snippets_WindowsServer/mpkcs_SignedCMS/cs/Program.cs#2)]
 [!code-vb[mpkcs_SignedCMS#2](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/mpkcs_SignedCMS/vb/Program.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Null 参照は、有効な引数として受け付けないメソッドに渡されました。</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">暗号操作を完了できませんでした。</exception>
        <exception cref="T:System.InvalidOperationException">メソッドの呼び出しは、オブジェクトの現在の状態に対して無効でした。</exception>
      </Docs>
    </Member>
    <Member MemberName="ComputeSignature">
      <MemberSignature Language="C#" Value="public void ComputeSignature ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ComputeSignature() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="M:System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature" />メソッドの署名証明書を選択するように求める、署名を作成および CMS/PKCS #7 メッセージに署名を追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、このメッセージの署名者を選択するユーザー インターフェイスを表示します。 現在のプロセスが実行されている必要があります*ユーザー対話モード*つまりを<xref:System.Environment.UserInteractive%2A?displayProperty=nameWithType>プロパティに設定されている`true`です。 サービスのプロセスまたは Web アプリケーション内の実行中である場合を除き、プロセスはユーザー対話モードで通常です。  
  
 署名証明書を持つが、次の条件を満たすが一覧に表示されます。  
  
-   証明書は、関連付けられている秘密キーを持ちます。  
  
-   証明書はその有効期間です。  
  
-   証明書のキー使用法ありませんまたはデジタル署名と否認不可をサポートするキー使用法がします。  
  
 署名者の証明書を選択、My ストア。  
  
## <a name="net-framework-security"></a>.NET Framework セキュリティ  
 ユーザー インターフェイスを表示するのには、次のアクセス許可が必要です。  
  
-   <xref:System.Security.Permissions.UIPermissionWindow?displayProperty=nameWithType>  
  
 署名キーにアクセスするには、次のアクセス許可が必要です。  
  
-   <xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=nameWithType>  
  
-   <xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=nameWithType>  
  
   
  
## Examples  
 次の例で、署名を計算するための手順を示しています、<xref:System.Security.Cryptography.Pkcs.SignedCms>メッセージの内容が分離されていません。 メッセージの内容が含まれているここで、<xref:System.Security.Cryptography.Pkcs.SignedCms>メッセージ。  
  
 [!code-csharp[mpkcs_SignedCMS#3](~/samples/snippets/csharp/VS_Snippets_WindowsServer/mpkcs_SignedCMS/cs/Program.cs#3)]
 [!code-vb[mpkcs_SignedCMS#3](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/mpkcs_SignedCMS/vb/Program.vb#3)]  
  
 次の例で、署名を計算するための手順を示しています、<xref:System.Security.Cryptography.Pkcs.SignedCms>メッセージの内容がデタッチ済みです。 この例とは無関係に、メッセージの内容を確認する必要が、<xref:System.Security.Cryptography.Pkcs.SignedCms>メッセージ。  
  
 [!code-csharp[mpkcs_SignedCMS#4](~/samples/snippets/csharp/VS_Snippets_WindowsServer/mpkcs_SignedCMS/cs/Program.cs#4)]
 [!code-vb[mpkcs_SignedCMS#4](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/mpkcs_SignedCMS/vb/Program.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Null 参照は、有効な引数として受け付けないメソッドに渡されました。</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">暗号操作を完了できませんでした。</exception>
      </Docs>
    </Member>
    <Member MemberName="ComputeSignature">
      <MemberSignature Language="C#" Value="public void ComputeSignature (System.Security.Cryptography.Pkcs.CmsSigner signer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ComputeSignature(class System.Security.Cryptography.Pkcs.CmsSigner signer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature(System.Security.Cryptography.Pkcs.CmsSigner)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="signer" Type="System.Security.Cryptography.Pkcs.CmsSigner" />
      </Parameters>
      <Docs>
        <param name="signer">A<see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" />署名者を表すオブジェクト。</param>
        <summary><see cref="M:System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature(System.Security.Cryptography.Pkcs.CmsSigner)" />メソッドが指定の署名を使用して署名を作成し、CMS/PKCS #7 メッセージに署名を追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>.NET Framework セキュリティ  
 署名キーにアクセスするには、次のアクセス許可が必要です。  
  
-   <xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=nameWithType>  
  
-   <xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=nameWithType>  
  
   
  
## Examples  
 次の例で、署名を計算するための手順を示しています、<xref:System.Security.Cryptography.Pkcs.SignedCms>メッセージの内容が分離されていません。 メッセージの内容が含まれているここで、<xref:System.Security.Cryptography.Pkcs.SignedCms>メッセージ。  
  
 [!code-csharp[mpkcs_SignedCMS#3](~/samples/snippets/csharp/VS_Snippets_WindowsServer/mpkcs_SignedCMS/cs/Program.cs#3)]
 [!code-vb[mpkcs_SignedCMS#3](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/mpkcs_SignedCMS/vb/Program.vb#3)]  
  
 次の例で、署名を計算するための手順を示しています、<xref:System.Security.Cryptography.Pkcs.SignedCms>メッセージの内容がデタッチ済みです。 この例とは無関係に、メッセージの内容を確認する必要が、<xref:System.Security.Cryptography.Pkcs.SignedCms>メッセージ。  
  
 [!code-csharp[mpkcs_SignedCMS#4](~/samples/snippets/csharp/VS_Snippets_WindowsServer/mpkcs_SignedCMS/cs/Program.cs#4)]
 [!code-vb[mpkcs_SignedCMS#4](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/mpkcs_SignedCMS/vb/Program.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Null 参照は、有効な引数として受け付けないメソッドに渡されました。</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">暗号操作を完了できませんでした。</exception>
      </Docs>
    </Member>
    <Member MemberName="ComputeSignature">
      <MemberSignature Language="C#" Value="public void ComputeSignature (System.Security.Cryptography.Pkcs.CmsSigner signer, bool silent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ComputeSignature(class System.Security.Cryptography.Pkcs.CmsSigner signer, bool silent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature(System.Security.Cryptography.Pkcs.CmsSigner,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="signer" Type="System.Security.Cryptography.Pkcs.CmsSigner" />
        <Parameter Name="silent" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="signer">A<see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" />署名者を表すオブジェクト。</param>
        <param name="silent">
          <see langword="false" />ユーザー入力を求め、署名証明書を選択します。</param>
        <summary>指定された署名を使用して署名を作成し、CMS/PKCS #7 メッセージに署名を追加します。 サイレント パラメーターの値が場合<see langword="false" />と<see cref="P:System.Security.Cryptography.Pkcs.CmsSigner.Certificate" />のプロパティ、<see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" />署名者のパラメーターで指定されたオブジェクトが有効な証明書に設定されていない、このメソッドには、署名証明書を選択するように求めます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>.NET Framework セキュリティ  
 ユーザー インターフェイスを表示するのには、次のアクセス許可が必要です。  
  
-   <xref:System.Security.Permissions.UIPermissionWindow?displayProperty=nameWithType>  
  
 署名キーにアクセスするには、次のアクセス許可が必要です。  
  
-   <xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=nameWithType>  
  
-   <xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=nameWithType>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Null 参照は、有効な引数として受け付けないメソッドに渡されました。</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">暗号操作を完了できませんでした。</exception>
        <exception cref="T:System.InvalidOperationException">値、<paramref name="silent" />パラメーターは<see langword="true" />署名証明書が指定されていないとします。</exception>
      </Docs>
    </Member>
    <Member MemberName="ContentInfo">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.Pkcs.ContentInfo ContentInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.Pkcs.ContentInfo ContentInfo" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Pkcs.SignedCms.ContentInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Pkcs.ContentInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Security.Cryptography.Pkcs.SignedCms.ContentInfo" />プロパティは、エンコードの CMS/PKCS #7 メッセージの内部コンテンツを取得します。</summary>
        <value>A<see cref="T:System.Security.Cryptography.Pkcs.ContentInfo" />エンコードの CMS/PKCS #7 メッセージの内容を表すオブジェクト。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Decode">
      <MemberSignature Language="C#" Value="public void Decode (byte[] encodedMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Decode(unsigned int8[] encodedMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.SignedCms.Decode(System.Byte[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encodedMessage" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="encodedMessage">デコードするエンコードの CMS/PKCS #7 メッセージを表すバイト値の配列。</param>
        <summary><see cref="M:System.Security.Cryptography.Pkcs.SignedCms.Decode(System.Byte[])" />メソッド デコード、エンコードされた<see cref="T:System.Security.Cryptography.Pkcs.SignedCms" />メッセージ。 プロパティから正常にデコード時に、デコードされた情報を取得できます、<see cref="T:System.Security.Cryptography.Pkcs.SignedCms" />オブジェクト。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、正常にデコードから取得した情報を使用して、オブジェクトのすべてのメンバー変数をリセットします。  
  
   
  
## Examples  
 次の例の位置を示しています、<xref:System.Security.Cryptography.Pkcs.SignedCms.Decode%2A>メソッドを署名を検証する処理を行って、<xref:System.Security.Cryptography.Pkcs.SignedCms>メッセージ。 この例では、メッセージの内容が切り離されていないで、メッセージの内容が含まれているように、<xref:System.Security.Cryptography.Pkcs.SignedCms>メッセージ。  
  
 [!code-csharp[mpkcs_SignedCMS#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/mpkcs_SignedCMS/cs/Program.cs#1)]
 [!code-vb[mpkcs_SignedCMS#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/mpkcs_SignedCMS/vb/Program.vb#1)]  
  
 次の例の位置を示しています、<xref:System.Security.Cryptography.Pkcs.SignedCms.Decode%2A>メソッドを署名を検証する処理を行って、<xref:System.Security.Cryptography.Pkcs.SignedCms>メッセージ。 この例では、メッセージの内容は、デタッチとは無関係に、メッセージの内容を確認する必要がありますので、<xref:System.Security.Cryptography.Pkcs.SignedCms>メッセージ。  
  
 [!code-csharp[mpkcs_SignedCMS#2](~/samples/snippets/csharp/VS_Snippets_WindowsServer/mpkcs_SignedCMS/cs/Program.cs#2)]
 [!code-vb[mpkcs_SignedCMS#2](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/mpkcs_SignedCMS/vb/Program.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Null 参照は、有効な引数として受け付けないメソッドに渡されました。</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">暗号操作を完了できませんでした。</exception>
      </Docs>
    </Member>
    <Member MemberName="Detached">
      <MemberSignature Language="C#" Value="public bool Detached { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Detached" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Pkcs.SignedCms.Detached" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Security.Cryptography.Pkcs.SignedCms.Detached" />プロパティを取得するかどうか、<see cref="T:System.Security.Cryptography.Pkcs.SignedCms" />オブジェクトはデタッチされた署名します。</summary>
        <value>A<see cref="T:System.Boolean" />値を指定するかどうか、<see cref="T:System.Security.Cryptography.Pkcs.SignedCms" />オブジェクトはデタッチされた署名します。 場合は、このプロパティは<see langword="true" />署名をデタッチします。 このプロパティは、する場合<see langword="false" />署名が切り離されていません。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Encode">
      <MemberSignature Language="C#" Value="public byte[] Encode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Encode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.SignedCms.Encode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="M:System.Security.Cryptography.Pkcs.SignedCms.Encode" />メソッドは、CMS/PKCS #7 メッセージにオブジェクトの情報をエンコードします。</summary>
        <returns>エンコードされたメッセージを表すバイト値の配列。 エンコードされたメッセージがデコード可能、<see cref="M:System.Security.Cryptography.Pkcs.SignedCms.Decode(System.Byte[])" />メソッドです。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">暗号操作を完了できませんでした。</exception>
        <exception cref="T:System.InvalidOperationException">メソッドの呼び出しは、オブジェクトの現在の状態に対して無効でした。</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveSignature">
      <MemberSignature Language="C#" Value="public void RemoveSignature (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveSignature(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.SignedCms.RemoveSignature(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">削除する署名の 0 から始まるインデックス。</param>
        <summary>指定したインデックス位置の署名を削除、<see cref="P:System.Security.Cryptography.Pkcs.SignedCms.SignerInfos" />コレクション。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">CMS/PKCS #7 メッセージが署名されていないと<paramref name="index" />が無効です。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> が 0 未満です。  
  
 または  
  
 <paramref name="index" />1 を引いたシグネチャの数を超えています。</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">署名を削除できませんでした。  
  
 または  
  
 内部暗号化エラーが発生しました。</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveSignature">
      <MemberSignature Language="C#" Value="public void RemoveSignature (System.Security.Cryptography.Pkcs.SignerInfo signerInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveSignature(class System.Security.Cryptography.Pkcs.SignerInfo signerInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.SignedCms.RemoveSignature(System.Security.Cryptography.Pkcs.SignerInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="signerInfo" Type="System.Security.Cryptography.Pkcs.SignerInfo" />
      </Parameters>
      <Docs>
        <param name="signerInfo">A<see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" />を削除する、副署名を表すオブジェクト。</param>
        <summary><see cref="M:System.Security.Cryptography.Pkcs.SignedCms.RemoveSignature(System.Security.Cryptography.Pkcs.SignerInfo)" />メソッドは、指定された署名を削除<see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" />オブジェクト。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Null 参照は、有効な引数として受け付けないメソッドに渡されました。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">引数の値は、呼び出されたメソッドで定義されている値の許容範囲外でした。</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">暗号操作を完了できませんでした。</exception>
      </Docs>
    </Member>
    <Member MemberName="SignerInfos">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.Pkcs.SignerInfoCollection SignerInfos { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.Pkcs.SignerInfoCollection SignerInfos" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Pkcs.SignedCms.SignerInfos" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Pkcs.SignerInfoCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Security.Cryptography.Pkcs.SignedCms.SignerInfos" />プロパティの取得、 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> CMS/PKCS #7 メッセージに関連付けられているコレクション。</summary>
        <value>A <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> CMS/PKCS #7 メッセージの署名者情報を表すオブジェクト。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public int Version { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Version" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Pkcs.SignedCms.Version" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Security.Cryptography.Pkcs.SignedCms.Version" />プロパティは CMS/PKCS #7 メッセージのバージョンを取得します。</summary>
        <value>CMS/PKCS #7 メッセージ バージョンを表す整数値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 バージョンは、メッセージが PKCS #7 メッセージまたは Cryptographic Message Syntax (CMS) のメッセージかどうかを判断します。 CMS は、PKCS #7 の新しいスーパー セットです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
