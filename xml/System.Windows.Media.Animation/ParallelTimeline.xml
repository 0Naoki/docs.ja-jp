<Type Name="ParallelTimeline" FullName="System.Windows.Media.Animation.ParallelTimeline">
  <TypeSignature Language="C#" Value="public class ParallelTimeline : System.Windows.Media.Animation.TimelineGroup" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ParallelTimeline extends System.Windows.Media.Animation.TimelineGroup" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.Animation.ParallelTimeline" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.Animation.TimelineGroup</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>子を含む可能性のある時間のセグメントを定義<see cref="T:System.Windows.Media.Animation.Timeline" />オブジェクト。 これらの子タイムラインは、それぞれに従ってアクティブになります<see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" />プロパティです。 また、子タイムラインは相互の重複 (並列実行) が可能です。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Media.Animation.ParallelTimeline>オブジェクトの子 (入れ子) を指定できます、<xref:System.Windows.Media.Animation.Storyboard>です。 これにより、複雑なアニメーションのタイミング シーケンスを効率的にカプセル化。  
  
 <xref:System.Windows.Media.Animation.ParallelTimeline>独自<xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>プロパティすべての子タイムラインしたがって<xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>値は、親を基準とした<xref:System.Windows.Media.Animation.ParallelTimeline>値を<xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>です。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ParallelTimeline ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ParallelTimeline.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.Media.Animation.ParallelTimeline" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ParallelTimeline (Nullable&lt;TimeSpan&gt; beginTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; beginTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ParallelTimeline.#ctor(System.Nullable{System.TimeSpan})" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="beginTime" Type="System.Nullable&lt;System.TimeSpan&gt;" />
      </Parameters>
      <Docs>
        <param name="beginTime">この <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> の <see cref="T:System.Windows.Media.Animation.TimelineGroup" />。</param>
        <summary>指定した <see cref="T:System.Windows.Media.Animation.ParallelTimeline" /> を使用して、<see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ParallelTimeline (Nullable&lt;TimeSpan&gt; beginTime, System.Windows.Duration duration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; beginTime, valuetype System.Windows.Duration duration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ParallelTimeline.#ctor(System.Nullable{System.TimeSpan},System.Windows.Duration)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="beginTime" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="duration" Type="System.Windows.Duration" />
      </Parameters>
      <Docs>
        <param name="beginTime">この <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> の <see cref="T:System.Windows.Media.Animation.TimelineGroup" />。</param>
        <param name="duration">この <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> の <see cref="T:System.Windows.Media.Animation.TimelineGroup" />。</param>
        <summary>指定された <see cref="T:System.Windows.Media.Animation.ParallelTimeline" /> と <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> を使用して、<see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ParallelTimeline (Nullable&lt;TimeSpan&gt; beginTime, System.Windows.Duration duration, System.Windows.Media.Animation.RepeatBehavior repeatBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; beginTime, valuetype System.Windows.Duration duration, valuetype System.Windows.Media.Animation.RepeatBehavior repeatBehavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ParallelTimeline.#ctor(System.Nullable{System.TimeSpan},System.Windows.Duration,System.Windows.Media.Animation.RepeatBehavior)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="beginTime" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="duration" Type="System.Windows.Duration" />
        <Parameter Name="repeatBehavior" Type="System.Windows.Media.Animation.RepeatBehavior" />
      </Parameters>
      <Docs>
        <param name="beginTime">この <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> の <see cref="T:System.Windows.Media.Animation.TimelineGroup" />。</param>
        <param name="duration">この <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> の <see cref="T:System.Windows.Media.Animation.TimelineGroup" />。</param>
        <param name="repeatBehavior">この <see cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" /> の <see cref="T:System.Windows.Media.Animation.TimelineGroup" />。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Windows.Media.Animation.ParallelTimeline" /> 、指定したクラス<see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" />、 <see cref="P:System.Windows.Media.Animation.Timeline.Duration" />、および<see cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" />です。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.ParallelTimeline Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Animation.ParallelTimeline Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ParallelTimeline.Clone" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.ParallelTimeline</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>この <see cref="T:System.Windows.Media.Animation.ParallelTimeline" /> の変更可能な複製を作成し、このオブジェクトの値の詳細コピーを作成します。 このメソッドは、依存関係プロパティをコピーするときにリソース参照とデータ バインディングをコピーしますが (ただし、これらは解決されなくなる場合があります)、アニメーションやその現在の値はコピーしません。</summary>
        <returns>現在のオブジェクトの変更可能な複製。 複製されたオブジェクトの <see cref="P:System.Windows.Freezable.IsFrozen" /> プロパティは、ソースの <see cref="P:System.Windows.Freezable.IsFrozen" /> プロパティが <see langword="true." /> であった場合でも、<see langword="false" /> になります。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 変更可能なコピーを生成するためにこのメソッドが使用される固定された<xref:System.Windows.Freezable>オブジェクト (または any<xref:System.Windows.Freezable>オブジェクト)。 便宜上は、このメソッドは、厳密に型指定された実装が継承したバージョンをシャドウします。  
  
 詳細については、「<xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType>」を参照してください。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneCurrentValue">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.ParallelTimeline CloneCurrentValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Animation.ParallelTimeline CloneCurrentValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ParallelTimeline.CloneCurrentValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.ParallelTimeline</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>この <see cref="T:System.Windows.Media.Animation.ParallelTimeline" /> オブジェクトの変更可能な複製を作成し、このオブジェクトの現在値の詳細コピーを作成します。 リソース参照、データ バインディング、アニメーションはコピーされませんが、それらの現在値はコピーされます。</summary>
        <returns>現在のオブジェクトの変更可能な複製。 複製されたオブジェクトの <see cref="P:System.Windows.Freezable.IsFrozen" /> プロパティは、ソースの <see langword="false" /> プロパティが <see cref="P:System.Windows.Freezable.IsFrozen" /> であった場合でも、<see langword="true" /> になります。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 変更可能なコピーを生成するためにこのメソッドが使用される固定された<xref:System.Windows.Freezable>オブジェクト (または any<xref:System.Windows.Freezable>オブジェクト)。 便宜上は、このメソッドは、厳密に型指定された実装が継承したバージョンをシャドウします。  
  
 詳細については、「<xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=nameWithType>」を参照してください。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ParallelTimeline.CreateInstanceCore" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>この新しいインスタンスを作成<see cref="T:System.Windows.Freezable" />です。</summary>
        <returns>新しい <see cref="T:System.Windows.Freezable" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、<xref:System.Windows.Freezable.CreateInstanceCore%2A>メソッドです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNaturalDurationCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Duration GetNaturalDurationCore (System.Windows.Media.Animation.Clock clock);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Windows.Duration GetNaturalDurationCore(class System.Windows.Media.Animation.Clock clock) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ParallelTimeline.GetNaturalDurationCore(System.Windows.Media.Animation.Clock)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Duration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clock" Type="System.Windows.Media.Animation.Clock" />
      </Parameters>
      <Docs>
        <param name="clock"><see cref="T:System.Windows.Media.Animation.Clock" />から自然な期間に戻ります。</param>
        <summary>指定したの自然な期間 (1 つのイテレーションの期間) を返します<see cref="T:System.Windows.Media.Animation.Clock" />です。</summary>
        <returns><see cref="T:System.Windows.Duration" />自然な期間を表す数量。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 自然な期間は、1 つのイテレーションの期間です。 このメソッドが戻る場合<xref:System.Windows.Duration.Automatic%2A>自然な期間が不明であることを意味します。 ここで、<xref:System.Windows.Media.Animation.Clock.NaturalDuration%2A>の<xref:System.Windows.Media.Animation.Clock>作成者によって決定されます。 たとえば、ストリーミング メディアの期間は、ストリーミング メディアのプロバイダーによって決定されます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SlipBehavior">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.SlipBehavior SlipBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Media.Animation.SlipBehavior SlipBehavior" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.SlipBehavior</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>1 つの場合、このタイムラインの動作を指定する値または複数の取得または設定、<see cref="T:System.Windows.Media.Animation.Timeline" />子。</summary>
        <value>1 つの場合、このタイムラインの動作を表す値または複数の<see cref="T:System.Windows.Media.Animation.Timeline" />子。 既定値は <see cref="F:System.Windows.Media.Animation.SlipBehavior.Grow" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 アニメーションとメディアを同期することをお勧めは多くの場合です。 ただし、これは複雑にメディアの再生遅れる可能性がありますの読み込みまたはバッファリングを確実にメディアとアニメーションを再生するは困難になります。 <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>メディアおよびアニメーションが一緒に再生するときの動作を決定するプロパティを使用します。 値<xref:System.Windows.Media.Animation.SlipBehavior.Grow>(既定値) は、アニメーション タイムラインを同期する必要はありませんし、タイムラインでその他のメディアの状態に関係なく指定した場合に再生されますを指定します。 値<xref:System.Windows.Media.Animation.SlipBehavior.Slip>一方で、メディアに再生する準備が整うまでに、アニメーションが (slip) を待機するを指定します。 次の図は、この動作を示します。  
  
 これは、<xref:System.Windows.Media.Animation.Storyboard>ビデオやアニメーションを再生します。 ときに<xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>に設定されている<xref:System.Windows.Media.Animation.SlipBehavior.Grow>と<xref:System.Windows.Media.Animation.Timeline.Duration%2A>のプロパティ、<xref:System.Windows.Media.Animation.Storyboard>に設定されている<xref:System.Windows.Duration.Automatic%2A>、<xref:System.Windows.Media.Animation.Storyboard>すべてのメディアおよびアニメーションの再生を拡大します。  
  
 ![ダイアグラム: SlipBehavior ダイアグラムの重要な](~/add/media/slipbehaviorkey.png "ダイアグラム: SlipBehavior ダイアグラムのキー")  
  
 ![ダイアグラム: Grow の SlipBehavior プロパティの値](~/add/media/slipbehaviorgrow1.png "ダイアグラム: Grow の SlipBehavior プロパティ値")  
  
 これは、<xref:System.Windows.Media.Animation.Storyboard>が、<xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>の<xref:System.Windows.Media.Animation.SlipBehavior.Grow>と<xref:System.Windows.Media.Animation.Timeline.Duration%2A>によりメディアおよびアニメーション 5 秒間に遅延量に関係なく再生 5 秒です。  
  
 ![ダイアグラム: Grow の SlipBehavior プロパティの値](~/add/media/slipbehaviorgrow2.png "ダイアグラム: Grow の SlipBehavior プロパティ値")  
  
 これは、<xref:System.Windows.Media.Animation.Storyboard>が、<xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>の<xref:System.Windows.Media.Animation.SlipBehavior.Slip>します。 なお、 <xref:System.Windows.Media.Animation.DoubleAnimation> (と他のメディアでない子の<xref:System.Windows.Media.Animation.Storyboard>) メディアのタイムラインが進行中でもない限り、進行状況のないです。  読み込むには、メディアがかかりますがバッファー処理している場合や、アニメーションは関連付け (ずれた) を待機します。  これにより、1 つのメディア ファイルを使用して同期するためにアニメーションできます。  
  
 ![メディアおよびアニメーションの SlipBehavior ダイアグラム](~/add/media/slipbehaviorslip1.png "メディアおよびアニメーションの SlipBehavior ダイアグラム")  
  
 これは、<xref:System.Windows.Media.Animation.Storyboard>が、<xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>の<xref:System.Windows.Media.Animation.SlipBehavior.Slip>と<xref:System.Windows.Media.Animation.Timeline.Duration%2A>は 5 秒です。  このシナリオでは、メディア ファイルとアニメーションが 5 秒の再生に保証されます。  
  
 ![ダイアグラム: ストーリー ボードの SlipBehavior プロパティ](~/add/media/slipbehaviorslip2.png "ダイアグラム: ストーリー ボードの SlipBehavior プロパティ")  
  
<a name="dependencyPropertyInfo_SlipBehavior"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehaviorProperty>|  
|メタデータ プロパティに設定します。`true`|なし|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SlipBehaviorProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SlipBehaviorProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SlipBehaviorProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.ParallelTimeline.SlipBehaviorProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior" /> 依存関係プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> 依存関係プロパティの識別子。  
  
   
  
## Examples  
 [依存関係プロパティの概要](~/docs/framework/wpf/advanced/dependency-properties-overview.md)  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
