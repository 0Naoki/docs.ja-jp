<Type Name="OleDbParameter" FullName="System.Data.OleDb.OleDbParameter">
  <TypeSignature Language="C#" Value="public sealed class OleDbParameter : System.Data.Common.DbParameter, ICloneable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OleDbParameter extends System.Data.Common.DbParameter implements class System.Data.IDataParameter, class System.Data.IDbDataParameter, class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Data.OleDb.OleDbParameter" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbParameter</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Data.OleDb.OleDbParameter/OleDbParameterConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>パラメーターを表します、<see cref="T:System.Data.OleDb.OleDbCommand" />および必要に応じてそのへのマッピング、<see cref="T:System.Data.DataSet" />列です。 このクラスは継承できません。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 OLE DB.NET Framework データ プロバイダーは、名前付きパラメーターの代わりに疑問符 (?) でマークされている位置指定パラメーターを使用します。  
  
 Oracle (MSDAORA) と OLE DB.NET Framework データ プロバイダーの Microsoft OLE DB プロバイダーを使用して Oracle データベースのクエリを実行するときに使用して、`LIKE`句クエリの固定長フィールドの値には、必要なすべての一致を返さない可能性があります。 Oracle の固定長フィールドの値と一致するとその理由は、`LIKE`句、末尾の空白の埋め込みも含めて、文字列の全体の長さに一致することです。 などのテーブルの場合、Oracle データベースが含まれています"Field1"として定義されているという名前のフィールドには`char(3)`値を入力して、次のコードは、そのテーブルの行に"a"返さない行です。  
  
```vb  
Dim queryString As String = "SELECT * FROM Table1 WHERE Field1 LIKE ?"  
Dim command As OleDbCommand = New OleDbCommand(queryString, connection)  
command.Parameters.Add("@p1", OleDbType.Char, 3).Value = "a"  
Dim reader As OleDbDataReader = command.ExecuteReader()  
```  
  
```csharp  
string queryString = "SELECT * FROM Table1 WHERE Field1 LIKE ?";  
OleDbCommand command = new OleDbCommand(queryString, connection);  
command.Parameters.Add("@p1", OleDbType.Char, 3).Value = "a";  
OleDbDataReader reader = command.ExecuteReader();  
```  
  
 これは、Oracle は、"a"と列の値を格納するため (padding"a"、末尾のスペース、3 の固定フィールド長を)、Oracle はの場合、"a"のパラメーター値の一致するものとして処理しませんが、`LIKE`固定長フィールドを比較します。  
  
 この問題を解決するには、パラメーターの値をパーセント記号 (「%」) のワイルドカード文字を追加します。 (`"a%"`)、SQL を使用してまたは`=`比較代わりにします。  
  
   
  
## Examples  
 次の例の複数のインスタンスを作成する<xref:System.Data.OleDb.OleDbParameter>を通じて、<xref:System.Data.OleDb.OleDbParameterCollection>内のコレクション、<xref:System.Data.OleDb.OleDbDataAdapter>です。 これらのパラメーターは、データ ソースからデータを選択し、内のデータを配置に使用、<xref:System.Data.DataSet>です。 この例では、<xref:System.Data.DataSet>と<xref:System.Data.OleDb.OleDbDataAdapter>適切なスキーマ、コマンド、および接続を使用して既に作成されています。  
  
 [!code-csharp[Classic WebData OleDbParameter Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbParameter Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbParameter Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbParameter Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OleDbParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbParameter.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Data.OleDb.OleDbParameter" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次の例を作成、<xref:System.Data.OleDb.OleDbParameter>し、一部のプロパティを設定します。  
  
 [!code-csharp[Classic WebData OleDbParameter.OleDbParameter Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbParameter.OleDbParameter Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbParameter.OleDbParameter Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbParameter.OleDbParameter Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OleDbParameter (string name, System.Data.OleDb.OleDbType dataType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.Data.OleDb.OleDbType dataType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbParameter.#ctor(System.String,System.Data.OleDb.OleDbType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="dataType" Type="System.Data.OleDb.OleDbType" />
      </Parameters>
      <Docs>
        <param name="name">マップするパラメーターの名前。</param>
        <param name="dataType"><see cref="T:System.Data.OleDb.OleDbType" /> 値のいずれか。</param>
        <summary>新しいインスタンスを初期化、<see cref="T:System.Data.OleDb.OleDbParameter" />パラメーター名とデータ型を使用するクラス。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 データ型、および必要に応じて<xref:System.Data.OleDb.OleDbParameter.Size%2A>と<xref:System.Data.OleDb.OleDbParameter.Precision%2A>の値から推論されます、`dataType`パラメーター。  
  
   
  
## Examples  
 次の例を作成、<xref:System.Data.OleDb.OleDbParameter>し、一部のプロパティを設定します。  
  
 [!code-csharp[Classic WebData OleDbParameter.OleDbParameter1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbParameter.OleDbParameter1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbParameter.OleDbParameter1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbParameter.OleDbParameter1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="dataType" /> パラメーターの指定された値が、正しくないバックエンド データ型です。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OleDbParameter (string name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbParameter.#ctor(System.String,System.Object)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">マップするパラメーターの名前。</param>
        <param name="value">新しい値<see cref="T:System.Data.OleDb.OleDbParameter" />オブジェクト。</param>
        <summary>新しいインスタンスを初期化、<see cref="T:System.Data.OleDb.OleDbParameter" />をパラメーター名と新しい値を使用してクラス<see cref="T:System.Data.OleDb.OleDbParameter" />です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このオーバー ロードを使用しているときに警告を使用して、<xref:System.Data.OleDb.OleDbParameter>コンス トラクターの整数パラメーターの値を指定します。 このオーバー ロードはため、`value`型の<xref:System.Object>は整数値を変換する必要があります、<xref:System.Object>次の c# の例に示すように、値が 0 の場合を入力します。  
  
```csharp  
Parameter = new OleDbParameter("@pname", Convert.ToInt32(0));  
```  
  
 この変換を実行しない場合、コンパイラを呼び出すしようとするいると想定、<xref:System.Data.OleDb.OleDbParameter.%23ctor%2A>コンス トラクター オーバー ロードします。  
  
   
  
## Examples  
 次の例を作成、<xref:System.Data.OleDb.OleDbParameter>です。  
  
 [!code-csharp[Classic WebData OleDbParameter.OleDbParameter5 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbParameter.OleDbParameter5 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbParameter.OleDbParameter5 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbParameter.OleDbParameter5 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OleDbParameter (string name, System.Data.OleDb.OleDbType dataType, int size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.Data.OleDb.OleDbType dataType, int32 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbParameter.#ctor(System.String,System.Data.OleDb.OleDbType,System.Int32)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="dataType" Type="System.Data.OleDb.OleDbType" />
        <Parameter Name="size" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="name">マップするパラメーターの名前。</param>
        <param name="dataType"><see cref="T:System.Data.OleDb.OleDbType" /> の値の 1 つ。</param>
        <param name="size">パラメーターの長さ。</param>
        <summary>新しいインスタンスを初期化、<see cref="T:System.Data.OleDb.OleDbParameter" />パラメーター名、データ型および長さを使用するクラス。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.OleDb.OleDbParameter.Size%2A>の値から推論される、`dataType`パラメーター明示的に設定されていない場合、`size`パラメーター。  
  
   
  
## Examples  
 次の例を作成、<xref:System.Data.OleDb.OleDbParameter>し、一部のプロパティを設定します。  
  
 [!code-csharp[Classic WebData OleDbParameter.OleDbParameter2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbParameter.OleDbParameter2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbParameter.OleDbParameter2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbParameter.OleDbParameter2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="dataType" /> パラメーターの指定された値が、正しくないバックエンド データ型です。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OleDbParameter (string name, System.Data.OleDb.OleDbType dataType, int size, string srcColumn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.Data.OleDb.OleDbType dataType, int32 size, string srcColumn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbParameter.#ctor(System.String,System.Data.OleDb.OleDbType,System.Int32,System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="dataType" Type="System.Data.OleDb.OleDbType" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="srcColumn" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">マップするパラメーターの名前。</param>
        <param name="dataType"><see cref="T:System.Data.OleDb.OleDbType" /> の値の 1 つ。</param>
        <param name="size">パラメーターの長さ。</param>
        <param name="srcColumn">ソース列の名前。</param>
        <summary>新しいインスタンスを初期化、<see cref="T:System.Data.OleDb.OleDbParameter" />パラメーター名、データ型、長さ、およびソース列名を使用するクラス。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.OleDb.OleDbParameter.Size%2A>の値から推論される、`dataType`パラメーター明示的に設定されていない場合、`size`パラメーター。  
  
   
  
## Examples  
 次の例を作成、<xref:System.Data.OleDb.OleDbParameter>し、一部のプロパティを設定します。  
  
 [!code-csharp[Classic WebData OleDbParameter.OleDbParameter3 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbParameter.OleDbParameter3 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbParameter.OleDbParameter3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbParameter.OleDbParameter3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="dataType" /> パラメーターの指定された値が、正しくないバックエンド データ型です。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OleDbParameter (string parameterName, System.Data.OleDb.OleDbType dbType, int size, System.Data.ParameterDirection direction, bool isNullable, byte precision, byte scale, string srcColumn, System.Data.DataRowVersion srcVersion, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string parameterName, valuetype System.Data.OleDb.OleDbType dbType, int32 size, valuetype System.Data.ParameterDirection direction, bool isNullable, unsigned int8 precision, unsigned int8 scale, string srcColumn, valuetype System.Data.DataRowVersion srcVersion, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbParameter.#ctor(System.String,System.Data.OleDb.OleDbType,System.Int32,System.Data.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Object)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="parameterName" Type="System.String" />
        <Parameter Name="dbType" Type="System.Data.OleDb.OleDbType" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Data.ParameterDirection" />
        <Parameter Name="isNullable" Type="System.Boolean" />
        <Parameter Name="precision" Type="System.Byte" />
        <Parameter Name="scale" Type="System.Byte" />
        <Parameter Name="srcColumn" Type="System.String" />
        <Parameter Name="srcVersion" Type="System.Data.DataRowVersion" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="parameterName">パラメーターの名前。</param>
        <param name="dbType"><see cref="T:System.Data.OleDb.OleDbType" /> 値のいずれか。</param>
        <param name="size">パラメーターの長さ。</param>
        <param name="direction"><see cref="T:System.Data.ParameterDirection" /> の値の 1 つ。</param>
        <param name="isNullable">
          フィールドの値を NULL に設定できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
        <param name="precision"><see cref="P:System.Data.OleDb.OleDbParameter.Value" /> を解決する際の、小数点の左側および右側の桁数の合計。</param>
        <param name="scale"><see cref="P:System.Data.OleDb.OleDbParameter.Value" /> を解決する際の、小数点以下の合計桁数。</param>
        <param name="srcColumn">ソース列の名前。</param>
        <param name="srcVersion"><see cref="T:System.Data.DataRowVersion" /> 値のいずれか。</param>
        <param name="value"><see cref="T:System.Data.OleDb.OleDbParameter" /> の値である <see cref="T:System.Object" />。</param>
        <summary>パラメーター名、データ型、長さ、ソース列名、パラメーターの方向、数値の有効桁数、およびその他のプロパティを使用する <see cref="T:System.Data.OleDb.OleDbParameter" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.OleDb.OleDbParameter.Size%2A>と<xref:System.Data.OleDb.OleDbParameter.Precision%2A>の値から推論されます、`dataType`パラメーターで明示的に設定されていない場合、`size`と`precision`パラメーター。  
  
   
  
## Examples  
 次の例を作成、<xref:System.Data.OleDb.OleDbParameter>し、表示、<xref:System.Data.OleDb.OleDbParameter.ParameterName%2A>です。  
  
 [!code-csharp[Classic WebData OleDbParameter.OleDbParameter4 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbParameter.OleDbParameter4 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbParameter.OleDbParameter4 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbParameter.OleDbParameter4 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="dataType" /> パラメーターの指定された値が、正しくないバックエンド データ型です。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OleDbParameter (string parameterName, System.Data.OleDb.OleDbType dbType, int size, System.Data.ParameterDirection direction, byte precision, byte scale, string sourceColumn, System.Data.DataRowVersion sourceVersion, bool sourceColumnNullMapping, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string parameterName, valuetype System.Data.OleDb.OleDbType dbType, int32 size, valuetype System.Data.ParameterDirection direction, unsigned int8 precision, unsigned int8 scale, string sourceColumn, valuetype System.Data.DataRowVersion sourceVersion, bool sourceColumnNullMapping, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbParameter.#ctor(System.String,System.Data.OleDb.OleDbType,System.Int32,System.Data.ParameterDirection,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Boolean,System.Object)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="parameterName" Type="System.String" />
        <Parameter Name="dbType" Type="System.Data.OleDb.OleDbType" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Data.ParameterDirection" />
        <Parameter Name="precision" Type="System.Byte" />
        <Parameter Name="scale" Type="System.Byte" />
        <Parameter Name="sourceColumn" Type="System.String" />
        <Parameter Name="sourceVersion" Type="System.Data.DataRowVersion" />
        <Parameter Name="sourceColumnNullMapping" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="parameterName">パラメーターの名前。</param>
        <param name="dbType"><see cref="T:System.Data.OleDb.OleDbType" /> 値のいずれか。</param>
        <param name="size">パラメーターの長さ。</param>
        <param name="direction"><see cref="T:System.Data.ParameterDirection" /> 値のいずれか。</param>
        <param name="precision"><see cref="P:System.Data.OleDb.OleDbParameter.Value" /> を解決する際の、小数点の左側および右側の桁数の合計。</param>
        <param name="scale"><see cref="P:System.Data.OleDb.OleDbParameter.Value" /> を解決する際の、小数点以下の合計桁数。</param>
        <param name="sourceColumn">ソース列の名前。</param>
        <param name="sourceVersion"><see cref="T:System.Data.DataRowVersion" /> 値のいずれか。</param>
        <param name="sourceColumnNullMapping">
          ソース列が null 許容である場合は <see langword="true" />。null 許容ではない場合は <see langword="false" />。</param>
        <param name="value"><see cref="T:System.Data.OleDb.OleDbParameter" /> の値である <see cref="T:System.Object" />。</param>
        <summary>パラメーター名、データ型、長さ、ソース列名、パラメーターの方向、数値の有効桁数、およびその他のプロパティを使用する <see cref="T:System.Data.OleDb.OleDbParameter" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.OleDb.OleDbParameter.Size%2A>と<xref:System.Data.OleDb.OleDbParameter.Precision%2A>の値から推論されます、`dataType`パラメーターで明示的に設定されていない場合、`size`と`precision`パラメーター。  
  
   
  
## Examples  
 次の例を作成、<xref:System.Data.OleDb.OleDbParameter>し、表示、<xref:System.Data.OleDb.OleDbParameter.ParameterName%2A>です。  
  
 [!code-csharp[Classic WebData OleDbParameter.OleDbParameter4 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbParameter.OleDbParameter4 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbParameter.OleDbParameter4 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbParameter.OleDbParameter4 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="dataType" /> パラメーターの指定された値が、正しくないバックエンド データ型です。</exception>
      </Docs>
    </Member>
    <Member MemberName="DbType">
      <MemberSignature Language="C#" Value="public override System.Data.DbType DbType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.DbType DbType" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbParameter.DbType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DbType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>パラメーターの <see cref="T:System.Data.DbType" /> を取得または設定します。</summary>
        <value><see cref="T:System.Data.DbType" /> 値のいずれか。 既定値は、<see cref="F:System.Data.DbType.String" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.OleDb.OleDbParameter.OleDbType%2A>と<xref:System.Data.OleDb.OleDbParameter.DbType%2A>がリンクされています。 そのため、設定、<xref:System.Data.OleDb.OleDbParameter.DbType%2A>変更、<xref:System.Data.OleDb.OleDbParameter.OleDbType%2A>に、サポートする<xref:System.Data.OleDb.OleDbParameter.OleDbType%2A>です。  
  
 サポートされるデータ型の一覧を参照してください、適切な<xref:System.Data.OleDb.OleDbParameter.OleDbType%2A>メンバー。 詳細については、次を参照してください。 [DataAdapter パラメーター](~/docs/framework/data/adonet/dataadapter-parameters.md)です。  
  
   
  
## Examples  
 次の例を作成、<xref:System.Data.OleDb.OleDbParameter>し、一部のプロパティを設定します。  
  
 [!code-csharp[Classic WebData OleDbParameter.DbType Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbParameter.DbType Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbParameter.DbType Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbParameter.DbType Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">プロパティが有効な <see cref="T:System.Data.DbType" /> に設定されませんでした。</exception>
      </Docs>
    </Member>
    <Member MemberName="Direction">
      <MemberSignature Language="C#" Value="public override System.Data.ParameterDirection Direction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.ParameterDirection Direction" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbParameter.Direction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.ParameterDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはパラメーターが入力専用、出力専用かどうか、双方向、またはストアド プロシージャの戻り値パラメーターを示す値を設定します。</summary>
        <value><see cref="T:System.Data.ParameterDirection" /> 値のいずれか。 既定値は、<see langword="Input" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 場合、<xref:System.Data.ParameterDirection>は、出力、および関連付けられている実行<xref:System.Data.OleDb.OleDbCommand>、値を返さない、 <xref:System.Data.OleDb.OleDbParameter> null 値が含まれています。  
  
 `Output`、 `InputOut`、および`ReturnValue`呼び出しで返されるパラメーター<xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A>を呼び出すまでアクセスできません<xref:System.Data.OleDb.OleDbDataReader.Close%2A>または**Dispose**上、<xref:System.Data.OleDb.OleDbDataReader>です。  
  
   
  
## Examples  
 次の例を作成、<xref:System.Data.OleDb.OleDbParameter>し、一部のプロパティを設定します。  
  
```vb  
Public Sub CreateOleDbParameter()  
    Dim parameter As New OleDbParameter("Description", OleDbType.VarChar, 88)  
    parameter.Direction = ParameterDirection.Output  
End Sub 'CreateOleDbParameter  
```  
  
```csharp  
public void CreateOleDbParameter()   
 {  
    OleDbParameter parameter = new OleDbParameter("Description", OleDbType.VarChar, 88);  
    parameter.Direction = ParameterDirection.Output;  
 }  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">プロパティが、有効な <see cref="T:System.Data.ParameterDirection" /> 値のいずれかに設定されていません。</exception>
      </Docs>
    </Member>
    <Member MemberName="IsNullable">
      <MemberSignature Language="C#" Value="public override bool IsNullable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNullable" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbParameter.IsNullable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>パラメーターが null 値を受け取るかどうかを示す値を取得または設定します。</summary>
        <value>
          null 値を受け取る場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Null 値の処理を使用して、<xref:System.DBNull>クラスです。  
  
   
  
## Examples  
 次の例を作成、<xref:System.Data.OleDb.OleDbParameter>し、一部のプロパティを設定します。  
  
```vb  
Public Sub CreateOleDbParameter()  
    Dim parameter As New OleDbParameter("Description", OleDbType.VarChar, 88)  
    parameter.IsNullable = True  
    parameter.Direction = ParameterDirection.Output  
End Sub 'CreateOleDbParameter  
```  
  
```csharp  
public void CreateOleDbParameter()   
 {  
    OleDbParameter parameter = new OleDbParameter("Description", OleDbType.VarChar, 88);  
    parameter.IsNullable = true;  
    parameter.Direction = ParameterDirection.Output;  
 }  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Offset">
      <MemberSignature Language="C#" Value="public int Offset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Offset" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbParameter.Offset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OleDbType">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbType OleDbType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.OleDb.OleDbType OleDbType" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbParameter.OleDbType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Data.Common.DbProviderSpecificTypeProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>パラメーターの <see cref="T:System.Data.OleDb.OleDbType" /> を取得または設定します。</summary>
        <value>パラメーターの <see cref="T:System.Data.OleDb.OleDbType" />。 既定値は、<see cref="F:System.Data.OleDb.OleDbType.VarWChar" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.OleDb.OleDbParameter.OleDbType%2A>と<xref:System.Data.OleDb.OleDbParameter.DbType%2A>がリンクされています。 そのため、設定、<xref:System.Data.OleDb.OleDbParameter.DbType%2A>変更、<xref:System.Data.OleDb.OleDbParameter.OleDbType%2A>に、サポートする<xref:System.Data.OleDb.OleDbType>です。  
  
 サポートされるデータ型の一覧を参照してください、適切な<xref:System.Data.OleDb.OleDbType>メンバー。 詳細については、次を参照してください。 [DataAdapter パラメーター](~/docs/framework/data/adonet/dataadapter-parameters.md)です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParameterName">
      <MemberSignature Language="C#" Value="public override string ParameterName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ParameterName" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbParameter.ParameterName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Data.OleDb.OleDbParameter" /> の名前を取得または設定します。</summary>
        <value><see cref="T:System.Data.OleDb.OleDbParameter" /> の名前。 既定値は、空の文字列 ("") です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 OLE DB .NET プロバイダーでは、名前付きパラメーターの代わりに疑問符 (?) でマークされている位置指定パラメーターを使用します。  
  
   
  
## Examples  
 次の例を作成、<xref:System.Data.OleDb.OleDbParameter>し、一部のプロパティを設定します。  
  
```vb  
Public Sub CreateOleDbParameter()  
    Dim parameter As New OleDbParameter("Description", OleDbType.VarChar, 88)  
    parameter.Direction = ParameterDirection.Output  
End Sub 'CreateOleDbParameter  
```  
  
```csharp  
public void CreateOleDbParameter()   
 {  
    OleDbParameter parameter = new OleDbParameter("Description", OleDbType.VarChar, 88);  
    parameter.Direction = ParameterDirection.Output;  
 }  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Precision">
      <MemberSignature Language="C#" Value="public byte Precision { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8 Precision" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbParameter.Precision" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Data.OleDb.OleDbParameter.Value" /> プロパティを表すために使用する最大桁数を取得または設定します。</summary>
        <value><see cref="P:System.Data.OleDb.OleDbParameter.Value" /> プロパティを表すために使用する最大桁数。 既定値は 0 で、データ プロバイダーでの有効桁数を設定することを示します<see cref="P:System.Data.OleDb.OleDbParameter.Value" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.OleDb.OleDbParameter.Precision%2A>プロパティは decimal および numeric の入力パラメーターにのみ使用します。  
  
 <xref:System.Data.OleDb.OleDbParameter.Precision%2A>のみのプロパティを設定する必要があります`Decimal`と`Numeric`パラメーターを呼び出す前に、<xref:System.Data.OleDb.OleDbCommand.Prepare%2A>のメソッド、<xref:System.Data.OleDb.OleDbCommand>です。  
  
 データベース内の値以外の値にこのプロパティの設定では、データ プロバイダーの実装に依存し、エラー コード、切り捨て、または round データを返す可能性があります。  
  
 `Precision`プロパティのみに影響を与えるパラメーターが<xref:System.Data.OleDb.OleDbType>は`Decimal`、 `Numeric`、または`VarNumeric`です。 他のデータ型の`Precision`は無視されます。  
  
> [!NOTE]
>  データベースに渡されるデータを強制するには、このプロパティの使用はサポートされていません。 Round、切り捨てる、またはそれ以外の場合、データベースに渡す前にデータを変換を使用して、<xref:System.Math>クラスの一部である、`System`パラメーターの値を割り当てる前に名前空間`Value`プロパティです。  
  
> [!NOTE]
>  .NET Framework version 1.0 に含まれている .NET framework データ プロバイダーでは確認されません、<xref:System.Data.OleDb.OleDbParameter.Precision%2A>または<xref:System.Data.OleDb.OleDbParameter.Scale%2A>の<xref:System.Decimal>パラメーターの値。 これにより、切り捨てられたデータ データ ソースに挿入される可能性があります。 .NET Framework version 1.0 を使用している場合は、検証、<xref:System.Data.OleDb.OleDbParameter.Precision%2A>と<xref:System.Data.OleDb.OleDbParameter.Scale%2A>の<xref:System.Decimal>値パラメーターの値を設定する前にします。 <xref:System.Data.OleDb.OleDbParameter.Scale%2A>超える値、<xref:System.Decimal>パラメーター スケールは引き続き、切り詰められます。  
  
   
  
## Examples  
 次の例を作成、<xref:System.Data.OleDb.OleDbParameter>し、一部のプロパティを設定します。  
  
```vb  
Public Sub CreateOleDbParameter()  
    Dim parameter As New OleDbParameter("Price", OleDbType.Decimal)  
    parameter.Value = 3.1416  
    parameter.Precision = 8  
    parameter.Scale = 4  
End Sub 'CreateOleDbParameter  
```  
  
```csharp  
public void CreateOleDbParameter()   
 {  
    OleDbParameter parameter = new OleDbParameter("Price", OleDbType.Decimal);  
    parameter.Value = 3.1416;  
    parameter.Precision = 8;  
    parameter.Scale = 4;  
 }  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetDbType">
      <MemberSignature Language="C#" Value="public override void ResetDbType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ResetDbType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbParameter.ResetDbType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>この <see cref="T:System.Data.OleDb.OleDbParameter" /> に関連付けられている型をリセットします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コマンドを実行するときに、パラメーター値を含むまたはパラメーターの型は、コードで明示的に設定することができます値からその型を推論することができます。 このメソッドを呼び出すことでは、その型パラメーターに渡される値からもう一度推測できるようににパラメーターをリセットします。 このメソッドを呼び出すと、両方の影響を与える、<xref:System.Data.OleDb.OleDbParameter.DbType%2A>と<xref:System.Data.OleDb.OleDbParameter.OleDbType%2A>のプロパティ、<xref:System.Data.OleDb.OleDbParameter>です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetOleDbType">
      <MemberSignature Language="C#" Value="public void ResetOleDbType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetOleDbType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbParameter.ResetOleDbType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>この <see cref="T:System.Data.OleDb.OleDbParameter" /> に関連付けられている型をリセットします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コマンドを実行するときに、パラメーター値を含むまたはパラメーターの型は、コードで明示的に設定することができます値からその型を推論することができます。 このメソッドを呼び出すことでは、その型パラメーターに渡される値からもう一度推測できるようににパラメーターをリセットします。 このメソッドを呼び出すと、両方の影響を与える、<xref:System.Data.OleDb.OleDbParameter.DbType%2A>と<xref:System.Data.OleDb.OleDbParameter.OleDbType%2A>のプロパティ、<xref:System.Data.OleDb.OleDbParameter>です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scale">
      <MemberSignature Language="C#" Value="public byte Scale { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8 Scale" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbParameter.Scale" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Data.OleDb.OleDbParameter.Value" /> が解決される、小数点以下の桁数を取得または設定します。</summary>
        <value><see cref="P:System.Data.OleDb.OleDbParameter.Value" /> が解決される、小数点以下の桁数。 既定値は 0 です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.OleDb.OleDbParameter.Scale%2A>プロパティを呼び出す前に 10 進数と数値の入力パラメーターの使用のみ、<xref:System.Data.OleDb.OleDbCommand.Prepare%2A>のメソッド、<xref:System.Data.OleDb.OleDbCommand>と数値の出力パラメーターを指定します。  
  
 データベース内の値以外の値にこのプロパティの設定では、データ プロバイダーの実装に依存し、エラー コード、切り捨て、または round データを返す可能性があります。  
  
 10 (またはそれ以降)、SQL をサーバーにネイティブでクライアントを使用する場合は、型のパラメーターをバインドする`Decimal`、 `Numeric`、 `VarNumeric`、 `DBDate`、または`DBTimeStamp`、手動で、適切なスケール値を指定する必要があります。  
  
> [!NOTE]
>  データベースに渡されるデータを強制するには、このプロパティの使用はサポートされていません。 Round、切り捨てる、またはそれ以外の場合、データベースに渡す前にデータを変換を使用して、<xref:System.Math>クラスの一部である、`System`パラメーターの値を割り当てる前に名前空間`Value`プロパティです。  
  
> [!NOTE]
>  .NET Framework version 1.0 に含まれている .NET framework データ プロバイダーでは確認されません、<xref:System.Data.OleDb.OleDbParameter.Precision%2A>または<xref:System.Data.OleDb.OleDbParameter.Scale%2A>の<xref:System.Decimal>パラメーターの値。 これにより、切り捨てられたデータ データ ソースに挿入される可能性があります。 .NET Framework version 1.0 を使用している場合は、検証、<xref:System.Data.OleDb.OleDbParameter.Precision%2A>と<xref:System.Data.OleDb.OleDbParameter>の<xref:System.Decimal>値パラメーターの値を設定する前にします。 <xref:System.Data.OleDb.OleDbParameter.Scale%2A>超える値、<xref:System.Decimal>パラメーター スケールは引き続き、切り詰められます。  
  
   
  
## Examples  
 次の例を作成、<xref:System.Data.OleDb.OleDbParameter>し、一部のプロパティを設定します。  
  
```vb  
Public Sub CreateOleDbParameter()  
    Dim parameter As New OleDbParameter("Price", OleDbType.Decimal)  
    parameter.Value = 3.1416  
    parameter.Precision = 8  
    parameter.Scale = 4  
End Sub 'CreateOleDbParameter  
```  
  
```csharp  
public void CreateOleDbParameter()   
 {  
    OleDbParameter parameter = new OleDbParameter("Price", OleDbType.Decimal);  
    parameter.Value = 3.1416;  
    parameter.Precision = 8;  
    parameter.Scale = 4;  
 }  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public override int Size { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Size" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbParameter.Size" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>列内のデータの最大サイズをバイト単位で取得または設定します。</summary>
        <value>列内のデータの最大サイズ (バイト単位)。 既定値はパラメーター値から推論されます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.OleDb.OleDbParameter.Size%2A> Binary と文字列型のプロパティを使用します。  
  
 文字列以外のデータ型と ANSI の文字列データは、の<xref:System.Data.OleDb.OleDbParameter.Size%2A>プロパティのバイト数を示します。 Unicode 文字列データの<xref:System.Data.OleDb.OleDbParameter.Size%2A>文字の数を示します。 文字列の数では、終端の文字は含まれません。  
  
 可変長データ型で<xref:System.Data.OleDb.OleDbParameter.Size%2A>サーバーに送信するデータの最大量を示します。 たとえば、Unicode 文字列値、<xref:System.Data.OleDb.OleDbParameter.Size%2A>最初の 100 個の文字をサーバーに送信されるデータの量が制限される可能性があります。  
  
 双方向と出力のパラメーターと戻り値は、の値を設定する必要があります<xref:System.Data.OleDb.OleDbParameter.Size%2A>です。 これは、入力パラメーターに必要なかどうかを明示的に設定の値は、推論指定されたパラメーターの実際のサイズからパラメーター化されたステートメントを実行するとします。  
  
 <xref:System.Data.OleDb.OleDbParameter.DbType%2A>、 <xref:System.Data.OleDb.OleDbParameter.OleDbType%2A>、および<xref:System.Data.OleDb.OleDbParameter.Size%2A>設定で、パラメーターのプロパティを推測できなければ<xref:System.Data.OleDb.OleDbParameter.Value%2A>です。 そのため、それらを指定する必要はありません。 ただし、これらはで<xref:System.Data.OleDb.OleDbParameter>プロパティの設定。 たとえば、パラメーターのサイズが推論されました<xref:System.Data.OleDb.OleDbParameter.Size%2A>ステートメントの実行後、推定値が含まれていません。  
  
 固定長データ型の値の<xref:System.Data.OleDb.OleDbParameter.Size%2A>は無視されます。 サーバーへのパラメーターの値を送信するときに、プロバイダーを使用して、情報として利用できます。  
  
 値のサイズに指定された場合、 <xref:System.Data.OleDb.OleDbParameter> 、指定値を超えた<xref:System.Data.OleDb.OleDbParameter.Size%2A>、<xref:System.Data.OleDb.OleDbParameter.Value%2A>の<xref:System.Data.OleDb.OleDbParameter>のサイズに切り捨て、指定した値が含まれています、<xref:System.Data.OleDb.OleDbParameter>です。  
  
   
  
## Examples  
 次の例を作成、<xref:System.Data.OleDb.OleDbParameter>し、一部のプロパティを設定します。  
  
```vb  
Public Sub CreateOleDbParameter()  
    Dim myValue As String = "12 foot scarf - multiple colors, one previous owner"  
    Dim parameter As New OleDbParameter("Description", OleDbType.VarChar)  
    parameter.Direction = ParameterDirection.Output  
    parameter.Size = myValue.Length  
    parameter.Value = myValue  
End Sub 'CreateOleDbParameter  
```  
  
```csharp  
public void CreateOleDbParameter()   
 {  
    string myValue = "12 foot scarf - multiple colors, one previous owner";  
    OleDbParameter parameter = new OleDbParameter("Description", OleDbType.VarChar);  
    parameter.Direction = ParameterDirection.Output;  
    parameter.Size = myValue.Length;  
    parameter.Value = myValue;  
 }  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceColumn">
      <MemberSignature Language="C#" Value="public override string SourceColumn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SourceColumn" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbParameter.SourceColumn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定にマップされたソース列の名前、<see cref="T:System.Data.DataSet" />ロードしたり返したりするために使用して、<see cref="P:System.Data.OleDb.OleDbParameter.Value" />です。</summary>
        <value><see cref="T:System.Data.DataSet" /> にマップされるソース列の名前。 既定値は空の文字列です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ときに<xref:System.Data.OleDb.OleDbParameter.SourceColumn%2A>と列から取得したが、パラメーターの値、空の文字列以外の値に設定されている、<xref:System.Data.OleDb.OleDbParameter.SourceColumn%2A>名。 場合<xref:System.Data.OleDb.OleDbParameter.Direction%2A>に設定されている`Input`から値を取得、<xref:System.Data.DataSet>です。 場合<xref:System.Data.OleDb.OleDbParameter.Direction%2A>に設定されている`Output`、データ ソースから値を取得します。 A<xref:System.Data.OleDb.OleDbParameter.Direction%2A>の`InputOutput`両方の組み合わせです。  
  
 使用する方法についての詳細、<xref:System.Data.OleDb.OleDbParameter.SourceColumn%2A>プロパティを参照してください[DataAdapter パラメーター](~/docs/framework/data/adonet/dataadapter-parameters.md)と[Dataadapter によるデータ ソースを更新](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md)です。  
  
   
  
## Examples  
 次の例を作成、<xref:System.Data.OleDb.OleDbParameter>し、一部のプロパティを設定します。  
  
```vb  
Public Sub CreateOleDbParameter()  
    Dim parameter As New OleDbParameter("Description", OleDbType.VarChar, 88)  
    parameter.SourceColumn = "Description"  
End Sub 'CreateOleDbParameter  
```  
  
```csharp  
public void CreateOleDbParameter()   
 {  
    OleDbParameter parameter = new OleDbParameter("Description", OleDbType.VarChar, 88);  
    parameter.SourceColumn = "Description";  
 }  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceColumnNullMapping">
      <MemberSignature Language="C#" Value="public override bool SourceColumnNullMapping { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SourceColumnNullMapping" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbParameter.SourceColumnNullMapping" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ソース列が null 許容かどうかを示す値を設定または取得します。 これにより、<see cref="T:System.Data.Common.DbCommandBuilder" /> で null 許容列の Update ステートメントを正しく生成できます。</summary>
        <value>
          ソース列が null 許容である場合は <see langword="true" />。null 許容ではない場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.OleDb.OleDbParameter.SourceColumnNullMapping%2A>によって使用される、 <xref:System.Data.Common.DbCommandBuilder> null 許容の列を処理するときに、更新コマンドを正しく生成します。 一般に、使用の<xref:System.Data.OleDb.OleDbParameter.SourceColumnNullMapping%2A>から継承する開発者に制限されて<xref:System.Data.Common.DbCommandBuilder>です。  
  
 <xref:System.Data.Common.DbCommandBuilder>このプロパティを使用して、基になる列が、null 値し、このプロパティを設定するかどうかを判断する`true`、null 許容である場合と`false`されていない場合。 ときに<xref:System.Data.Common.DbCommandBuilder>が調べ、Update ステートメントを生成する、<xref:System.Data.OleDb.OleDbParameter.SourceColumnNullMapping%2A>パラメーターごとにします。 プロパティが場合`true`、<xref:System.Data.Common.DbCommandBuilder>次のように WHERE 句が生成されます (このクエリ式内で"FieldName"を表すフィールドの名前)。  
  
```  
((@IsNull_FieldName = 1 AND FieldName IS NULL) OR   
  (FieldName = @Original_FieldName))  
```  
  
 場合<xref:System.Data.OleDb.OleDbParameter.SourceColumnNullMapping%2A>フィールドが false の場合、<xref:System.Data.Common.DbCommandBuilder>次の WHERE 句が生成されます。  
  
```  
FieldName = @OriginalFieldName  
```  
  
 さらに、@IsNull_FieldNameそうでない場合、null と 0 をソース フィールドが存在する場合、1 が含まれています。 このメカニズムでは、SQL Server のパフォーマンスの最適化ではの複数のプロバイダーの間で機能する一般的なコードを提供します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceVersion">
      <MemberSignature Language="C#" Value="public override System.Data.DataRowVersion SourceVersion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.DataRowVersion SourceVersion" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbParameter.SourceVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRowVersion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定、<see cref="T:System.Data.DataRowVersion" />を読み込むときに使用する<see cref="P:System.Data.OleDb.OleDbParameter.Value" />です。</summary>
        <value><see cref="T:System.Data.DataRowVersion" /> 値のいずれか。 既定値は、<see langword="Current" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 によって使用される<xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A>パラメーター値が に設定されているかどうかを決定する、更新操作中に`Current`または`Original`です。 これにより、プライマリ キーを更新できます。 このプロパティのバージョンに、<xref:System.Data.DataRow>によって使用される、<xref:System.Data.DataRow.Item%2A>プロパティ、または<xref:System.Data.DataRow.GetChildRows%2A>のメソッド、<xref:System.Data.DataRow>オブジェクト。  
  
   
  
## Examples  
 次の例を作成、<xref:System.Data.OleDb.OleDbParameter>し、一部のプロパティを設定します。  
  
```vb  
Public Sub CreateOleDbParameter()  
    Dim parameter As New OleDbParameter("Description", OleDbType.VarChar, 88)  
    parameter.SourceColumn = "Description"  
    parameter.SourceVersion = DataRowVersion.Current  
End Sub  
```  
  
```csharp  
public void CreateOleDbParameter()   
 {  
    OleDbParameter parameter = new OleDbParameter("Description", OleDbType.VarChar, 88);  
    parameter.SourceColumn = "Description";  
    parameter.SourceVersion = DataRowVersion.Current;  
 }  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">いずれかに、プロパティが設定されていない、<see cref="T:System.Data.DataRowVersion" />値。</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbParameter.System#ICloneable#Clone" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>このメンバーの詳細については、「<see cref="M:System.ICloneable.Clone" />」をご覧ください。</summary>
        <returns>新しい<see cref="T:System.Object" />のこのインスタンスのコピーであります。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Data.OleDb.OleDbParameter> のインスタンスが <xref:System.ICloneable> インターフェイスにキャストされる場合にのみ、使用できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbParameter.ToString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="P:System.Data.OleDb.OleDbParameter.ParameterName" /> を表す文字列を取得します。</summary>
        <returns><see cref="P:System.Data.OleDb.OleDbParameter.ParameterName" /> を表す文字列。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public override object Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbParameter.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.StringConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>パラメーターの値を取得または設定します。</summary>
        <value>パラメーターの値である <see cref="T:System.Object" />。 既定値は NULL です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 入力パラメーターの値がバインドされている、<xref:System.Data.OleDb.OleDbCommand>ですが、サーバーに送信します。 完了時に出力パラメーターと戻り値パラメーターの値を設定、<xref:System.Data.OleDb.OleDbCommand>後、<xref:System.Data.OleDb.OleDbDataReader>が閉じられます。  
  
 指定する必要があります、サーバーに null パラメーター値を送信するときに<xref:System.DBNull>null でないです。 システムの null 値は、値のない空オブジェクトです。 <xref:System.DBNull> は、null 値を表すために使用します。  
  
 アプリケーションでは、データベースの種類を指定する場合、プロバイダーがサーバーにデータを送信するとき、バインドされた値がその型に変換されます。 プロバイダーがサポートしている場合は、任意の型の値を変換しようとした場合、<xref:System.IConvertible>インターフェイスです。 指定した型の値と互換性がない場合、変換エラーがあります。  
  
 両方の<xref:System.Data.OleDb.OleDbParameter.DbType%2A>と<xref:System.Data.OleDb.OleDbParameter.OleDbType%2A>値を設定してプロパティを推論することができます。  
  
 <xref:System.Data.OleDb.OleDbParameter.Value%2A>の Update メソッドでプロパティを上書き<xref:System.Data.IDbDataAdapter>です。  
  
   
  
## Examples  
 次の例を作成、<xref:System.Data.OleDb.OleDbParameter>し、一部のプロパティを設定します。  
  
```vb  
Public Sub CreateOleDbParameter()  
    Dim parameter As New OleDbParameter("Description", OleDbType.VarChar, 88)  
    parameter.Value = "garden hose"  
End Sub 'CreateOleDbParameter  
```  
  
```csharp  
public void CreateOleDbParameter()   
 {  
    OleDbParameter parameter = new OleDbParameter("Description", OleDbType.VarChar, 88);  
    parameter.Value = "garden hose";  
 }  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
