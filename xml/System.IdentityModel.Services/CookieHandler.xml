<Type Name="CookieHandler" FullName="System.IdentityModel.Services.CookieHandler">
  <TypeSignature Language="C#" Value="public abstract class CookieHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit CookieHandler extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Services.CookieHandler" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel.Services</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>読み取り、書き込み、および HTTP クライアントでセッション cookie を削除するための抽象基本クラスを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IdentityModel.Services.SessionAuthenticationModule> (SAM) のインスタンスを使用して、<xref:System.IdentityModel.Services.CookieHandler>読み取り、書き込み、および cookie または含まれている cookie を削除するクラス、 <xref:System.IdentityModel.Tokens.SessionSecurityToken> HTTP クライアントにします。 Cookie (またはセッション トークンは、いくつかの cookie を分割する場合、cookie) を含む、セッション トークンは、セッションの cookie と呼ばれます。  
  
 Windows Identity Foundation (WIF) がによって実装されているチャンクされたクッキー ハンドラーと呼ばれるクッキー ハンドラーが付属しています、<xref:System.IdentityModel.Services.ChunkedCookieHandler>クラスです。 チャンクされたクッキー ハンドラーは、指定されたチャンクのサイズに応じて 1 つまたは複数の cookie の間でセッション トークンを分割します。 これは、多くのブラウザーによって課される個々 の cookie のサイズ制限を満たすにです。  
  
 派生できます<xref:System.IdentityModel.Services.CookieHandler>独自クッキー ハンドラーを作成します。 オーバーライドする必要があります、これを行うときに、 <xref:System.IdentityModel.Services.CookieHandler.DeleteCore%2A>、 <xref:System.IdentityModel.Services.CookieHandler.ReadCore%2A>、および<xref:System.IdentityModel.Services.CookieHandler.WriteCore%2A>削除、読み取り、およびセッションの cookie の書き込みの実際の作業を実行するメソッド。 これらのメソッドは通常から cookie を読み取り、<xref:System.Web.HttpRequest.Cookies%2A?displayProperty=nameWithType>を通じて収集し、書き込み、または削除の cookie、<xref:System.Web.HttpResponse.Cookies%2A?displayProperty=nameWithType>コレクション。 <xref:System.Web.HttpContext>オブジェクトを要求にアクセスすることができ、応答は、これらの各メソッドのパラメーターとして提供されます。 メソッド以外に、必要なによって公開されるその他の仮想メソッドのプロパティをオーバーライドすることができます必要に応じて、<xref:System.IdentityModel.Services.CookieHandler>ハンドラーの動作をカスタマイズするクラス。  
  
 いくつかのプロパティは、によって公開される、<xref:System.IdentityModel.Services.CookieHandler>既定の動作およびセッションの cookie のプロパティを指定するクラス。 <xref:System.IdentityModel.Services.CookieHandler.Name%2A>、 <xref:System.IdentityModel.Services.CookieHandler.Domain%2A>、および<xref:System.IdentityModel.Services.CookieHandler.Path%2A>プロパティは、cookie、有効なドメインおよびそれを格納する、クライアント上のパスのベース名を指定します。 <xref:System.IdentityModel.Services.CookieHandler.HideFromClientScript%2A>プロパティは、cookie がクライアント側のスクリプトにアクセスできるかどうかを指定します。 <xref:System.IdentityModel.Services.CookieHandler.RequireSsl%2A>プロパティは、セキュリティで保護された (HTTPS) 接続経由でのみ cookie を送信する必要があるかどうかを指定します。 場合、設定、<xref:System.IdentityModel.Services.CookieHandler.PersistentSessionLifetime%2A>ブラウザーを閉じた後も有効なままセッションの場合は永続的なセッションは、有効期限の時刻を設定するプロパティを使用します。 通常、基になるに設定された同等のプロパティがあるこれらすべてのプロパティ<xref:System.Web.HttpCookie>ハンドラーの"core"メソッドによってオブジェクト (またはオブジェクト)。 詳細については、の各プロパティについてのドキュメントを参照してください。  
  
 を通じて構成で、SAM によって使用されるクッキー ハンドラーを指定することができます、 [ &lt;cookieHandler&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md)要素。 この要素で設定クッキー ハンドラーのイベントのデリゲートで変更できます、<xref:System.IdentityModel.Services.FederatedAuthentication.FederationConfigurationCreated?displayProperty=nameWithType>イベントまたはその設定またはを通じて直接アクセスできる、<xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A?displayProperty=nameWithType>プロパティです。  
  
   
  
## Examples  
 次の例の構成の種類のカスタム クッキー ハンドラーを使用して、SAM`MyNamespace.MyCustomCookieHandler`です。  
  
```xml  
<cookieHandler mode="Custom">  
    <customCookieHandler type="MyNamespace.MyCustomCookieHandler, MyAssembly" />  
</cookieHandler>  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CookieHandler ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初期化するために派生クラスのコンス トラクターから呼び出される、<see cref="T:System.IdentityModel.Services.CookieHandler" />クラスです。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Delete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Delete" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>既定の名前、ドメイン、およびパスが現在の要求に関連付けられた cookie を削除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 名前、ドメインおよびパスがで指定された、 <xref:System.IdentityModel.Services.CookieHandler.Name%2A>、 <xref:System.IdentityModel.Services.CookieHandler.Domain%2A>、および<xref:System.IdentityModel.Services.CookieHandler.Path%2A>プロパティです。 要求がで指定されました。<xref:System.Web.HttpContext.Current%2A?displayProperty=nameWithType>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Delete(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Delete(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Cookie の名前。</param>
        <summary>指定した名前および既定のドメインとパスを持つ現在の要求に関連付けられた cookie を削除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ドメインとパスがで指定された、<xref:System.IdentityModel.Services.CookieHandler.Domain%2A>と<xref:System.IdentityModel.Services.CookieHandler.Path%2A>プロパティです。 要求がで指定されました。<xref:System.Web.HttpContext.Current%2A?displayProperty=nameWithType>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> が <see langword="null" /> または空です。</exception>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Delete(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Delete(System.Web.HttpContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context"><see cref="T:System.Web.HttpContext" />要求します。</param>
        <summary>既定の名前、ドメイン、およびパスが現在の要求に関連付けられた cookie を削除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 名前、ドメインおよびパスがで指定された、 <xref:System.IdentityModel.Services.CookieHandler.Name%2A>、 <xref:System.IdentityModel.Services.CookieHandler.Domain%2A>、および<xref:System.IdentityModel.Services.CookieHandler.Path%2A>プロパティです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete (string name, System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Delete(string name, class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Delete(System.String,System.Web.HttpContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="name">Cookie の名前。</param>
        <param name="context"><see cref="T:System.Web.HttpContext" />要求します。</param>
        <summary>指定した名前および既定のドメインとパスを持つ指定された要求に関連付けられた cookie を削除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ドメインとパスがで指定された、<xref:System.IdentityModel.Services.CookieHandler.Domain%2A>と<xref:System.IdentityModel.Services.CookieHandler.Path%2A>プロパティです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> が <see langword="null" /> または空です。</exception>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete (string name, string path, string domain, System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Delete(string name, string path, string domain, class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Delete(System.String,System.String,System.String,System.Web.HttpContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="domain" Type="System.String" />
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="name">Cookie の名前。</param>
        <param name="path">Cookie のパスです。</param>
        <param name="domain">Cookie のドメイン</param>
        <param name="context"><see cref="T:System.Web.HttpContext" />の要求</param>
        <summary>指定された名前、パス、およびドメインを持つ指定された要求に関連付けられた cookie を削除します。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> が <see langword="null" /> または空です。</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteCore">
      <MemberSignature Language="C#" Value="protected abstract void DeleteCore (string name, string path, string domain, System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void DeleteCore(string name, string path, string domain, class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.DeleteCore(System.String,System.String,System.String,System.Web.HttpContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="domain" Type="System.String" />
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="name">Cookie の名前</param>
        <param name="path">Cookie のパス</param>
        <param name="domain">Cookie のドメイン</param>
        <param name="context"><see cref="T:System.Web.HttpContext" />要求します。</param>
        <summary>派生クラスでオーバーライドされると、指定された名前、ドメイン、およびパスが指定された要求に関連付けられた cookie を削除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 オーバー ロードされたから呼び出される<xref:System.IdentityModel.Services.CookieHandler.Delete%2A>cookie を削除することの実際の作業を行うメソッドです。 <xref:System.IdentityModel.Services.CookieHandler.Delete%2A>メソッドは名前とパスが空でない文字列があることを確認します。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>このメソッドをオーバーライドする必要があります。 実装では、開発者の次第です。 実装がで指定された cookie を置き換える一般的なケースで、<see cref="P:System.Web.HttpResponse.Cookies" />を持つ cookie のコレクション<see langword="null" />データと、現在の時刻より前ただし、この要件ではありませんが設定されている有効期限時刻を取得します。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Domain">
      <MemberSignature Language="C#" Value="public virtual string Domain { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Domain" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.CookieHandler.Domain" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または cookie に使用するドメインを設定します。</summary>
        <value>Cookie に使用するドメインです。 既定値は、<see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.HttpCookie.Domain%2A?displayProperty=nameWithType> プロパティに対応します。  
  
 指定して、プロパティを初期化することができます、`domain`属性を[ &lt;cookieHandler&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md)構成内の要素。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HideFromClientScript">
      <MemberSignature Language="C#" Value="public virtual bool HideFromClientScript { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HideFromClientScript" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.CookieHandler.HideFromClientScript" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはクライアント スクリプトから cookie を非表示にするかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" />cookie がクライアント スクリプトから非表示にする場合それ以外の場合、<see langword="false" />です。 既定値は、<see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ハンドラーによって書き込まれた cookie の Set-cookie ヘッダーに"HttpOnly"フラグが出力されるかどうかを制御します。 一部の web ブラウザーでは、cookie の値へのアクセスをクライアント側スクリプトを保持することでこのフラグが無視されます。  
  
 このプロパティに対応、<xref:System.Web.HttpCookie.HttpOnly%2A?displayProperty=nameWithType>プロパティです。  
  
 指定して、プロパティを初期化することができます、`hideFromScript`属性を[ &lt;cookieHandler&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md)構成内の要素。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MatchCookiePath">
      <MemberSignature Language="C#" Value="public virtual string MatchCookiePath (Uri baseUri, Uri targetUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string MatchCookiePath(class System.Uri baseUri, class System.Uri targetUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.MatchCookiePath(System.Uri,System.Uri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseUri" Type="System.Uri" />
        <Parameter Name="targetUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="baseUri">要求のベース URL。</param>
        <param name="targetUri">一致するように URL</param>
        <summary>対象となるドメイン cookie ドメイン内では、ターゲット パスは、cookie パス内に場合、は、クッキーのパス部分の大文字と小文字を照合します。</summary>
        <returns><see cref="T:System.String" /> を返します。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.CookieHandler.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはハンドラーによって書き込まれた cookie のベース名を設定します。</summary>
        <value>クッキーに使用する基本名です。 既定値は、"FedAuth"です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティに対応、<xref:System.Web.HttpCookie.Name%2A?displayProperty=nameWithType>プロパティです。  
  
 指定して、プロパティを初期化することができます、`name`属性を[ &lt;cookieHandler&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md)構成内の要素。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">設定の試行、<see langword="null" />または空の値が発生します。</exception>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public virtual string Path { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.CookieHandler.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはハンドラーによって書き込まれた cookie の仮想パスを設定します。</summary>
        <value>仮想パス。 既定値は、ASP.NET アプリケーションのルートです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティに対応、<xref:System.Web.HttpCookie.Path%2A?displayProperty=nameWithType>プロパティです。  
  
 指定して、プロパティを初期化することができます、`path`属性を[ &lt;cookieHandler&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md)構成内の要素。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">設定の試行、<see langword="null" />または空の値が発生します。</exception>
      </Docs>
    </Member>
    <Member MemberName="PersistentSessionLifetime">
      <MemberSignature Language="C#" Value="public virtual Nullable&lt;TimeSpan&gt; PersistentSessionLifetime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; PersistentSessionLifetime" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.CookieHandler.PersistentSessionLifetime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.TimeSpan&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>永続的なセッションの有効期間。 0 の場合、一時的なセッションは常に使用します。</summary>
        <value>セッションの有効期間。 既定値は、<see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 永続的なセッション チケットは、web ブラウザーを閉じて、再び開いた後に、サインイン セッションを続行ことがあり、ファイル ベースの cookie に格納されます。  
  
 このプロパティは、設定に使用される、<xref:System.Web.HttpCookie.Expires%2A?displayProperty=nameWithType>プロパティです。  
  
 指定して、プロパティを初期化することができます、`persistentSessionLifetime`属性を[ &lt;cookieHandler&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md)構成内の要素。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">0 より小さい値を指定するとします。</exception>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public byte[] Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Read() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Read" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>既定の名前を持つ現在の要求に関連付けられているクッキーを読み取ります。</summary>
        <returns>Cookie の値または<see langword="null" />場合は、cookie が見つかりませんでした。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 指定された cookie の名前、<xref:System.IdentityModel.Services.CookieHandler.Name%2A>プロパティです。 要求がで指定された<xref:System.Web.HttpContext.Current%2A?displayProperty=nameWithType>です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public byte[] Read (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Read(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Read(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">読み取るする cookie の名前です。</param>
        <summary>指定した名前を持つ現在の要求に関連付けられているクッキーを読み取ります。</summary>
        <returns>Cookie の値または<see langword="null" />場合は、cookie が見つかりませんでした。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 要求がで指定されました。<xref:System.Web.HttpContext.Current%2A?displayProperty=nameWithType>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> が <see langword="null" /> または空です。</exception>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public byte[] Read (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Read(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Read(System.Web.HttpContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context"><see cref="T:System.Web.HttpContext" />要求します。</param>
        <summary>既定の名前、ドメイン、およびパスが現在の要求に関連付けられているクッキーを読み取ります。</summary>
        <returns>Cookie の値または<see langword="null" />場合は、cookie が見つかりませんでした。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 指定された cookie の名前、<xref:System.IdentityModel.Services.CookieHandler.Name%2A>プロパティです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public byte[] Read (string name, System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Read(string name, class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Read(System.String,System.Web.HttpContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="name">読み取るする cookie の名前です。</param>
        <param name="context"><see cref="T:System.Web.HttpContext" />要求します。</param>
        <summary>指定した名前および既定のドメインとパスを持つ指定された要求に関連付けられているクッキーを読み取ります。</summary>
        <returns>Cookie の値または<see langword="null" />場合は、cookie が見つかりませんでした。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> が <see langword="null" /> または空です。</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadCore">
      <MemberSignature Language="C#" Value="protected abstract byte[] ReadCore (string name, System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance unsigned int8[] ReadCore(string name, class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.ReadCore(System.String,System.Web.HttpContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="name">Cookie の名前</param>
        <param name="context"><see cref="T:System.Web.HttpContext" />要求します。</param>
        <summary>派生クラスでオーバーライドされると、その cookie が指定の名前を持つし、指定された要求に関連付けられています。</summary>
        <returns>Cookie の値または<see langword="null" />場合は、cookie が見つかりませんでした。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 オーバー ロードされたから呼び出される<xref:System.IdentityModel.Services.CookieHandler.Read%2A>の cookie を読み取るの実際の作業を行うメソッドです。 <xref:System.IdentityModel.Services.CookieHandler.Read%2A>メソッドが必ず`name`空でない文字列です。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>このメソッドをオーバーライドする必要があります。 実装では、開発者の次第です。 一般的な場合は、実装がから cookie のデータを読み取り、<see cref="P:System.Web.HttpRequest.Cookies" />コレクション、ただし、これは必須です。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="RequireSsl">
      <MemberSignature Language="C#" Value="public virtual bool RequireSsl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequireSsl" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.CookieHandler.RequireSsl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または SSL でのみ、クッキーを使用するかどうかを指定する値を設定します。</summary>
        <value>
          <see langword="true" />cookie です。 SSL 接続経由でのみ使用する場合それ以外の場合、<see langword="false" />です。 既定値は、<see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Set-cookie ヘッダーの「セキュリティで保護された」フラグは、書き込まれた cookie に対して生成するかどうかを制御します。 この値が場合`true`セッションの cookie のみを使用できます HTTPS 経由でします。  
  
 このプロパティに対応、<xref:System.Web.HttpCookie.Secure%2A?displayProperty=nameWithType>プロパティです。  
  
 指定して、プロパティを初期化することができます、`requireSSL`属性を[ &lt;cookieHandler&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md)構成内の要素。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (byte[] value, bool isPersistent, DateTime tokenExpirationTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write(unsigned int8[] value, bool isPersistent, valuetype System.DateTime tokenExpirationTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Write(System.Byte[],System.Boolean,System.DateTime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="isPersistent" Type="System.Boolean" />
        <Parameter Name="tokenExpirationTime" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="value">Cookie の値。</param>
        <param name="isPersistent">
          <see langword="true" />場合は、cookie が永続的です。<see langword="false" />クッキーがセッション専用の場合は、つまり、クライアントのブラウザーまでのみ有効ですが閉じられます。</param>
        <param name="tokenExpirationTime">基になるトークンの有効期限。</param>
        <summary>指定された値、永続性、および有効期限が現在の要求に関連付けられた cookie を書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 場合、`isPersistent`パラメーターは`false`、cookie の有効期限に設定されている<xref:System.DateTime?displayProperty=nameWithType>です。 場合、`isPersistent`パラメーターは`true`、cookie の有効期限がの値に設定されている、<xref:System.IdentityModel.Services.CookieHandler.PersistentSessionLifetime%2A>にない場合は、プロパティ`null`またはの場合、<xref:System.IdentityModel.Services.CookieHandler.PersistentSessionLifetime%2A>プロパティは`null`の値に有効期限が設定されている、`tokenExpirationTime`パラメーター。  
  
 Cookie の名前、ドメインおよびパスがで指定された、 <xref:System.IdentityModel.Services.CookieHandler.Name%2A>、 <xref:System.IdentityModel.Services.CookieHandler.Domain%2A>、および<xref:System.IdentityModel.Services.CookieHandler.Path%2A>プロパティです。 要求がで指定された<xref:System.Web.HttpContext.Current%2A>です。 指定された SSL 経由でのみ、クッキーを送信するかどうか、<xref:System.IdentityModel.Services.CookieHandler.RequireSsl%2A>プロパティと、cookie がクライアント側スクリプトから非表示にするかどうかがで指定された、<xref:System.IdentityModel.Services.CookieHandler.HideFromClientScript%2A>プロパティです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> が <see langword="null" /> または空です。</exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (byte[] value, string name, DateTime expirationTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write(unsigned int8[] value, string name, valuetype System.DateTime expirationTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Write(System.Byte[],System.String,System.DateTime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="expirationTime" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="value">Cookie の値。</param>
        <param name="name">Cookie の名前。</param>
        <param name="expirationTime">Cookie の有効期限または<see cref="F:System.DateTime.MinValue" />セッション (セッションのみ) の cookie。</param>
        <summary>指定された名前、値、および有効期限が現在の要求に関連付けられた cookie を書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cookie のドメインとパスがで指定された、<xref:System.IdentityModel.Services.CookieHandler.Domain%2A>と<xref:System.IdentityModel.Services.CookieHandler.Path%2A>プロパティです。 要求がで指定された<xref:System.Web.HttpContext.Current%2A?displayProperty=nameWithType>です。  要求がで指定された<xref:System.Web.HttpContext.Current%2A>です。 指定された SSL 経由でのみ、クッキーを送信するかどうか、<xref:System.IdentityModel.Services.CookieHandler.RequireSsl%2A>プロパティと、cookie がクライアント側スクリプトから非表示にするかどうかがで指定された、<xref:System.IdentityModel.Services.CookieHandler.HideFromClientScript%2A>プロパティです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> が <see langword="null" /> または空です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> が <see langword="null" /> または空です。</exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (byte[] value, string name, DateTime expirationTime, System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write(unsigned int8[] value, string name, valuetype System.DateTime expirationTime, class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Write(System.Byte[],System.String,System.DateTime,System.Web.HttpContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="expirationTime" Type="System.DateTime" />
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="value">Cookie の値。</param>
        <param name="name">Cookie の名前。</param>
        <param name="expirationTime">Cookie の有効期限または<see cref="F:System.DateTime.MinValue" />セッション (セッションのみ) の cookie。</param>
        <param name="context"><see cref="T:System.Web.HttpContext" />要求します。</param>
        <summary>指定された名前、値、および有効期限を持つ指定された要求に関連付けられた cookie を書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cookie のドメインとパスがで指定された、<xref:System.IdentityModel.Services.CookieHandler.Domain%2A>と<xref:System.IdentityModel.Services.CookieHandler.Path%2A>プロパティです。 要求がで指定された<xref:System.Web.HttpContext.Current%2A>です。 指定された SSL 経由でのみ、クッキーを送信するかどうか、<xref:System.IdentityModel.Services.CookieHandler.RequireSsl%2A>プロパティと、cookie がクライアント側スクリプトから非表示にするかどうかがで指定された、<xref:System.IdentityModel.Services.CookieHandler.HideFromClientScript%2A>プロパティです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> が <see langword="null" /> または空です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> が <see langword="null" /> または空です。</exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (byte[] value, string name, string path, string domain, DateTime expirationTime, bool requiresSsl, bool hideFromClientScript, System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write(unsigned int8[] value, string name, string path, string domain, valuetype System.DateTime expirationTime, bool requiresSsl, bool hideFromClientScript, class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Write(System.Byte[],System.String,System.String,System.String,System.DateTime,System.Boolean,System.Boolean,System.Web.HttpContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="domain" Type="System.String" />
        <Parameter Name="expirationTime" Type="System.DateTime" />
        <Parameter Name="requiresSsl" Type="System.Boolean" />
        <Parameter Name="hideFromClientScript" Type="System.Boolean" />
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="value">Cookie の値。</param>
        <param name="name">Cookie の名前。</param>
        <param name="path">Cookie のパス</param>
        <param name="domain">Cookie のドメイン</param>
        <param name="expirationTime">Cookie の有効期限または<see cref="F:System.DateTime.MinValue" />セッション (セッションのみ) の cookie。</param>
        <param name="requiresSsl">
          <see langword="true" />cookie です。 SSL 接続経由でのみ使用する場合それ以外の場合、<see langword="false" />です。</param>
        <param name="hideFromClientScript">
          <see langword="true" />cookie がクライアント スクリプトから非表示にする場合それ以外の場合、<see langword="false" />です。</param>
        <param name="context"><see cref="T:System.Web.HttpContext" />要求します。</param>
        <summary>指定された名前、値、ドメイン、パス、有効期限、および可視性を持つ指定された要求に関連付けられた cookie を書き込みます。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> が <see langword="null" /> または空です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> が <see langword="null" /> または空です。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteCore">
      <MemberSignature Language="C#" Value="protected abstract void WriteCore (byte[] value, string name, string path, string domain, DateTime expirationTime, bool secure, bool httpOnly, System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void WriteCore(unsigned int8[] value, string name, string path, string domain, valuetype System.DateTime expirationTime, bool secure, bool httpOnly, class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.WriteCore(System.Byte[],System.String,System.String,System.String,System.DateTime,System.Boolean,System.Boolean,System.Web.HttpContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="domain" Type="System.String" />
        <Parameter Name="expirationTime" Type="System.DateTime" />
        <Parameter Name="secure" Type="System.Boolean" />
        <Parameter Name="httpOnly" Type="System.Boolean" />
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="value">Cookie の値。</param>
        <param name="name">Cookie の名前。</param>
        <param name="path">Cookie のパス</param>
        <param name="domain">Cookie のドメイン</param>
        <param name="expirationTime">Cookie の有効期限または<see cref="F:System.DateTime.MinValue" />セッション (セッションのみ) の cookie。</param>
        <param name="secure">
          <see langword="true" />cookie です。 SSL 接続経由でのみ使用する場合それ以外の場合、<see langword="false" />です。</param>
        <param name="httpOnly">
          <see langword="true" />cookie がクライアント スクリプトから非表示にする場合それ以外の場合、<see langword="false" />です。</param>
        <param name="context"><see cref="T:System.Web.HttpContext" />要求します。</param>
        <summary>派生クラスでオーバーライドされると、指定された名前、値、ドメイン、パス、有効期限、持続性と可視性を持つ指定された要求に関連付けられた cookie を書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 オーバー ロードされたから呼び出される<xref:System.IdentityModel.Services.CookieHandler.Write%2A>cookie の書き込みの実際の作業を行うメソッドです。 <xref:System.IdentityModel.Services.CookieHandler.Write%2A>メソッドが必ず`value`は空でないバイト配列とを`name`と`path`空の文字列です。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>このメソッドをオーバーライドする必要があります。 実装では、開発者の次第です。 一般的な場合は、実装が cookie データを書き込む、<see cref="P:System.Web.HttpResponse.Cookies" />コレクション、ただし、これは必須です。 1 つまたは複数の同等のプロパティを設定するメソッドのパラメーターの大部分が用いられます<see cref="T:System.Web.HttpCookie" />オブジェクト。</para>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>
