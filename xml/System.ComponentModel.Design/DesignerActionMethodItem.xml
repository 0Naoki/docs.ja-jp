<Type Name="DesignerActionMethodItem" FullName="System.ComponentModel.Design.DesignerActionMethodItem">
  <TypeSignature Language="C#" Value="public class DesignerActionMethodItem : System.ComponentModel.Design.DesignerActionItem" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DesignerActionMethodItem extends System.ComponentModel.Design.DesignerActionItem" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.DesignerActionMethodItem" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Design.DesignerActionItem</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>派生したクラスのメソッドに関連付けられているスマート タグ パネルのアイテムを表す<see cref="T:System.ComponentModel.Design.DesignerActionList" />です。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.DesignerActionMethodItem>クラスは、スマート タグ パネル内の各項目を表します。 派生したクラスで、プログラマが指定したメソッドを呼び出す、ハイパーリンクなど、アクティブなユーザー インターフェイス要素としてこの型の項目が表示される<xref:System.ComponentModel.Design.DesignerActionList>です。 値を使用して、アイテムと、メソッドの間の関連付けを維持、<xref:System.ComponentModel.Design.DesignerActionMethodItem.MemberName%2A>プロパティです。 メソッドは、この項目を起動する必要がありますパラメーターを受け取るでも、値を返します。  
  
 呼び出しによって、パネルを形成する関連付けられている個々 のパネルの項目、<xref:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems%2A>のメソッド、<xref:System.ComponentModel.Design.DesignerActionList>クラスです。  
  
   
  
## Examples  
 次のコード例は、のコレクションを作成する方法を示します<xref:System.ComponentModel.Design.DesignerActionItem>オブジェクト。  
  
 スマート タグを実装する完全な例を参照してください。[する方法: Windows フォームのコンポーネントにスマート タグを添付](http://msdn.microsoft.com/library/42cc4a0c-9ab3-47e1-93b8-03b6a6ccf233)です。  
  
 [!code-csharp[System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent/CS/smarttags.cs#7)]
 [!code-vb[System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent/VB/smarttags.vb#7)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignerActionMethodItem (System.ComponentModel.Design.DesignerActionList actionList, string memberName, string displayName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.Design.DesignerActionList actionList, string memberName, string displayName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="actionList" Type="System.ComponentModel.Design.DesignerActionList" />
        <Parameter Name="memberName" Type="System.String" />
        <Parameter Name="displayName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="actionList"><see cref="T:System.ComponentModel.Design.DesignerActionList" />この項目に関連付けられているメソッドを格納しています。</param>
        <param name="memberName">派生したクラスのメソッドの名前<see cref="T:System.ComponentModel.Design.DesignerActionList" />パネルのアイテムによって起動します。</param>
        <param name="displayName">この項目のパネルのテキストです。</param>
        <summary>新しいインスタンスを初期化、<see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" />クラス、指定されたメソッドを使用し、表示名。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.DesignerActionMethodItem.%23ctor%2A>コンス トラクターのセット、<xref:System.ComponentModel.Design.DesignerActionItem.Category%2A>と<xref:System.ComponentModel.Design.DesignerActionItem.Description%2A>プロパティ`null`、および<xref:System.ComponentModel.Design.DesignerActionMethodItem.IncludeAsDesignerVerb%2A>プロパティを`false`です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignerActionMethodItem (System.ComponentModel.Design.DesignerActionList actionList, string memberName, string displayName, bool includeAsDesignerVerb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.Design.DesignerActionList actionList, string memberName, string displayName, bool includeAsDesignerVerb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.Boolean)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="actionList" Type="System.ComponentModel.Design.DesignerActionList" />
        <Parameter Name="memberName" Type="System.String" />
        <Parameter Name="displayName" Type="System.String" />
        <Parameter Name="includeAsDesignerVerb" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="actionList"><see cref="T:System.ComponentModel.Design.DesignerActionList" />この項目に関連付けられているメソッドを格納しています。</param>
        <param name="memberName">派生したクラスのメソッドの名前<see cref="T:System.ComponentModel.Design.DesignerActionList" />パネルのアイテムによって起動します。</param>
        <param name="displayName">この項目のパネルのテキストです。</param>
        <param name="includeAsDesignerVerb">デザイナー動詞としても関連付けられているメソッドを処理するかどうかを指定するフラグ。</param>
        <summary>新しいインスタンスを初期化、<see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" />クラス、指定されたメソッドを使用し、名前、およびその他のユーザー インターフェイスのコンテキストで、項目が表示されるかどうかを示すフラグを表示します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 場合、`includeAsDesignerVerb`にパラメーターが設定されている`true`は、この項目も考慮し、 <xref:System.ComponentModel.Design.DesignerVerb>。 したがって、コンポーネントのデザイン時のショートカット メニューに追加されます。 [!INCLUDE[vsprvs](~/includes/vsprvs-md.md)]のコマンドにも追加されます、**属性**プロパティ] ウィンドウのウィンドウ。 デザイナー動詞の一覧は、デザイナーのを介してアクセスできる<xref:System.ComponentModel.Design.ComponentDesigner.Verbs%2A>コレクション プロパティです。  
  
 <xref:System.ComponentModel.Design.DesignerActionMethodItem.%23ctor%2A>コンス トラクターのセット、<xref:System.ComponentModel.Design.DesignerActionItem.Category%2A>と<xref:System.ComponentModel.Design.DesignerActionItem.Description%2A>プロパティ`null`です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignerActionMethodItem (System.ComponentModel.Design.DesignerActionList actionList, string memberName, string displayName, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.Design.DesignerActionList actionList, string memberName, string displayName, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="actionList" Type="System.ComponentModel.Design.DesignerActionList" />
        <Parameter Name="memberName" Type="System.String" />
        <Parameter Name="displayName" Type="System.String" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="actionList"><see cref="T:System.ComponentModel.Design.DesignerActionList" />この項目に関連付けられているメソッドを格納しています。</param>
        <param name="memberName">派生したクラスのメソッドの名前<see cref="T:System.ComponentModel.Design.DesignerActionList" />パネルのアイテムによって起動します。</param>
        <param name="displayName">この項目のパネルのテキストです。</param>
        <param name="category">大文字小文字を区別、<see cref="T:System.String" />パネルに類似した項目をグループ化するために使用します。</param>
        <summary>新しいインスタンスを初期化、<see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" />クラスに指定されたメソッド、表示、およびカテゴリ名。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.DesignerActionMethodItem.%23ctor%2A>コンス トラクターのセット、<xref:System.ComponentModel.Design.DesignerActionItem.Description%2A>プロパティを`null`と<xref:System.ComponentModel.Design.DesignerActionMethodItem.IncludeAsDesignerVerb%2A>プロパティを`false`です。  
  
 方法の詳細については`category`をパネルに項目をグループ化を参照してパラメーターを使用、<xref:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems%2A>メソッドです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignerActionMethodItem (System.ComponentModel.Design.DesignerActionList actionList, string memberName, string displayName, string category, bool includeAsDesignerVerb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.Design.DesignerActionList actionList, string memberName, string displayName, string category, bool includeAsDesignerVerb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.String,System.Boolean)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="actionList" Type="System.ComponentModel.Design.DesignerActionList" />
        <Parameter Name="memberName" Type="System.String" />
        <Parameter Name="displayName" Type="System.String" />
        <Parameter Name="category" Type="System.String" />
        <Parameter Name="includeAsDesignerVerb" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="actionList"><see cref="T:System.ComponentModel.Design.DesignerActionList" />この項目に関連付けられているメソッドを格納しています。</param>
        <param name="memberName">派生したクラスのメソッドの名前<see cref="T:System.ComponentModel.Design.DesignerActionList" />パネルのアイテムによって起動します。</param>
        <param name="displayName">この項目のパネルのテキストです。</param>
        <param name="category">大文字小文字を区別、<see cref="T:System.String" />パネルに類似した項目をグループ化するために使用します。</param>
        <param name="includeAsDesignerVerb">また、関連するコンポーネントのデザイナー動詞として関連付けられたメソッドを処理するかどうかを指定するフラグ。</param>
        <summary>新しいインスタンスを初期化、<see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" />クラスに、指定されたメソッド、表示、およびカテゴリ名、およびその他のユーザー インターフェイスのコンテキストで、項目が表示されるかどうかを示すフラグ。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 場合、`includeAsDesignerVerb`にパラメーターが設定されている`true`、アイテムも考慮し、<xref:System.ComponentModel.Design.DesignerVerb>です。 そのため、これは、コンポーネントのデザイン時のショートカット メニューに追加します。 デザイナー動詞の一覧は、デザイナーのを介してアクセスできる<xref:System.ComponentModel.Design.ComponentDesigner.Verbs%2A>コレクション プロパティです。  
  
 <xref:System.ComponentModel.Design.DesignerActionMethodItem.%23ctor%2A>コンス トラクターのセット、<xref:System.ComponentModel.Design.DesignerActionItem.Description%2A>プロパティを`null`です。  
  
 方法の詳細については`category`をパネルに項目をグループ化を参照してパラメーターを使用、<xref:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems%2A>メソッドです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignerActionMethodItem (System.ComponentModel.Design.DesignerActionList actionList, string memberName, string displayName, string category, string description);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.Design.DesignerActionList actionList, string memberName, string displayName, string category, string description) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.String,System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="actionList" Type="System.ComponentModel.Design.DesignerActionList" />
        <Parameter Name="memberName" Type="System.String" />
        <Parameter Name="displayName" Type="System.String" />
        <Parameter Name="category" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="actionList"><see cref="T:System.ComponentModel.Design.DesignerActionList" />この項目に関連付けられているメソッドを格納しています。</param>
        <param name="memberName">派生したクラスのメソッドの名前<see cref="T:System.ComponentModel.Design.DesignerActionList" />パネルのアイテムによって起動します。</param>
        <param name="displayName">この項目のパネルのテキストです。</param>
        <param name="category">大文字小文字を区別、<see cref="T:System.String" />パネルに類似した項目をグループ化するために使用します。</param>
        <param name="description">ツールヒントやステータス バーで使用される、この項目用の補足のテキスト。</param>
        <summary>新しいインスタンスを初期化、<see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" />クラス、メソッドおよびカテゴリの名前を指定したと表示テキストと説明テキストを使用します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.DesignerActionMethodItem.%23ctor%2A>コンス トラクターのセット、<xref:System.ComponentModel.Design.DesignerActionMethodItem.IncludeAsDesignerVerb%2A>プロパティを`false`です。  
  
 方法の詳細については`category`をパネルに項目をグループ化を参照してパラメーターを使用、<xref:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems%2A>メソッドです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignerActionMethodItem (System.ComponentModel.Design.DesignerActionList actionList, string memberName, string displayName, string category, string description, bool includeAsDesignerVerb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.Design.DesignerActionList actionList, string memberName, string displayName, string category, string description, bool includeAsDesignerVerb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.String,System.String,System.Boolean)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="actionList" Type="System.ComponentModel.Design.DesignerActionList" />
        <Parameter Name="memberName" Type="System.String" />
        <Parameter Name="displayName" Type="System.String" />
        <Parameter Name="category" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="includeAsDesignerVerb" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="actionList"><see cref="T:System.ComponentModel.Design.DesignerActionList" />この項目に関連付けられているメソッドを格納しています。</param>
        <param name="memberName">派生したクラスのメソッドの名前<see cref="T:System.ComponentModel.Design.DesignerActionList" />パネルのアイテムによって起動します。</param>
        <param name="displayName">この項目のパネルのテキストです。</param>
        <param name="category">大文字小文字を区別、<see cref="T:System.String" />パネルに類似した項目をグループ化するために使用します。</param>
        <param name="description">ツールヒントやステータス バーで使用される、この項目用の補足のテキスト。</param>
        <param name="includeAsDesignerVerb">また、関連するコンポーネントのデザイナー動詞として関連付けられたメソッドを処理するかどうかを指定するフラグ。</param>
        <summary>新しいインスタンスを初期化、<see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" />クラスに指定されたメソッドとカテゴリ名、表示と説明テキスト、およびその他のユーザー インターフェイスのコンテキストで、項目が表示されるかどうかを示すフラグ。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 場合、`includeAsDesignerVerb`にパラメーターが設定されている`true`は、この項目も考慮し、 <xref:System.ComponentModel.Design.DesignerVerb>。 したがって、コンポーネントのデザイン時のショートカット メニューに追加されます。 デザイナー動詞の一覧は、デザイナーのを介してアクセスできる<xref:System.ComponentModel.Design.ComponentDesigner.Verbs%2A>コレクション プロパティです。  
  
 方法の詳細については`category`をパネルに項目をグループ化を参照してパラメーターを使用、<xref:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems%2A>メソッドです。  
  
   
  
## Examples  
 次のコード例は、のコレクションを作成する方法を示します<xref:System.ComponentModel.Design.DesignerActionItem>オブジェクト。  
  
 スマート タグを実装する完全な例を参照してください。[する方法: Windows フォームのコンポーネントにスマート タグを添付](http://msdn.microsoft.com/library/42cc4a0c-9ab3-47e1-93b8-03b6a6ccf233)です。  
  
 [!code-csharp[System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent/CS/smarttags.cs#7)]
 [!code-vb[System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent/VB/smarttags.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeAsDesignerVerb">
      <MemberSignature Language="C#" Value="public virtual bool IncludeAsDesignerVerb { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeAsDesignerVerb" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.DesignerActionMethodItem.IncludeAsDesignerVerb" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>示す値を取得、<see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" />他のユーザー インターフェイスのコンテキストで表示する必要があります。</summary>
        <value>
          <see langword="true" />項目のショートカット メニューで使用する場合それ以外の場合、<see langword="false" />です。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 場合、<xref:System.ComponentModel.Design.DesignerActionMethodItem.IncludeAsDesignerVerb%2A>プロパティに設定されている`true`、アイテムもと見なされます、 <xref:System.ComponentModel.Design.DesignerVerb>。 したがって、コンポーネントのデザイン時のショートカット メニューに追加されます。 デザイナー動詞の一覧は、デザイナーのを介してアクセスできる<xref:System.ComponentModel.Design.ComponentDesigner.Verbs%2A>コレクション プロパティです。  
  
 値、<xref:System.ComponentModel.Design.DesignerActionMethodItem.IncludeAsDesignerVerb%2A>プロパティはこのクラスのコンス トラクターで設定します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public virtual void Invoke ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Invoke() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerActionMethodItem.Invoke" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>プログラムに関連付けられているメソッドを実行、<see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" />です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 場合、<xref:System.ComponentModel.Design.DesignerActionMethodItem.IncludeAsDesignerVerb%2A>プロパティに初期化`true`、関連付けられたメソッドは、対応するデザイナー動詞イベントを通じて呼び出すこともできます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">という名前で、メソッド<see cref="P:System.ComponentModel.Design.DesignerActionMethodItem.MemberName" />が見つかりません。</exception>
      </Docs>
    </Member>
    <Member MemberName="MemberName">
      <MemberSignature Language="C#" Value="public virtual string MemberName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MemberName" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.DesignerActionMethodItem.MemberName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>メソッドの名前を取得この<see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" />に関連付けられています。</summary>
        <value>A<see cref="T:System.String" />関連付けられているメソッドの名前を格納しています。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.DesignerActionMethodItem.MemberName%2A>から派生したクラスでプロパティを指定、プロパティ、<xref:System.ComponentModel.Design.DesignerActionList>クラスは、アイテムをバインドする必要があります。 プログラマは、ユーザー インターフェイス (UI) を介してパネルの項目と対話する、ときに、この関連付けられているプロパティが設定されます。  
  
 バインドされたメソッドは必要がありますパラメーターを受け取るも、値を返します。  
  
 このプロパティは、コンストラクターで設定されます。 このコマンドは、大文字小文字を区別します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RelatedComponent">
      <MemberSignature Language="C#" Value="public System.ComponentModel.IComponent RelatedComponent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.IComponent RelatedComponent" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.DesignerActionMethodItem.RelatedComponent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IComponent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定を提供するコンポーネントの<see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" />オブジェクトを現在のパネルです。</summary>
        <value>関係しているコンポーネント、アイテムを提供する関連付けられたデザイナーを持つ必要があります。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.DesignerActionPropertyItem.RelatedComponent%2A>プロパティを使用すると、別のコンポーネントでのスマート タグ パネルの項目を現在の一覧に貸与することです。 たとえば、ユーザー コントロールは、その構成要素である標準コントロールのいずれかから項目を集約する可能性があります。  
  
 このプロパティは機能と組み合わせて、<xref:System.ComponentModel.Design.DesignerActionItem.AllowAssociate%2A?displayProperty=nameWithType>プロパティです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
