<Type Name="ImportManyAttribute" FullName="System.ComponentModel.Composition.ImportManyAttribute">
  <TypeSignature Language="C#" Value="public class ImportManyAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ImportManyAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Composition.ImportManyAttribute" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.Composition</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Property | System.AttributeTargets.Field | System.AttributeTargets.Parameter, AllowMultiple=false, Inherited=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>すべての一致するエクスポートによってプロパティ、フィールド、またはパラメーターを設定する必要があることを指定、<see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />オブジェクト。</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImportManyAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ImportManyAttribute.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>新しいインスタンスを初期化、<see cref="T:System.ComponentModel.Composition.ImportManyAttribute" />クラス、一連のコントラクト名を持つエクスポートをインポートします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コントラクト名は、呼び出しの結果、<xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A>プロパティ、フィールド、またはこの属性でマークされているパラメーターの型のメソッドです。  
  
 使用して、コントラクト名を比較、<xref:System.StringComparer.Ordinal%2A>大文字と小文字、非言語的な比較を実行するプロパティです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImportManyAttribute (string contractName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string contractName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ImportManyAttribute.#ctor(System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contractName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="contractName">インポート、エクスポートのコントラクト名または<see langword="null" />または空の文字列 ("")、コントラクト名を使用します。</param>
        <summary>新しいインスタンスを初期化、<see cref="T:System.ComponentModel.Composition.ImportManyAttribute" />クラス、指定したコントラクト名を持つエクスポートの設定をインポートします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コントラクト名は、呼び出しの結果、<xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A>この属性でマークされているプロパティ、フィールド、またはパラメーターの型のメソッドです。  
  
 使用して、コントラクト名を比較、<xref:System.StringComparer.Ordinal%2A>大文字と小文字、非言語的な比較を実行するプロパティです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImportManyAttribute (Type contractType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type contractType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ImportManyAttribute.#ctor(System.Type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contractType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="contractType">インポート、エクスポートのコントラクト名を派生元の型または<see langword="null" />コントラクト名を使用します。</param>
        <summary>新しいインスタンスを初期化、<see cref="T:System.ComponentModel.Composition.ImportManyAttribute" />指定した型から派生したクラス、コントラクト名を持つエクスポートの設定をインポートします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コントラクト名は、呼び出しの結果、<xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A>メソッド`contractType`です。  
  
 コントラクト名は、呼び出しの結果、<xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A>この属性でマークされているプロパティ、フィールド、またはパラメーターの型のメソッドです。  
  
 使用して、コントラクト名を比較、<xref:System.StringComparer.Ordinal%2A>大文字と小文字、非言語的な比較を実行するプロパティです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImportManyAttribute (string contractName, Type contractType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string contractName, class System.Type contractType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ImportManyAttribute.#ctor(System.String,System.Type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contractName" Type="System.String" />
        <Parameter Name="contractType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="contractName">インポート、エクスポートのコントラクト名または<see langword="null" />または空の文字列 ("")、コントラクト名を使用します。</param>
        <param name="contractType">インポートするエクスポートの型。</param>
        <summary>新しいインスタンスを初期化、<see cref="T:System.ComponentModel.Composition.ImportManyAttribute" />クラス、指定したコントラクト名とコントラクト型とエクスポートの設定をインポートします。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowRecomposition">
      <MemberSignature Language="C#" Value="public bool AllowRecomposition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowRecomposition" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.ImportManyAttribute.AllowRecomposition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または照合を提供するエクスポートのコントラクトの変更時に、装飾されたプロパティまたはフィールドを再構成するかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" />プロパティまたはフィールドにできるように再構成のエクスポートを提供する、同じ場合<see cref="P:System.ComponentModel.Composition.ImportManyAttribute.ContractName" />が追加または削除、 <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />、それ以外の<see langword="false" />します。  
  
 既定値は <see langword="false" /> です。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContractName">
      <MemberSignature Language="C#" Value="public string ContractName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContractName" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.ImportManyAttribute.ContractName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>インポートするエクスポートのコントラクト名を取得します。</summary>
        <value>インポートするエクスポートのコントラクト名。 既定値は、空の文字列 ("") です。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContractType">
      <MemberSignature Language="C#" Value="public Type ContractType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ContractType" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.ImportManyAttribute.ContractType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>インポートするエクスポートのコントラクト型を取得します。</summary>
        <value>このインポートで想定されているエクスポートの型。 既定値は<see langword="null" />型は、このインポートに関連付けられているメンバーの種類を調べることで取得ことを意味します。 型の場合<see cref="T:System.Object" />インポートには、エクスポートされた型が一致します。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiredCreationPolicy">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Composition.CreationPolicy RequiredCreationPolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ComponentModel.Composition.CreationPolicy RequiredCreationPolicy" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.ImportManyAttribute.RequiredCreationPolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.CreationPolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>インポーターが特定する必要があるかを示す値を取得または<see cref="T:System.ComponentModel.Composition.CreationPolicy" />このインポートを満たすために使用するエクスポートします。</summary>
        <value>次のいずれかの値です。  
  
 <see cref="F:System.ComponentModel.Composition.CreationPolicy.Any" />、インポーターは、固有の仕様を必要としない場合<see cref="T:System.ComponentModel.Composition.CreationPolicy" />です。 既定値です。  
  
 <see cref="F:System.ComponentModel.Composition.CreationPolicy.Shared" />使用されているすべてのエクスポートがコンテナー内のすべてのパートで共有されることを要求します。  
  
 <see cref="F:System.ComponentModel.Composition.CreationPolicy.NonShared" />使用されるすべてのエクスポートは、コンテナーで共有する必要があります。 この場合、各部分は、独自のインスタンスを受け取ります。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Composition.ImportSource Source { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ComponentModel.Composition.ImportSource Source" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.ImportManyAttribute.Source" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.ImportSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または、このインポートを満たすことがあります、スコープを指定する値を設定します。</summary>
        <value>このインポートを満たすことがあります、スコープを指定する値。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
