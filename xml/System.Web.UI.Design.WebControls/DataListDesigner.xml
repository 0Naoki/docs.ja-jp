<Type Name="DataListDesigner" FullName="System.Web.UI.Design.WebControls.DataListDesigner">
  <TypeSignature Language="C#" Value="public class DataListDesigner : System.Web.UI.Design.WebControls.BaseDataListDesigner" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataListDesigner extends System.Web.UI.Design.WebControls.BaseDataListDesigner" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Design.WebControls.DataListDesigner" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Design.WebControls.BaseDataListDesigner</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Web.UI.Design.SupportsPreviewControl(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><see cref="T:System.Web.UI.WebControls.DataList" /> Web サーバー コントロールのデザイン時の動作を拡張します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例を拡張する方法を示しています、<xref:System.Web.UI.Design.WebControls.DataListDesigner>クラスです。 コードよりも優先、 <xref:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml%2A> 5 ポイントの罫線を表示するメソッドを紫色の場合は、<xref:System.Web.UI.WebControls.DataList>制御を有効にします。  
  
 [!code-csharp[DataGriddesigner_Sample2#10](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridDesigner_Sample2/CS/SimpleGridView.cs#10)]  
[!code-csharp[DataGriddesigner_Sample2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridDesigner_Sample2/CS/SimpleGridView.cs#1)]
[!code-vb[DataGriddesigner_Sample2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridDesigner_Sample2/VB/SimpleGridView.vb#1)]  
  
 次のコード例を使用する方法を示しています、<xref:System.ComponentModel.DesignerAttribute>を使用してデザイナーを関連付けるには、<xref:System.Web.UI.WebControls.DataList>コントロール。  
  
 [!code-csharp[DataGridDesigner_Sample2#6](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridDesigner_Sample2/CS/SimpleGridView.cs#6)]
 [!code-vb[DataGridDesigner_Sample2#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridDesigner_Sample2/VB/SimpleGridView.vb#6)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataListDesigner ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebControls.DataListDesigner.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.Design.WebControls.DataListDesigner" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowResize">
      <MemberSignature Language="C#" Value="public override bool AllowResize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowResize" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.WebControls.DataListDesigner.AllowResize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>示す値を取得するかどうか、<see cref="T:System.Web.UI.WebControls.DataList" />コントロールのサイズを変更します。</summary>
        <value>
          <see langword="true" />データの一覧のテンプレートがある場合それ以外の場合、<see langword="false" />です。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoFormats">
      <MemberSignature Language="C#" Value="public override System.Web.UI.Design.DesignerAutoFormatCollection AutoFormats { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Design.DesignerAutoFormatCollection AutoFormats" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.WebControls.DataListDesigner.AutoFormats" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.DesignerAutoFormatCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得、<see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" />このデザイナーと関連付けられているオブジェクト。</summary>
        <value>このデザイナーと関連付けられた <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateTemplateEditingFrame">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.Design.ITemplateEditingFrame CreateTemplateEditingFrame (System.Web.UI.Design.TemplateEditingVerb verb);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.Design.ITemplateEditingFrame CreateTemplateEditingFrame(class System.Web.UI.Design.TemplateEditingVerb verb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebControls.DataListDesigner.CreateTemplateEditingFrame(System.Web.UI.Design.TemplateEditingVerb)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use of this method is not recommended because template editing is handled in ControlDesigner. To support template editing expose template data in the TemplateGroups property and call SetViewFlags(ViewFlags.TemplateEditing, true). http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.ITemplateEditingFrame</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="verb" Type="System.Web.UI.Design.TemplateEditingVerb" />
      </Parameters>
      <Docs>
        <param name="verb"><see cref="T:System.Web.UI.Design.TemplateEditingVerb" />テンプレート編集フレームを作成します。</param>
        <summary>指定された動詞を使用してフレームを編集するテンプレートを作成します。</summary>
        <returns><see cref="T:System.Web.UI.Design.ITemplateEditingFrame" /> オブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 編集フレームを使用するには、テンプレート グループおよびデザイナー編集領域を使用します。 詳細については、<xref:System.Web.UI.Design.ControlDesigner.TemplateGroups%2A> および <xref:System.Web.UI.Design.DesignerRegion> を参照してください。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebControls.DataListDesigner.Dispose(System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <see langword="true" />両方のマネージ コードとアンマネージ リソースを解放するには<see langword="false" />アンマネージ リソースだけを解放します。</param>
        <summary><see cref="T:System.Web.UI.Design.WebControls.DataListDesigner" /> オブジェクトによって使用されているアンマネージ リソースを解放します。オプションでマネージ リソースも解放できます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ときに`disposing`は`true`、<xref:System.Web.UI.Design.WebControls.DataListDesigner.Dispose%2A>メソッドは、マネージ オブジェクトによって保持されているすべてのリソースを解放します。 この<xref:System.Web.UI.Design.WebControls.DataListDesigner>オブジェクトが参照します。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><see cref="M:System.Web.UI.Design.WebControls.DataListDesigner.Dispose(System.Boolean)" />メソッドは、他のオブジェクトから複数回呼び出すことができますされます。 これをオーバーライドする場合は、事前に呼び出したで破棄されたオブジェクトを参照しないことを確認<see cref="M:System.Web.UI.Design.WebControls.DataListDesigner.Dispose(System.Boolean)" />です。 実装する方法の詳細についての<see cref="M:System.Web.UI.Design.WebControls.DataListDesigner.Dispose(System.Boolean)" />を参照してください[Dispose メソッドの実装](~/docs/standard/garbage-collection/implementing-dispose.md)です。  
  
 詳細については、<see cref="M:System.Web.UI.Design.WebControls.DataListDesigner.Dispose(System.Boolean)" />と<see cref="M:System.Object.Finalize" />メソッドを参照してください[アンマネージ リソースのクリーンアップ](~/docs/standard/garbage-collection/unmanaged.md)と[Finalize メソッドをオーバーライドする](http://msdn.microsoft.com/en-us/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)です。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetCachedTemplateEditingVerbs">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.Design.TemplateEditingVerb[] GetCachedTemplateEditingVerbs ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.Design.TemplateEditingVerb[] GetCachedTemplateEditingVerbs() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebControls.DataListDesigner.GetCachedTemplateEditingVerbs" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use of this method is not recommended because template editing is handled in ControlDesigner. To support template editing expose template data in the TemplateGroups property and call SetViewFlags(ViewFlags.TemplateEditing, true). http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.TemplateEditingVerb[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>取得キャッシュされたテンプレートは、デザイナーで使用できる動詞を編集します。</summary>
        <returns>配列<see cref="T:System.Web.UI.Design.TemplateEditingVerb" />編集動詞をデザイナーに利用できるキャッシュされたテンプレートで構成されるオブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 編集フレームを使用するには、テンプレート グループおよびデザイナー編集領域を使用します。 詳細については、<xref:System.Web.UI.Design.ControlDesigner.TemplateGroups%2A> および <xref:System.Web.UI.Design.DesignerRegion> を参照してください。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDesignTimeHtml">
      <MemberSignature Language="C#" Value="public override string GetDesignTimeHtml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetDesignTimeHtml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebControls.DataListDesigner.GetDesignTimeHtml" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>表すために使用する HTML を取得、<see cref="T:System.Web.UI.WebControls.DataList" />コントロールをデザイン時です。</summary>
        <returns>表すために使用する HTML、<see cref="T:System.Web.UI.WebControls.DataList" />コントロールをデザイン時です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例は、オーバーライドする方法を示します、<xref:System.Web.UI.Design.WebControls.DataListDesigner.GetDesignTimeHtml%2A>メソッドです。 コントロールのデザイン サーフェイスにコントロールの外観が変化<xref:System.Web.UI.WebControls.WebControl.Enabled%2A?displayProperty=nameWithType>プロパティは`true`します。  
  
 コードを使用して`Try...Catch...Finally`に、次の構文。  
  
-   `Try`セクションは、コントロールのプロパティの値を変更します。  
  
-   `Catch`セクションでは、任意の例外をキャッチしを送って、<xref:System.Web.UI.Design.WebControls.DataListDesigner.GetErrorDesignTimeHtml%2A>メソッドです。  
  
-   `Finally`セクションでは、元の値にプロパティを設定します。  
  
 このコード例に示されている例の一部である、<xref:System.Web.UI.Design.WebControls.DataListDesigner>クラスです。  
  
 [!code-csharp[DataGridDesigner_Sample2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridDesigner_Sample2/CS/SimpleGridView.cs#2)]
 [!code-vb[DataGridDesigner_Sample2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridDesigner_Sample2/VB/SimpleGridView.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEmptyDesignTimeHtml">
      <MemberSignature Language="C#" Value="protected override string GetEmptyDesignTimeHtml ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string GetEmptyDesignTimeHtml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebControls.DataListDesigner.GetEmptyDesignTimeHtml" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>デザイン時に空のテンプレートに基づくコントロールを表すために使用する HTML を取得します。</summary>
        <returns>デザイン時に空のテンプレートに基づくコントロールを表すために使用される HTML。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetErrorDesignTimeHtml">
      <MemberSignature Language="C#" Value="protected override string GetErrorDesignTimeHtml (Exception e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string GetErrorDesignTimeHtml(class System.Exception e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebControls.DataListDesigner.GetErrorDesignTimeHtml(System.Exception)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="e">発生した例外。</param>
        <summary>コントロールの表示中にエラーが発生した場合に指定された例外のデザイン時に表示する HTML を取得します。</summary>
        <returns>指定された例外のデザイン時に表示する HTML。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例は、オーバーライドする方法を示します、<xref:System.Web.UI.Design.WebControls.DataListDesigner.GetErrorDesignTimeHtml%2A>の外観を変更する方法、<xref:System.Web.UI.WebControls.DataList>例外が発生したときに、デザイン画面上のコントロールです。  
  
 このコード例に示されている例の一部である、<xref:System.Web.UI.Design.WebControls.DataListDesigner>クラスです。  
  
 [!code-csharp[DataGriddesigner_Sample2#4](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridDesigner_Sample2/CS/SimpleGridView.cs#4)]
 [!code-vb[DataGriddesigner_Sample2#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridDesigner_Sample2/VB/SimpleGridView.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTemplateContainerDataItemProperty">
      <MemberSignature Language="C#" Value="public override string GetTemplateContainerDataItemProperty (string templateName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetTemplateContainerDataItemProperty(string templateName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebControls.DataListDesigner.GetTemplateContainerDataItemProperty(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use of this method is not recommended because template editing is handled in ControlDesigner. To support template editing expose template data in the TemplateGroups property and call SetViewFlags(ViewFlags.TemplateEditing, true). http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="templateName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="templateName">テンプレートの名前。</param>
        <summary>取得、<see cref="P:System.Web.UI.WebControls.DataListItem.System#Web#UI#IDataItemContainer#DataItem" />テンプレート コンテナーのプロパティです。</summary>
        <returns><see cref="P:System.Web.UI.WebControls.DataListItem.System#Web#UI#IDataItemContainer#DataItem" />テンプレートのコンテナーのプロパティです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.WebControls.DataListDesigner.GetTemplateContainerDataItemProperty%2A>メソッドは今後使用しません。 テンプレートのメタデータにアクセスするを参照してください。<xref:System.Web.UI.Design.TemplateDefinition>です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTemplateContent">
      <MemberSignature Language="C#" Value="public override string GetTemplateContent (System.Web.UI.Design.ITemplateEditingFrame editingFrame, string templateName, out bool allowEditing);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetTemplateContent(class System.Web.UI.Design.ITemplateEditingFrame editingFrame, string templateName, [out] bool&amp; allowEditing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebControls.DataListDesigner.GetTemplateContent(System.Web.UI.Design.ITemplateEditingFrame,System.String,System.Boolean@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use of this method is not recommended because template editing is handled in ControlDesigner. To support template editing expose template data in the TemplateGroups property and call SetViewFlags(ViewFlags.TemplateEditing, true). http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="editingFrame" Type="System.Web.UI.Design.ITemplateEditingFrame" />
        <Parameter Name="templateName" Type="System.String" />
        <Parameter Name="allowEditing" Type="System.Boolean&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="editingFrame"><see cref="T:System.Web.UI.Design.ITemplateEditingFrame" />コンテンツを取得する対象のインスタンス。</param>
        <param name="templateName">テンプレートの名前。</param>
        <param name="allowEditing">
          <see langword="true" />テンプレートの内容を編集できる場合<see langword="false" />コンテンツが読み取り専用の場合。</param>
        <summary>テンプレートのコンテンツを取得します。</summary>
        <returns>テンプレートの内容。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 編集フレームを使用するには、テンプレート グループおよびデザイナー編集領域を使用します。 詳細については、<xref:System.Web.UI.Design.ControlDesigner.TemplateGroups%2A> および <xref:System.Web.UI.Design.DesignerRegion> を参照してください。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize (System.ComponentModel.IComponent component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize(class System.ComponentModel.IComponent component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebControls.DataListDesigner.Initialize(System.ComponentModel.IComponent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="component">設計中のコントロール要素。</param>
        <summary>指定されたコンポーネントと共に、デザイナーを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例は、オーバーライドする方法を示します、<xref:System.Web.UI.Design.WebControls.DataListDesigner.Initialize%2A>のインスタンスでのみ、デザイナーが初期化されていることを確認する方法、`SimpleDataList`クラスです。  
  
 このコード例に示されている例の一部である、<xref:System.Web.UI.Design.WebControls.DataListDesigner>クラスです。  
  
 [!code-csharp[DataGriddesigner_Sample2#5](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridDesigner_Sample2/CS/SimpleGridView.cs#5)]
 [!code-vb[DataGriddesigner_Sample2#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridDesigner_Sample2/VB/SimpleGridView.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSchemaRefreshed">
      <MemberSignature Language="C#" Value="protected override void OnSchemaRefreshed ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnSchemaRefreshed() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebControls.DataListDesigner.OnSchemaRefreshed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>呼ばれると、新しいスキーマに基になるコントロールのバインド先のデータのソースに読み込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 上書き、<xref:System.Web.UI.Design.WebControls.DataListDesigner.OnSchemaRefreshed%2A>新しいスキーマが利用可能になったらしなければならない場合がある追加の操作を実行するメソッド。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTemplateEditingVerbsChanged">
      <MemberSignature Language="C#" Value="protected override void OnTemplateEditingVerbsChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnTemplateEditingVerbsChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebControls.DataListDesigner.OnTemplateEditingVerbsChanged" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>テンプレート編集動詞を変更するときに呼び出されます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 編集動詞を使用するには、テンプレート グループおよびデザイナー編集領域を使用します。 詳細については、<xref:System.Web.UI.Design.ControlDesigner.TemplateGroups%2A> および <xref:System.Web.UI.Design.DesignerRegion> を参照してください。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTemplateContent">
      <MemberSignature Language="C#" Value="public override void SetTemplateContent (System.Web.UI.Design.ITemplateEditingFrame editingFrame, string templateName, string templateContent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetTemplateContent(class System.Web.UI.Design.ITemplateEditingFrame editingFrame, string templateName, string templateContent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebControls.DataListDesigner.SetTemplateContent(System.Web.UI.Design.ITemplateEditingFrame,System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use of this method is not recommended because template editing is handled in ControlDesigner. To support template editing expose template data in the TemplateGroups property and call SetViewFlags(ViewFlags.TemplateEditing, true). http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="editingFrame" Type="System.Web.UI.Design.ITemplateEditingFrame" />
        <Parameter Name="templateName" Type="System.String" />
        <Parameter Name="templateContent" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="editingFrame"><see cref="T:System.Web.UI.Design.ITemplateEditingFrame" />コンテンツを設定する対象のインスタンス。</param>
        <param name="templateName">テンプレートの名前。</param>
        <param name="templateContent">テンプレートの新しいコンテンツ。</param>
        <summary>指定されたテンプレートおよびフレームのコンテンツを設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 編集動詞を使用するには、テンプレート グループおよびデザイナー編集領域を使用します。 詳細については、<xref:System.Web.UI.Design.ControlDesigner.TemplateGroups%2A> および <xref:System.Web.UI.Design.DesignerRegion> を参照してください。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TemplatesExist">
      <MemberSignature Language="C#" Value="protected bool TemplatesExist { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TemplatesExist" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.WebControls.DataListDesigner.TemplatesExist" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>関連付けられたコントロールに対して定義されているテンプレートがあるかどうかを示す値を取得します。</summary>
        <value>
          <see langword="true" />関連付けられたコントロールが定義されているテンプレートがある場合それ以外の場合<see langword="false" />です。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
