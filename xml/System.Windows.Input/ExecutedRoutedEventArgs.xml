<Type Name="ExecutedRoutedEventArgs" FullName="System.Windows.Input.ExecutedRoutedEventArgs">
  <TypeSignature Language="C#" Value="public sealed class ExecutedRoutedEventArgs : System.Windows.RoutedEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ExecutedRoutedEventArgs extends System.Windows.RoutedEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.ExecutedRoutedEventArgs" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.RoutedEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>データを提供、<see cref="E:System.Windows.Input.CommandManager.Executed" />と<see cref="E:System.Windows.Input.CommandManager.PreviewExecuted" />イベントにルーティングします。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Input.ExecutedRoutedEventHandler>コマンドのロジックを実装するメソッドを表す、<xref:System.Windows.Input.RoutedCommand>です。  コマンドの実装ロジックを分離することにより、さまざまなソースと型から呼び出されるコマンドと、コマンド ロジックの集中管理を有効にします。  
  
 このイベント データ クラスを使用しても<xref:System.Windows.Input.CommandManager.Executed?displayProperty=nameWithType>と<xref:System.Windows.Input.CommandManager.PreviewExecuted?displayProperty=nameWithType>です。 最も実用的なハンドラーが処理されます、<xref:System.Windows.Input.CommandBinding.Executed>特定からのイベント<xref:System.Windows.Input.CommandBinding>ではなくで機能するよりも、<xref:System.Windows.Input.CommandManager>レベル。  
  
 コマンド実行の詳細については、「[コマンド実行の概要](~/docs/framework/wpf/advanced/commanding-overview.md)」を参照してください。  
  
   
  
## Examples  
 次の例を作成、<xref:System.Windows.Input.ExecutedRoutedEventHandler>を開く、<xref:System.Windows.MessageBox>コマンドを実行するとします。  
  
 [!code-csharp[commandwithhandler#CommandHandlerExecutedHandler](~/samples/snippets/csharp/VS_Snippets_Wpf/commandWithHandler/CSharp/Window1.xaml.cs#commandhandlerexecutedhandler)]
 [!code-vb[commandwithhandler#CommandHandlerExecutedHandler](~/samples/snippets/visualbasic/VS_Snippets_Wpf/commandWithHandler/VisualBasic/Window1.xaml.vb#commandhandlerexecutedhandler)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Command">
      <MemberSignature Language="C#" Value="public System.Windows.Input.ICommand Command { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.ICommand Command" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ExecutedRoutedEventArgs.Command" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>呼び出されたコマンドを取得します。</summary>
        <value>このイベントに関連付けられているコマンド。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントに関連付けられているコマンドの特定の実装にキャストできる<xref:System.Windows.Input.ICommand>など、<xref:System.Windows.Input.RoutedCommand>型がわかっている場合、します。  
  
   
  
## Examples  
 次の例を作成、<xref:System.Windows.Input.ExecutedRoutedEventHandler>複数のコマンドを処理します。 ハンドラーのチェック、<xref:System.Windows.Input.ExecutedRoutedEventArgs.Command%2A>プロパティを<xref:System.Windows.Input.ExecutedRoutedEventArgs>を呼び出す方法を決定します。  
  
 [!code-csharp[commandingoverviewsnippets#CommandingOverviewMultipleCmdHander](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandingOverviewSnippets/CSharp/Window1.xaml.cs#commandingoverviewmultiplecmdhander)]
 [!code-vb[commandingoverviewsnippets#CommandingOverviewMultipleCmdHander](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandingOverviewSnippets/visualbasic/window1.xaml.vb#commandingoverviewmultiplecmdhander)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeEventHandler">
      <MemberSignature Language="C#" Value="protected override void InvokeEventHandler (Delegate genericHandler, object target);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InvokeEventHandler(class System.Delegate genericHandler, object target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.ExecutedRoutedEventArgs.InvokeEventHandler(System.Delegate,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="genericHandler" Type="System.Delegate" />
        <Parameter Name="target" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="genericHandler">To be added.</param>
        <param name="target">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parameter">
      <MemberSignature Language="C#" Value="public object Parameter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parameter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ExecutedRoutedEventArgs.Parameter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コマンドのパラメーターのデータを取得します。</summary>
        <value>コマンド固有のデータ。 既定値は <see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティは、特定のコマンドで定義されている汎用データ パラメーターを表します。  
  
 このパラメーターが必要でない場合`null`渡すことができます。  
  
 通常、<xref:System.Windows.Input.ExecutedRoutedEventArgs.Parameter%2A>を実行すると、コマンドに固有の情報を渡すために使用します。  データの型は、コマンドによって定義されます。  
  
   
  
## Examples  
 次の例を作成、<xref:System.Windows.Input.ExecutedRoutedEventHandler>カスタム<xref:System.Windows.Input.RoutedCommand>です。  ハンドラーの更新プログラム、<xref:System.Windows.Controls.TextBox>と現在の時刻と<xref:System.Windows.Controls.Primitives.RangeBase.Value%2A>のプロパティ、<xref:System.Windows.Controls.Slider>コントロールを使用して、ハンドラーに渡される、<xref:System.Windows.Input.ExecutedRoutedEventArgs.Parameter%2A?displayProperty=nameWithType>です。  
  
 [!code-csharp[invalidaterequerywithdispatchertimer#InvalidateSampleExecuted](~/samples/snippets/csharp/VS_Snippets_Wpf/InvalidateRequeryWithDispatcherTimer/CSharp/Window1.xaml.cs#invalidatesampleexecuted)]
 [!code-vb[invalidaterequerywithdispatchertimer#InvalidateSampleExecuted](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InvalidateRequeryWithDispatcherTimer/visualbasic/window1.xaml.vb#invalidatesampleexecuted)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
