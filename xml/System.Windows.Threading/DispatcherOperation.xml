<Type Name="DispatcherOperation" FullName="System.Windows.Threading.DispatcherOperation">
  <TypeSignature Language="C#" Value="public class DispatcherOperation" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi DispatcherOperation extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Threading.DispatcherOperation" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>ポストされた操作との対話に使用されるオブジェクトを表す、<see cref="T:System.Windows.Threading.Dispatcher" />キュー。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>返します、<xref:System.Windows.Threading.DispatcherOperation>オブジェクトが呼び出されるとします。  
  
 <xref:System.Windows.Threading.DispatcherOperation>オブジェクトを使用して、デリゲートとの対話、<xref:System.Windows.Threading.Dispatcher>操作の優先順位を変更または操作の中止などのキューです。  
  
 呼び出されたデリゲートの戻り値を取得するを使用して、<xref:System.Windows.Threading.DispatcherOperation.Result%2A>プロパティです。  
  
 <xref:System.Windows.Threading.DispatcherOperation>例外処理の境界ではありません。 つまり、によって例外が処理されること、<xref:System.Windows.Threading.Dispatcher>と操作では保持されません。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public bool Abort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Abort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.DispatcherOperation.Abort" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>操作を中止します。</summary>
        <returns>
          <see langword="true" />操作が中止された場合それ以外の場合、<see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 かどうか、操作が既に実行中、このメソッドは`false`します。  
  
 操作が中止されたときに、<xref:System.Windows.Threading.DispatcherOperation.Status%2A>の<xref:System.Windows.Threading.DispatcherOperation>に設定されている<xref:System.Windows.Threading.DispatcherOperationStatus.Aborted>と<xref:System.Windows.Threading.DispatcherOperation.Aborted>イベントが発生します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Aborted">
      <MemberSignature Language="C#" Value="public event EventHandler Aborted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Aborted" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Threading.DispatcherOperation.Aborted" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>操作が中止されたときに発生します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Completed">
      <MemberSignature Language="C#" Value="public event EventHandler Completed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Completed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Threading.DispatcherOperation.Completed" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>操作の完了時に発生します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispatcher">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.Dispatcher Dispatcher { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Threading.Dispatcher Dispatcher" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Threading.DispatcherOperation.Dispatcher" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.Dispatcher</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得、<see cref="T:System.Windows.Threading.Dispatcher" />操作を投稿しました。</summary>
        <value>ディスパッチャー。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAwaiter">
      <MemberSignature Language="C#" Value="public System.Runtime.CompilerServices.TaskAwaiter GetAwaiter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Runtime.CompilerServices.TaskAwaiter GetAwaiter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.DispatcherOperation.GetAwaiter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.CompilerServices.TaskAwaiter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>非同期操作が完了したら通知されるオブジェクトを返します。</summary>
        <returns>非同期操作が完了したら通知されるオブジェクト。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeDelegateCore">
      <MemberSignature Language="C#" Value="protected virtual object InvokeDelegateCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object InvokeDelegateCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.DispatcherOperation.InvokeDelegateCore" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>これに関連付けられている操作を開始<see cref="T:System.Windows.Threading.DispatcherOperation" />です。</summary>
        <returns>
          常に <see langword="null" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Priority">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.DispatcherPriority Priority { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Threading.DispatcherPriority Priority" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Threading.DispatcherOperation.Priority" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherPriority</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の操作の優先度、<see cref="T:System.Windows.Threading.Dispatcher" />キュー。</summary>
        <value>キューのデリゲートの優先順位。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Result">
      <MemberSignature Language="C#" Value="public object Result { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Result" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Threading.DispatcherOperation.Result" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>完了した後は、操作の結果を取得します。</summary>
        <value>操作の結果 - または -<see langword="null" />操作が完了していない場合。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Status">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.DispatcherOperationStatus Status { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Threading.DispatcherOperationStatus Status" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Threading.DispatcherOperation.Status" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherOperationStatus</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>操作の現在の状態を取得するには.</summary>
        <value>操作の状態。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 各段階、<xref:System.Windows.Threading.DispatcherOperation>は<xref:System.Windows.Threading.DispatcherOperationStatus.Pending>、 <xref:System.Windows.Threading.DispatcherOperationStatus.Executing>、および<xref:System.Windows.Threading.DispatcherOperationStatus.Completed>です。  任意の時点で、操作が完了する前に、の状態に設定できます<xref:System.Windows.Threading.DispatcherOperationStatus.Aborted>です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Task">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task Task { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.Tasks.Task Task" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Threading.DispatcherOperation.Task" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得、<see cref="T:System.Threading.Tasks.Task`1" />現在の操作を表すです。</summary>
        <value>現在の操作を表すオブジェクト。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Wait">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.DispatcherOperationStatus Wait ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Threading.DispatcherOperationStatus Wait() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.DispatcherOperation.Wait" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherOperationStatus</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>操作が完了するの待機</summary>
        <returns>操作の状態。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 呼び出されたデリゲートの戻り値を取得するを使用して、<xref:System.Windows.Threading.DispatcherOperation.Result%2A>プロパティです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Windows.Threading.DispatcherOperation.Status" /> と <see cref="F:System.Windows.Threading.DispatcherOperationStatus.Executing" /> が等価です。  これは、同じスレッドで既に実行中の操作を待機しているときに発生します。</exception>
      </Docs>
    </Member>
    <Member MemberName="Wait">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.DispatcherOperationStatus Wait (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Threading.DispatcherOperationStatus Wait(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.DispatcherOperation.Wait(System.TimeSpan)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherOperationStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">待機する時間の最大期間。</param>
        <summary>操作の時間の指定した期間の完了を待機します。</summary>
        <returns>操作の状態。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 呼び出されたデリゲートの戻り値を取得するを使用して、<xref:System.Windows.Threading.DispatcherOperation.Result%2A>プロパティです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Windows.Threading.DispatcherOperation.Status" /> と <see cref="F:System.Windows.Threading.DispatcherOperationStatus.Executing" /> が等価です。  これは、同じスレッドで既に実行中の操作を待機しているときに発生します。</exception>
      </Docs>
    </Member>
  </Members>
</Type>
