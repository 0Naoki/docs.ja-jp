<Type Name="PageOrientation" FullName="System.Printing.PageOrientation">
  <TypeSignature Language="C#" Value="public enum PageOrientation" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed PageOrientation extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Printing.PageOrientation" />
  <AssemblyInfo>
    <AssemblyName>ReachFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>印刷メディア上のコンテンツのページの方向を指定します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 目的のための主に、この型の値を使用します。  
  
-   メンバーとして、<xref:System.Printing.PrintCapabilities.PageOrientationCapability%2A>プロパティには、コレクションの<xref:System.Printing.PrintCapabilities>、これらの値は、プリンターがサポートする向きの種類を指定します。  
  
-   値として、<xref:System.Printing.PrintTicket.PageOrientation%2A>のプロパティ、<xref:System.Printing.PrintTicket>値は、特定の向きを使用するプリンターを指示します。  
  
 **不明な**のプロパティで値が使われていない<xref:System.Printing.PrintCapabilities>オブジェクト。  
  
 設定する必要がありますしない、<xref:System.Printing.PrintTicket>プロパティを**不明な**します。 その他の場合<xref:System.Printing.PrintTicket>生成したアプリケーションが作成、 *PrintTicket ドキュメント*方向付けを認識できないオプションを設定する (で定義されていない、オプションは、[印刷スキーマ](http://go.microsoft.com/fwlink/?LinkId=186397))、<xref:System.Printing.PrintTicket>そのドキュメントに作成されますが、アプリケーションのオブジェクトになります**不明な**の値として、<xref:System.Printing.PrintTicket.PageOrientation%2A>プロパティです。  
  
 <xref:System.Printing.PrintTicket>と<xref:System.Printing.PrintCapabilities>クラスは継承できません、拡張することができます、[印刷スキーマ](http://go.microsoft.com/fwlink/?LinkId=186397)では考慮されません印刷デバイスの機能を認識するように、<xref:System.Printing.PrintTicket>または<xref:System.Printing.PrintCapabilities>クラスです。 詳細については、次を参照してください。[ビルド内にありません: 方法: 印刷スキーマと新しい印刷システム クラスを作成する拡張](http://msdn.microsoft.com/en-us/a3600218-1ea5-478a-9853-6560464f2885)です。  
  
   
  
## Examples  
 次の例は、この列挙体を使用して設定する方法を示しています。<xref:System.Printing.PrintTicket>値。  
  
 [!code-csharp[XpsPrint#OutputColorAndPageOrientation](~/samples/snippets/csharp/VS_Snippets_Wpf/XpsPrint/CSharp/XpsPrintHelper.cs#outputcolorandpageorientation)]
 [!code-vb[XpsPrint#OutputColorAndPageOrientation](~/samples/snippets/visualbasic/VS_Snippets_Wpf/XpsPrint/visualbasic/xpsprinthelper.vb#outputcolorandpageorientation)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Landscape">
      <MemberSignature Language="C#" Value="Landscape" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Printing.PageOrientation Landscape = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Printing.PageOrientation.Landscape" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>ReachFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Printing.PageOrientation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>可能領域の内容は、ページ上で標準 (縦) 方向から反時計回りに 90 度回転されます。</summary>
      </Docs>
    </Member>
    <Member MemberName="Portrait">
      <MemberSignature Language="C#" Value="Portrait" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Printing.PageOrientation Portrait = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Printing.PageOrientation.Portrait" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>ReachFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Printing.PageOrientation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>標準方向です。</summary>
      </Docs>
    </Member>
    <Member MemberName="ReverseLandscape">
      <MemberSignature Language="C#" Value="ReverseLandscape" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Printing.PageOrientation ReverseLandscape = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.Printing.PageOrientation.ReverseLandscape" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>ReachFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Printing.PageOrientation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>可能領域の内容は、ページで標準 (縦) の向きから時計回りに 90 度回転されます。</summary>
      </Docs>
    </Member>
    <Member MemberName="ReversePortrait">
      <MemberSignature Language="C#" Value="ReversePortrait" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Printing.PageOrientation ReversePortrait = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.Printing.PageOrientation.ReversePortrait" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>ReachFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Printing.PageOrientation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>標準 (縦) 方向相対可能領域のコンテンツ パス上下です。</summary>
      </Docs>
    </Member>
    <Member MemberName="Unknown">
      <MemberSignature Language="C#" Value="Unknown" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Printing.PageOrientation Unknown = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Printing.PageOrientation.Unknown" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>ReachFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Printing.PageOrientation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>機能 (オプションはこの列挙体によって表されます) がで定義されていないオプションに設定されている、[印刷スキーマ](http://go.microsoft.com/fwlink/?LinkId=186397)です。</summary>
      </Docs>
    </Member>
  </Members>
</Type>
