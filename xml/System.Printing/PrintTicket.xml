<Type Name="PrintTicket" FullName="System.Printing.PrintTicket">
  <TypeSignature Language="C#" Value="public sealed class PrintTicket : System.ComponentModel.INotifyPropertyChanged" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit PrintTicket extends System.Object implements class System.ComponentModel.INotifyPropertyChanged" />
  <TypeSignature Language="DocId" Value="T:System.Printing.PrintTicket" />
  <AssemblyInfo>
    <AssemblyName>ReachFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.INotifyPropertyChanged</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>印刷ジョブの設定を定義します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A<xref:System.Printing.PrintTicket>オブジェクトは、特定の種類と呼ばれる XML ドキュメントの簡単に-作業-の表現、 *PrintTicket ドキュメント*です。 後者は、プリンターに (二重化、照合順序、およびホチキス止め) など、さまざまな機能を設定する方法を伝える命令のセットです。 たとえばをホチキス止めを有効にし、ホチキス止めの左上隅にある印刷ジョブをプリンターを指示するには、ドキュメント必要があります、`<JobStapleAllDocuments … >`を指定する要素**StapleTopLeft**です。 要素として表されます、さらに、<xref:System.Printing.PrintTicket.Stapling%2A>のプロパティ、<xref:System.Printing.PrintTicket>オブジェクト。 PrintTicket ドキュメントに準拠する必要があります、[印刷スキーマ](http://go.microsoft.com/fwlink/?LinkId=186397)です。  
  
 <xref:System.Printing.PrintTicket>クラスにより、アプリケーションでの XML の直接の書き込みに関与することがなく、プリンターの機能を構成する<xref:System.IO.Stream>オブジェクト。  
  
 すべての自宅と勤務ファイルや写真プリンターの最も一般的な機能のプロパティで表されます<xref:System.Printing.PrintTicket>クラスです。 ですが、[印刷スキーマ](http://go.microsoft.com/fwlink/?LinkId=186397)定義さらに多く、あまり一般的でない機能とそれを専門的な印刷デバイスの機能の処理に拡張できます。 そのため、ですが、<xref:System.Printing.PrintTicket>と<xref:System.Printing.PrintCapabilities>クラスは継承できません、拡張することができます、[印刷スキーマ](http://go.microsoft.com/fwlink/?LinkId=186397)では考慮されません印刷デバイスの機能を認識するように、<xref:System.Printing.PrintTicket>または<xref:System.Printing.PrintCapabilities>クラスです。 詳細については、次を参照してください。[ビルド内にありません: 方法: 印刷スキーマと新しい印刷システム クラスを作成する拡張](http://msdn.microsoft.com/en-us/a3600218-1ea5-478a-9853-6560464f2885)です。  
  
 **注**ときに、<xref:System.Printing.PrintTicket>オブジェクトは、PrintTicket のドキュメントを受け取るコンス トラクターで作成された (として、 <xref:System.IO.Stream>) パラメーター、そのドキュメント全体が非パブリックのフィールドを含む XML 要素のパブリック プロパティのいずれかでは表されない小さい共通の機能を表す、オブジェクトに格納されている、<xref:System.Printing.PrintTicket>クラスです。 実際、PrintTicket のドキュメントを生成したドライバーでのプライベート拡張機能が使用されている場合、[印刷スキーマ](http://go.microsoft.com/fwlink/?LinkId=186397)を個別に定義されているマークアップは、パブリックでない PrintTicket ドキュメントの一部としても格納します。  
  
> [!CAUTION]
>  クラス内で、 <xref:System.Printing> Windows サービスや ASP.NET アプリケーションまたはサービス内で使用する名前空間はサポートされていません。 パフォーマンスと実行時の例外をサービス低下のいずれかのようなアプリケーションからこれらのクラスを使用しようと、予期しない問題が生じる可能性があります。  
  
 Windows フォーム アプリケーションから印刷する場合を参照してください、<xref:System.Drawing.Printing>名前空間。  
  
   
  
## Examples  
 次の例では、特定のプリンターの機能を判断する方法とそれらを活用するために、印刷ジョブを構成する方法を示します。  
  
 [!code-cpp[XpsCreate#PrinterCapabilities](~/samples/snippets/cpp/VS_Snippets_Wpf/XpsCreate/CPP/XpsCreate.cpp#printercapabilities)]
 [!code-csharp[XpsCreate#PrinterCapabilities](~/samples/snippets/csharp/VS_Snippets_Wpf/XpsCreate/CSharp/XpsCreate.cs#printercapabilities)]
 [!code-vb[XpsCreate#PrinterCapabilities](~/samples/snippets/visualbasic/VS_Snippets_Wpf/XpsCreate/visualbasic/xpscreate.vb#printercapabilities)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrintTicket ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintTicket.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>ReachFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Printing.PrintTicket" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次の例では、次の 2 つの印刷チケットをマージするときにこのコンス トラクターを使用する方法を示します。  
  
 [!code-csharp[PrintTicketManagment#UsingMergeAndValidate](~/samples/snippets/csharp/VS_Snippets_Wpf/PrintTicketManagment/CSharp/printticket.cs#usingmergeandvalidate)]
 [!code-vb[PrintTicketManagment#UsingMergeAndValidate](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PrintTicketManagment/visualbasic/printticket.vb#usingmergeandvalidate)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrintTicket (System.IO.Stream xmlStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream xmlStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintTicket.#ctor(System.IO.Stream)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>ReachFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xmlStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="xmlStream">印刷ジョブを記述および印刷スキーマに準拠する XML ストリームです。</param>
        <summary>新しいインスタンスを初期化、<see cref="T:System.Printing.PrintTicket" />の XML に準拠している (ドキュメントを含む、PrintTicket) XML ストリームを使用してクラス[印刷スキーマ](http://go.microsoft.com/fwlink/?LinkId=186397)です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コンス トラクターは、元の位置に、ストリームの読み取り/書き込み位置をリセットされません。 同様に、コンス トラクターの呼び出し後すぐにリセットする必要があります。  
  
 PrintTicket ドキュメント全体が非パブリックのフィールドを含む XML 要素のパブリック プロパティのいずれかでは表されない小さい共通の機能を表す、オブジェクトに格納されている、<xref:System.Printing.PrintTicket>クラスです。 実際、PrintTicket のドキュメントを生成したドライバーでのプライベート拡張機能が使用されている場合、[印刷スキーマ](http://go.microsoft.com/fwlink/?LinkId=186397)を個別に定義されているマークアップは、パブリックでない PrintTicket ドキュメントの一部としても格納します。  
  
 プライベートな部分をドキュメントの存在する場合は検証されません、コンス トラクターによって**印刷スキーマ**の定義済みパーツが検証されたら、そのパブリック プロパティのいずれかでは表されない部分、<xref:System.Printing.PrintTicket>クラスです。 したがって、<xref:System.FormatException>場合でも、すべてのパブリック プロパティに対応する XML マークアップが有効では、スローされる可能性があります。  
  
 いずれかのプロパティの<xref:System.Printing.PrintTicket>に書き込まれます、このパブリックでない PrintTicket ドキュメントが同様に変更します。  
  
 によって返されるこのパブリックでない PrintTicket ドキュメントでは、<xref:System.Printing.PrintTicket.GetXmlStream%2A>と<xref:System.Printing.PrintTicket.SaveTo%2A>メソッドです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="xmlStream" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.FormatException">
          <paramref name="xmlStream" />有効な XML ではありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Printing.PrintTicket Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Printing.PrintTicket Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintTicket.Clone" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ReachFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Printing.PrintTicket</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>この <see cref="T:System.Printing.PrintTicket" /> の変更可能な複製を作成し、このオブジェクトの値の詳細コピーを作成します。</summary>
        <returns>現在のオブジェクトの変更可能な複製。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Collation">
      <MemberSignature Language="C#" Value="public Nullable&lt;System.Printing.Collation&gt; Collation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.Printing.Collation&gt; Collation" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintTicket.Collation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>ReachFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Printing.Collation&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはプリンターがその出力を並べて表示するかどうかを示す値を設定します。</summary>
        <value>A<see cref="T:System.Printing.Collation" />プリンターがその出力を並べて表示するかどうかを示す値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A`null`値は、このプロパティは、この機能の設定が指定されていないことを意味します。 また、値が`null`、XML のバージョンの<xref:System.Printing.PrintTicket>(を参照してください<xref:System.Printing.PrintTicket.SaveTo%2A>と<xref:System.Printing.PrintTicket.GetXmlStream%2A>) は、この機能のすべてのマークアップが含まれていません。  
  
 このプロパティに対応、[印刷スキーマ](http://go.microsoft.com/fwlink/?LinkId=186397)の`DocumentCollate`キーワード、されません、`JobCollateAllDocuments`キーワード。  
  
 使用して、プリンターがサポートされるオプションのことをテストすることができます、<xref:System.Printing.PrintCapabilities.CollationCapability%2A>プロパティです。  
  
   
  
## Examples  
 次の例は、プリンターの機能をテストするときに、このプロパティを使用する方法を示しています。 それらを活用するために印刷ジョブを構成するとします。  
  
 [!code-cpp[XpsCreate#PrinterCapabilities](~/samples/snippets/cpp/VS_Snippets_Wpf/XpsCreate/CPP/XpsCreate.cpp#printercapabilities)]
 [!code-csharp[XpsCreate#PrinterCapabilities](~/samples/snippets/csharp/VS_Snippets_Wpf/XpsCreate/CSharp/XpsCreate.cs#printercapabilities)]
 [!code-vb[XpsCreate#PrinterCapabilities](~/samples/snippets/visualbasic/VS_Snippets_Wpf/XpsCreate/visualbasic/xpscreate.vb#printercapabilities)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">含まれていない値にプロパティを設定するコードの呼び出しが試行、<see cref="T:System.Printing.Collation" />列挙します。</exception>
      </Docs>
    </Member>
    <Member MemberName="CopyCount">
      <MemberSignature Language="C#" Value="public Nullable&lt;int&gt; CopyCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; CopyCount" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintTicket.CopyCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>ReachFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または印刷ジョブのコピーの数を設定します。</summary>
        <value>Null 許容型<see cref="T:System.Int32" />を印刷する部数を指定する値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A`null`値は、このプロパティは、この機能の設定が指定されていないことを意味します。 また、値が`null`、XML のバージョンの<xref:System.Printing.PrintTicket>(を参照してください<xref:System.Printing.PrintTicket.SaveTo%2A>と<xref:System.Printing.PrintTicket.GetXmlStream%2A>) は、この機能のすべてのマークアップが含まれていません。  
  
 このプロパティに対応、[印刷スキーマ](http://go.microsoft.com/fwlink/?LinkId=186397)の`JobCopiesAllDocuments`キーワード、されません、`DocumentCopiesAllPages`キーワード、または`PageCopies`キーワード。  
  
 使用して、プリンターの最大をテストすることができます、<xref:System.Printing.PrintCapabilities.MaxCopyCount%2A>プロパティです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">コードの呼び出しが、1 より小さい値にプロパティを設定しようとしました。</exception>
      </Docs>
    </Member>
    <Member MemberName="DeviceFontSubstitution">
      <MemberSignature Language="C#" Value="public Nullable&lt;System.Printing.DeviceFontSubstitution&gt; DeviceFontSubstitution { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.Printing.DeviceFontSubstitution&gt; DeviceFontSubstitution" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintTicket.DeviceFontSubstitution" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>ReachFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Printing.DeviceFontSubstitution&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはプリンターに印刷ジョブでのフォントのコンピューター ベースのデバイスのフォントが置き換えられますかどうかを示す値を設定します。</summary>
        <value>A<see cref="T:System.Printing.DeviceFontSubstitution" />デバイスが現在の印刷ジョブのフォントをコンピュータ ベースのデバイスのフォントを置き換えますかどうかを示す値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A`null`値は、このプロパティは、この機能の設定が指定されていないことを意味します。 また、値が`null`、XML のバージョンの<xref:System.Printing.PrintTicket>(を参照してください<xref:System.Printing.PrintTicket.SaveTo%2A>と<xref:System.Printing.PrintTicket.GetXmlStream%2A>) は、この機能のすべてのマークアップが含まれていません。  
  
 このプロパティに対応、[印刷スキーマ](http://go.microsoft.com/fwlink/?LinkId=186397)の`PageDeviceFontSubstitution`キーワード。  
  
 使用して、プリンターがサポートされるオプションのことをテストすることができます、<xref:System.Printing.PrintCapabilities.DeviceFontSubstitutionCapability%2A>プロパティです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">含まれていない値にプロパティを設定するコードの呼び出しが試行、<see cref="T:System.Printing.DeviceFontSubstitution" />列挙します。</exception>
      </Docs>
    </Member>
    <Member MemberName="Duplexing">
      <MemberSignature Language="C#" Value="public Nullable&lt;System.Printing.Duplexing&gt; Duplexing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.Printing.Duplexing&gt; Duplexing" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintTicket.Duplexing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>ReachFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Printing.Duplexing&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または存在、プリンター、印刷ジョブに使用する場合、両面印刷の種類を示す値を設定します。</summary>
        <value>A<see cref="T:System.Printing.Duplexing" />存在、プリンター、印刷ジョブに使用する場合は、両面印刷の種類を示す値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A`null`値は、このプロパティは、この機能の設定が指定されていないことを意味します。 また、値が`null`、XML のバージョンの<xref:System.Printing.PrintTicket>(を参照してください<xref:System.Printing.PrintTicket.SaveTo%2A>と<xref:System.Printing.PrintTicket.GetXmlStream%2A>) は、この機能のすべてのマークアップが含まれていません。  
  
 このプロパティに対応、[印刷スキーマ](http://go.microsoft.com/fwlink/?LinkId=186397)の`JobDuplexAllDocumentsContiguously`キーワード、されません、`DocumentDuplex`キーワード。  
  
 使用して、プリンターがサポートされるオプションのことをテストすることができます、<xref:System.Printing.PrintCapabilities.DuplexingCapability%2A>プロパティです。  
  
   
  
## Examples  
 次の例では、次の 2 つの印刷チケットをマージするときにこのプロパティを使用する方法を示します。  
  
 [!code-csharp[PrintTicketManagment#UsingMergeAndValidate](~/samples/snippets/csharp/VS_Snippets_Wpf/PrintTicketManagment/CSharp/printticket.cs#usingmergeandvalidate)]
 [!code-vb[PrintTicketManagment#UsingMergeAndValidate](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PrintTicketManagment/visualbasic/printticket.vb#usingmergeandvalidate)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">含まれていない値にプロパティを設定するコードの呼び出しが試行、<see cref="T:System.Printing.Duplexing" />列挙します。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetXmlStream">
      <MemberSignature Language="C#" Value="public System.IO.MemoryStream GetXmlStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.MemoryStream GetXmlStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintTicket.GetXmlStream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ReachFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.MemoryStream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返します、<see cref="T:System.IO.MemoryStream" />のプロパティ値を表すオブジェクト、<see cref="T:System.Printing.PrintTicket" />に準拠する XML ストリームとして、[印刷スキーマ](http://go.microsoft.com/fwlink/?LinkId=186397)です。</summary>
        <returns>A<see cref="T:System.IO.MemoryStream" />に準拠した XML を使用して印刷チケットを記述するオブジェクト、[印刷スキーマ](http://go.microsoft.com/fwlink/?LinkId=186397)です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 場合のプロパティ、<xref:System.Printing.PrintTicket>は`null`は単にないに含めることが、XML マークアップ。  
  
 場合、<xref:System.Printing.PrintTicket>のいずれかで表されないマークアップ要素を含む PrintTicket のドキュメントにオブジェクトが作成されて、<xref:System.Printing.PrintTicket>クラスのパブリック プロパティ、それらの要素はこのメソッドによって返された PrintTicket ドキュメントに含まれます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InputBin">
      <MemberSignature Language="C#" Value="public Nullable&lt;System.Printing.InputBin&gt; InputBin { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.Printing.InputBin&gt; InputBin" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintTicket.InputBin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>ReachFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Printing.InputBin&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または使用している入力のビン (用紙トレイ) を示す値を設定します。</summary>
        <value><see cref="T:System.Printing.InputBin" />どの給紙トレイを使用して、手動または自動での選択するかどうかを示す値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A`null`値は、このプロパティは、この機能の設定が指定されていないことを意味します。 また、値が`null`、XML のバージョンの<xref:System.Printing.PrintTicket>(を参照してください<xref:System.Printing.PrintTicket.SaveTo%2A>と<xref:System.Printing.PrintTicket.GetXmlStream%2A>) は、この機能のすべてのマークアップが含まれていません。 つまり、なければのマークアップ、[印刷スキーマ](http://go.microsoft.com/fwlink/?LinkId=186397)の機能`JobInputBin`、 `DocumentInputBin`、または`PageInputBin`です。  
  
 このプロパティがない`null`で定義されている機能には、次のリレーションシップが、[印刷スキーマ](http://go.microsoft.com/fwlink/?LinkId=186397)です。  
  
-   場合、XML 形式の<xref:System.Printing.PrintTicket>が含まれています`JobInputBin`、このプロパティと同じ値には、 `JobInputBin` (に関係なくまたはが存在しないかどうかも`DocumentInputBin`または`PageInputBin`です。 XML 形式のマークアップ、 <xref:System.Printing.PrintTicket>)。  
  
-   ある場合ありません`JobInputBin`、マークアップがある`DocumentInputBin`、このプロパティと同じ値には、 `DocumentInputBin` (に関係なくまたはが存在しないかどうかも`PageInputBin`マークアップ) に存在します。  
  
-   どちらを使用する必要がある場合`JobInputBin`も`DocumentInputBin`マークアップが`PageInputBin`マークアップ、し、このプロパティと同じ値を持つ`PageInputBin`します。  
  
 このプロパティがいずれかに設定するときに<xref:System.Printing.InputBin>し、一致する値`JobInputBin`マークアップは、XML の印刷チケットとそのいずれかに追加されます`DocumentInputBin`と`PageInputBin`がまだ存在するマークアップが削除される予定です。  
  
 使用して、プリンターがサポートされるオプションのことをテストすることができます、<xref:System.Printing.PrintCapabilities.InputBinCapability%2A>プロパティです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">含まれていない値にプロパティを設定するコードの呼び出しが試行、<see cref="T:System.Printing.InputBin" />列挙します。</exception>
      </Docs>
    </Member>
    <Member MemberName="OutputColor">
      <MemberSignature Language="C#" Value="public Nullable&lt;System.Printing.OutputColor&gt; OutputColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.Printing.OutputColor&gt; OutputColor" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintTicket.OutputColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>ReachFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Printing.OutputColor&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはプリンターがカラーまたは灰色の網掛けのあるコンテンツを処理する方法を示す値を設定します。</summary>
        <value><see cref="T:System.Printing.OutputColor" />プリンターがカラーまたは灰色の網掛けのあるコンテンツを処理する方法を示す値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A`null`値は、このプロパティは、この機能の設定が指定されていないことを意味します。 また、値が`null`、XML のバージョンの<xref:System.Printing.PrintTicket>(を参照してください<xref:System.Printing.PrintTicket.SaveTo%2A>と<xref:System.Printing.PrintTicket.GetXmlStream%2A>) は、この機能のすべてのマークアップが含まれていません。  
  
 このプロパティに対応、[印刷スキーマ](http://go.microsoft.com/fwlink/?LinkId=186397)の`PageOutputColor`キーワード。  
  
 使用して、プリンターがサポートされるオプションのことをテストすることができます、<xref:System.Printing.PrintCapabilities.OutputColorCapability%2A>プロパティです。  
  
   
  
## Examples  
 次の例では、このプロパティを使用して、印刷ジョブを構成する方法を示します。  
  
 [!code-csharp[XpsPrint#OutputColorAndPageOrientation](~/samples/snippets/csharp/VS_Snippets_Wpf/XpsPrint/CSharp/XpsPrintHelper.cs#outputcolorandpageorientation)]
 [!code-vb[XpsPrint#OutputColorAndPageOrientation](~/samples/snippets/visualbasic/VS_Snippets_Wpf/XpsPrint/visualbasic/xpsprinthelper.vb#outputcolorandpageorientation)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">含まれていない値にプロパティを設定するコードの呼び出しが試行、<see cref="T:System.Printing.OutputColor" />列挙します。</exception>
      </Docs>
    </Member>
    <Member MemberName="OutputQuality">
      <MemberSignature Language="C#" Value="public Nullable&lt;System.Printing.OutputQuality&gt; OutputQuality { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.Printing.OutputQuality&gt; OutputQuality" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintTicket.OutputQuality" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>ReachFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Printing.OutputQuality&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または印刷ジョブの出力の品質を示す値を設定します。</summary>
        <value><see cref="T:System.Printing.OutputQuality" />必要な品質レベルを指定する値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A`null`値は、このプロパティは、この機能の設定が指定されていないことを意味します。 また、値が`null`、XML のバージョンの<xref:System.Printing.PrintTicket>(を参照してください<xref:System.Printing.PrintTicket.SaveTo%2A>と<xref:System.Printing.PrintTicket.GetXmlStream%2A>) は、この機能のすべてのマークアップが含まれていません。  
  
 このプロパティに対応、[印刷スキーマ](http://go.microsoft.com/fwlink/?LinkId=186397)の`PageOutputQuality`キーワード。  
  
 使用して、プリンターがサポートされるオプションのことをテストすることができます、<xref:System.Printing.PrintCapabilities.OutputQualityCapability%2A>プロパティです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">含まれていない値にプロパティを設定するコードの呼び出しが試行、<see cref="T:System.Printing.OutputQuality" />列挙します。</exception>
      </Docs>
    </Member>
    <Member MemberName="PageBorderless">
      <MemberSignature Language="C#" Value="public Nullable&lt;System.Printing.PageBorderless&gt; PageBorderless { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.Printing.PageBorderless&gt; PageBorderless" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintTicket.PageBorderless" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>ReachFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Printing.PageBorderless&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはデバイスが、メディアの端にコンテンツを印刷または余白端の周りを残しておくかどうかを示す値を設定します。</summary>
        <value>A<see cref="T:System.Printing.PageBorderless" />プリンターがふちなし印刷を使用するかどうかを指定する値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A`null`値は、このプロパティは、この機能の設定が指定されていないことを意味します。 また、値が`null`、XML のバージョンの<xref:System.Printing.PrintTicket>(を参照してください<xref:System.Printing.PrintTicket.SaveTo%2A>と<xref:System.Printing.PrintTicket.GetXmlStream%2A>) は、この機能のすべてのマークアップが含まれていません。  
  
 このプロパティに対応、[印刷スキーマ](http://go.microsoft.com/fwlink/?LinkId=186397)の`PageBorderless`キーワード。  
  
 使用して、プリンターがサポートされるオプションのことをテストすることができます、<xref:System.Printing.PrintCapabilities.PageBorderlessCapability%2A>プロパティです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">含まれていない値にプロパティを設定するコードの呼び出しが試行、<see cref="T:System.Printing.PageBorderless" />列挙します。</exception>
      </Docs>
    </Member>
    <Member MemberName="PageMediaSize">
      <MemberSignature Language="C#" Value="public System.Printing.PageMediaSize PageMediaSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Printing.PageMediaSize PageMediaSize" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintTicket.PageMediaSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>ReachFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Printing.PageMediaSize</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはプリンターが印刷ジョブに使用する用紙 (またはその他のメディア) のページ サイズを設定します。</summary>
        <value>A<see cref="T:System.Printing.PageMediaSize" />名前、ディメンション、またはその両方を使用して、ページ サイズを表すオブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティに対応、[印刷スキーマ](http://go.microsoft.com/fwlink/?LinkId=186397)の`PageMediaSize`キーワード。  
  
 使用して、プリンターがサポートされるオプションのことをテストすることができます、<xref:System.Printing.PrintCapabilities.PageMediaSizeCapability%2A>プロパティです。  
  
   
  
## Examples  
 次の例では、このプロパティを使用して、それを印刷する用紙の余白内に収まるように視覚的要素を拡張する方法を示します。  
  
 [!code-csharp[XpsPrint#PageMediaSize](~/samples/snippets/csharp/VS_Snippets_Wpf/XpsPrint/CSharp/XpsPrintHelper.cs#pagemediasize)]
 [!code-vb[XpsPrint#PageMediaSize](~/samples/snippets/visualbasic/VS_Snippets_Wpf/XpsPrint/visualbasic/xpsprinthelper.vb#pagemediasize)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">使用してプロパティを設定するコードの呼び出しが試行、<see cref="T:System.Printing.PageMediaSize" />を少なくとも 1 つを持つオブジェクト<see langword="null" />プロパティです。  
  
 \- または  
  
 使用してプロパティを設定するコードの呼び出しが試行、<see cref="T:System.Printing.PageMediaSize" />オブジェクト<see cref="P:System.Printing.PageMediaSize.PageMediaSizeName" />に含まれていない値に設定されて、<see cref="T:System.Printing.PageMediaSizeName" />列挙します。  
  
 \- または  
  
 使用してプロパティを設定するコードの呼び出しが試行、<see cref="T:System.Printing.PageMediaSize" />オブジェクト<see cref="P:System.Printing.PageMediaSize.Width" />または<see cref="P:System.Printing.PageMediaSize.Height" />プロパティが 1 未満の値に設定します。</exception>
      </Docs>
    </Member>
    <Member MemberName="PageMediaType">
      <MemberSignature Language="C#" Value="public Nullable&lt;System.Printing.PageMediaType&gt; PageMediaType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.Printing.PageMediaType&gt; PageMediaType" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintTicket.PageMediaType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>ReachFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Printing.PageMediaType&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または用紙またはプリンターが印刷ジョブに使用するメディアの種類を示す値を設定します。</summary>
        <value>A<see cref="T:System.Printing.PageMediaType" />カード用紙など、印刷メディアを指定する値のラベル付け、プレーン テキスト、または写真。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A`null`値は、このプロパティは、この機能の設定が指定されていないことを意味します。 また、値が`null`、XML のバージョンの<xref:System.Printing.PrintTicket>(を参照してください<xref:System.Printing.PrintTicket.SaveTo%2A>と<xref:System.Printing.PrintTicket.GetXmlStream%2A>) は、この機能のすべてのマークアップが含まれていません。  
  
 このプロパティに対応、[印刷スキーマ](http://go.microsoft.com/fwlink/?LinkId=186397)の`PageMediaType`キーワード。  
  
 使用して、プリンターがサポートされるオプションのことをテストすることができます、<xref:System.Printing.PrintCapabilities.PageMediaTypeCapability%2A>プロパティです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">含まれていない値にプロパティを設定するコードの呼び出しが試行、<see cref="T:System.Printing.PageMediaType" />列挙します。</exception>
      </Docs>
    </Member>
    <Member MemberName="PageOrder">
      <MemberSignature Language="C#" Value="public Nullable&lt;System.Printing.PageOrder&gt; PageOrder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.Printing.PageOrder&gt; PageOrder" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintTicket.PageOrder" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>ReachFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Printing.PageOrder&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または後ろの前または後ろへの前面に複数のページを印刷するかどうかを示す値を設定します。</summary>
        <value>A<see cref="T:System.Printing.PageOrder" />最後のページ-最初の印刷または最初のページ-最初の印刷を指定する値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A`null`値は、このプロパティは、この機能の設定が指定されていないことを意味します。 また、値が`null`、XML のバージョンの<xref:System.Printing.PrintTicket>(を参照してください<xref:System.Printing.PrintTicket.SaveTo%2A>と<xref:System.Printing.PrintTicket.GetXmlStream%2A>) は、この機能のすべてのマークアップが含まれていません。  
  
 このプロパティに対応、[印刷スキーマ](http://go.microsoft.com/fwlink/?LinkId=186397)の`JobPageOrder`キーワード。  
  
 使用して、プリンターがサポートされるオプションのことをテストすることができます、<xref:System.Printing.PrintCapabilities.PageOrderCapability%2A>プロパティです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">含まれていない値にプロパティを設定するコードの呼び出しが試行、<see cref="T:System.Printing.PageOrder" />列挙します。</exception>
      </Docs>
    </Member>
    <Member MemberName="PageOrientation">
      <MemberSignature Language="C#" Value="public Nullable&lt;System.Printing.PageOrientation&gt; PageOrientation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.Printing.PageOrientation&gt; PageOrientation" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintTicket.PageOrientation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>ReachFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Printing.PageOrientation&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはページのコンテンツの方向で印刷方法を示す値を設定します。</summary>
        <value>A<see cref="T:System.Printing.PageOrientation" />を指定する方法のページ コンテンツ指向、たとえば、値<see cref="F:System.Printing.PageOrientation.Landscape" />または<see cref="F:System.Printing.PageOrientation.ReversePortrait" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A`null`値は、このプロパティは、この機能の設定が指定されていないことを意味します。 また、値が`null`、XML のバージョンの<xref:System.Printing.PrintTicket>(を参照してください<xref:System.Printing.PrintTicket.SaveTo%2A>と<xref:System.Printing.PrintTicket.GetXmlStream%2A>) は、この機能のすべてのマークアップが含まれていません。  
  
 このプロパティに対応、[印刷スキーマ](http://go.microsoft.com/fwlink/?LinkId=186397)の`PageOrientation`キーワード。  
  
 使用して、プリンターがサポートされるオプションのことをテストすることができます、<xref:System.Printing.PrintCapabilities.PageOrientationCapability%2A>プロパティです。  
  
   
  
## Examples  
 次の例では、このプロパティを使用して、印刷ジョブを構成する方法を示します。  
  
 [!code-csharp[XpsPrint#OutputColorAndPageOrientation](~/samples/snippets/csharp/VS_Snippets_Wpf/XpsPrint/CSharp/XpsPrintHelper.cs#outputcolorandpageorientation)]
 [!code-vb[XpsPrint#OutputColorAndPageOrientation](~/samples/snippets/visualbasic/VS_Snippets_Wpf/XpsPrint/visualbasic/xpsprinthelper.vb#outputcolorandpageorientation)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">含まれていない値にプロパティを設定するコードの呼び出しが試行、<see cref="T:System.Printing.PageOrientation" />列挙します。</exception>
      </Docs>
    </Member>
    <Member MemberName="PageResolution">
      <MemberSignature Language="C#" Value="public System.Printing.PageResolution PageResolution { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Printing.PageResolution PageResolution" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintTicket.PageResolution" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>ReachFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Printing.PageResolution</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはプリンターが印刷ジョブに対して使用するページの解像度のレベルを設定します。</summary>
        <value>A<see cref="T:System.Printing.PageResolution" />定性的値、1 インチあたりのドット数の値、またはその両方として解像度を表す値です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Printing.PageResolution>クラスには、X と Y のディメンションのインチあたりのドット-を指定するプロパティとプロパティの解像度に定性的式を与えることができます。  
  
 このプロパティに対応、[印刷スキーマ](http://go.microsoft.com/fwlink/?LinkId=186397)の`PageResolution`キーワード。  
  
 使用して、プリンターがサポートされるオプションのことをテストすることができます、<xref:System.Printing.PrintCapabilities.PageResolutionCapability%2A>プロパティです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">使用してプロパティを設定するコードの呼び出しが試行、<see cref="T:System.Printing.PageResolution" />を少なくとも 1 つを持つオブジェクト<see langword="null" />プロパティです。  
  
 \- または  
  
 使用してプロパティを設定するコードの呼び出しが試行、<see cref="T:System.Printing.PageMediaSize" />オブジェクト<see cref="P:System.Printing.PageResolution.QualitativeResolution" />に含まれていない値に設定されて、<see cref="T:System.Printing.PageQualitativeResolution" />列挙します。  
  
 \- または  
  
 使用してプロパティを設定するコードの呼び出しが試行、<see cref="T:System.Printing.PageResolution" />オブジェクト<see cref="P:System.Printing.PageResolution.X" />または<see cref="P:System.Printing.PageResolution.Y" />プロパティが 1 未満の値に設定します。</exception>
      </Docs>
    </Member>
    <Member MemberName="PageScalingFactor">
      <MemberSignature Language="C#" Value="public Nullable&lt;int&gt; PageScalingFactor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; PageScalingFactor" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintTicket.PageScalingFactor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>ReachFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定するプリンターを拡大または縮小、ページ上の印刷イメージの割合。</summary>
        <value><see cref="T:System.Int32" />割合を表す値です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 プリンターには、拡張するための上限と下限を持つことができます。 使用して、スケールの制限をテストできます<xref:System.Printing.PrintCapabilities.PageScalingFactorRange%2A>です。  
  
 A`null`値は、このプロパティは、この機能の設定が指定されていないことを意味します。 また、値が`null`、XML のバージョンの<xref:System.Printing.PrintTicket>(を参照してください<xref:System.Printing.PrintTicket.SaveTo%2A>と<xref:System.Printing.PrintTicket.GetXmlStream%2A>) は、この機能のすべてのマークアップが含まれていません。  
  
 これは、<xref:System.Printing.PrintTicket.PageScalingFactor%2A>プロパティを表す一般的に、**スケール**`ScoredProperty`の[印刷スキーマ](http://go.microsoft.com/fwlink/?LinkId=186397)の`PageScaling`キーワード。 次のようにいくつかの複雑な必要です。  
  
 読み取り時に、<xref:System.Printing.PrintTicket.PageScalingFactor%2A>プロパティ、プロパティは、次のようにします。  
  
-   PrintTicket XML ドキュメントがある場合、`PageScaling`機能に設定、 **CustomSquare**オプション、および**CustomSquare**オプションの**スケール**値は正の値、それが返される値。  
  
-   PrintTicket XML ドキュメントがある場合、`PageScaling`機能に設定、**カスタム**オプション、および**カスタム**オプションの**ScaleWidth**値は正の値、それが返される値。  
  
-   その他のすべてのケースで`null`が返されます。  
  
 設定するときに、<xref:System.Printing.PrintTicket.PageScalingFactor%2A>プロパティ、プロパティは、次のようにします。  
  
-   設定されている場合`null`、続いて、`PageScaling`マークアップは、PrintTicket の XML ドキュメントから削除します。  
  
-   それ以外の場合、 `PageScaling` 、PrintTicket の XML ドキュメント内の機能に設定されている**CustomSquare**と**CustomSquare**オプションの**スケール**値は、渡された値に設定します。 (を参照してください**例外**プロパティが 1 より小さい値に設定されている場合の動作をします)。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">コードの呼び出しが、1 より小さい値にプロパティを設定しようとしました。</exception>
      </Docs>
    </Member>
    <Member MemberName="PagesPerSheet">
      <MemberSignature Language="C#" Value="public Nullable&lt;int&gt; PagesPerSheet { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; PagesPerSheet" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintTicket.PagesPerSheet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>ReachFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または印刷の両側枚の用紙に印刷されるページの数を設定します。</summary>
        <value>Null 許容型<see cref="T:System.Int32" />各印刷ページの数を表す値が枚の用紙の側を印刷します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ほとんどのプリンターでは、1、2、4、6、8、および 16 ページなどの特定の機能の限定範囲のみをサポートします。 使用して、プリンターがサポートされるオプションのことをテストすることができます、<xref:System.Printing.PrintCapabilities.PagesPerSheetCapability%2A>プロパティです。  
  
 A`null`値は、このプロパティは、この機能の設定が指定されていないことを意味します。 また、値が`null`、XML のバージョンの<xref:System.Printing.PrintTicket>(を参照してください<xref:System.Printing.PrintTicket.SaveTo%2A>と<xref:System.Printing.PrintTicket.GetXmlStream%2A>) は、この機能のすべてのマークアップが含まれていません。  
  
 このプロパティに対応、 **PagesPerSheet** `ScoredProperty`の[印刷スキーマ](http://go.microsoft.com/fwlink/?LinkId=186397)の`JobNUpAllDocumentsContiguously`キーワード、されません、`DocumentNUp`キーワード。  
  
 使用して、プリンターがサポートされるオプションのことをテストすることができます、<xref:System.Printing.PrintCapabilities.PagesPerSheetCapability%2A>プロパティです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">コードの呼び出しが、1 より小さい値にプロパティを設定しようとしました。</exception>
      </Docs>
    </Member>
    <Member MemberName="PagesPerSheetDirection">
      <MemberSignature Language="C#" Value="public Nullable&lt;System.Printing.PagesPerSheetDirection&gt; PagesPerSheetDirection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.Printing.PagesPerSheetDirection&gt; PagesPerSheetDirection" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintTicket.PagesPerSheetDirection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>ReachFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Printing.PagesPerSheetDirection&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはプリンターで印刷する用紙 1 枚の各辺に複数のページを整列する方法を示す値を設定します。</summary>
        <value>A<see cref="T:System.Printing.PagesPerSheetDirection" />プリンターが 1 シートの複数のページを表示する方法を示す値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 たとえば、プリンターがありますページ左から右へ行行積み上げ上部から下へとします。  
  
 A`null`値は、このプロパティは、この機能の設定が指定されていないことを意味します。 また、値が`null`、XML のバージョンの<xref:System.Printing.PrintTicket>(を参照してください<xref:System.Printing.PrintTicket.SaveTo%2A>と<xref:System.Printing.PrintTicket.GetXmlStream%2A>) は、この機能のすべてのマークアップが含まれていません。  
  
 このプロパティに対応、 **PresentationDirection**の subfeature、[印刷スキーマ](http://go.microsoft.com/fwlink/?LinkId=186397)の`JobNUpAllDocumentsContiguously`キーワード、されません、`DocumentNUp`キーワード。  
  
 使用して、プリンターがサポートされるオプションのことをテストすることができます、<xref:System.Printing.PrintCapabilities.PagesPerSheetDirectionCapability%2A>プロパティです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">含まれていない値にプロパティを設定するコードの呼び出しが試行、<see cref="T:System.Printing.PagesPerSheetDirection" />列挙します。</exception>
      </Docs>
    </Member>
    <Member MemberName="PhotoPrintingIntent">
      <MemberSignature Language="C#" Value="public Nullable&lt;System.Printing.PhotoPrintingIntent&gt; PhotoPrintingIntent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.Printing.PhotoPrintingIntent&gt; PhotoPrintingIntent" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintTicket.PhotoPrintingIntent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>ReachFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Printing.PhotoPrintingIntent&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または定性的な用語でプリンターを使用して写真を印刷品質レベルを示す値を設定します。</summary>
        <value>A<see cref="T:System.Printing.PhotoPrintingIntent" />写真品質レベルを示す値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 写真プリンター ドライバーでは、解像度およびその他の要因の特定の定量的な値にこのプロパティで、定性的の式を変換します。  
  
 A`null`値は、このプロパティは、この機能の設定が指定されていないことを意味します。 また、値が`null`、XML のバージョンの<xref:System.Printing.PrintTicket>(を参照してください<xref:System.Printing.PrintTicket.SaveTo%2A>と<xref:System.Printing.PrintTicket.GetXmlStream%2A>) は、この機能のすべてのマークアップが含まれていません。  
  
 このプロパティに対応、[印刷スキーマ](http://go.microsoft.com/fwlink/?LinkId=186397)の`PagePhotoPrintingIntent`キーワード。  
  
 使用して、プリンターがサポートされるオプションのことをテストすることができます、<xref:System.Printing.PrintCapabilities.PhotoPrintingIntentCapability%2A>プロパティです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">含まれていない値にプロパティを設定するコードの呼び出しが試行、<see cref="T:System.Printing.PhotoPrintingIntent" />列挙します。</exception>
      </Docs>
    </Member>
    <Member MemberName="PropertyChanged">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.PropertyChangedEventHandler PropertyChanged" />
      <MemberSignature Language="DocId" Value="E:System.Printing.PrintTicket.PropertyChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>ReachFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>されたときに発生のプロパティ、<see cref="T:System.Printing.PrintTicket" />変更します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveTo">
      <MemberSignature Language="C#" Value="public void SaveTo (System.IO.Stream outStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveTo(class System.IO.Stream outStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintTicket.SaveTo(System.IO.Stream)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ReachFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="outStream"><see cref="T:System.IO.Stream" />保存していたを保持する<see cref="T:System.Printing.PrintTicket" />です。</param>
        <summary>保存、<see cref="T:System.Printing.PrintTicket" />設定を<see cref="T:System.IO.Stream" />に準拠した XML 形式を使用して、オブジェクト、[印刷スキーマ](http://go.microsoft.com/fwlink/?LinkId=186397)です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは元の位置に、ストリームの読み取り/書き込み位置をリセットしていません。 このメソッドを呼び出した後すぐにリセットする必要があります。  
  
 場合のプロパティ、<xref:System.Printing.PrintTicket>は`null`は単にないに含めることが、XML マークアップ。  
  
 場合、<xref:System.Printing.PrintTicket>のいずれかで表されないマークアップ要素を含む PrintTicket のドキュメントにオブジェクトが作成されて、<xref:System.Printing.PrintTicket>クラスのパブリック プロパティ、それらの要素はこのメソッドによって保存された PrintTicket ドキュメントに含まれます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Stapling">
      <MemberSignature Language="C#" Value="public Nullable&lt;System.Printing.Stapling&gt; Stapling { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.Printing.Stapling&gt; Stapling" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintTicket.Stapling" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>ReachFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Printing.Stapling&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはプリンターが複数のページをホチキス止め場所とするかを示す値を設定します。</summary>
        <value>A<see cref="T:System.Printing.Stapling" />プリンターが出力にホチキス止めを指定する値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 たとえば、プリンターでは、用紙、または左上隅にホチキス止め 1 か所のシートの左端に 2 か所ホチキス止めを配置できます。  
  
 A`null`値は、このプロパティは、この機能の設定が指定されていないことを意味します。 また、値が`null`、XML のバージョンの<xref:System.Printing.PrintTicket>(を参照してください<xref:System.Printing.PrintTicket.SaveTo%2A>と<xref:System.Printing.PrintTicket.GetXmlStream%2A>) は、この機能のすべてのマークアップが含まれていません。  
  
 このプロパティに対応、[印刷スキーマ](http://go.microsoft.com/fwlink/?LinkId=186397)の`JobStapleAllDocuments`キーワード、されません、`DocumentStaple`キーワード。  
  
 使用して、プリンターがサポートされるオプションのことをテストすることができます、<xref:System.Printing.PrintCapabilities.StaplingCapability%2A>プロパティです。  
  
   
  
## Examples  
 次の例は、プリンターの機能をテストするときに、このプロパティを使用する方法を示しています。 それらを活用するために印刷ジョブを構成するとします。  
  
 [!code-cpp[XpsCreate#PrinterCapabilities](~/samples/snippets/cpp/VS_Snippets_Wpf/XpsCreate/CPP/XpsCreate.cpp#printercapabilities)]
 [!code-csharp[XpsCreate#PrinterCapabilities](~/samples/snippets/csharp/VS_Snippets_Wpf/XpsCreate/CSharp/XpsCreate.cs#printercapabilities)]
 [!code-vb[XpsCreate#PrinterCapabilities](~/samples/snippets/visualbasic/VS_Snippets_Wpf/XpsCreate/visualbasic/xpscreate.vb#printercapabilities)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">含まれていない値にプロパティを設定するコードの呼び出しが試行、<see cref="T:System.Printing.Stapling" />列挙します。</exception>
      </Docs>
    </Member>
    <Member MemberName="TrueTypeFontMode">
      <MemberSignature Language="C#" Value="public Nullable&lt;System.Printing.TrueTypeFontMode&gt; TrueTypeFontMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.Printing.TrueTypeFontMode&gt; TrueTypeFontMode" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintTicket.TrueTypeFontMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>ReachFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Printing.TrueTypeFontMode&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはプリンターが TrueType フォントを使用するテキストを処理する方法を示す値を設定します。</summary>
        <value>A<see cref="T:System.Printing.TrueTypeFontMode" />プリンターが TrueType フォントを処理する方法を指定する値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A`null`値は、このプロパティは、この機能の設定が指定されていないことを意味します。 また、値が`null`、XML のバージョンの<xref:System.Printing.PrintTicket>(を参照してください<xref:System.Printing.PrintTicket.SaveTo%2A>と<xref:System.Printing.PrintTicket.GetXmlStream%2A>) は、この機能のすべてのマークアップが含まれていません。  
  
 このプロパティに対応、[印刷スキーマ](http://go.microsoft.com/fwlink/?LinkId=186397)の`PageTrueTypeFontMode`キーワード。  
  
 使用して、プリンターがサポートされるオプションのことをテストすることができます、<xref:System.Printing.PrintCapabilities.TrueTypeFontModeCapability%2A>プロパティです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">含まれていない値にプロパティを設定するコードの呼び出しが試行、<see cref="T:System.Printing.TrueTypeFontMode" />列挙します。</exception>
      </Docs>
    </Member>
  </Members>
</Type>
