<Type Name="BitmapEncoder" FullName="System.Windows.Media.Imaging.BitmapEncoder">
  <TypeSignature Language="C#" Value="public abstract class BitmapEncoder : System.Windows.Threading.DispatcherObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit BitmapEncoder extends System.Windows.Threading.DispatcherObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.Imaging.BitmapEncoder" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Threading.DispatcherObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>コレクションをエンコード<see cref="T:System.Windows.Media.Imaging.BitmapFrame" />をイメージ ストリームにオブジェクト。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 派生コーデックでは、ビットマップをエンコードする方法を決定するために使用する、特殊なエンコード プロパティのサポートも提供可能性があります。 たとえば、コーデックでは、特殊な圧縮ルーチンまたはエンコードされたイメージのインター レースをサポートできます。  
  
 ビットマップ形式には、1 つのフレームのみがサポートする場合でも、派生エンコーダーの複数のフレームを指定できます。 この場合、最初のフレームだけが保存されます。  
  
 フレームのコレクションには、エンコードされた 1 つずつファイル ストリームの任意の数にはなります。  
  
 エンコーディングは、部分信頼では機能しません。 参照してください[WPF 部分信頼セキュリティ](~/docs/framework/wpf/wpf-partial-trust-security.md)については部分的に信頼します。  
  
   
  
## Examples  
 次の例は、派生を使用する方法を示します<xref:System.Windows.Media.Imaging.TiffBitmapEncoder>イメージをエンコードするクラス。  
  
 [!code-csharp[bitmapframeexample#3](~/samples/snippets/csharp/VS_Snippets_Wpf/BitmapFrameExample/CSharp/BitmapFrame.cs#3)]
 [!code-vb[bitmapframeexample#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BitmapFrameExample/VB/BitmapFrame.vb#3)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BitmapEncoder ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Imaging.BitmapEncoder.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.Media.Imaging.BitmapEncoder" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CodecInfo">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Media.Imaging.BitmapCodecInfo CodecInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Imaging.BitmapCodecInfo CodecInfo" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Imaging.BitmapEncoder.CodecInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Imaging.BitmapCodecInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このコーデックを説明する情報を取得します。</summary>
        <value><see cref="T:System.Windows.Media.Imaging.BitmapCodecInfo" /> のインスタンス。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A<xref:System.Windows.Media.Imaging.BitmapCodecInfo>実装はすべてコーデックに必要です。  
  
   
  
## Examples  
 次の例からの情報を読み取る方法を示しています、<xref:System.Windows.Media.Imaging.BitmapCodecInfo>オブジェクトを文字列に送信します。  
  
 [!code-csharp[bitmapframeexample#3](~/samples/snippets/csharp/VS_Snippets_Wpf/BitmapFrameExample/CSharp/BitmapFrame.cs#3)]
 [!code-vb[bitmapframeexample#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BitmapFrameExample/VB/BitmapFrame.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ColorContexts">
      <MemberSignature Language="C#" Value="public virtual System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Media.ColorContext&gt; ColorContexts { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Windows.Media.ColorContext&gt; ColorContexts" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Imaging.BitmapEncoder.ColorContexts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Media.ColorContext&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはこのエンコーダーに関連付けられているカラー プロファイルを表す値を設定します。</summary>
        <value>コレクション<see cref="T:System.Windows.Media.ColorContext" />このエンコーダーを使用するカラー プロファイルを表すオブジェクト。</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">エンコーダーは、カラー プロファイルをサポートしていません。</exception>
        <exception cref="T:System.ArgumentNullException"><see cref="T:System.Windows.Media.ColorContext" />エンコーダーに渡される値は<see langword="null" />します。</exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.Imaging.BitmapEncoder Create (Guid containerFormat);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Media.Imaging.BitmapEncoder Create(valuetype System.Guid containerFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Imaging.BitmapEncoder.Create(System.Guid)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Imaging.BitmapEncoder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containerFormat" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="containerFormat">必要なビットマップ エンコード形式を識別します。</param>
        <summary>必要なビットマップ形式を識別する <see cref="T:System.Guid" /> から <see cref="T:System.Windows.Media.Imaging.BitmapEncoder" /> を作成します。</summary>
        <returns>指定した <paramref name="containerFormat" /> にエンコードすることができる <see cref="T:System.Windows.Media.Imaging.BitmapEncoder" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、拡張のためだけに提供します。 コーデックの作成者が生成する必要があります独自<xref:System.Guid>を新しく作成された、エンコーダーを識別します。 派生クラスを使用して<xref:System.Windows.Media.Imaging.BitmapEncoder>などのクラス、<xref:System.Windows.Media.Imaging.BmpBitmapEncoder>に組み込まれているコーデックのエンコーダーを作成するためのクラスです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="containerFormat" /> が <see langword="Empty" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="Frames">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;System.Windows.Media.Imaging.BitmapFrame&gt; Frames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class System.Windows.Media.Imaging.BitmapFrame&gt; Frames" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Imaging.BitmapEncoder.Frames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Windows.Media.Imaging.BitmapFrame&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはイメージ内の個々 のフレームを設定します。</summary>
        <value>コレクション<see cref="T:System.Windows.Media.Imaging.BitmapFrame" />イメージ内のオブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 のみ[!INCLUDE[TLA#tla_tiff](~/includes/tlasharptla-tiff-md.md)]、 [!INCLUDE[TLA#tla_gif](~/includes/tlasharptla-gif-md.md)]、および[!INCLUDE[TLA#tla_wdp](~/includes/tlasharptla-wdp-md.md)]イメージが複数のフレームをサポートします。 追加のフレームをサポートしていない形式に追加しようとすると、エンコードする最初のフレームのみになります。  
  
<a name="xamlTextUsage_Frames"></a>   
## <a name="xaml-text-usage"></a>XAML テキストの使用方法  
 このプロパティを使用することはできません[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]です。  
  
   
  
## Examples  
 次の例では、エンコーダーにフレームを追加する方法を示します。  
  
 [!code-csharp[bitmapframeexample#3](~/samples/snippets/csharp/VS_Snippets_Wpf/BitmapFrameExample/CSharp/BitmapFrame.cs#3)]
 [!code-vb[bitmapframeexample#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BitmapFrameExample/VB/BitmapFrame.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><see cref="T:System.Windows.Media.Imaging.BitmapFrame" />エンコーダーに渡される値は<see langword="null" />します。</exception>
      </Docs>
    </Member>
    <Member MemberName="Metadata">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Media.Imaging.BitmapMetadata Metadata { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Imaging.BitmapMetadata Metadata" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Imaging.BitmapEncoder.Metadata" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Imaging.BitmapMetadata</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>エンコード中にこのビットマップに関連付けられるメタデータを取得または設定します。</summary>
        <value><see cref="T:System.Windows.Media.Imaging.BitmapMetadata" /> のインスタンス。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ビットマップ イメージをサポートし、異なる方法でメタデータを格納します。 ビットマップごとにサポートされているメタデータの種類の詳細については、次を参照してください。、<xref:System.Windows.Media.Imaging.BitmapMetadata>クラスです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">エンコーダーは、グローバルなメタデータをサポートしません。</exception>
        <exception cref="T:System.ArgumentNullException">互換性のない形式でメタデータを書き込もうとしています。</exception>
      </Docs>
    </Member>
    <Member MemberName="Palette">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Media.Imaging.BitmapPalette Palette { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Imaging.BitmapPalette Palette" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Imaging.BitmapEncoder.Palette" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Imaging.BitmapPalette</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定を表す値、<see cref="T:System.Windows.Media.Imaging.BitmapPalette" />エンコードされたビットマップのです。</summary>
        <value><see cref="T:System.Windows.Media.Imaging.BitmapPalette" /> のインスタンス。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 のみ[!INCLUDE[TLA#tla_tiff](~/includes/tlasharptla-tiff-md.md)]と[!INCLUDE[TLA#tla_gif](~/includes/tlasharptla-gif-md.md)]イメージ (一部の古いと、非標準[!INCLUDE[TLA#tla_bmp](~/includes/tlasharptla-bmp-md.md)]イメージ) パレットをサポートします。  
  
   
  
## Examples  
 次の例では、カスタム パレットを適用する方法、[!INCLUDE[TLA#tla_tiff](~/includes/tlasharptla-tiff-md.md)]イメージを作成し、後でそれをエンコードします。  
  
 [!code-csharp[bitmapframeexample#1](~/samples/snippets/csharp/VS_Snippets_Wpf/BitmapFrameExample/CSharp/BitmapFrame.cs#1)]
 [!code-vb[bitmapframeexample#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BitmapFrameExample/VB/BitmapFrame.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><see cref="T:System.Windows.Media.Imaging.BitmapPalette" />エンコーダーに渡される値は<see langword="null" />します。</exception>
      </Docs>
    </Member>
    <Member MemberName="Preview">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Media.Imaging.BitmapSource Preview { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Imaging.BitmapSource Preview" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Imaging.BitmapEncoder.Preview" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Imaging.BitmapSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定、<see cref="T:System.Windows.Media.Imaging.BitmapSource" />を 1 つを使用する必要がある場合、ビットマップのグローバル プレビューを表すです。</summary>
        <value>A<see cref="T:System.Windows.Media.Imaging.BitmapSource" />ビットマップのプレビューを表すです。</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">ビットマップはプレビューをサポートしていません。</exception>
        <exception cref="T:System.ArgumentNullException">値が <see langword="null" /> に設定されています。</exception>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public virtual void Save (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Save(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Imaging.BitmapEncoder.Save(System.IO.Stream)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">このビットマップのエンコード後のファイル ストリームを識別します。</param>
        <summary>指定したビットマップ イメージのエンコード<see cref="T:System.IO.Stream" />です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このコンテキストで[!INCLUDE[TLA#tla_api](~/includes/tlasharptla-api-md.md)]、"を保存"し、[エンコード] は同じ意味です。  
  
   
  
## Examples  
 次の例は、派生を使用して、ファイル ストリームにビットマップ イメージを保存する方法を示します<xref:System.Windows.Media.Imaging.TiffBitmapEncoder>クラスです。  
  
 [!code-csharp[bitmapframeexample#3](~/samples/snippets/csharp/VS_Snippets_Wpf/BitmapFrameExample/CSharp/BitmapFrame.cs#3)]
 [!code-vb[bitmapframeexample#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BitmapFrameExample/VB/BitmapFrame.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">ビットマップは既にエンコードされています。</exception>
        <exception cref="T:System.NotSupportedException"><see cref="P:System.Windows.Media.Imaging.BitmapEncoder.Frames" />カウントが 0 未満です。</exception>
      </Docs>
    </Member>
    <Member MemberName="Thumbnail">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Media.Imaging.BitmapSource Thumbnail { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Imaging.BitmapSource Thumbnail" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Imaging.BitmapEncoder.Thumbnail" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Imaging.BitmapSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定、<see cref="T:System.Windows.Media.Imaging.BitmapSource" />グローバル埋め込みサムネイルを表すです。</summary>
        <value>A<see cref="T:System.Windows.Media.Imaging.BitmapSource" />ビットマップのサムネイルを表すです。</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">ビットマップはサムネールをサポートしていません。</exception>
        <exception cref="T:System.ArgumentNullException">値が <see langword="null" /> に設定されています。</exception>
      </Docs>
    </Member>
  </Members>
</Type>
