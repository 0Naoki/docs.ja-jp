<Type Name="IMessageFormatter" FullName="System.Messaging.IMessageFormatter">
  <TypeSignature Language="C#" Value="public interface IMessageFormatter : ICloneable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IMessageFormatter implements class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Messaging.IMessageFormatter" />
  <AssemblyInfo>
    <AssemblyName>System.Messaging</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Messaging.Design.MessageFormatterConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>シリアル化またはメッセージ キューのメッセージの本文からオブジェクトを逆シリアル化します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 アプリケーションがのインスタンスを使用してキューにメッセージを送信すると、<xref:System.Messaging.MessageQueue>クラス、フォーマッタが (任意のクラスのインスタンスであることができます) オブジェクトをストリームにシリアル化およびメッセージの本文に挿入します。 使用してキューから読み取るときに、 <xref:System.Messaging.MessageQueue>、フォーマッタにメッセージ データを逆シリアル化、<xref:System.Messaging.Message.Body%2A>のプロパティ、<xref:System.Messaging.Message>です。  
  
 <xref:System.Messaging.BinaryMessageFormatter>および<xref:System.Messaging.ActiveXMessageFormatter>よりも高速なスループットを提供、<xref:System.Messaging.XmlMessageFormatter>です。 <xref:System.Messaging.ActiveXMessageFormatter>により、Visual Basic 6.0 のメッセージ キュー アプリケーションとの相互運用性。 <xref:System.Messaging.XmlMessageFormatter>疎は組み合わせることで、つまり、サーバーとクライアントが送られ、個別に受信した型のバージョンをできます。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public bool CanRead (System.Messaging.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanRead(class System.Messaging.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.IMessageFormatter.CanRead(System.Messaging.Message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Messaging.Message" />
      </Parameters>
      <Docs>
        <param name="message"><see cref="T:System.Messaging.Message" />を検査します。</param>
        <summary>クラスで実装された場合、フォーマッタがメッセージの内容を逆シリアル化できるかどうかを判断します。</summary>
        <returns>
          <see langword="true" />フォーマッタがメッセージを逆シリアル化できる場合それ以外の場合、<see langword="false" />です。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public object Read (System.Messaging.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Read(class System.Messaging.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.IMessageFormatter.Read(System.Messaging.Message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Messaging.Message" />
      </Parameters>
      <Docs>
        <param name="message"><see cref="T:System.Messaging.Message" />を逆シリアル化します。</param>
        <summary>クラスで実装された場合、指定されたメッセージの内容を読み取り、メッセージからのデータを格納しているオブジェクトを作成します。</summary>
        <returns>逆シリアル化されたメッセージ。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (System.Messaging.Message message, object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(class System.Messaging.Message message, object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.IMessageFormatter.Write(System.Messaging.Message,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Messaging.Message" />
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="message"><see cref="T:System.Messaging.Message" />シリアル化されたオブジェクトが含まれる。</param>
        <param name="obj">メッセージにシリアル化するオブジェクト。</param>
        <summary>クラスで実装された場合、メッセージの本文にオブジェクトをシリアル化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
