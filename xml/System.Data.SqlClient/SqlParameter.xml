<Type Name="SqlParameter" FullName="System.Data.SqlClient.SqlParameter">
  <TypeSignature Language="C#" Value="public sealed class SqlParameter : System.Data.Common.DbParameter, ICloneable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed SqlParameter extends System.Data.Common.DbParameter implements class System.Data.IDataParameter, class System.Data.IDbDataParameter, class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Data.SqlClient.SqlParameter" />
  <AssemblyInfo>
    <AssemblyName>System.Data.SqlClient</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbParameter</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter("System.Data.SqlClient.SqlParameter+SqlParameterConverter, System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>パラメーターを表します、<see cref="T:System.Data.SqlClient.SqlCommand" />および必要に応じてそのへのマッピング<see cref="T:System.Data.DataSet" />列です。 このクラスは継承できません。 パラメーターの詳細については、次を参照してください。[構成パラメーターとパラメーターのデータ型](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md)です。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 パラメーター名の大文字と小文字は区別されません。  
  
> [!NOTE]
>  名前のない、序数に基づくとも呼ばれます。 パラメーターが、SQL Server の .NET Framework データ プロバイダーによってサポートされていません。  
  
 詳細については、その他のサンプル コードと共にパラメーターを使用する方法を示すについて[コマンドおよびパラメーター](~/docs/framework/data/adonet/commands-and-parameters.md)です。  
  
   
  
## Examples  
 次の例の複数のインスタンスを作成する<xref:System.Data.SqlClient.SqlParameter>を通じて、<xref:System.Data.SqlClient.SqlParameterCollection>内のコレクション、<xref:System.Data.SqlClient.SqlDataAdapter>です。 これらのパラメーター、データ ソースからデータを選択し、配置するデータを使用して、<xref:System.Data.DataSet>です。 この例では、<xref:System.Data.DataSet>と<xref:System.Data.SqlClient.SqlDataAdapter>適切なスキーマ、コマンド、および接続を使用して既に作成されています。 詳細な情報とパラメーターの使用に関するその他の例については、次を参照してください。 [ADO.NET でのデータの変更の取得および](~/docs/framework/data/adonet/retrieving-and-modifying-data.md)と[構成パラメーターとパラメーターのデータ型](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md)です。  
  
 [!code-csharp[Classic WebData SqlParameter Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlParameter.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Data.SqlClient.SqlParameter" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次の例を作成、<xref:System.Data.SqlClient.SqlParameter>し、一部のプロパティを設定します。  
  
 [!code-csharp[Classic WebData SqlParameter.SqlParameter Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter.SqlParameter Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter.SqlParameter Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter.SqlParameter Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlParameter (string parameterName, System.Data.SqlDbType dbType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string parameterName, valuetype System.Data.SqlDbType dbType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parameterName" Type="System.String" />
        <Parameter Name="dbType" Type="System.Data.SqlDbType" />
      </Parameters>
      <Docs>
        <param name="parameterName">マップするパラメーターの名前。</param>
        <param name="dbType"><see cref="T:System.Data.SqlDbType" /> 値のいずれか。</param>
        <summary>指定されたパラメーター名およびデータ型を使用する <see cref="T:System.Data.SqlClient.SqlParameter" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 データ型と、必要に応じて、**サイズ**と<xref:System.Data.SqlClient.SqlParameter.Precision%2A>の値から推論されます、`dbType`パラメーター。  
  
   
  
## Examples  
 次の例を作成、<xref:System.Data.SqlClient.SqlParameter>し、一部のプロパティを設定します。  
  
 [!code-csharp[Classic WebData SqlParameter.SqlParameter2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter.SqlParameter2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter.SqlParameter2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter.SqlParameter2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="dbType" /> パラメーターの指定された値が、正しくないバックエンド データ型です。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlParameter (string parameterName, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string parameterName, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Object)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parameterName" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="parameterName">マップするパラメーターの名前。</param>
        <param name="value"><see cref="T:System.Data.SqlClient.SqlParameter" /> の値である <see cref="T:System.Object" />。</param>
        <summary>新しい <see cref="T:System.Data.SqlClient.SqlParameter" /> のパラメーター名および値を使用する <see cref="T:System.Data.SqlClient.SqlParameter" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 指定すると、<xref:System.Object>で、 `value` 、パラメーター、<xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A>の Microsoft .NET Framework の型から推論される、<xref:System.Object>です。  
  
 このオーバー ロードを使用する場合は、注意を使用して、<xref:System.Data.SqlClient.SqlParameter>コンス トラクターの整数パラメーターの値を指定します。 このオーバー ロードはため、`value`型の<xref:System.Object>は整数値を変換する必要があります、<xref:System.Object>次の c# の例に示すように、値が 0 の場合を入力します。  
  
```  
Parameter = new SqlParameter("@pname", (object)0);  
```  
  
 この変換を実行しない場合、コンパイラを呼び出すしようとするいると想定、 `SqlParameter` (`string`、 `SqlDbType`) コンス トラクター オーバー ロードします。  
  
   
  
## Examples  
 次の例を作成、<xref:System.Data.SqlClient.SqlParameter>し、一部のプロパティを設定します。  
  
 [!code-csharp[Classic WebData SqlParameter.SqlParameter6 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter.SqlParameter6 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter.SqlParameter6 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter.SqlParameter6 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlParameter (string parameterName, System.Data.SqlDbType dbType, int size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string parameterName, valuetype System.Data.SqlDbType dbType, int32 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType,System.Int32)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parameterName" Type="System.String" />
        <Parameter Name="dbType" Type="System.Data.SqlDbType" />
        <Parameter Name="size" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="parameterName">マップするパラメーターの名前。</param>
        <param name="dbType"><see cref="T:System.Data.SqlDbType" /> の値の 1 つ。</param>
        <param name="size">パラメーターの長さ。</param>
        <summary>パラメーター名、<see cref="T:System.Data.SqlDbType" />、およびサイズを使用する <see cref="T:System.Data.SqlClient.SqlParameter" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 **サイズ**の値から推論される、`dbType`パラメーター明示的に設定されていない場合、`size`パラメーター。  
  
   
  
## Examples  
 次の例を作成、<xref:System.Data.SqlClient.SqlParameter>し、一部のプロパティを設定します。  
  
 [!code-csharp[Classic WebData SqlParameter.SqlParameter4 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter.SqlParameter4 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter.SqlParameter4 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter.SqlParameter4 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="dbType" /> パラメーターの指定された値が、正しくないバックエンド データ型です。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlParameter (string parameterName, System.Data.SqlDbType dbType, int size, string sourceColumn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string parameterName, valuetype System.Data.SqlDbType dbType, int32 size, string sourceColumn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType,System.Int32,System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parameterName" Type="System.String" />
        <Parameter Name="dbType" Type="System.Data.SqlDbType" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="sourceColumn" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="parameterName">マップするパラメーターの名前。</param>
        <param name="dbType"><see cref="T:System.Data.SqlDbType" /> の値の 1 つ。</param>
        <param name="size">パラメーターの長さ。</param>
        <param name="sourceColumn"><see cref="Overload:System.Data.Common.DbDataAdapter.Update" /> に対する呼び出しでこの <see cref="T:System.Data.SqlClient.SqlParameter" /> が使用されている場合の、ソース列 (<see cref="P:System.Data.SqlClient.SqlParameter.SourceColumn" />) の名前。</param>
        <summary>パラメーター名、<see cref="T:System.Data.SqlDbType" />、サイズ、およびソース列名を使用する <see cref="T:System.Data.SqlClient.SqlParameter" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 **サイズ**の値から推論される、`dbType`パラメーター明示的に設定されていない場合、`size`パラメーター。  
  
   
  
## Examples  
 次の例を作成、<xref:System.Data.SqlClient.SqlParameter>し、一部のプロパティを設定します。  
  
 [!code-csharp[Classic WebData SqlParameter.SqlParameter5 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter.SqlParameter5 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter.SqlParameter5 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter.SqlParameter5 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="dbType" /> パラメーターの指定された値が、正しくないバックエンド データ型です。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlParameter (string parameterName, System.Data.SqlDbType dbType, int size, System.Data.ParameterDirection direction, bool isNullable, byte precision, byte scale, string sourceColumn, System.Data.DataRowVersion sourceVersion, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string parameterName, valuetype System.Data.SqlDbType dbType, int32 size, valuetype System.Data.ParameterDirection direction, bool isNullable, unsigned int8 precision, unsigned int8 scale, string sourceColumn, valuetype System.Data.DataRowVersion sourceVersion, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType,System.Int32,System.Data.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Object)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="parameterName" Type="System.String" />
        <Parameter Name="dbType" Type="System.Data.SqlDbType" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Data.ParameterDirection" />
        <Parameter Name="isNullable" Type="System.Boolean" />
        <Parameter Name="precision" Type="System.Byte" />
        <Parameter Name="scale" Type="System.Byte" />
        <Parameter Name="sourceColumn" Type="System.String" />
        <Parameter Name="sourceVersion" Type="System.Data.DataRowVersion" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="parameterName">マップするパラメーターの名前。</param>
        <param name="dbType"><see cref="T:System.Data.SqlDbType" /> の値の 1 つ。</param>
        <param name="size">パラメーターの長さ。</param>
        <param name="direction"><see cref="T:System.Data.ParameterDirection" /> の値の 1 つ。</param>
        <param name="isNullable">
          フィールドの値を NULL に設定できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
        <param name="precision"><see cref="P:System.Data.SqlClient.SqlParameter.Value" /> を解決する際の、小数点の左側および右側の桁数の合計。</param>
        <param name="scale"><see cref="P:System.Data.SqlClient.SqlParameter.Value" /> を解決する際の、小数点以下の合計桁数。</param>
        <param name="sourceColumn"><see cref="Overload:System.Data.Common.DbDataAdapter.Update" /> に対する呼び出しでこの <see cref="T:System.Data.SqlClient.SqlParameter" /> が使用されている場合の、ソース列 (<see cref="P:System.Data.SqlClient.SqlParameter.SourceColumn" />) の名前。</param>
        <param name="sourceVersion"><see cref="T:System.Data.DataRowVersion" /> 値のいずれか。</param>
        <param name="value"><see cref="T:System.Data.SqlClient.SqlParameter" /> の値である <see cref="T:System.Object" />。</param>
        <summary>新しいインスタンスを初期化、<see cref="T:System.Data.SqlClient.SqlParameter" />パラメーター名、パラメーターの型、パラメーターのサイズを使用するクラス、 <see cref="T:System.Data.ParameterDirection" />、パラメーター、パラメーターを基になる列の小数点以下桁数の有効桁数、<see cref="T:System.Data.DataRowVersion" />使用、およびパラメーターの値にします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 **サイズ**と<xref:System.Data.SqlClient.SqlParameter.Precision%2A>の値から推論されます、`dbType`パラメーターで明示的に設定されていない場合、`size`と`precision`パラメーター。  
  
   
  
## Examples  
 次の例を作成、<xref:System.Data.SqlClient.SqlParameter>し、一部のプロパティを設定します。  
  
 [!code-csharp[Classic WebData SqlParameter.SqlParameter1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter.SqlParameter1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter.SqlParameter1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter.SqlParameter1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="dbType" /> パラメーターの指定された値が、正しくないバックエンド データ型です。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlParameter (string parameterName, System.Data.SqlDbType dbType, int size, System.Data.ParameterDirection direction, byte precision, byte scale, string sourceColumn, System.Data.DataRowVersion sourceVersion, bool sourceColumnNullMapping, object value, string xmlSchemaCollectionDatabase, string xmlSchemaCollectionOwningSchema, string xmlSchemaCollectionName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string parameterName, valuetype System.Data.SqlDbType dbType, int32 size, valuetype System.Data.ParameterDirection direction, unsigned int8 precision, unsigned int8 scale, string sourceColumn, valuetype System.Data.DataRowVersion sourceVersion, bool sourceColumnNullMapping, object value, string xmlSchemaCollectionDatabase, string xmlSchemaCollectionOwningSchema, string xmlSchemaCollectionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType,System.Int32,System.Data.ParameterDirection,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Boolean,System.Object,System.String,System.String,System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parameterName" Type="System.String" />
        <Parameter Name="dbType" Type="System.Data.SqlDbType" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Data.ParameterDirection" />
        <Parameter Name="precision" Type="System.Byte" />
        <Parameter Name="scale" Type="System.Byte" />
        <Parameter Name="sourceColumn" Type="System.String" />
        <Parameter Name="sourceVersion" Type="System.Data.DataRowVersion" />
        <Parameter Name="sourceColumnNullMapping" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="xmlSchemaCollectionDatabase" Type="System.String" />
        <Parameter Name="xmlSchemaCollectionOwningSchema" Type="System.String" />
        <Parameter Name="xmlSchemaCollectionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="parameterName">マップするパラメーターの名前。</param>
        <param name="dbType"><see cref="T:System.Data.SqlDbType" /> の値の 1 つ。</param>
        <param name="size">パラメーターの長さ。</param>
        <param name="direction"><see cref="T:System.Data.ParameterDirection" /> 値のいずれか。</param>
        <param name="precision"><see cref="P:System.Data.SqlClient.SqlParameter.Value" /> を解決する際の、小数点の左側および右側の桁数の合計。</param>
        <param name="scale"><see cref="P:System.Data.SqlClient.SqlParameter.Value" /> を解決する際の、小数点以下の合計桁数。</param>
        <param name="sourceColumn"><see cref="Overload:System.Data.Common.DbDataAdapter.Update" /> に対する呼び出しでこの <see cref="T:System.Data.SqlClient.SqlParameter" /> が使用されている場合の、ソース列 (<see cref="P:System.Data.SqlClient.SqlParameter.SourceColumn" />) の名前。</param>
        <param name="sourceVersion"><see cref="T:System.Data.DataRowVersion" /> 値のいずれか。</param>
        <param name="sourceColumnNullMapping">
          ソース列が null 許容である場合は <see langword="true" />。null 許容ではない場合は <see langword="false" />。</param>
        <param name="value"><see cref="T:System.Data.SqlClient.SqlParameter" /> の値である <see cref="T:System.Object" />。</param>
        <param name="xmlSchemaCollectionDatabase">この XML インスタンスのスキーマ コレクションがあるデータベースの名前。</param>
        <param name="xmlSchemaCollectionOwningSchema">この XML インスタンスのスキーマ コレクションがある、所有リレーショナル スキーマ。</param>
        <param name="xmlSchemaCollectionName">このパラメーターのスキーマ コレクションの名前。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Data.SqlClient.SqlParameter" /> 、パラメーター名、パラメーターの型、方向、パラメーターの長さを使用するクラス、有効桁数、小数点以下桁数のいずれかのソース列の名前、<see cref="T:System.Data.DataRowVersion" />値は、基になる列の値のマッピングのブール値、 <see langword="SqlParameter" />、この XML インスタンスのスキーマ コレクションが置かれているデータベースの名前、この XML インスタンスのスキーマ コレクションがある、所有リレーショナル スキーマと、このパラメーターのスキーマ コレクションの名前。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlParameter.Size%2A>と<xref:System.Data.SqlClient.SqlParameter.Precision%2A>の値から推論されます、`dbType`パラメーターで明示的に設定されていない場合、`size`と`precision`パラメーター。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareInfo">
      <MemberSignature Language="C#" Value="public System.Data.SqlTypes.SqlCompareOptions CompareInfo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.SqlTypes.SqlCompareOptions CompareInfo" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.CompareInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlCompareOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このパラメーターについての文字列比較を実行する方法を定義する <see cref="T:System.Globalization.CompareInfo" /> オブジェクトを取得または設定します。</summary>
        <value>このパラメーターの文字列比較を定義する <see cref="T:System.Globalization.CompareInfo" /> オブジェクト。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DbType">
      <MemberSignature Language="C#" Value="public override System.Data.DbType DbType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.DbType DbType" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.DbType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DbType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>パラメーターの <see cref="T:System.Data.SqlDbType" /> を取得または設定します。</summary>
        <value><see cref="T:System.Data.SqlDbType" /> 値のいずれか。 既定値は、<see langword="NVarChar" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A>と<xref:System.Data.SqlClient.SqlParameter.DbType%2A>がリンクされています。 そのため、設定、<xref:System.Data.SqlClient.SqlParameter.DbType%2A>変更、<xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A>に、サポートする<xref:System.Data.SqlDbType>です。  
  
 サポートされるデータ型の一覧を参照してください、適切な<xref:System.Data.SqlDbType>メンバー。 詳細については、次を参照してください。 [DataAdapter パラメーター](~/docs/framework/data/adonet/dataadapter-parameters.md)です。  
  
   
  
## Examples  
 次の例を作成、<xref:System.Data.SqlClient.SqlParameter>し、一部のプロパティを設定します。  
  
 [!code-csharp[Classic WebData SqlParameter.IsNullable Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter.IsNullable Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter.IsNullable Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter.IsNullable Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Direction">
      <MemberSignature Language="C#" Value="public override System.Data.ParameterDirection Direction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.ParameterDirection Direction" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.Direction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.ParameterDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>パラメーターが入力専用、出力専用、双方向、またはストアド プロシージャの戻り値パラメーターのいずれであるかを示す値を取得または設定します。</summary>
        <value><see cref="T:System.Data.ParameterDirection" /> 値のいずれか。 既定値は、<see langword="Input" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 場合、<xref:System.Data.ParameterDirection>は、出力、および関連付けられている実行<xref:System.Data.SqlClient.SqlCommand>、値を返さない、 <xref:System.Data.SqlClient.SqlParameter> null 値が含まれています。  
  
 `Output`、 `InputOut`、および`ReturnValue`呼び出しで返されるパラメーター<xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>を閉じるまでにアクセスすることはできません、<xref:System.Data.SqlClient.SqlDataReader>です。  
  
   
  
## Examples  
 次の例を作成、<xref:System.Data.SqlClient.SqlParameter>し、一部のプロパティを設定します。  
  
 [コマンドおよびパラメーター](~/docs/framework/data/adonet/commands-and-parameters.md)  
  
 [DataAdapter パラメーター](~/docs/framework/data/adonet/dataadapter-parameters.md)  
  
 [SQL Server と ADO.NET](http://msdn.microsoft.com/library/c18b1fb1-2af1-4de7-80a4-95e56fd976cb)  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">プロパティが、有効な <see cref="T:System.Data.ParameterDirection" /> 値のいずれかに設定されていません。</exception>
      </Docs>
    </Member>
    <Member MemberName="ForceColumnEncryption">
      <MemberSignature Language="C#" Value="public bool ForceColumnEncryption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ForceColumnEncryption" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.ForceColumnEncryption" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>使用したときに、パラメーターの暗号化を強制[Always Encrypted](https://msdn.microsoft.com/library/mt163865.aspx)です。 パラメーターの暗号化が不要であることが SQL Server からドライバーに通知された場合、このパラメーターを使用するクエリは失敗します。 クライアントに対して不正な暗号化メタデータを提供する危険な SQL Server が関係したセキュリティ攻撃を受けると、データ漏洩が引き起こされる可能性がありますが、このプロパティは、そのような攻撃に対する付加的な保護を提供します。</summary>
        <value>
          <see langword="true" />場合は、パラメーターがある force 列の暗号化です。それ以外の場合、<see langword="false" />です。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNullable">
      <MemberSignature Language="C#" Value="public override bool IsNullable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNullable" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.IsNullable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>パラメーターが null 値を受け取るかどうかを示す値を取得または設定します。 <see cref="P:System.Data.SqlClient.SqlParameter.IsNullable" /> は、パラメーターの値の検証には使用されないため、コマンドを実行するときに null 値の送信や受信を妨げません。</summary>
        <value>
          null 値を受け取る場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Null 値の処理を使用して、<xref:System.DBNull>クラスです。  
  
   
  
## Examples  
 次の例を作成、<xref:System.Data.SqlClient.SqlParameter>し、一部のプロパティを設定します。  
  
 [!code-csharp[DataWorks SqlParam.Properties#2](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlParam.Properties/CS/source.cs#2)]
 [!code-vb[DataWorks SqlParam.Properties#2](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlParam.Properties/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LocaleId">
      <MemberSignature Language="C#" Value="public int LocaleId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LocaleId" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.LocaleId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>特定の地域の規約や言語を決定するロケール識別子を取得または設定します。</summary>
        <value>パラメーターに関連付けられているロケールの識別子を返します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ロケールは、特定の地域の規約や言語を識別します。 特定の文字列 (文字セット) のエンコードに使用されるコード ページは、その文字列またはこれを生成した環境で使用されるロケールに基づいています。 このプロパティの入力パラメーター) の設定または取得 (出力パラメーター)、サーバーを使用してデータを交換するときに、文字列にアタッチするロケール。 このプロパティは通常と共に使用する、<xref:System.Data.SqlClient.SqlParameter.CompareInfo%2A>プロパティです。  
  
```  
static void CreateSqlParameterLocaleId(){  
   SqlParameter parameter = new SqlParameter("pName", SqlDbType.VarChar);  
   parameter.LocaleId = 1033;   // English - United States  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Offset">
      <MemberSignature Language="C#" Value="public int Offset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Offset" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.Offset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Data.SqlClient.SqlParameter.Value" /> プロパティへのオフセットを取得または設定します。</summary>
        <value><see cref="P:System.Data.SqlClient.SqlParameter.Value" /> へのオフセット。 既定値は 0 です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Offset`バイナリおよび文字列のデータのクライアント側のチャンキングのプロパティを使用します。 たとえば、サーバー上の列に 10 MB のテキストを挿入するために、ユーザー実行可能性があります 1 MB のチャンクの 10 個のパラメーター化された挿入の値をシフト`Offset`反復処理ごとに 1 mb です。  
  
 `Offset`バイナリ型のバイト数と文字列の文字数を指定します。 文字列の数では、終端の文字は含まれません。  
  
   
  
## Examples  
 次の例を作成、<xref:System.Data.SqlClient.SqlParameter>し、一部のプロパティを設定します。  
  
 [!code-csharp[DataWorks SqlParam.Properties#3](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlParam.Properties/CS/source.cs#3)]
 [!code-vb[DataWorks SqlParam.Properties#3](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlParam.Properties/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParameterName">
      <MemberSignature Language="C#" Value="public override string ParameterName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ParameterName" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.ParameterName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Data.SqlClient.SqlParameter" /> の名前を取得または設定します。</summary>
        <value><see cref="T:System.Data.SqlClient.SqlParameter" /> の名前。 既定値は空の文字列です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlParameter.ParameterName%2A>形式で指定された@paramnameです。 設定する必要があります<xref:System.Data.SqlClient.SqlParameter.ParameterName%2A>実行する前に、<xref:System.Data.SqlClient.SqlCommand>パラメーターに依存します。  
  
   
  
## Examples  
 次の例を作成、<xref:System.Data.SqlClient.SqlParameter>し、一部のプロパティを設定します。  
  
 [!code-csharp[Classic WebData SqlParameter.ParameterName Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter.ParameterName Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter.ParameterName Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter.ParameterName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Precision">
      <MemberSignature Language="C#" Value="public byte Precision { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8 Precision" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.Precision" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Data.SqlClient.SqlParameter.Value" /> プロパティを表すために使用する最大桁数を取得または設定します。</summary>
        <value><see cref="P:System.Data.SqlClient.SqlParameter.Value" /> プロパティを表すために使用する最大桁数。 既定値は 0 です。 これは、データ プロバイダーによって <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> の有効桁数が設定されることを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlParameter.Precision%2A>プロパティを持つパラメーターで使用する<xref:System.Data.SqlDbType>の`Decimal`します。  
  
 値を指定する必要はありません、<xref:System.Data.SqlClient.SqlParameter.Precision%2A>と<xref:System.Data.SqlClient.SqlParameter.Scale%2A>、入力パラメーターのプロパティ、パラメーターの値から推論することができますが、します。 `Precision`および`Scale`は出力パラメーターおよび特定の精度と小数点以下桁数、null 値を指定するなど、値を示すことがなく、パラメーターの完全なメタデータを指定する必要があるシナリオで必要です。  
  
> [!NOTE]
>  データベースに渡されるデータを強制するには、このプロパティの使用はサポートされていません。 Round、切り捨てる、またはそれ以外の場合、データベースに渡す前にデータを変換を使用して、<xref:System.Math>クラスの一部である、`System`パラメーターの値を割り当てる前に名前空間`Value`プロパティです。  
  
> [!NOTE]
>  .NET Framework version 1.0 に含まれている Microsoft .NET Framework データ プロバイダーでは確認されません、<xref:System.Data.SqlClient.SqlParameter.Precision%2A>または<xref:System.Data.SqlClient.SqlParameter.Scale%2A>の<xref:System.Decimal>パラメーターの値。 これにより、切り捨てられたデータがデータ ソースに挿入されている可能性があります。 .NET Framework version 1.0 を使用している場合は、検証、<xref:System.Data.SqlClient.SqlParameter.Precision%2A>と<xref:System.Data.SqlClient.SqlParameter.Scale%2A>の<xref:System.Decimal>値パラメーターの値を設定する前にします。 .NET Framework version 1.1 またはそれ以降のバージョンを使用する場合、例外がスローされます、<xref:System.Decimal>パラメーターの値が無効な設定<xref:System.Data.SqlClient.SqlParameter.Precision%2A>です。 <xref:System.Data.SqlClient.SqlParameter.Scale%2A>超える値、<xref:System.Decimal>パラメーター スケールは引き続き、切り詰められます。  
  
   
  
## Examples  
 次の例を作成、<xref:System.Data.SqlClient.SqlParameter>し、一部のプロパティを設定します。  
  
 [!code-csharp[Classic WebData SqlParameter.Precision Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter.Precision Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter.Precision Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter.Precision Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetDbType">
      <MemberSignature Language="C#" Value="public override void ResetDbType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ResetDbType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlParameter.ResetDbType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>この <see cref="T:System.Data.SqlClient.SqlParameter" /> に関連付けられている型をリセットします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コマンドを実行するときに、パラメーター値を含むまたはパラメーターの型は、コードで明示的に設定することができます値からその型を推論することができます。 このメソッドを呼び出すことでは、その型パラメーターに渡される値からもう一度推測できるようににパラメーターをリセットします。 このメソッドを呼び出すと、両方の影響を与える、<xref:System.Data.SqlClient.SqlParameter.DbType%2A>と<xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A>のプロパティ、<xref:System.Data.SqlClient.SqlParameter>です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetSqlDbType">
      <MemberSignature Language="C#" Value="public void ResetSqlDbType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetSqlDbType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlParameter.ResetSqlDbType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>この <see cref="T:System.Data.SqlClient.SqlParameter" /> に関連付けられている型をリセットします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コマンドを実行するときに、パラメーター値を含むまたはパラメーターの型は、コードで明示的に設定することができます値からその型を推論することができます。 このメソッドを呼び出すことでは、その型パラメーターに渡される値からもう一度推測できるようににパラメーターをリセットします。 このメソッドを呼び出すと、両方の影響を与える、<xref:System.Data.SqlClient.SqlParameter.DbType%2A>と<xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A>のプロパティ、<xref:System.Data.SqlClient.SqlParameter>です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scale">
      <MemberSignature Language="C#" Value="public byte Scale { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8 Scale" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.Scale" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Data.SqlClient.SqlParameter.Value" /> が解決される、小数点以下の桁数を取得または設定します。</summary>
        <value><see cref="P:System.Data.SqlClient.SqlParameter.Value" /> が解決される、小数点以下の桁数。 既定値は 0 です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlParameter.Scale%2A>プロパティを持つパラメーターで使用する<xref:System.Data.SqlDbType>の`Decimal`します。  
  
> [!WARNING]
>  場合にデータを切り捨てられる可能性があります、<xref:System.Data.SqlClient.SqlParameter.Scale%2A>プロパティが明示的に指定されていないと、サーバー上のデータが 0 (既定値) のスケールでは不適切です。  
  
 値を指定する必要はありません、<xref:System.Data.SqlClient.SqlParameter.Precision%2A>と<xref:System.Data.SqlClient.SqlParameter.Scale%2A>、入力パラメーターのプロパティ、パラメーターの値から推論することができますが、します。 `Precision`および`Scale`は出力パラメーターおよび特定の精度と小数点以下桁数、null 値を指定するなど、値を示すことがなく、パラメーターの完全なメタデータを指定する必要があるシナリオで必要です。  
  
> [!NOTE]
>  データベースに渡されるデータを強制するには、このプロパティの使用はサポートされていません。 Round、切り捨てる、またはそれ以外の場合、データベースに渡す前にデータを変換を使用して、<xref:System.Math>クラスの一部である、`System`パラメーターの値を割り当てる前に名前空間`Value`プロパティです。  
  
> [!NOTE]
>  .NET Framework version 1.0 に含まれている .NET framework データ プロバイダーでは確認されません、<xref:System.Data.SqlClient.SqlParameter.Precision%2A>または<xref:System.Data.SqlClient.SqlParameter.Scale%2A>の<xref:System.Decimal>パラメーターの値。 これにより、切り捨てられたデータ データ ソースに挿入される可能性があります。 .NET Framework version 1.0 を使用している場合は、検証、<xref:System.Data.SqlClient.SqlParameter.Precision%2A>と<xref:System.Data.SqlClient.SqlParameter>の<xref:System.Decimal>値パラメーターの値を設定する前にします。 <xref:System.Data.SqlClient.SqlParameter.Scale%2A>超える値、<xref:System.Decimal>パラメーター スケールは引き続き、切り詰められます。  
  
   
  
## Examples  
 次の例を作成、<xref:System.Data.SqlClient.SqlParameter>し、一部のプロパティを設定します。  
  
 [!code-csharp[DataWorks SqlParam.Properties#4](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlParam.Properties/CS/source.cs#4)]
 [!code-vb[DataWorks SqlParam.Properties#4](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlParam.Properties/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public override int Size { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Size" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.Size" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>列内のデータの最大サイズをバイト単位で取得または設定します。</summary>
        <value>列内のデータの最大サイズ (バイト単位)。 既定値はパラメーター値から推論されます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 戻り値は受けません。 このプロパティストアド プロシージャからの戻り値のパラメーターは、常に固定サイズの整数です。  
  
 可変長型 (たとえば nvarchar) の出力パラメーター、パラメーターのサイズは、出力パラメーターを保持するバッファーのサイズを定義します。 出力パラメーターで指定されたサイズに切り詰めることができる<xref:System.Data.SqlClient.SqlParameter.Size%2A>です。 文字型のサイズの指定と<xref:System.Data.SqlClient.SqlParameter.Size%2A>では文字です。  
  
 <xref:System.Data.SqlClient.SqlParameter.Size%2A> Binary と文字列型のプロパティを使用します。 型のパラメーター `SqlType.String`、 `Size` Unicode 文字の長さを意味します。 型のパラメーター `SqlType.Xml`、`Size`は無視されます。  
  
 文字列以外のデータ型と ANSI の文字列データは、の<xref:System.Data.SqlClient.SqlParameter.Size%2A>プロパティのバイト数を示します。 Unicode 文字列データの<xref:System.Data.SqlClient.SqlParameter.Size%2A>文字の数を示します。 文字列の数では、終端の文字は含まれません。  
  
 可変長データ型で<xref:System.Data.SqlClient.SqlParameter.Size%2A>サーバーに送信するデータの最大量を示します。 たとえば、Unicode 文字列値、 <xref:System.Data.SqlClient.SqlParameter.Size%2A> 100 を最初の文字に、サーバーに送信されるデータの量が制限される可能性があります。  
  
 明示されていない場合は、セット、サイズが指定したパラメーター値の実際のサイズから推測されます。  
  
 パラメーターの値の小数部がサイズよりも大きい場合、値がサイズに合わせて切り捨てられます。  
  
 固定長データ型の値<xref:System.Data.SqlClient.SqlParameter.Size%2A>は無視されます。 サーバーへのパラメーターの値を送信するときに、プロバイダーを使用して、情報として利用できます。  
  
 ストリーミングについては、次を参照してください。 [SqlClient ストリーミング サポート](~/docs/framework/data/adonet/sqlclient-streaming-support.md)です。  
  
   
  
## Examples  
 次の例を作成、<xref:System.Data.SqlClient.SqlParameter>し、一部のプロパティを設定します。  
  
 [!code-csharp[DataWorks SqlParam.Properties#5](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlParam.Properties/CS/source.cs#5)]
 [!code-vb[DataWorks SqlParam.Properties#5](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlParam.Properties/VB/source.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceColumn">
      <MemberSignature Language="C#" Value="public override string SourceColumn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SourceColumn" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.SourceColumn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Data.DataSet" /> にマップされ、<see cref="P:System.Data.SqlClient.SqlParameter.Value" /> を読み込んだり返したりするために使用されるソース列の名前を取得または設定します。</summary>
        <value><see cref="T:System.Data.DataSet" /> にマップされるソース列の名前。 既定値は空の文字列です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ときに<xref:System.Data.SqlClient.SqlParameter.SourceColumn%2A>と列から取得したが、パラメーターの値、空の文字列以外の値に設定されている、<xref:System.Data.SqlClient.SqlParameter.SourceColumn%2A>名。 場合<xref:System.Data.SqlClient.SqlParameter.Direction%2A>に設定されている`Input`から値を取得、<xref:System.Data.DataSet>です。 場合<xref:System.Data.SqlClient.SqlParameter.Direction%2A>に設定されている`Output`、データ ソースから値を取得します。 A<xref:System.Data.SqlClient.SqlParameter.Direction%2A>の`InputOutput`両方の組み合わせです。  
  
 使用する方法についての詳細、<xref:System.Data.SqlClient.SqlParameter.SourceColumn%2A>プロパティを参照してください[DataAdapter パラメーター](~/docs/framework/data/adonet/dataadapter-parameters.md)と[Dataadapter によるデータ ソースを更新](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md)です。  
  
   
  
## Examples  
 次の例を作成、<xref:System.Data.SqlClient.SqlParameter>し、一部のプロパティを設定します。  
  
 [!code-csharp[DataWorks SqlParam.Properties#6](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlParam.Properties/CS/source.cs#6)]
 [!code-vb[DataWorks SqlParam.Properties#6](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlParam.Properties/VB/source.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceColumnNullMapping">
      <MemberSignature Language="C#" Value="public override bool SourceColumnNullMapping { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SourceColumnNullMapping" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.SourceColumnNullMapping" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ソース列が null 許容かどうかを示す値を設定または取得します。 これにより、<see cref="T:System.Data.SqlClient.SqlCommandBuilder" /> で null 許容列の Update ステートメントを正しく生成できます。</summary>
        <value>
          ソース列が null 許容である場合は <see langword="true" />。null 許容ではない場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlParameter.SourceColumnNullMapping%2A>によって使用される、 <xref:System.Data.SqlClient.SqlCommandBuilder> null 許容の列を処理するときに、更新コマンドを正しく生成します。 一般に、使用の<xref:System.Data.SqlClient.SqlParameter.SourceColumnNullMapping%2A>から継承する開発者に制限されて<xref:System.Data.SqlClient.SqlCommandBuilder>です。  
  
 <xref:System.Data.Common.DbCommandBuilder>このプロパティを使用して、基になる列が、null 値し、このプロパティを設定するかどうかを判断する`true`、null 許容である場合と`false`されていない場合。 ときに<xref:System.Data.SqlClient.SqlCommandBuilder>が調べ、Update ステートメントを生成する、<xref:System.Data.SqlClient.SqlParameter.SourceColumnNullMapping%2A>パラメーターごとにします。 プロパティが場合`true`、<xref:System.Data.SqlClient.SqlCommandBuilder>次のように WHERE 句が生成されます (このクエリ式内で"FieldName"を表すフィールドの名前)。  
  
```  
((@IsNull_FieldName = 1 AND FieldName IS NULL) OR   
  (FieldName = @Original_FieldName))  
```  
  
 場合<xref:System.Data.SqlClient.SqlParameter.SourceColumnNullMapping%2A>フィールドが false の場合、<xref:System.Data.SqlClient.SqlCommandBuilder>次の WHERE 句が生成されます。  
  
```  
FieldName = @OriginalFieldName  
```  
  
 さらに、@IsNull_FieldNameそうでない場合、null と 0 をソース フィールドが存在する場合、1 が含まれています。 このメカニズムでは、SQL Server のパフォーマンスの最適化ではの複数のプロバイダーの間で機能する一般的なコードを提供します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceVersion">
      <MemberSignature Language="C#" Value="public override System.Data.DataRowVersion SourceVersion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.DataRowVersion SourceVersion" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.SourceVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRowVersion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Data.DataRowVersion" /> を読み込むときに使用する <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> を取得または設定します。</summary>
        <value><see cref="T:System.Data.DataRowVersion" /> 値のいずれか。 既定値は、<see langword="Current" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティが使用、`SqlDataAdapter.UpdateCommand`の更新時にパラメーター値に、元のまたは現在の値を使用するかどうかを判断します。 これにより、プライマリ キーを更新できます。 このプロパティのバージョンに、<xref:System.Data.DataRow>によって使用される、`DataRow.Item`プロパティ、またはのいずれか、`DataRow.GetChildRows`のメソッド、<xref:System.Data.DataRow>オブジェクト。  
  
   
  
## Examples  
 次の例を作成、<xref:System.Data.SqlClient.SqlParameter>し、一部のプロパティを設定します。  
  
 [!code-csharp[DataWorks SqlParam.Properties#7](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlParam.Properties/CS/source.cs#7)]
 [!code-vb[DataWorks SqlParam.Properties#7](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlParam.Properties/VB/source.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SqlDbType">
      <MemberSignature Language="C#" Value="public System.Data.SqlDbType SqlDbType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.SqlDbType SqlDbType" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.SqlDbType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Data.Common.DbProviderSpecificTypeProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.SqlDbType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>パラメーターの <see cref="T:System.Data.SqlDbType" /> を取得または設定します。</summary>
        <value><see cref="T:System.Data.SqlDbType" /> 値のいずれか。 既定値は、<see langword="NVarChar" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A>と<xref:System.Data.SqlClient.SqlParameter.DbType%2A>がリンクされています。 そのため、設定、<xref:System.Data.SqlClient.SqlParameter.DbType%2A>変更、<xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A>に、サポートする<xref:System.Data.SqlDbType>です。  
  
 サポートされるデータ型の一覧を参照してください、適切な<xref:System.Data.SqlDbType>メンバー。 詳細については、次を参照してください。 [DataAdapter パラメーター](~/docs/framework/data/adonet/dataadapter-parameters.md)です。  
  
 ストリーミングについては、次を参照してください。 [SqlClient ストリーミング サポート](~/docs/framework/data/adonet/sqlclient-streaming-support.md)です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SqlValue">
      <MemberSignature Language="C#" Value="public object SqlValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SqlValue" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.SqlValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>パラメーターの値を SQL 型として取得または設定します。</summary>
        <value>SQL 型を使用する、パラメーターの値である <see cref="T:System.Object" />。 既定値は NULL です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 入力パラメーターの値がバインドされている、<xref:System.Data.SqlClient.SqlCommand>ですが、サーバーに送信します。 完了時に出力パラメーターと戻り値パラメーターの値を設定、<xref:System.Data.SqlClient.SqlCommand>後、<xref:System.Data.SqlClient.SqlDataReader>が閉じられます。  
  
 このプロパティを設定することができますを null または<xref:System.DBNull.Value>です。 使用して<xref:System.DBNull.Value>パラメーターの値として NULL 値を送信します。 Null を使用するかを設定しないでください<xref:System.Data.SqlClient.SqlParameter.SqlValue%2A>パラメーターの既定値を使用します。  
  
 アプリケーションでは、データベースの種類を指定する場合、プロバイダーがサーバーにデータを送信するとき、バインドされた値がその型に変換されます。 プロバイダーがサポートしている場合は、任意の型の値を変換しようとした場合、<xref:System.IConvertible>インターフェイスです。 指定した型の値と互換性がない場合、変換エラーがあります。  
  
 両方の<xref:System.Data.SqlClient.SqlParameter.DbType%2A>と<xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A>プロパティを設定して推論することができます、<xref:System.Data.SqlClient.SqlParameter.Value%2A>です。  
  
 <xref:System.Data.SqlClient.SqlParameter.Value%2A>でプロパティを上書き`SqlDataAdapter.UpdateCommand`です。  
  
 使用して、<xref:System.Data.SqlClient.SqlParameter.Value%2A>として共通言語ランタイム (CLR) 型にパラメーター値が返されるプロパティです。  
  
 ストリーミングについては、次を参照してください。 [SqlClient ストリーミング サポート](~/docs/framework/data/adonet/sqlclient-streaming-support.md)です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlParameter.System#ICloneable#Clone" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>このメンバーの詳細については、「<see cref="M:System.ICloneable.Clone" />」をご覧ください。</summary>
        <returns>新しい<see cref="T:System.Object" />のこのインスタンスのコピーであります。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Data.SqlClient.SqlParameter> のインスタンスが <xref:System.ICloneable> インターフェイスにキャストされる場合にのみ、使用できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlParameter.ToString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="P:System.Data.SqlClient.SqlParameter.ParameterName" /> を表す文字列を取得します。</summary>
        <returns><see cref="P:System.Data.SqlClient.SqlParameter.ParameterName" /> を表す文字列。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeName">
      <MemberSignature Language="C#" Value="public string TypeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TypeName" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.TypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>テーブル値パラメーターの型名を取得または設定します。</summary>
        <value>指定されたテーブル値パラメーターの型名。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UdtTypeName">
      <MemberSignature Language="C#" Value="public string UdtTypeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UdtTypeName" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.UdtTypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定、<see langword="string" />をパラメーターとしてユーザー定義型を表すです。</summary>
        <value>A<see langword="string" />データベース内のユーザー定義型の完全修飾名を表すです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 サンプルのデモンストレーションの<xref:System.Data.SqlClient.SqlParameter.UdtTypeName%2A>を参照してください[UDT データの取得](http://msdn.microsoft.com/library/ms131080.aspx)です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public override object Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.StringConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>パラメーターの値を取得または設定します。</summary>
        <value>パラメーターの値である <see cref="T:System.Object" />。 既定値は NULL です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 入力パラメーターの値がバインドされている、<xref:System.Data.SqlClient.SqlCommand>ですが、サーバーに送信します。 完了時に出力パラメーターと戻り値パラメーターの値を設定、<xref:System.Data.SqlClient.SqlCommand>後、<xref:System.Data.SqlClient.SqlDataReader>が閉じられます。  
  
 このプロパティを設定することができますを null または<xref:System.DBNull.Value>です。 使用して<xref:System.DBNull.Value>パラメーターの値として NULL 値を送信します。 Null を使用するかを設定しないでください<xref:System.Data.SqlClient.SqlParameter.Value%2A>パラメーターの既定値を使用します。  
  
 Unicode 以外の XML データが文字列として渡された場合、例外がスローされます。  
  
 アプリケーションでは、データベースの種類を指定する場合、プロバイダーがサーバーにデータを送信するとき、バインドされた値がその型に変換されます。 プロバイダーがサポートしている場合は、任意の型の値を変換しようとした場合、<xref:System.IConvertible>インターフェイスです。 指定した型の値と互換性がない場合、変換エラーがあります。  
  
 両方の<xref:System.Data.SqlClient.SqlParameter.DbType%2A>と<xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A>値を設定してプロパティを推論することができます。  
  
 <xref:System.Data.SqlClient.SqlParameter.Value%2A>でプロパティを上書き`SqlDataAdapter.UpdateCommand`です。  
  
 ストリーミングについては、次を参照してください。 [SqlClient ストリーミング サポート](~/docs/framework/data/adonet/sqlclient-streaming-support.md)です。  
  
   
  
## Examples  
 次の例を作成、<xref:System.Data.SqlClient.SqlParameter>し、一部のプロパティを設定します。  
  
 [!code-csharp[DataWorks SqlParam.Properties#8](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlParam.Properties/CS/source.cs#8)]
 [!code-vb[DataWorks SqlParam.Properties#8](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlParam.Properties/VB/source.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlSchemaCollectionDatabase">
      <MemberSignature Language="C#" Value="public string XmlSchemaCollectionDatabase { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string XmlSchemaCollectionDatabase" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionDatabase" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この XML インスタンスのスキーマ コレクションがあるデータベースの名前を取得します。</summary>
        <value>この XML インスタンスのスキーマ コレクションがあるデータベースの名前。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この値は null (`Nothing` Microsoft Visual Basic で) コレクションが現在のデータベース内で定義されている場合。 存在しない場合、スキーマ コレクションの場合は null も<xref:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionName%2A>と<xref:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionOwningSchema%2A>も null にします。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlSchemaCollectionName">
      <MemberSignature Language="C#" Value="public string XmlSchemaCollectionName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string XmlSchemaCollectionName" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この XML インスタンスのスキーマ コレクションの名前を取得します。</summary>
        <value>この XML インスタンスのスキーマ コレクションの名前。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この値は null (`Nothing` Microsoft Visual Basic で) 関連付けられているスキーマ コレクションが存在しない場合。 場合は、値は、null、<xref:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionDatabase%2A>と<xref:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionOwningSchema%2A>も null にします。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlSchemaCollectionOwningSchema">
      <MemberSignature Language="C#" Value="public string XmlSchemaCollectionOwningSchema { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string XmlSchemaCollectionOwningSchema" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionOwningSchema" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この XML インスタンスのスキーマ コレクションがある、所有リレーショナル スキーマ。</summary>
        <value>この XML インスタンスの所有リレーショナル スキーマ。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この値は null (`Nothing` Microsoft Visual Basic で) コレクションが現在のデータベース内で定義されている場合。 存在しない場合、スキーマ コレクションの場合は null も<xref:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionDatabase%2A>と<xref:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionName%2A>も null にします。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
