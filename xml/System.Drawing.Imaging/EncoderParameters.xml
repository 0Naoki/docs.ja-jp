<Type Name="EncoderParameters" FullName="System.Drawing.Imaging.EncoderParameters">
  <TypeSignature Language="C#" Value="public sealed class EncoderParameters : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EncoderParameters extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Imaging.EncoderParameters" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>配列をカプセル化<see cref="T:System.Drawing.Imaging.EncoderParameter" />オブジェクト。</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncoderParameters ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.EncoderParameters.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>新しいインスタンスを初期化、<see cref="T:System.Drawing.Imaging.EncoderParameters" />いずれかを含めることができるクラス<see cref="T:System.Drawing.Imaging.EncoderParameter" />オブジェクト。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 一部の<xref:System.Drawing.Image.Save%2A>と<xref:System.Drawing.Image.SaveAdd%2A>メソッドの受信、<xref:System.Drawing.Imaging.EncoderParameters>オブジェクトを引数として。 <xref:System.Drawing.Image.GetEncoderParameterList%2A>メソッドを返します、<xref:System.Drawing.Imaging.EncoderParameters>オブジェクト。  
  
   
  
## Examples  
 次のコード例を作成および使用する方法を示しています、<xref:System.Drawing.Imaging.EncoderParameters>オブジェクト。 この例を実行するには、Windows フォームと呼び出しにコードを貼り付けます、`VaryQualityLevel`フォームのコンス トラクターからのメソッドです。 この例には、という名前のイメージ ファイルが必要です。`TestPhoto.jpg`にある**c:\\**です。  
  
 [!code-csharp[UsingImageEncodersDecoders#8](~/samples/snippets/csharp/VS_Snippets_Winforms/UsingImageEncodersDecoders/CS/Form1.cs#8)]
 [!code-vb[UsingImageEncodersDecoders#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/UsingImageEncodersDecoders/VB/Form1.vb#8)]  
[!code-csharp[UsingImageEncodersDecoders#6](~/samples/snippets/csharp/VS_Snippets_Winforms/UsingImageEncodersDecoders/CS/Form1.cs#6)]
[!code-vb[UsingImageEncodersDecoders#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/UsingImageEncodersDecoders/VB/Form1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncoderParameters (int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.EncoderParameters.#ctor(System.Int32)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="count">数を指定する整数<see cref="T:System.Drawing.Imaging.EncoderParameter" />オブジェクトを<see cref="T:System.Drawing.Imaging.EncoderParameters" />オブジェクトを含めることができます。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Drawing.Imaging.EncoderParameters" /> 、指定した数を含めることができるクラス<see cref="T:System.Drawing.Imaging.EncoderParameter" />オブジェクト。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.EncoderParameters.Dispose" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>この <see cref="T:System.Drawing.Imaging.EncoderParameters" /> オブジェクトによって使用されているすべてのリソースを解放します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 呼び出す`Dispose`により、これによって使用されるリソース<xref:System.Drawing.Imaging.EncoderParameters>を他の目的を再割り当てするオブジェクト。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Param">
      <MemberSignature Language="C#" Value="public System.Drawing.Imaging.EncoderParameter[] Param { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Imaging.EncoderParameter[] Param" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Imaging.EncoderParameters.Param" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Imaging.EncoderParameter[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の配列<see cref="T:System.Drawing.Imaging.EncoderParameter" />オブジェクト。</summary>
        <value>配列<see cref="T:System.Drawing.Imaging.EncoderParameter" />オブジェクト。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
