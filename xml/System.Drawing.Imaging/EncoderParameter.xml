<Type Name="EncoderParameter" FullName="System.Drawing.Imaging.EncoderParameter">
  <TypeSignature Language="C#" Value="public sealed class EncoderParameter : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit EncoderParameter extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Imaging.EncoderParameter" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>イメージ エンコーダー値、または値の配列を渡すために使用します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用することも、<xref:System.Drawing.Imaging.EncoderParameter>を特定のイメージ エンコーダーの特定のパラメーターでサポートされている使用可能な値の一覧を取得するオブジェクト。  
  
   
  
## Examples  
 次のコード例を作成する方法を示しています、<xref:System.Drawing.Imaging.EncoderParameter>を使用して、<xref:System.Drawing.Imaging.EncoderParameter.%23ctor%2A>コンス トラクターです。 この例を実行するには、Windows フォームと呼び出しにコードを貼り付けます、`VaryQualityLevel`フォームのコンス トラクターからのメソッドです。 この例には、という名前のイメージ ファイルが必要です。`TestPhoto.jpg`にある**c:\\**です。  
  
 [!code-csharp[UsingImageEncodersDecoders#8](~/samples/snippets/csharp/VS_Snippets_Winforms/UsingImageEncodersDecoders/CS/Form1.cs#8)]
 [!code-vb[UsingImageEncodersDecoders#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/UsingImageEncodersDecoders/VB/Form1.vb#8)]  
[!code-csharp[UsingImageEncodersDecoders#6](~/samples/snippets/csharp/VS_Snippets_Winforms/UsingImageEncodersDecoders/CS/Form1.cs#6)]
[!code-vb[UsingImageEncodersDecoders#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/UsingImageEncodersDecoders/VB/Form1.vb#6)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncoderParameter (System.Drawing.Imaging.Encoder encoder, byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Imaging.Encoder encoder, unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Byte)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="encoder" Type="System.Drawing.Imaging.Encoder" />
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="encoder">パラメーター カテゴリのグローバル一意識別子をカプセル化する <see cref="T:System.Drawing.Imaging.Encoder" /> オブジェクト。</param>
        <param name="value">8 ビット符号なし整数に格納されている値を指定する、<see cref="T:System.Drawing.Imaging.EncoderParameter" />オブジェクト。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 、指定したクラス<see cref="T:System.Drawing.Imaging.Encoder" />オブジェクトと 1 つの 8 ビット符号なし整数。 <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> プロパティを <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeByte" /> に設定し、<see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> プロパティを 1 に設定します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncoderParameter (System.Drawing.Imaging.Encoder encoder, byte[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Imaging.Encoder encoder, unsigned int8[] value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Byte[])" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="encoder" Type="System.Drawing.Imaging.Encoder" />
        <Parameter Name="value" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="encoder">パラメーター カテゴリのグローバル一意識別子をカプセル化する <see cref="T:System.Drawing.Imaging.Encoder" /> オブジェクト。</param>
        <param name="value">8 ビット符号なし整数の配列に格納されている値を指定する、<see cref="T:System.Drawing.Imaging.EncoderParameter" />オブジェクト。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 、指定したクラス<see cref="T:System.Drawing.Imaging.Encoder" />オブジェクトと符号なし 8 ビット整数の配列。 設定、<see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" />プロパティを<see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeByte" />、設定と、<see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" />プロパティ配列内の要素の数をします。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncoderParameter (System.Drawing.Imaging.Encoder encoder, short value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Imaging.Encoder encoder, int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int16)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="encoder" Type="System.Drawing.Imaging.Encoder" />
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="encoder">パラメーター カテゴリのグローバル一意識別子をカプセル化する <see cref="T:System.Drawing.Imaging.Encoder" /> オブジェクト。</param>
        <param name="value">16 ビット整数に格納されている値を指定する、<see cref="T:System.Drawing.Imaging.EncoderParameter" />オブジェクト。 負でない必要があります。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 、指定したクラス<see cref="T:System.Drawing.Imaging.Encoder" />オブジェクトと 1 つは、16 ビット整数。 <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> プロパティを <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeShort" /> に設定し、<see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> プロパティを 1 に設定します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncoderParameter (System.Drawing.Imaging.Encoder encoder, short[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Imaging.Encoder encoder, int16[] value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int16[])" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="encoder" Type="System.Drawing.Imaging.Encoder" />
        <Parameter Name="value" Type="System.Int16[]" />
      </Parameters>
      <Docs>
        <param name="encoder">パラメーター カテゴリのグローバル一意識別子をカプセル化する <see cref="T:System.Drawing.Imaging.Encoder" /> オブジェクト。</param>
        <param name="value">16 ビット整数の配列に格納されている値を指定する、<see cref="T:System.Drawing.Imaging.EncoderParameter" />オブジェクト。 配列内の整数は、負以外である必要があります。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 、指定したクラス<see cref="T:System.Drawing.Imaging.Encoder" />オブジェクトおよび 16 ビット整数の配列。 設定、<see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" />プロパティを<see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeShort" />、設定と、<see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" />プロパティ配列内の要素の数をします。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncoderParameter (System.Drawing.Imaging.Encoder encoder, long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Imaging.Encoder encoder, int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int64)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="encoder" Type="System.Drawing.Imaging.Encoder" />
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="encoder">パラメーター カテゴリのグローバル一意識別子をカプセル化する <see cref="T:System.Drawing.Imaging.Encoder" /> オブジェクト。</param>
        <param name="value">64 ビットの整数に格納されている値を指定する、<see cref="T:System.Drawing.Imaging.EncoderParameter" />オブジェクト。 負でない必要があります。 格納されるまで、このパラメーターは 32 ビット整数に変換、<see cref="T:System.Drawing.Imaging.EncoderParameter" />オブジェクト。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 、指定したクラス<see cref="T:System.Drawing.Imaging.Encoder" />オブジェクトと 1 つの 64 ビット整数。 設定、<see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" />プロパティを<see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeLong" />(32 ビット) を設定し、<see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" />プロパティを 1 にします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例を作成する方法を示しています、<xref:System.Drawing.Imaging.EncoderParameter>を使用して、<xref:System.Drawing.Imaging.EncoderParameter.%23ctor%2A>コンス トラクターです。 この例を実行するには、Windows フォームと呼び出しにコードを貼り付けます、`VaryQualityLevel`フォームのコンス トラクターからのメソッドです。 この例には、という名前のイメージ ファイルが必要です。`TestPhoto.jpg`にある**c:\\**です。  
  
 [!code-csharp[UsingImageEncodersDecoders#8](~/samples/snippets/csharp/VS_Snippets_Winforms/UsingImageEncodersDecoders/CS/Form1.cs#8)]
 [!code-vb[UsingImageEncodersDecoders#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/UsingImageEncodersDecoders/VB/Form1.vb#8)]  
[!code-csharp[UsingImageEncodersDecoders#6](~/samples/snippets/csharp/VS_Snippets_Winforms/UsingImageEncodersDecoders/CS/Form1.cs#6)]
[!code-vb[UsingImageEncodersDecoders#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/UsingImageEncodersDecoders/VB/Form1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncoderParameter (System.Drawing.Imaging.Encoder encoder, long[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Imaging.Encoder encoder, int64[] value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int64[])" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="encoder" Type="System.Drawing.Imaging.Encoder" />
        <Parameter Name="value" Type="System.Int64[]" />
      </Parameters>
      <Docs>
        <param name="encoder">パラメーター カテゴリのグローバル一意識別子をカプセル化する <see cref="T:System.Drawing.Imaging.Encoder" /> オブジェクト。</param>
        <param name="value">64 ビット整数の配列に格納されている値を指定する、<see cref="T:System.Drawing.Imaging.EncoderParameter" />オブジェクト。 配列内の整数は、負以外である必要があります。 格納する前に 64 ビットの整数は 32 ビット整数に変換、<see cref="T:System.Drawing.Imaging.EncoderParameter" />オブジェクト。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 、指定したクラス<see cref="T:System.Drawing.Imaging.Encoder" />オブジェクトと 64 ビット整数の配列。 設定、<see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" />プロパティを<see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeLong" />(32 ビット) を設定し、<see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" />プロパティ配列内の要素の数をします。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncoderParameter (System.Drawing.Imaging.Encoder encoder, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Imaging.Encoder encoder, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="encoder" Type="System.Drawing.Imaging.Encoder" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="encoder">パラメーター カテゴリのグローバル一意識別子をカプセル化する <see cref="T:System.Drawing.Imaging.Encoder" /> オブジェクト。</param>
        <param name="value">A<see cref="T:System.String" />に格納された値を指定する、<see cref="T:System.Drawing.Imaging.EncoderParameter" />オブジェクト。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 、指定したクラス<see cref="T:System.Drawing.Imaging.Encoder" />オブジェクトと、文字の文字列。 格納される前に、文字列が null で終わる ASCII 文字列に変換、<see cref="T:System.Drawing.Imaging.EncoderParameter" />オブジェクト。 設定、<see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" />プロパティを<see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeAscii" />、設定と、<see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" />プロパティを NULL 終端文字を含む ASCII 文字列の長さ。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncoderParameter (System.Drawing.Imaging.Encoder encoder, byte value, bool undefined);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Imaging.Encoder encoder, unsigned int8 value, bool undefined) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Byte,System.Boolean)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="encoder" Type="System.Drawing.Imaging.Encoder" />
        <Parameter Name="value" Type="System.Byte" />
        <Parameter Name="undefined" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="encoder">パラメーター カテゴリのグローバル一意識別子をカプセル化する <see cref="T:System.Drawing.Imaging.Encoder" /> オブジェクト。</param>
        <param name="value">格納されている値を指定するバイト、<see cref="T:System.Drawing.Imaging.EncoderParameter" />オブジェクト。</param>
        <param name="undefined">場合<see langword="true" />、<see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" />プロパティに設定されている<see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeUndefined" />、それ以外の<see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" />プロパティに設定されている<see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeByte" />です。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 、指定したクラス<see cref="T:System.Drawing.Imaging.Encoder" />オブジェクトと 1 つの 8 ビット値。 設定、<see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" />プロパティを<see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeUndefined" />または<see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeByte" />、設定と、<see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" />プロパティを 1 にします。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncoderParameter (System.Drawing.Imaging.Encoder encoder, byte[] value, bool undefined);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Imaging.Encoder encoder, unsigned int8[] value, bool undefined) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Byte[],System.Boolean)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="encoder" Type="System.Drawing.Imaging.Encoder" />
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="undefined" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="encoder">パラメーター カテゴリのグローバル一意識別子をカプセル化する <see cref="T:System.Drawing.Imaging.Encoder" /> オブジェクト。</param>
        <param name="value">バイト配列に格納されている値を指定する、<see cref="T:System.Drawing.Imaging.EncoderParameter" />オブジェクト。</param>
        <param name="undefined">場合<see langword="true" />、<see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" />プロパティに設定されている<see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeUndefined" />、それ以外の<see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" />プロパティに設定されている<see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeByte" />です。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 、指定したクラス<see cref="T:System.Drawing.Imaging.Encoder" />オブジェクトとのバイト配列。 設定、<see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" />プロパティを<see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeUndefined" />または<see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeByte" />、設定と、<see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" />プロパティ配列内の要素の数をします。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncoderParameter (System.Drawing.Imaging.Encoder encoder, int numerator, int denominator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Imaging.Encoder encoder, int32 numerator, int32 denominator) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32,System.Int32)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="encoder" Type="System.Drawing.Imaging.Encoder" />
        <Parameter Name="numerator" Type="System.Int32" />
        <Parameter Name="denominator" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="encoder">パラメーター カテゴリのグローバル一意識別子をカプセル化する <see cref="T:System.Drawing.Imaging.Encoder" /> オブジェクト。</param>
        <param name="numerator">分数の分子を表す 32 ビット整数。 負でない必要があります。</param>
        <param name="denominator">分数の分母を表す 32 ビット整数。 負でない必要があります。</param>
        <summary>指定された <see cref="T:System.Drawing.Imaging.Encoder" /> オブジェクトと 32 ビット整数のペアを使って、<see cref="T:System.Drawing.Imaging.EncoderParameter" /> クラスの新しいインスタンスを初期化します。 整数のペアは分数を表し、最初の整数は分子、2 番目の整数は分母です。 <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> プロパティを <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeRational" /> に設定し、<see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> プロパティを 1 に設定します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncoderParameter (System.Drawing.Imaging.Encoder encoder, int[] numerator, int[] denominator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Imaging.Encoder encoder, int32[] numerator, int32[] denominator) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32[],System.Int32[])" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="encoder" Type="System.Drawing.Imaging.Encoder" />
        <Parameter Name="numerator" Type="System.Int32[]" />
        <Parameter Name="denominator" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="encoder">パラメーター カテゴリのグローバル一意識別子をカプセル化する <see cref="T:System.Drawing.Imaging.Encoder" /> オブジェクト。</param>
        <param name="numerator">分数の分子を指定する 32 ビット整数の配列。 配列内の整数は、負以外である必要があります。</param>
        <param name="denominator">分数の分母を指定する 32 ビット整数の配列。 配列内の整数は、負以外である必要があります。 指定したインデックスの分母は、同じインデックスの分子とペアリングされています。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 、指定したクラス<see cref="T:System.Drawing.Imaging.Encoder" />オブジェクトと 32 ビット整数の 2 つの配列。 2 つの配列は、小数部の配列を表します。 設定、<see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" />プロパティを<see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeRational" />、設定と、<see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" />プロパティ内の要素の数を<paramref name="numerator" />要素の数と同じである必要があります、配列で、<paramref name="denominator" />配列。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncoderParameter (System.Drawing.Imaging.Encoder encoder, long rangebegin, long rangeend);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Imaging.Encoder encoder, int64 rangebegin, int64 rangeend) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int64,System.Int64)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="encoder" Type="System.Drawing.Imaging.Encoder" />
        <Parameter Name="rangebegin" Type="System.Int64" />
        <Parameter Name="rangeend" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="encoder">パラメーター カテゴリのグローバル一意識別子をカプセル化する <see cref="T:System.Drawing.Imaging.Encoder" /> オブジェクト。</param>
        <param name="rangebegin">整数の範囲の最小値を表す 64 ビット整数。 負でない必要があります。 格納されるまで、このパラメーターは 32 ビット整数に変換、<see cref="T:System.Drawing.Imaging.EncoderParameter" />オブジェクト。</param>
        <param name="rangeend">整数の範囲の最大数を表す 64 ビット整数。 負でない必要があります。 格納されるまで、このパラメーターは 32 ビット整数に変換、<see cref="T:System.Drawing.Imaging.EncoderParameter" />オブジェクト。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 、指定したクラス<see cref="T:System.Drawing.Imaging.Encoder" />オブジェクトと 64 ビット整数値のペア。 整数のペアは、整数、最小の数値範囲の最初の整数および範囲内の数が 2 番目の整数の範囲を表します。 <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> プロパティを <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeLongRange" /> に設定し、<see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> プロパティを 1 に設定します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncoderParameter (System.Drawing.Imaging.Encoder encoder, long[] rangebegin, long[] rangeend);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Imaging.Encoder encoder, int64[] rangebegin, int64[] rangeend) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int64[],System.Int64[])" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="encoder" Type="System.Drawing.Imaging.Encoder" />
        <Parameter Name="rangebegin" Type="System.Int64[]" />
        <Parameter Name="rangeend" Type="System.Int64[]" />
      </Parameters>
      <Docs>
        <param name="encoder">パラメーター カテゴリのグローバル一意識別子をカプセル化する <see cref="T:System.Drawing.Imaging.Encoder" /> オブジェクト。</param>
        <param name="rangebegin">整数の範囲の最小値を指定する 64 ビット整数の配列。 配列内の整数は、負以外である必要があります。 格納する前に 64 ビットの整数は 32 ビット整数に変換、<see cref="T:System.Drawing.Imaging.EncoderParameter" />オブジェクト。</param>
        <param name="rangeend">整数の範囲の最大値を指定する 64 ビット整数の配列。 配列内の整数は、負以外である必要があります。 格納する前に 64 ビットの整数は 32 ビット整数に変換、<see cref="T:System.Drawing.Imaging.EncoderParameters" />オブジェクト。 指定したインデックスの最大値は、同じインデックスの最小値とペアリングされています。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 、指定したクラス<see cref="T:System.Drawing.Imaging.Encoder" />オブジェクトと 64 ビット整数の 2 つの配列。 2 つの配列は、整数範囲の配列を表します。 設定、<see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" />プロパティを<see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeLongRange" />、設定と、<see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" />プロパティ内の要素の数を<paramref name="rangebegin" />要素の数と同じである必要があります、配列で、<paramref name="rangeend" />配列。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncoderParameter (System.Drawing.Imaging.Encoder encoder, int numberValues, System.Drawing.Imaging.EncoderParameterValueType type, IntPtr value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Imaging.Encoder encoder, int32 numberValues, valuetype System.Drawing.Imaging.EncoderParameterValueType type, native int value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32,System.Drawing.Imaging.EncoderParameterValueType,System.IntPtr)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="encoder" Type="System.Drawing.Imaging.Encoder" />
        <Parameter Name="numberValues" Type="System.Int32" />
        <Parameter Name="type" Type="System.Drawing.Imaging.EncoderParameterValueType" />
        <Parameter Name="value" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="encoder">パラメーター カテゴリのグローバル一意識別子をカプセル化する <see cref="T:System.Drawing.Imaging.Encoder" /> オブジェクト。</param>
        <param name="numberValues">格納されている値の数を指定する整数、<see cref="T:System.Drawing.Imaging.EncoderParameter" />オブジェクト。 <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" />プロパティがこの値に設定します。</param>
        <param name="type">メンバー、<see cref="T:System.Drawing.Imaging.EncoderParameterValueType" />に格納された値のデータ型を指定する列挙体、<see cref="T:System.Drawing.Imaging.EncoderParameter" />オブジェクト。 <see cref="T:System.Type" />と<see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" />プロパティは、この値に設定されます。</param>
        <param name="value">指定された型の値の配列へのポインター、<c>型</c>パラメーター。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 、指定したクラス<see cref="T:System.Drawing.Imaging.Encoder" />オブジェクト、値の数、値、およびに格納されている値へのポインターのデータ型、<see cref="T:System.Drawing.Imaging.EncoderParameter" />オブジェクト。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncoderParameter (System.Drawing.Imaging.Encoder encoder, int NumberOfValues, int Type, int Value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Imaging.Encoder encoder, int32 NumberOfValues, int32 Type, int32 Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32,System.Int32,System.Int32)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This constructor has been deprecated. Use EncoderParameter(Encoder encoder, int numberValues, EncoderParameterValueType type, IntPtr value) instead.  http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="encoder" Type="System.Drawing.Imaging.Encoder" />
        <Parameter Name="NumberOfValues" Type="System.Int32" />
        <Parameter Name="Type" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="encoder">パラメーター カテゴリのグローバル一意識別子をカプセル化する <see cref="T:System.Drawing.Imaging.Encoder" /> オブジェクト。</param>
        <param name="NumberOfValues">格納されている値の数を指定する整数、<see cref="T:System.Drawing.Imaging.EncoderParameter" />オブジェクト。 <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" />プロパティがこの値に設定します。</param>
        <param name="Type">メンバー、<see cref="T:System.Drawing.Imaging.EncoderParameterValueType" />に格納された値のデータ型を指定する列挙体、<see cref="T:System.Drawing.Imaging.EncoderParameter" />オブジェクト。 <see cref="T:System.Type" />と<see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" />プロパティは、この値に設定されます。</param>
        <param name="Value">指定された型の値の配列へのポインター、<c>型</c>パラメーター。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 、指定したクラス<see cref="T:System.Drawing.Imaging.Encoder" />オブジェクトと、値、およびに格納されている値へのポインターのデータ型の値の数を指定する 3 つの整数、<see cref="T:System.Drawing.Imaging.EncoderParameter" />オブジェクト。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">型が有効ではありません<see cref="T:System.Drawing.Imaging.EncoderParameterValueType" />です。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncoderParameter (System.Drawing.Imaging.Encoder encoder, int numerator1, int demoninator1, int numerator2, int demoninator2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Imaging.Encoder encoder, int32 numerator1, int32 demoninator1, int32 numerator2, int32 demoninator2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="encoder" Type="System.Drawing.Imaging.Encoder" />
        <Parameter Name="numerator1" Type="System.Int32" />
        <Parameter Name="demoninator1" Type="System.Int32" />
        <Parameter Name="numerator2" Type="System.Int32" />
        <Parameter Name="demoninator2" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="encoder">パラメーター カテゴリのグローバル一意識別子をカプセル化する <see cref="T:System.Drawing.Imaging.Encoder" /> オブジェクト。</param>
        <param name="numerator1">範囲の最小の分数の分子を表す 32 ビット整数。 負でない必要があります。</param>
        <param name="demoninator1">範囲内の最小の分数の分母を表す 32 ビット整数。 負でない必要があります。</param>
        <param name="numerator2">範囲内の最小の分数の分母を表す 32 ビット整数。 負でない必要があります。</param>
        <param name="demoninator2">範囲内の最大の分数の分子を表す 32 ビット整数。 負でない必要があります。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 、指定したクラス<see cref="T:System.Drawing.Imaging.Encoder" />オブジェクトと 4 つ、32 ビット整数。 4 つの整数では、分数の範囲を表します。 最初の 2 つの整数は、範囲内の最小の分数を表し、残りの 2 つの整数を表す範囲内の最大の分数。 <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> プロパティを <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeRationalRange" /> に設定し、<see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> プロパティを 1 に設定します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncoderParameter (System.Drawing.Imaging.Encoder encoder, int[] numerator1, int[] denominator1, int[] numerator2, int[] denominator2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Imaging.Encoder encoder, int32[] numerator1, int32[] denominator1, int32[] numerator2, int32[] denominator2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32[],System.Int32[],System.Int32[],System.Int32[])" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="encoder" Type="System.Drawing.Imaging.Encoder" />
        <Parameter Name="numerator1" Type="System.Int32[]" />
        <Parameter Name="denominator1" Type="System.Int32[]" />
        <Parameter Name="numerator2" Type="System.Int32[]" />
        <Parameter Name="denominator2" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="encoder">パラメーター カテゴリのグローバル一意識別子をカプセル化する <see cref="T:System.Drawing.Imaging.Encoder" /> オブジェクト。</param>
        <param name="numerator1">分子の範囲の最小値を指定する 32 ビット整数の配列。 配列内の整数は、負以外である必要があります。</param>
        <param name="denominator1">範囲の最小値の分母を指定する 32 ビット整数の配列。 配列内の整数は、負以外である必要があります。</param>
        <param name="numerator2">分子の範囲の最大値を指定する 32 ビット整数の配列。 配列内の整数は、負以外である必要があります。</param>
        <param name="denominator2">範囲の最大値の分母を指定する 32 ビット整数の配列。 配列内の整数は、負以外である必要があります。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 、指定したクラス<see cref="T:System.Drawing.Imaging.Encoder" />オブジェクトと 32 ビット整数の 4 つの配列。 次の 4 つの配列は、合理的な範囲の配列を表します。 合理的な範囲は、最大値は小数部から最小値は小数部からのすべての分数のセットです。 設定、<see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" />プロパティを<see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeRationalRange" />、設定と、<see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" />プロパティ内の要素の数を<paramref name="numerator1" />配列で、その他の 3 つの配列の要素の数と同じである必要があります。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 I 番目の範囲はすべて小数 numerator1 から [i]/denominator1 [i] numerator2 を介して [i]/denominator2 [i] です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.EncoderParameter.Dispose" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>この <see cref="T:System.Drawing.Imaging.EncoderParameter" /> オブジェクトによって使用されているすべてのリソースを解放します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 呼び出す<xref:System.Drawing.Imaging.EncoderParameter.Dispose%2A>により、これによって使用されるリソース<xref:System.Drawing.Imaging.EncoderParameter>を他の目的を再割り当てするオブジェクト。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Encoder">
      <MemberSignature Language="C#" Value="public System.Drawing.Imaging.Encoder Encoder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Imaging.Encoder Encoder" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Imaging.EncoderParameter.Encoder" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Imaging.Encoder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定、<see cref="T:System.Drawing.Imaging.Encoder" />オブジェクトに関連付けられた<see cref="T:System.Drawing.Imaging.EncoderParameter" />オブジェクト。 <see cref="T:System.Drawing.Imaging.Encoder" />オブジェクトは、カテゴリを指定するグローバル一意識別子 (GUID) をカプセル化 (たとえば<see cref="F:System.Drawing.Imaging.Encoder.Quality" />、 <see cref="F:System.Drawing.Imaging.Encoder.ColorDepth" />、または<see cref="F:System.Drawing.Imaging.Encoder.Compression" />) これに格納されているパラメーターの<see cref="T:System.Drawing.Imaging.EncoderParameter" />オブジェクト。</summary>
        <value><see cref="T:System.Drawing.Imaging.Encoder" />これに格納されているパラメーターのカテゴリを指定する GUID をカプセル化するオブジェクト<see cref="T:System.Drawing.Imaging.EncoderParameter" />オブジェクト。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~EncoderParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.EncoderParameter.Finalize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>により、<see cref="T:System.Drawing.Imaging.EncoderParameter" />リソースを解放し、前に他のクリーンアップ操作を実行しようとするオブジェクト、<see cref="T:System.Drawing.Imaging.EncoderParameter" />オブジェクトがガベージ コレクションによって回収されます。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberOfValues">
      <MemberSignature Language="C#" Value="public int NumberOfValues { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NumberOfValues" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>これに格納されている値の配列内の要素の数を取得<see cref="T:System.Drawing.Imaging.EncoderParameter" />オブジェクト。</summary>
        <value>これに格納されている値の配列の要素の数を示す整数<see cref="T:System.Drawing.Imaging.EncoderParameter" />オブジェクト。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public System.Drawing.Imaging.EncoderParameterValueType Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Imaging.EncoderParameterValueType Type" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Imaging.EncoderParameter.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Imaging.EncoderParameterValueType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>これに格納されている値のデータ型を取得<see cref="T:System.Drawing.Imaging.EncoderParameter" />オブジェクト。</summary>
        <value>メンバー、<see cref="T:System.Drawing.Imaging.EncoderParameterValueType" />をこれに格納された値のデータ型を示す列挙体<see cref="T:System.Drawing.Imaging.EncoderParameter" />オブジェクト。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValueType">
      <MemberSignature Language="C#" Value="public System.Drawing.Imaging.EncoderParameterValueType ValueType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Imaging.EncoderParameterValueType ValueType" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Imaging.EncoderParameter.ValueType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Imaging.EncoderParameterValueType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>これに格納されている値のデータ型を取得<see cref="T:System.Drawing.Imaging.EncoderParameter" />オブジェクト。</summary>
        <value>メンバー、<see cref="T:System.Drawing.Imaging.EncoderParameterValueType" />をこれに格納された値のデータ型を示す列挙体<see cref="T:System.Drawing.Imaging.EncoderParameter" />オブジェクト。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
